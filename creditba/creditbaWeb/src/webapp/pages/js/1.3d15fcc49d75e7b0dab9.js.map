{"version":3,"sources":["webpack:///js/1.3d15fcc49d75e7b0dab9.js","webpack:///./src/views/charts/line.vue","webpack:///./~/zrender/lib/core/util.js?10f4","webpack:///./~/zrender/lib/graphic/Path.js?c119","webpack:///./~/echarts/lib/echarts.js?68a2","webpack:///./~/zrender/lib/core/vector.js?6654","webpack:///./~/echarts/lib/util/graphic.js?e267","webpack:///./~/echarts/lib/util/number.js?43e3","webpack:///./~/zrender/lib/core/env.js?9ccc","webpack:///./~/zrender/lib/core/BoundingRect.js?76f6","webpack:///./~/echarts/lib/util/format.js?7f72","webpack:///./~/echarts/lib/util/model.js?e2bd","webpack:///./~/echarts/lib/model/Model.js?f4df","webpack:///./~/echarts/lib/util/clazz.js?3e66","webpack:///./~/echarts/lib/model/Component.js?0e02","webpack:///./~/zrender/lib/contain/text.js?3a43","webpack:///./~/zrender/lib/tool/color.js?284f","webpack:///./~/echarts/lib/util/layout.js?2b1e","webpack:///./~/zrender/lib/core/PathProxy.js?69e9","webpack:///./~/zrender/lib/core/curve.js?9511","webpack:///./~/zrender/lib/core/matrix.js?97a2","webpack:///./~/zrender/lib/graphic/Image.js?bf1b","webpack:///./~/zrender/lib/graphic/Text.js?3244","webpack:///./~/zrender/lib/mixin/Eventful.js?223b","webpack:///./~/zrender/lib/container/Group.js?8d57","webpack:///./~/zrender/lib/core/log.js?26a2","webpack:///./~/zrender/lib/core/event.js?24ff","webpack:///./~/echarts/lib/scale/Scale.js?c922","webpack:///./~/zrender/lib/config.js?2861","webpack:///./~/zrender/lib/graphic/Displayable.js?5c45","webpack:///./~/zrender/lib/graphic/Gradient.js?5165","webpack:///./~/zrender/lib/graphic/helper/text.js?069c","webpack:///./~/echarts/lib/model/mixin/makeStyleMapper.js?e2b1","webpack:///./~/echarts/lib/CoordinateSystem.js?2b30","webpack:///./~/echarts/lib/coord/axisHelper.js?4730","webpack:///./~/echarts/lib/scale/Interval.js?08e9","webpack:///./~/echarts/lib/util/component.js?cc72","webpack:///./~/zrender/lib/core/timsort.js?0a74","webpack:///./~/zrender/lib/graphic/Pattern.js?a97e","webpack:///./~/zrender/lib/graphic/helper/image.js?8535","webpack:///./~/zrender/lib/svg/core.js?824a","webpack:///./~/zrender/lib/svg/graphic.js?d4b1","webpack:///./~/zrender/lib/zrender.js?5dcd","webpack:///./~/echarts/lib/model/Series.js?186c","webpack:///./~/echarts/lib/chart/helper/Symbol.js?9fa3","webpack:///./~/echarts/lib/coord/cartesian/AxisModel.js?0573","webpack:///./~/echarts/lib/data/List.js?b096","webpack:///./~/echarts/lib/model/mixin/colorPalette.js?b454","webpack:///./~/echarts/lib/util/symbol.js?be2c","webpack:///./~/echarts/lib/util/throttle.js?56b3","webpack:///./~/echarts/lib/view/Chart.js?72f3","webpack:///./~/zrender/lib/Element.js?325b","webpack:///./~/zrender/lib/animation/Animator.js?d2b9","webpack:///./~/zrender/lib/animation/requestAnimationFrame.js?6d88","webpack:///./~/zrender/lib/contain/util.js?0031","webpack:///./~/zrender/lib/core/LRU.js?018e","webpack:///./~/zrender/lib/core/guid.js?f0e4","webpack:///./~/zrender/lib/graphic/CompoundPath.js?8636","webpack:///./~/zrender/lib/graphic/LinearGradient.js?4250","webpack:///./~/zrender/lib/graphic/RadialGradient.js?895e","webpack:///./~/zrender/lib/graphic/Style.js?22d9","webpack:///./~/zrender/lib/graphic/helper/poly.js?788c","webpack:///./~/zrender/lib/graphic/helper/roundRect.js?418d","webpack:///./~/zrender/lib/graphic/mixin/RectText.js?94ea","webpack:///./~/zrender/lib/graphic/shape/Arc.js?2994","webpack:///./~/zrender/lib/graphic/shape/BezierCurve.js?f5c4","webpack:///./~/zrender/lib/graphic/shape/Circle.js?076e","webpack:///./~/zrender/lib/graphic/shape/Line.js?7728","webpack:///./~/zrender/lib/graphic/shape/Polygon.js?d37d","webpack:///./~/zrender/lib/graphic/shape/Polyline.js?3cdb","webpack:///./~/zrender/lib/graphic/shape/Rect.js?3b3d","webpack:///./~/zrender/lib/graphic/shape/Ring.js?b71c","webpack:///./~/zrender/lib/graphic/shape/Sector.js?9767","webpack:///./~/zrender/lib/svg/helper/Definable.js?09bb","webpack:///./~/zrender/lib/tool/path.js?dc4b","webpack:///./~/zrender/lib/vml/core.js?18b5","webpack:///./~/echarts/lib/chart/helper/createListFromArray.js?e3fc","webpack:///./~/echarts/lib/component/grid.js?5897","webpack:///./~/echarts/lib/coord/cartesian/Grid.js?f167","webpack:///./~/echarts/lib/view/Component.js?415a","webpack:///./~/echarts/lib/ExtensionAPI.js?e283","webpack:///./~/echarts/lib/chart/helper/SymbolDraw.js?6b79","webpack:///./~/echarts/lib/chart/line.js?f251","webpack:///./~/echarts/lib/chart/line/LineSeries.js?6f66","webpack:///./~/echarts/lib/chart/line/LineView.js?018e","webpack:///./~/echarts/lib/chart/line/lineAnimationDiff.js?8da6","webpack:///./~/echarts/lib/chart/line/poly.js?c760","webpack:///./~/echarts/lib/component/axis.js?8a87","webpack:///./~/echarts/lib/component/axis/AxisBuilder.js?6417","webpack:///./~/echarts/lib/component/axis/AxisView.js?f854","webpack:///./~/echarts/lib/component/helper/listComponent.js?566d","webpack:///./~/echarts/lib/component/legend.js?d893","webpack:///./~/echarts/lib/component/legend/LegendModel.js?bbe7","webpack:///./~/echarts/lib/component/legend/LegendView.js?124f","webpack:///./~/echarts/lib/component/legend/legendAction.js?b7a9","webpack:///./~/echarts/lib/component/legend/legendFilter.js?93b2","webpack:///./~/echarts/lib/component/title.js?e263","webpack:///./~/echarts/lib/component/tooltip.js?b491","webpack:///./~/echarts/lib/component/tooltip/TooltipContent.js?2c54","webpack:///./~/echarts/lib/component/tooltip/TooltipModel.js?19ac","webpack:///./~/echarts/lib/component/tooltip/TooltipView.js?ae52","webpack:///./~/echarts/lib/coord/Axis.js?736c","webpack:///./~/echarts/lib/coord/axisDefault.js?4492","webpack:///./~/echarts/lib/coord/axisModelCommonMixin.js?a8d0","webpack:///./~/echarts/lib/coord/axisModelCreator.js?34e4","webpack:///./~/echarts/lib/coord/cartesian/Axis2D.js?9345","webpack:///./~/echarts/lib/coord/cartesian/Cartesian.js?9246","webpack:///./~/echarts/lib/coord/cartesian/Cartesian2D.js?103b","webpack:///./~/echarts/lib/coord/cartesian/GridModel.js?1817","webpack:///./~/echarts/lib/coord/cartesian/axisLabelInterval.js?b017","webpack:///./~/echarts/lib/data/DataDiffer.js?f330","webpack:///./~/echarts/lib/data/helper/completeDimensions.js?9c9e","webpack:///./~/echarts/lib/layout/points.js?4302","webpack:///./~/echarts/lib/loading/default.js?8a5f","webpack:///./~/echarts/lib/model/Global.js?b9d3","webpack:///./~/echarts/lib/model/OptionManager.js?a7a5","webpack:///./~/echarts/lib/model/globalDefault.js?fd54","webpack:///./~/echarts/lib/model/mixin/areaStyle.js?4e41","webpack:///./~/echarts/lib/model/mixin/boxLayout.js?92d7","webpack:///./~/echarts/lib/model/mixin/itemStyle.js?9011","webpack:///./~/echarts/lib/model/mixin/lineStyle.js?3579","webpack:///./~/echarts/lib/model/mixin/textStyle.js?e4c8","webpack:///./~/echarts/lib/preprocessor/backwardCompat.js?f171","webpack:///./~/echarts/lib/preprocessor/helper/compatStyle.js?aff6","webpack:///./~/echarts/lib/processor/dataSample.js?6fcd","webpack:///./~/echarts/lib/scale/Log.js?0ad0","webpack:///./~/echarts/lib/scale/Ordinal.js?3a6b","webpack:///./~/echarts/lib/scale/Time.js?6fdf","webpack:///./~/echarts/lib/visual/seriesColor.js?4b6a","webpack:///./~/echarts/lib/visual/symbol.js?518b","webpack:///./~/zrender/index.js?f78a","webpack:///./~/zrender/lib/Handler.js?fbeb","webpack:///./~/zrender/lib/Layer.js?f586","webpack:///./~/zrender/lib/Painter.js?ee99","webpack:///./~/zrender/lib/Storage.js?7e93","webpack:///./~/zrender/lib/animation/Animation.js?8743","webpack:///./~/zrender/lib/animation/Clip.js?fef9","webpack:///./~/zrender/lib/animation/easing.js?64b6","webpack:///./~/zrender/lib/contain/arc.js?7367","webpack:///./~/zrender/lib/contain/cubic.js?b90e","webpack:///./~/zrender/lib/contain/line.js?4326","webpack:///./~/zrender/lib/contain/path.js?2e7f","webpack:///./~/zrender/lib/contain/quadratic.js?f589","webpack:///./~/zrender/lib/contain/windingLine.js?625a","webpack:///./~/zrender/lib/core/GestureMgr.js?00fd","webpack:///./~/zrender/lib/core/arrayDiff2.js?4a27","webpack:///./~/zrender/lib/core/bbox.js?1b56","webpack:///./~/zrender/lib/dom/HandlerProxy.js?2fc7","webpack:///./~/zrender/lib/export.js?917a","webpack:///./~/zrender/lib/graphic/helper/fixClipWithShadow.js?92a4","webpack:///./~/zrender/lib/graphic/helper/smoothBezier.js?2713","webpack:///./~/zrender/lib/graphic/helper/smoothSpline.js?a17c","webpack:///./~/zrender/lib/graphic/shape/Droplet.js?ed59","webpack:///./~/zrender/lib/graphic/shape/Ellipse.js?9d12","webpack:///./~/zrender/lib/graphic/shape/Heart.js?1812","webpack:///./~/zrender/lib/graphic/shape/Isogon.js?e1e1","webpack:///./~/zrender/lib/graphic/shape/Rose.js?eba0","webpack:///./~/zrender/lib/graphic/shape/Star.js?1229","webpack:///./~/zrender/lib/graphic/shape/Trochoid.js?7f17","webpack:///./~/zrender/lib/mixin/Animatable.js?35cb","webpack:///./~/zrender/lib/mixin/Draggable.js?fbca","webpack:///./~/zrender/lib/mixin/Transformable.js?f61b","webpack:///./~/zrender/lib/svg/Painter.js?9319","webpack:///./~/zrender/lib/svg/helper/ClippathManager.js?67bb","webpack:///./~/zrender/lib/svg/helper/GradientManager.js?423f","webpack:///./~/zrender/lib/svg/svg.js?55b5","webpack:///./~/zrender/lib/tool/transformPath.js?ddb2","webpack:///./~/zrender/lib/vml/Painter.js?b055","webpack:///./~/zrender/lib/vml/graphic.js?88f1","webpack:///./~/zrender/lib/vml/vml.js?d630","webpack:///lineMarker.vue","webpack:///line.vue","webpack:///./src/views/charts/line.vue?1406","webpack:///./src/views/charts/line.vue?b016","webpack:///./src/components/Charts/lineMarker.vue","webpack:///./src/components/Charts/lineMarker.vue?be4c","webpack:///./src/views/charts/line.vue?a29c"],"names":["webpackJsonp","Array","concat","module","exports","__webpack_require__","injectStyle","ssrContext","Component","$override","name","fn","methods","clone","source","result","typeStr","objToString","call","i","len","length","TYPED_ARRAY","Ctor","constructor","from","BUILTIN_OBJECT","isPrimitive","isDom","key","hasOwnProperty","merge","target","overwrite","isObject","targetProp","sourceProp","isArray","isBuiltInObject","mergeAll","targetAndSources","extend","defaults","overlay","getContext","_ctx","createCanvas","indexOf","array","value","inherits","clazz","baseClazz","F","clazzPrototype","prototype","prop","superClass","mixin","isArrayLike","data","each","obj","cb","context","forEach","nativeForEach","map","nativeMap","push","reduce","memo","nativeReduce","filter","nativeFilter","find","bind","func","args","nativeSlice","arguments","apply","curry","this","isFunction","isString","type","nodeType","ownerDocument","eqNaN","retrieve","values","retrieve2","value0","value1","retrieve3","value2","slice","Function","normalizeCssArray","val","assert","condition","message","Error","setAsPrimitive","primitiveKey","HashMap","set","createHashMap","noop","[object Function]","[object RegExp]","[object Date]","[object Error]","[object CanvasGradient]","[object CanvasPattern]","[object Image]","[object Canvas]","[object Int8Array]","[object Uint8Array]","[object Uint8ClampedArray]","[object Int16Array]","[object Uint16Array]","[object Int32Array]","[object Uint32Array]","[object Float32Array]","[object Float64Array]","Object","toString","arrayProto","document","createElement","get","prefixedKey","removeKey","Path","opts","Displayable","path","zrUtil","PathProxy","pathContain","Pattern","getCanvasPattern","abs","Math","pathProxyForDraw","__dirtyPath","strokeContainThreshold","brush","ctx","prevEl","style","hasStroke","hasFill","fill","stroke","hasFillGradient","colorStops","hasStrokeGradient","hasFillPattern","image","hasStrokePattern","setTransform","__dirty","rect","getBoundingRect","_fillGradient","getGradient","_strokeGradient","fillStyle","strokeStyle","lineDash","lineDashOffset","ctxLineDash","setLineDash","scale","getGlobalScale","setScale","beginPath","setLineDashOffset","buildPath","shape","rebuildPath","restoreTransform","text","drawRectText","shapeCfg","inBundle","createPathProxy","_rect","needsUpdateRect","rectWithStroke","_rectWithStroke","copy","w","lineWidth","lineScale","strokeNoScale","getLineScale","max","width","height","x","y","contain","localPos","transformCoordToLocal","pathData","containStroke","dirty","dirtyPath","__zr","refresh","__clipTarget","animateShape","loop","animate","attrKV","setShape","m","transform","sqrt","Sub","extendFrom","defaultShape","thisShape","init","_default","global","createRegisterEventWithLowercaseName","method","eventName","handler","toLowerCase","Eventful","MessageCenter","ECharts","dom","theme","prioritySortFunc","a","b","prio","themeStorage","id","group","_dom","zr","_zr","zrender","renderer","devicePixelRatio","_throttledZrFlush","throttle","flush","_theme","_chartsViews","_chartsMap","_componentsViews","_componentsMap","_api","ExtensionAPI","_coordSysMgr","CoordinateSystemManager","_messageCenter","_initEvents","resize","_pendingActions","timsort","visualFuncs","dataProcessorFuncs","animation","on","_onframe","doConvertPixel","methodName","finder","ecModel","_model","coordSysList","getCoordinateSystems","modelUtil","parseFinder","coordSys","__DEV__","console","warn","updateDirectly","ecIns","payload","mainType","subType","query","eachComponent","model","index","view","__viewId","__alive","doDispatchAction","silent","payloadType","actionWrap","actions","actionInfo","cptType","update","split","updateMethod","pop","parseClassType","IN_MAIN_PROCESS","payloads","batched","batch","item","eventObj","eventObjBatch","isHighDown","batchItem","action","event","main","sub","OPTION_UPDATED","updateMethods","prepareAndUpdate","trigger","flushPendingActions","pendingActions","shift","triggerUpdatedEvent","invokeUpdateMethod","api","component","componentModel","__model","updateZ","eachSeries","seriesModel","idx","chart","updateProgressiveAndBlend","updateHoverLayerStatus","prepareView","isComponent","viewList","viewMap","componentType","viewId","classType","Clazz","ComponentView","getClass","ChartView","add","__id","remove","dispose","splice","processData","process","stackSeriesData","stackedDataMap","series","stack","getData","previousStack","stackedOn","doLayout","visual","isLayout","doVisualEncoding","excludesLayout","clearColorPalette","doRender","componentView","render","chartView","storage","elCount","traverse","el","isGroup","env","node","useHoverLayer","ignore","frameDrawNum","needProgressive","progressive","floor","stopAnimation","blendMode","canvasSupported","setStyle","z","zlevel","enableConnect","updateConnectedChartsStatus","charts","status","STATUS_KEY","eventActionMap","actionType","eventType","connectedGroups","makeActionFromEvent","otherCharts","instances","otherChart","dispatchAction","window","GlobalModel","OptionManager","ComponentModel","SeriesModel","graphic","colorTool","ACTION_REG","off","one","echartsProto","getDom","getZr","setOption","option","notMerge","lazyUpdate","optionManager","__lastOnlyGraphic","o","optionPreprocessorFuncs","setTheme","log","getModel","getOption","getWidth","getHeight","getRenderedCanvas","pixelRatio","backgroundColor","list","getDisplayList","painter","getDataURL","excludeComponents","excludesComponentViews","self","url","toDataURL","getConnectedDataURL","groupId","mathMin","min","mathMax","left","Infinity","top","right","bottom","canvasList","dpr","canvas","boundingRect","getBoundingClientRect","targetCanvas","img","Image","refreshImmediately","convertToPixel","convertFromPixel","containPixel","models","coordinateSystem","containPoint","getVisual","visualType","defaultMainType","dataIndexInside","indexOfRawIndex","dataIndex","getItemVisual","coordSysMgr","restoreData","create","isSingleCanvas","configLayer","clearColor","colorArr","parse","stringify","background","updateView","clearAllVisual","updateVisual","updateLayout","optionChanged","resetOption","_loadingFX","showLoading","cfg","hideLoading","loadingEffects","opt","browser","weChat","MOUSE_EVENT_NAMES","eveName","e","params","dataModel","getSeriesByIndex","seriesIndex","getDataParams","dataType","eventData","isDisposed","_disposed","clear","idBase","Date","groupIdBase","echarts","version","dependencies","replace","nodeName","toUpperCase","clientWidth","clientHeight","setAttribute","connect","disConnect","getInstanceByDom","getAttribute","getInstanceById","registerTheme","registerPreprocessor","preprocessorFunc","registerProcessor","priority","processorFunc","isNaN","registerAction","test","registerCoordinateSystem","CoordinateSystem","register","registerLayout","layoutFunc","registerVisual","visualFunc","registerLoading","loadingFx","extendComponentModel","extendComponentView","extendSeriesModel","extendChartView","setCanvasCreator","creator","List","Model","number","format","matrix","vector","color","util","PRIORITY","PROCESSOR","FILTER","STATISTIC","VISUAL","LAYOUT","GLOBAL","CHART","COMPONENT","BRUSH","out","ArrayCtor","v","v1","v2","scaleAndAdd","lenSquare","mul","div","dot","s","normalize","d","distance","distanceSquare","negate","lerp","t","applyTransform","Float32Array","lengthSquare","dist","distSquare","hasFillOrStroke","fillOrStroke","liftColor","lift","cacheElementStl","__hoverStlDirty","hoverStyle","__hoverStl","normalStyle","__normalStl","doSingleEnterHover","__isHover","addHover","z2","doSingleLeaveHover","normalStl","removeHover","doEnterHover","child","doLeaveHover","setElementHoverStl","hoverStl","onElementMouseOver","__hoverSilentOnTouch","zrByTouch","__isEmphasis","onElementMouseOut","enterEmphasis","leaveEmphasis","animateOrSetProps","isUpdate","props","animatableModel","isAnimationEnabled","postfix","duration","getShallow","animationEasing","animationDelay","getAnimationDelayParams","animateTo","attr","pathTool","round","Group","Text","Circle","Sector","Ring","Polygon","Polyline","Rect","Line","BezierCurve","Arc","CompoundPath","LinearGradient","RadialGradient","BoundingRect","extendShape","extendPath","extendFromString","makePath","layout","createFromString","aspect","cx","cy","resizePath","mergePath","pathRect","calculateTransform","subPixelOptimizeLine","param","subPixelOptimize","x1","x2","y1","y2","subPixelOptimizeRect","originX","originY","originWidth","originHeight","position","positiveOrNegative","doubledPosition","setHoverStyle","hoverSilentOnTouch","setText","textStyle","labelModel","labelPosition","labelOffset","labelColor","textStyleModel","textDistance","textFont","getFont","textPosition","textOffset","textFill","getTextColor","updateProps","initProps","getTransform","ancestor","mat","identity","getLocalTransform","parent","vertex","invert","transformDirection","direction","hBase","vBase","groupTransition","g1","g2","getAnimatableProps","rotation","elMap1","g","elMap","anid","oldEl","newProp","_trim","str","linearMap","domain","range","clamp","subDomain","subRange","parsePercent","percent","all","match","parseFloat","NaN","precision","toFixed","asc","arr","sort","getPrecision","count","getPrecisionSafe","dotIndex","getPixelPrecision","dataExtent","pixelExtent","LN10","dataQuantity","sizeQuantity","isFinite","MAX_SAFE_INTEGER","remRadian","radian","pi2","PI","isRadianAroundZero","parseDate","ret","quantity","pow","nice","exp10","f","reformIntervals","littleThan","lg","interval","close","curr","currClose","isNumeric","navigator","os","svgSupported","ua","firefox","ie","edge","SVGRect","touchEventsSupported","pointerEventsSupported","userAgent","vec2","v2ApplyTransform","union","other","lt","rb","lb","rt","maxX","maxY","sx","sy","translate","intersect","ax0","ax1","ay0","ay1","bx0","bx1","by0","by1","plain","numberUtil","textContain","formatUtil","addCommas","toCamelCase","upperCaseFirst","group1","charAt","encodeHTML","String","TPL_VAR_ALIAS","wrapVar","varName","seriesIdx","formatTpl","tpl","paramsList","encode","seriesLen","$vars","alias","k","s2d","formatTime","date","getFullYear","M","getMonth","getDate","h","getHours","getMinutes","getSeconds","capitalFirst","substr","truncateText","has","nubmerUtil","normalizeToArray","defaultEmphasis","subOpts","emphasisOpt","emphasis","normalOpt","normal","subOptName","LABEL_OPTIONS","getDataItemValue","dataItem","isDataItemOption","converDataValue","dimInfo","dimType","createDataFormatModel","dataFormatMixin","seriesName","rawValue","getRawValue","rawDataIndex","getRawIndex","getName","itemOpt","getRawDataItem","componentSubType","seriesType","getFormattedLabel","dimIndex","itemModel","getItemModel","formatter","formatTooltip","mappingToExists","exists","newCptOptions","exist","cptOption","isIdInner","makeIdAndName","mapResult","idMap","existCpt","keyInfo","idNum","compressBatches","batchA","batchB","makeMap","sourceBatch","otherMap","seriesId","dataIndices","otherDataIndices","j","lenj","mapToArray","isData","mapA","mapB","queryDataIndex","indexOfName","parsedKey","queryType","queryParam","queryComponents","parentModel","doGet","pathArr","getParent","getParentMethod","clazzUtil","mergeOption","ignoreParent","parsePath","thisParentModel","isEmpty","setReadOnly","properties","customizeGetParent","enableClassExtend","checkClassType","superCall","superApply","IS_CONTAINER","host","hasOwn","RootClass","mandatoryMethods","$constructor","proto","ExtendedClass","enableClassManagement","entity","options","makeContainer","container","registerClass","componentMainType","throwWhenNotFound","getClassesByMainType","hasClass","getAllClassMainTypes","types","hasSubTypes","registerWhenExtend","originalExtend","getDependencies","deps","arrayPush","componentUtil","componentIndex","defaultOption","dependentModels","uid","layoutMode","extraOpt","getUID","mergeDefaultAndTheme","inputPositionParams","getLayoutParams","themeModel","getTheme","getDefaultOption","mergeLayoutParam","optionUpdated","newCptOption","isInit","optList","Class","getReferringComponents","enableSubTypeDefaulter","enableTopologicalTravel","font","DEFAULT_FONT","textWidthCache","textLines","l","measureText","textWidthCacheCounter","TEXT_CACHE_MAX","textAlign","textVerticalAlign","textPadding","rich","truncate","getRichTextRect","getPlainTextRect","contentBlock","parsePlainText","outerWidth","outerHeight","adjustTextX","adjustTextY","lineHeight","parseRichText","adjustTextPositionOnRect","halfHeight","containerWidth","ellipsis","prepareTruncateOptions","truncateSingleLine","join","maxIterations","minChar","cnCharWidth","ascCharWidth","placeholder","contentWidth","ellipsisWidth","textLine","subLength","estimateLength","charCode","charCodeAt","getLineHeight","padding","lines","truncOuterHeight","truncOuterWidth","lastIndex","STYLE_REG","exec","matchedIndex","pushTokens","substring","contentHeight","pendingList","stlPadding","truncateWidth","truncateHeight","line","tokens","token","tokenStyle","styleName","tokenHeight","textHeight","textLineHeight","textWidth","tokenWidth","tokenWidthNotSpecified","percentWidth","textBackgroundColor","bgImg","imageHelper","findExistImage","isImageReady","paddingW","remianTruncWidth","parseInt","block","isEmptyStr","strs","isLineHolder","tokensLen","makeFont","fontSize","fontFamily","fontStyle","fontWeight","_util","clampCssByte","clampCssAngle","clampCssFloat","parseCssInt","parseCssFloat","cssHueToRgb","m1","m2","lerpNumber","p","setRgba","r","copyRgba","putToCache","colorStr","rgbaArr","lastRemovedArr","colorCache","put","cached","kCSSColorTable","op","ep","fname","alpha","hsla2rgba","iv","hsla","rgba","rgba2hsla","H","S","R","G","B","vMin","vMax","delta","L","deltaR","deltaG","deltaB","level","toHex","fastLerp","normalizedValue","colors","leftIndex","rightIndex","ceil","leftColor","rightColor","dv","fullOutput","modifyHSL","modifyAlpha","arrColor","LRU","transparent","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","fastMapToColor","mapToColor","boxLayout","orient","gap","maxWidth","maxHeight","currentLineMaxSize","eachChild","nextX","nextY","nextChild","childAt","nextChildRect","moveX","newline","moveY","LOCATION_PARAMS","box","vbox","hbox","getAvailableSize","positionInfo","containerRect","margin","containerHeight","getLayoutRect","verticalMargin","horizontalMargin","positionElement","hv","boundingMode","needLocalTransform","elPos","dx","dy","targetOption","newOption","names","newParams","newValueCount","merged","mergedValueCount","enoughParamNumber","ignoreSize","hasProp","hasValue","hNames","vNames","hResult","vResult","copyLayoutParams","curve","bbox","_config","CMD","C","Q","A","Z","min2","max2","mathCos","cos","mathSin","sin","mathSqrt","mathAbs","hasTypedArray","notSaveData","_saveData","_xi","_yi","_x0","_y0","_ux","_uy","_len","_lineDash","_dashOffset","_dashIdx","_dashSum","moveTo","addData","lineTo","exceedUnit","_needsDash","_dashedLineTo","bezierCurveTo","x3","y3","_dashedBezierTo","quadraticCurveTo","_dashedQuadraticTo","arc","startAngle","endAngle","anticlockwise","arcTo","radius","closePath","x0","y0","toStatic","lineDashSum","offset","setData","appendPath","appendSize","appendPathData","cmd","_expandData","_prevCmd","newData","dash","dashSum","nDash","cubicAt","bezierLen","tmpLen","Number","MAX_VALUE","xi","yi","fromLine","fromCubic","fromQuadratic","rx","ry","fromArc","ux","uy","theta","dTheta","psi","fs","scaleX","scaleY","isEllipse","rotate","isAroundZero","EPSILON","isNotAroundZero","p0","p1","p2","p3","onet","cubicDerivativeAt","cubicRootAt","roots","c","n","t1","disc","K","t2","discSqrt","Y1","Y2","mathPow","ONE_THIRD","T","acos","ASqrt","tmp","THREE_SQRT","t3","cubicExtrema","extrema","cubicSubdivide","p01","p12","p23","p012","p123","p0123","cubicProjectPoint","prev","next","d1","d2","_v0","_t","_v1","v2DistSquare","EPSILON_NUMERIC","_v2","quadraticAt","quadraticDerivativeAt","quadraticRootAt","quadraticExtremum","divider","quadraticSubdivide","quadraticProjectPoint","_vector","v2Create","out0","out1","out2","out3","out4","out5","rad","aa","ac","atx","ab","ad","aty","st","ct","vx","vy","det","ZImage","src","_image","createOrUpdateImage","onload","sWidth","sHeight","drawImage","textHelper","normalizeTextStyle","shadowBlur","shadowColor","shadowOffsetX","shadowOffsetY","needDrawText","renderText","getStroke","textStroke","textStrokeWidth","arrySlice","_$handlers","_h","isSilent","newList","argLen","triggerWithContext","Element","_children","__storage","children","childOfName","childCount","_doAdd","addBefore","nextSibling","addToStorage","addChildrenToStorage","delFromStorage","delChildrenFromStorage","removeAll","includeChildren","tmpRect","tmpMat","invisible","childRect","debugMode","clientToLocal","calculate","defaultGetZrXY","layerX","offsetX","zrX","zrY","layerY","offsetY","clientX","clientY","normalizeEvent","touch","targetTouches","changedTouches","zrDelta","wheelDelta","detail","button","which","undefined","MOUSE_EVENT_REG","addEventListener","isDomLevel2","attachEvent","removeEventListener","detachEvent","notLeftMouse","Dispatcher","stop","preventDefault","stopPropagation","cancelBubble","returnValue","Scale","_extent","_interval","scaleProto","extent","unionExtent","unionExtentFromData","dim","getDataExtent","getExtent","setExtent","start","end","thisExtent","getTicksLabels","labels","ticks","getTicks","getLabel","Style","__clipPaths","RectText","draggable","dragging","culling","cursor","rectHover","beforeBrush","afterBrush","rectContain","coord","animateStyle","useStyle","Gradient","addColorStop","normalizeStyle","VALID_TEXT_ALIGN","textBaseline","VALID_TEXT_VERTICAL_ALIGN","hostEl","renderRichText","renderPlainText","setCtx","__textCotentBlock","boxPos","getBoxPosition","baseX","baseY","applyTextRotation","boxY","textX","textY","needDrawBg","needDrawBackground","boxX","drawBackground","getTextXForPadding","textShadowBlur","textShadowColor","textShadowOffsetX","textShadowOffsetY","getFill","strokeText","fillText","drawRichText","xLeft","lineTop","xRight","tokenCount","usedWidth","lineXLeft","lineXRight","placeToken","textRotation","origin","textOrigin","textBorderWidth","textBorderColor","isPlainBg","textBoxShadowBlur","textBoxShadowColor","textBoxShadowOffsetX","textBoxShadowOffsetY","textBorderRadius","roundRectHelper","onBgImageLoaded","blockHeiht","res","maxValue","lastIndexOf","center","middle","excludes","propName","_coordinateSystems","coordinateSystemCreators","coordinateSystems","creater","coordinateSystemCreator","OrdinalScale","IntervalScale","axisHelper","getScaleExtent","axis","axisDataLen","boundaryGap","span","scaleType","getMin","getMax","fixMin","fixMax","originalExtent","setBlank","getNeedCrossZero","niceScaleExtent","splitNumber","base","niceExtent","minInterval","getInterval","intervalScale","setInterval","createScaleByModel","axisType","getCategories","ifAxisCrossZero","getAxisLabelInterval","tickCoords","isAxisHorizontal","textSpaceTakenRect","autoLabelInterval","accumulatedLabelInterval","step","tickCoord","getFormattedLabels","labelFormatter","tick","mathFloor","mathCeil","roundingErrorFix","niceTicks","_niceExtent","reverse","expandSize","random","subTypeDefaulters","registerSubTypeDefaulter","defaulter","determineSubType","componentTypeMain","dependencyGetter","makeDepndencyGraph","fullNameList","graph","noEntryList","thisItem","createDependencyGraphItem","originalDeps","availableDeps","getAvailableDependencies","entryCount","dependentName","predecessor","thatItem","successor","dep","topologicalTravel","targetNameList","callback","removeEdge","succComponentType","removeEdgeAndAdd","targetNameSet","currComponentType","currVertex","isInTargetNameSet","minRunLength","DEFAULT_MIN_MERGE","makeAscendingRun","lo","hi","compare","runHi","reverseRun","binaryInsertionSort","mid","pivot","gallopLeft","hint","lastOffset","maxOffset","gallopRight","TimSort","pushRun","_runStart","_runLength","runStart","stackSize","runLength","mergeRuns","mergeAt","forceMergeRuns","start1","length1","start2","length2","mergeLow","mergeHigh","cursor1","cursor2","dest","count1","count2","exit","_minGallop","minGallop","DEFAULT_MIN_GALLOPING","customCursor","customDest","remaining","ts","minRun","force","repeat","createPattern","newImageOrSrc","cachedImgObj","globalImageCache","cbPayload","__zrImageSrc","pendingWrap","pending","imageOnLoad","__cachedImgObj","createElementNS","svgURI","round4","mathRound","pathHasFill","isText","NONE","pathHasStroke","svgEl","arrayJoin","attrXLink","setAttributeNS","bindStyle","opacity","lineCap","lineJoin","miterLimit","pathDataToString","dataLength","cmdStr","nData","clockwise","dThetaPositive","isCircle","PI2","large","degree","getVerticalAlignForSvg","verticalAlign","_core","svgPath","__svgEl","pathStr","svgTextDrawRectText","svgImage","HTMLImageElement","dw","dh","__imageSrc","svgText","textRect","textSvgEl","__textSvgEl","transformText","pos","transformCoordToGlobal","align","newPos","nTextLines","textAnchor","__text","__textFont","tspanList","__tspanList","tspan","innerHTML","appendChild","createTextNode","removeChild","ZRender","guid","getInstance","registerPainter","painterCtors","delInstance","Handler","Storage","Painter","Animation","HandlerProxy","useVML","rendererType","vml","handerProxy","getViewportRoot","root","stage","_needsRefresh","oldDelFromStorage","oldAddToStorage","removeSelfFromZr","addSelfToZr","getId","addRoot","delRoot","zLevel","config","_needsRefreshHover","refreshHoverImmediately","refreshHover","clearHover","clearAnimation","pathToImage","setCursorStyle","cursorStyle","findHover","eventHandler","classUtil","colorPaletteMixin","legendDataProvider","visualColorAccessPath","getInitialData","label","fillDataTextStyle","newSeriesOption","cloneShallow","getLinkedData","getRawData","coordDimToDataDim","coordDim","dataDimToCoordDim","dataDim","getBaseAxis","multipleSeries","formattedValue","valStr","getDimensionInfo","colorEl","animationEnabled","getColorFromPalette","scope","getAxisTooltipDataIndex","getTooltipPosition","getSymbolSize","symbolSize","getScale","Symbol","seriesScope","updateData","driftSymbol","drift","symbolUtil","symbolProto","_createSymbol","symbolType","hostModel","symbolPath","createSymbol","_symbolType","stopSymbolAnimation","toLastFrame","getSymbolPath","highlight","downplay","setZ","setDraggable","_updateCommon","_seriesModel","normalStyleAccessPath","emphasisStyleAccessPath","normalLabelAccessPath","emphasisLabelAccessPath","itemStyle","hoverItemStyle","symbolRotate","symbolOffset","hoverLabelModel","hoverAnimation","hasItemOption","getItemStyle","elStyle","setColor","valueDim","dimensions","onEmphasis","ratio","onNormal","fadeOut","getAxisType","axisDim","axisModelCreator","AxisModel","resetRange","getCoordSysModel","gridIndex","gridId","extraOption","normalizeDimensions","cloneListForMapAndSample","original","excludeDimensions","allDimensions","transferProperties","_storage","originalStorage","dimStore","globalObj","Float64Array","Int32Array","dataCtors","float","int","ordinal","time","DataDiffer","TRANSFERABLE_PROPERTIES","__wrappedMethods","dimensionInfos","dimensionNames","dimensionName","dimensionInfo","stackable","_dimensionInfos","indices","_nameList","_idList","_optionModels","_visual","_layout","_itemVisuals","_itemLayouts","_graphicEls","_rawData","listProto","getDimension","initData","nameList","dimValueGetter","size","dimensionInfoMap","idList","nameRepeatCount","DataCtor","dimName","stackedValue","getValues","dimData","dimExtent","getSum","sum","rawIndex","indexOfNearest","maxDistance","nearestIdx","minDist","diff","rawIdx","dims","dimSize","filterSelf","newIndices","keep","mapArray","tmpRetValue","retValue","downSample","dimension","rate","sampleValue","sampleIndex","targetStorage","originalIndices","frameValues","frameIndices","frameSize","otherList","otherIdList","setVisual","setLayout","getLayout","getItemLayout","setItemLayout","clearItemLayouts","itemVisual","setItemVisual","setItemDataAndSeriesIndex","setItemGraphicEl","getItemGraphicEl","eachItemGraphicEl","dimensionInfoList","wrapMethod","injectFunction","originalMethod","TRANSFERABLE_METHODS","CHANGABLE_METHODS","colorIdx","colorNameMap","colorPalette","Triangle","Diamond","Pin","angle","asin","tanX","tanY","cpLen","cpLen2","Arrow","symbolCtors","roundRect","square","circle","diamond","pin","arrow","triangle","symbolShapeMakers","symbolBuildProxies","proxySymbol","symbolPathSetColor","symbolStyle","symbolShape","__isEmptyBrush","lib","ORIGIN_METHOD","RATE","delay","debounce","lastExec","getTime","timer","currCall","lastCall","clearTimeout","setTimeout","createOrUpdate","fnAttr","throttleType","originFn","lastThrottleType","Chart","elSetState","state","toggleHighlight","dataIdx","chartProto","Transformable","Animatable","clipPath","decomposeTransform","beforeUpdate","afterUpdate","updateTransform","hide","show","setClipPath","removeClipPath","animators","addAnimator","removeAnimator","defaultGetter","defaultSetter","interpolateNumber","interpolateString","interpolateArray","arrDim","len2","fillArr","arr0","arr1","arr0Len","arr1Len","arraySlice","isArraySame","catmullRomInterpolateArray","catmullRomInterpolate","v0","cloneValue","rgba2String","getArrayDim","keyframes","lastValue","createTrackClip","animator","easing","oneTrackDone","forceAnimate","getter","_getter","setter","_setter","useSpline","trackLen","trackMaxTime","firstVal","isValueArray","isValueColor","isValueString","kfPercents","kfValues","prevValue","isAllValueEqual","colorArray","_target","lastFrame","lastFramePercent","onframe","frame","clip","Clip","life","_loop","_delay","ondestroy","Animator","_tracks","_clipCount","_doneList","_onframeList","_clipList","when","tracks","during","pause","_paused","resume","isPaused","_doneCallback","doneList","lastClip","clipCount","addClip","oldOnFrame","forwardToLast","clipList","removeClip","done","getClips","requestAnimationFrame","msRequestAnimationFrame","mozRequestAnimationFrame","webkitRequestAnimationFrame","normalizeRadian","LinkedList","head","tail","linkedListProto","insert","entry","Entry","insertEntry","maxSize","_list","_map","_maxSize","_lastRemovedEntry","LRUProto","removed","leastUsedEntry","idStart","paths","_updatePathDirty","globalCoord","createLinearGradient","createRadialGradient","STYLE_COMMON_PROPS","textTag","blend","prevStyle","firstDraw","globalAlpha","globalCompositeOperation","otherStyle","newStyle","canvasGradient","styleProto","points","smooth","controlPoints","smoothBezier","smoothConstraint","cp1","cp2","smoothSpline","r1","r2","r3","r4","total","save","restore","unitX","unitY","someVectorAt","isTangent","cpx2","cpy2","cpx1","cpy1","_curve","pointAt","tangentAt","polyHelper","r0","fixClipWithShadow","Definable","svgRoot","tagNames","markLabel","_svgRoot","_tagNames","_markLabel","nextId","ZText","_graphic","getDefs","isForceCreating","defs","getElementsByTagName","insertBefore","firstChild","contains","element","onUpdate","addDom","removeDom","getDoms","doms","tagName","tags","markAllUnused","that","markUsed","removeUnused","getSvgProxy","displayable","getTextSvgElement","getSvgElement","processArc","fa","psiDeg","xp","yp","lambda","cxp","cyp","vAngle","u","vRatio","createPathProxyFromString","cs","cc","RegExp","prevCmd","cpx","cpy","ctlPtx","ctlPty","createPathOptions","pathProxy","transformPath","pathEls","pathList","pathEl","pathBundle","vMag","createNode","doCreateNode","initVML","vmlInited","doc","styleSheets","createStyleSheet","addRule","urn","win","namespaces","zrvml","firstDataNotNull","ifNeedCompleteOrdinalData","sampleItem","createListFromArray","coordSysName","creators","registeredCoordSys","axesInfo","completeDimensions","categoryIndex","createNameList","categories","categoryAxesModels","isStackable","getDimTypeByAxis","categoryAxisModel","categoryDim","dataLen","cartesian2d","axesModels","xAxisModel","yAxisModel","xAxisType","yAxisType","isXAxisCateogry","isYAxisCategory","singleAxis","singleAxisModel","singleAxisType","isCategory","single","polar","polarModel","angleAxisModel","findAxisModel","radiusAxisModel","radiusAxisType","angleAxisType","isAngleAxisCateogry","isRadiusAxisCateogry","geo","gridModel","getRect","xAxis","yAxis","grid","isAxisUsedInTheGrid","axisModel","getLabelUnionRect","labelCount","isLabelIgnored","singleRect","getTextRect","Grid","_coordsMap","_coordsList","_axesMap","_axesList","_initCartesian","updateAxisTransfrom","coordBase","axisExtent","axisExtentSum","toGlobalCoord","toLocalCoord","findAxesModels","axesTypes","isCartesian2D","Cartesian2D","Axis2D","gridProto","ifAxisCanNotOnZero","otherAxisDim","axes","axesMap","_updateScale","onZero","adjustAxes","axesList","isHorizontal","gridRect","inverse","getBoxLayoutParams","labelUnionRect","getAxis","axisIndex","axesMapOnDim","getCartesian","xAxisIndex","yAxisIndex","coordList","_findConvertTarget","cartesian","dataToPoint","dataToCoord","pointToData","coordToData","coordsList","point","createAxisCreator","axisPosition","axisPositionUsed","onBand","axesCount","addAxis","grids","componentProto","chartInstance","echartsAPIList","SymbolDraw","symbolCtor","_symbolCtor","symbolNeedsDraw","isIgnore","symbolDrawProto","oldData","_data","SymbolCtor","newIdx","symbolEl","oldIdx","execute","enableAnimation","legendHoverLink","clipOverflow","lineStyle","smoothMonotone","symbol","showSymbol","showAllSymbol","connectNulls","sampling","hoverLayerThreshold","isPointsSame","points1","points2","getSmooth","getAxisExtentWithGap","getGlobalExtent","halfBandWidth","getBandWidth","dir","sign","getStackedOnPoints","baseAxis","valueAxis","getOtherAxis","valueStart","baseDataOffset","stackedOnSameSign","stackedData","createGridClipShape","hasAnimation","xExtent","yExtent","createPolarClipShape","angleAxis","getAngleAxis","radiusAxis","getRadiusAxis","radiusExtent","angleExtent","RADIAN","createClipShape","turnPointsIntoStep","stepTurnAt","baseIndex","stepPoints","nextPt","pt","stepPt","stepPt2","getVisualGradient","visualMetaList","visualMeta","stops","stopLen","outerColors","minCoord","maxCoord","coordSpan","unshift","gradient","lineAnimationDiff","lineGroup","symbolDraw","_symbolDraw","_lineGroup","lineStyleModel","areaStyleModel","isCoordSysPolar","prevCoordSys","_coordSys","polyline","_polyline","polygon","_polygon","isAreaChart","stackedOnPoints","isSymbolIgnore","_getSymbolIgnoreFunc","__temp","_step","_newPolygon","_stackedOnPoints","_points","_updateAnimation","_newPolyline","visualColor","getLineStyle","stackedOnSmooth","getAreaStyle","categoryAxis","getAxesByScale","current","stackedOnCurrent","stackedOnNext","__points","updatedDataInfo","diffStatus","idx1","ptIdx","getStackedOnPoint","diffData","diffResult","oldStackedOnPoints","newStackedOnPoints","oldCoordSys","newCoordSys","currPoints","nextPoints","currStackedPoints","nextStackedPoints","sortedIndices","rawIndices","diffItem","pointAdded","currentPt","sortedCurrPoints","sortedNextPoints","sortedCurrStackedPoints","sortedNextStackedPoints","sortedStatus","isPointNull","drawSegment","segLen","allLen","smoothMin","smoothMax","prevIdx","v2Copy","cp0","nextIdx","nextP","ratioNextSeg","prevP","lenPrevSeg","lenNextSeg","vec2Min","vec2Max","getBoundingBox","ptMin","ptMax","stackedOnBBox","makeAxisEventDataBase","innerTextLayout","rotationDiff","endTextLayout","textRotate","onLeft","tooltipOpt","AxisBuilder","nameDirection","tickDirection","labelDirection","dumbGroup","_transform","_dumbGroup","hasBuilder","builders","getGroup","axisLine","pt1","pt2","axisTick","isBlank","tickModel","tickLen","tickInterval","labelInterval","ticksCoords","getTicksCoords","ifIgnoreOnTick","axisLabel","isTwoLabelOverlapped","firstRect","nextRect","axisLabelShow","labelMargin","labelRotation","labelLayout","categoryData","textEls","triggerEvent","tickVal","itemTextStyleModel","textColor","labelBeforeFormat","textEl","targetType","firstLabel","lastLabel","axisName","nameLocation","gapSignal","nameRotation","axisNameAvailableWidth","truncateOpt","truncatedText","formatterParams","__fullText","__truncatedText","tooltip","content","rawTick","layoutAxis","getZero","theAxis","rawAxisPosition","rectBound","axisOffset","posMap","dirMap","getLabelInterval","axisBuilderAttrs","selfBuilderAttrs","AxisView","oldAxisGroup","_axisGroup","axisBuilder","_splitLine","splitLineModel","lineColors","lineInterval","lineCount","colorIndex","_splitArea","splitAreaModel","areaColors","prevX","prevY","areaInterval","areaStyle","positionGroup","addBackground","LegendModel","selected","_updateData","legendData","hasSelected","isSelected","select","availableNames","getSeries","_availableNames","unSelect","toggleSelected","borderColor","borderWidth","itemGap","itemWidth","itemHeight","inactiveColor","selectedMode","dispatchSelectAction","dispatchHighlightAction","dataName","dispatchDownplayAction","symbolCreator","listComponentHelper","_symbolTypeStore","legendModel","selectMode","itemAlign","legendDrawedMap","getSeriesByName","legendSymbolType","_createItem","eachRawSeries","itemGroup","itemIcon","tooltipModel","legendGlobalTooltipModel","hitRect","legendIndex","legendSelectActionHandler","selectedMap","isToggleSelect","isItemSelected","legendModels","findComponents","filterSeries","subtext","subtarget","subtextStyle","titleModel","subtextStyleModel","subText","subTextEl","link","sublink","open","groupRect","layoutOption","layoutRect","alignStyle","assembleTransition","transitionText","vendors","vendorPrefix","assembleFont","cssText","assembleCssText","transitionDuration","zrColor","borderName","camelCase","TooltipContent","_x","_y","_container","_show","_hideTimeout","onmouseenter","enterable","_inContent","onmousemove","eventUtil","dispatch","onmouseleave","hideLater","_hideDelay","stl","currentStyle","defaultView","getComputedStyle","domStyle","display","setContent","isShow","showContent","triggerOn","alwaysShowContent","confine","showDelay","hideDelay","borderRadius","extraCssText","axisPointer","animationDurationUpdate","animationEasingUpdate","crossStyle","shadowStyle","dataEqual","makeLineShape","makeRectShape","makeSectorShape","refixTooltipPosition","viewWidth","viewHeight","confineTooltipPosition","calcTooltipPosition","domWidth","domHeight","rectWidth","rectHeight","updatePosition","positionExpr","ifSeriesSupportAxisTrigger","_axisPointers","tooltipContent","_tooltipContent","_tooltipModel","_ecModel","_lastHover","_alwaysShowContent","_seriesGroupByAxis","_prepareAxisTriggerData","crossText","_crossText","_lastX","_lastY","_refreshUpdateTimeout","manuallyShowTip","_tryShow","_mousemove","_hide","_showTimeout","seriesHaveDataOnIndex","_series","isTriggerAxis","manuallyHideTip","seriesGroupByAxis","globalTrigger","_showAxisTooltip","_ticket","_hideAxisPointer","_resetLastHover","_showItemTooltipContent","subTooltipModel","defaultHtml","asyncTicket","_showTooltipContent","axisPointerModel","axisPointerType","_showAxisPointer","allNotShow","seriesCoordSysSameAxis","allCoordSys","contentNotChange","lastHover","valIndex","_showSinglePointer","_showPolarPointer","_showCartesianPointer","_dispatchAndShowSeriesTooltipContent","moveGridLine","otherExtent","targetShape","pointerEl","_getPointerElement","moveAnimation","moveGridShadow","bandWidth","_updateCrossText","otherAxis","movePolarLine","mouseCoord","pointToCoord","coordToPoint","movePolarShadow","crossStyleModel","pointerModel","initShape","axisPointers","pointerType","styleModel","isShadow","elementType","seriesList","rootTooltipModel","baseDimIndex","sampleSeriesIndex","payloadBatch","firstDataIndex","firstLine","seriesTooltipModel","html","ticket","cbTicket","fixExtentWithBands","nTick","normalizedExtent","Axis","containData","alignWithLabel","bands","getBands","coords","getLabelsCoords","_isBlank","nameRotate","nameTruncate","nameTextStyle","nameGap","inside","splitLine","splitArea","timeAxis","logAxis","logBase","rangeStart","rangeEnd","setRange","axisDefault","AXIS_TYPES","BaseAxisModelClass","axisTypeDefaulter","extraDefaultOption","axisLabelInterval","coordExtent","_labelInterval","dimAxisMapper","_axes","Cartesian","_dimList","getAxes","_dataCoordConvert","input","dimList","output","axisX","axisY","dataToPoints","containLabel","defaultKeyGetter","oldArr","newArr","oldKeyGetter","newKeyGetter","_old","_new","_oldKeyGetter","_newKeyGetter","initIndexMap","keyArr","keyGetter","existence","_add","_update","_remove","oldDataIndexMap","newDataIndexMap","oldDataKeyArr","newDataKeyArr","defaultNames","extraPrefix","retrieveValue","guessOrdinal","eachSeriesByType","maskColor","mask","labelRect","mergeTheme","themeItem","initBase","baseOption","OPTION_INNER_KEY","_seriesIndices","globalDefault","getComponentsByTypes","componentsMap","existComponent","createSeriesIndices","seriesModels","filterBySubType","components","cpt","assertSeriesInitialized","_optionManager","mountOption","timelineOption","getTimelineOption","mediaOptions","getMediaOption","mediaOption","visitComponent","newCptOptionList","resultItem","ComponentModelClass","newCptTypes","componentOption","getComponent","cpts","isIdArray","isNameArray","queryCond","q","indexAttr","idAttr","nameAttr","queryResult","oneSeries","getSeriesByType","rawSeriesIndex","eachRawSeriesByType","isSeriesFiltered","filteredSeries","componentTypes","_timelineOptions","_mediaList","_mediaDefault","_currentMediaIndices","_optionBackup","_newBaseOption","parseRawOption","rawOption","isNew","mediaDefault","timelineOptions","mediaList","timelineOpt","timeline","media","singleMedia","preProcess","applyMediaQuery","ecWidth","ecHeight","realMap","aspectratio","applicatable","matched","QUERY_REG","operator","realAttr","real","expect","indicesEquals","indices1","indices2","oldOption","newCptOpt","oldCptOpt","oldOptionBackup","newParsedOption","isRecreate","optionBackup","timelineModel","getCurrentIndex","platform","animationDuration","animationThreshold","progressiveThreshold","getBorderLineDash","lineType","getLineDash","dotSize","dashSize","gTextStyleModel","compatLayoutProperties","LAYOUT_PROPERTIES","compatStyle","COMPATITABLE_COMPONENTS","COMPATITABLE_SERIES","seriesOpt","clockWise","pointerColor","dataRange","visualMap","componentName","compatItemStyle","itemStyleOpt","POSSIBLE_STYLES","normalItemStyleOpt","emphasisItemStyleOpt","markPoint","markLine","mpData","mlData","samplers","average","nearest","indexSampler","sampler","fixRoundingError","originalVal","intervalScaleProto","mathLog","LogScale","_originalScale","originalScale","powVal","__fixMin","__fixMax","approxTickNum","err","rank","bisect","TimeScale","stepLvl","_stepLvl","ONE_HOUR","approxInterval","scaleLevelsLen","scaleLevels","yearSpan","ONE_SECOND","ONE_MINUTE","ONE_DAY","encodeColor","colorAccessPath","defaultSymbolType","legendSymbol","itemSymbolType","itemSymbolSize","_zrender","_export","makeEventPacket","eveType","targetInfo","topTarget","gestureEvent","pinchX","pinchY","pinchScale","EmptyProxy","isHover","SILENT","Draggable","handlerNames","proxy","painterRoot","_hovered","_lastTouchMoment","mousemove","lastHovered","lastHoveredTarget","hovered","hoveredTarget","setCursor","dispatchToElement","mouseout","innerDom","toElement","relatedTarget","parentNode","eventArgs","eventPacket","eachOtherLayer","layer","exclude","hoverCheckResult","_downEl","_downPoint","_upEl","returnFalse","createDom","newDom","newDomStyle","Layer","onselectstart","domBack","ctxBack","motionBlur","lastFrameAlpha","initContext","__currentValues","createBackBuffer","clearAll","haveMotionBLur","clearRect","clearColorGradientOrPattern","__canvasGradient","fillRect","parseInt10","isLayerValid","__builtin__","preProcessLayer","__unusedCount","postProcessLayer","isDisplayableCulled","viewRect","isClipPathChanged","clipPaths","prevClipPaths","doClip","createRoot","domRoot","singleCanvas","_opts","_singleCanvas","rootStyle","zlevelList","_zlevelList","layers","_layers","_layerConfig","_width","_height","mainLayer","_domRoot","_getSize","_progressiveLayers","_hoverlayer","_hoverElements","getType","getViewportRootOffset","viewportRoot","offsetLeft","offsetTop","paintAll","_paintList","_startProgessive","__hoverMir","elMirror","__from","hoverElements","hoverLayer","displayableSortFunc","getLayer","originalEl","invTransform","_doPaintEl","_progressiveToken","_doPaintList","_furtherProgressive","_progress","_clearProgressive","_updateLayerStatus","eachBuiltinLayer","flushProgressiveLayer","currentLayer","currentZLevel","currentProgressiveLayer","layerProgress","progressiveLayerIdx","elZLevel","elFrame","__frame","MAX_PROGRESSIVE_LAYER_NUMBER","renderScope","__progress","__maxProgress","__nextIdxNotProg","forcePaint","prevClipLayer","prevElClipPaths","insertLayer","layersMap","prevLayer","virtual","prevDom","eachLayer","getLayers","progressiveLayers","elCountsLastFrame","progressiveElCountsLastFrame","lastProgressiveKey","progressiveLayerCount","frameCount","elProgress","_clearLayer","layerConfig","delLayer","clearLayer","findAndDrawOtherLayer","smaller","larger","intermediateLayer","renderToCanvas","imageLayer","displayList","whIdx","wh","cwh","plt","prb","shadowBlurSize","leftMargin","rightMargin","topMargin","bottomMargin","pathTransform","ImageShape","imgShape","shapeCompareFunc","_roots","_displayList","_displayListLen","includeIgnore","updateDisplayList","_updateAndAddDisplayable","userSetClipPath","currentClipPath","parentClipPath","_renderList","_event","_clips","_running","_time","_pausedTime","_pauseStart","clips","deferredEvents","deferredClips","_needsRemove","fire","_startLoop","_life","_initialized","onrestart","easingFuncs","globalTime","deltaTime","_startTime","easingFunc","schedule","restart","remainder","arg","linear","quadraticIn","quadraticOut","quadraticInOut","cubicIn","cubicOut","cubicInOut","quarticIn","quarticOut","quarticInOut","quinticIn","quinticOut","quinticInOut","sinusoidalIn","sinusoidalOut","sinusoidalInOut","exponentialIn","exponentialOut","exponentialInOut","circularIn","circularOut","circularInOut","elasticIn","elasticOut","elasticInOut","backIn","backOut","backInOut","bounceIn","bounceOut","bounceInOut","_l","atan2","_a","_b","isAroundEqual","swapExtrema","windingCubic","nRoots","y0_","y1_","nExtrema","unit","windingQuadratic","y_","x_","windingArc","containPath","isStroke","windingLine","cubic","quadratic","pointPair","GestureMgr","_track","recognize","_doTrack","_recognize","touches","trackItem","recognizers","gestureInfo","pinch","track","pinchEnd","pinchPre","pinchCenter","Diff","buildValues","componentPos","componentLen","oldPos","added","clonePath","arrayDiff","equals","newLen","oldLen","editLength","maxEditLength","bestPath","extractCommon","diagonalPath","basePath","addPath","removePath","canAdd","canRemove","pushComponent","last","commonCount","tokenize","fromPoints","xDim","yDim","tx","ty","extremity","eventNameFix","processGesture","gestureMgr","_gestureMgr","setTouchTimer","instance","_touching","_touchTimer","isPointerFromTouch","initDomHandler","makeMouseHandler","touchHandlerNames","_handlers","domHandlers","pointerHandlerNames","mouseHandlerNames","HandlerDomProxy","mountHandlers","pointerEventNames","pointerdown","pointerup","pointermove","pointerout","nm","touchstart","mousedown","touchmove","touchend","mouseup","click","handlerDomProxyProto","_Group","_Path","_Image","_CompoundPath","_Text","_Arc","_BezierCurve","_Circle","_Droplet","Droplet","_Ellipse","Ellipse","_Heart","Heart","_Isogon","Isogon","_Line","_Polygon","_Polyline","_Rect","_Ring","_Rose","Rose","_Sector","_Star","Star","_Trochoid","Trochoid","_LinearGradient","_RadialGradient","_Pattern","_BoundingRect","orignalBrush","modified","shadowTemp","isLoop","constraint","prevPoint","nextPoint","cps","v2Min","v2Max","v2Clone","v2Sub","v2Scale","d0","v2Distance","v2Add","interpolate","segs","w2","w3","ox","oy","dStep","deg","xStart","yStart","ri","location","num","animatingShape","pathSplitted","_animateToShallow","objShallow","propertyCount","_dragStart","_drag","_dragEnd","draggingTarget","_draggingTarget","dropTarget","lastDropTarget","_dropTarget","mIdentity","transformableProto","parentHasTransform","tmpTransform","checkParentAvailable","insertAfter","prevSibling","prepend","createMethodNotSupport","zrLog","GradientManager","ClippathManager","SVGPainter","gradientManager","clipPathManager","viewport","_viewport","_visibleList","visibleList","listLen","newVisibleList","svgProxy","prevSvgElement","svgElement","textSvgElement","addWithoutUpdate","_getDefs","viewportStyle","pathToSvg","outerHTML","unescape","updateDom","parentEl","clipPathEl","cloneNode","_textDom","nPoint","mathAtan2","VMLPainter","vmlCore","vmlViewport","vmlRoot","_vmlRoot","_vmlViewport","onRemove","onAdd","_firstPaint","__alreadyNotVisible","brushVML","_getWidth","_getHeight","vmlViewportStyle","paddingLeft","paddingRight","paddingTop","paddingBottom","Z2","initRootElStyle","coordsize","coordorigin","encodeHtmlAttribute","rgb2Str","append","getZIndex","setColorAndOpacity","getColorAndAlpha","updateFillNode","zrEl","gradientType","focus","expansion","cs1","cs2","colorAndAlphaList","colorAndAlpha","color1","color2","opacity1","opacity2","focusposition","updateStrokeNode","dashstyle","updateFillAndStroke","vmlEl","isFill","_vmlEl","needTransform","strokeEl","weight","zIndex","removeRectText","appendRectText","isImage","ow","oh","_imageSrc","_imageWidth","_imageHeight","imageRuntimeStyle","runtimeStyle","oldRuntimeWidth","oldRuntimeHeight","sw","sh","hasCrop","vmlElStyle","hasRotation","transformFilter","imageTransformPrefix","imageEl","_imageEl","cropEl","_cropEl","imageELStyle","tmpImage","overflow","cropElStyle","filterStr","textMeasureEl","fontStyleCache","fontStyleCacheCount","fontEl","getFontStyle","fontString","variant","fontVariant","family","body","ex","offsetWidth","fromTextEl","textPathEl","skewEl","textVmlEl","_textVmlEl","textpathok","to","textVmlElStyle","string","defineProperty","default","className","mounted","initChart","getElementById","title","legend","icon","_lineMarker","_lineMarker2","__esModule","lineMarker","sources","mappings","file","sourcesContent","sourceRoot","locals","_vm","$createElement","_self","_c","class","attrs","staticRenderFns","staticClass","staticStyle"],"mappings":"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0X,S0K31mCZ,G1K41mCYvf,M0Kz1mCZ,Y1K41mCQuzD,MACEt6D,K0K31mCV,K1K41mCUG,M0K31mCV,K1K41mCUC,O0K31mCV,K1K41mCUi9E,c0K11mCV,G1K41mCQjjB,QACExxE,K0K31mCV,W1K41mCU6jD,a0K31mCV,E1K41mCUy8B,UACE5J,WACEv4D,M0Kz1mCd,Y1K41mCU7f,MAAO,QAAS,QAAS,QAAS,QAAS,QAAS,QAAS,QAAS,QAAS,QAAS,QAAS,Q0K11mC3G,W1K41mCQmzE,QACEzxE,K0K31mCV,Q1K41mCU5E,K0K31mCV,Q1K41mCUqlF,UACE5f,M0K11mCZ,G1K41mCUyf,UACE5J,WACEv4D,M0Kz1mCd,Y1K41mCU+iE,WACE70C,O0K31mCZ,G1K41mCYrmB,WACE0X,S0Kz1mCd,K1K41mCUm1D,WACEnc,WACEv4D,M0Kx1mCd,c1K41mCQ3M,SACEpW,K0K31mCV,K1K41mCU4E,K0K31mCV,O1K41mCUwoE,Q0K31mCV,E1K41mCUoO,O0K31mCV,S1K41mCUjjB,W0K31mCV,E1K41mCUkjB,Y0K31mCV,E1K41mCUH,WACEnmD,QACEnpB,M0Kz1mCd,I1K41mCUy9E,WACEt0D,QACEpS,MAAO,GAAI5C,GAAQ1G,QAAQiP,eAAe,EAAG,EAAG,EAAG,IACjDwtB,O0K31mChB,E1K41mCgBnzB,M0K31mChB,4B1K61mCgBmzB,O0K31mChB,G1K41mCgBnzB,M0K31mChB,2BACA,G1K41mCc46B,Y0K31mCd,qB1K41mCcD,W0Kz1mCd,K1K41mCUyc,WACEhlC,QACEpS,M0K31mCd,kB1K41mCcynE,Y0K31mCd,uB1K41mCcC,Y0Kx1mCd,K1K41mCUvnF,MAAO,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,I0K31mCnE,O1K61mCUlD,K0K31mCV,K1K41mCU4E,K0K31mCV,O1K41mCUwoE,Q0K31mCV,E1K41mCUoO,O0K31mCV,S1K41mCUjjB,W0K31mCV,E1K41mCUkjB,Y0K31mCV,E1K41mCUH,WACEnmD,QACEnpB,M0Kz1mCd,I1K41mCUy9E,WACEt0D,QACEpS,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","file":"js/1.3d15fcc49d75e7b0dab9.js","sourcesContent":["webpackJsonp([1],Array(448).concat([\n/* 448 */\n/***/ (function(module, exports, __webpack_require__) {\n\nfunction injectStyle (ssrContext) {\n  __webpack_require__(702)\n}\nvar Component = __webpack_require__(0)(\n  /* script */\n  __webpack_require__(642),\n  /* template */\n  __webpack_require__(725),\n  /* styles */\n  injectStyle,\n  /* scopeId */\n  \"data-v-a1ad0344\",\n  /* moduleIdentifier (server only) */\n  null\n)\n\nmodule.exports = Component.exports\n\n\n/***/ }),\n/* 449 */,\n/* 450 */,\n/* 451 */,\n/* 452 */,\n/* 453 */,\n/* 454 */,\n/* 455 */,\n/* 456 */,\n/* 457 */,\n/* 458 */,\n/* 459 */,\n/* 460 */\n/***/ (function(module, exports) {\n\n/**\n * @module zrender/core/util\n */\n// 用于处理merge时无法遍历Date等对象的问题\nvar BUILTIN_OBJECT = {\n  '[object Function]': 1,\n  '[object RegExp]': 1,\n  '[object Date]': 1,\n  '[object Error]': 1,\n  '[object CanvasGradient]': 1,\n  '[object CanvasPattern]': 1,\n  // For node-canvas\n  '[object Image]': 1,\n  '[object Canvas]': 1\n};\nvar TYPED_ARRAY = {\n  '[object Int8Array]': 1,\n  '[object Uint8Array]': 1,\n  '[object Uint8ClampedArray]': 1,\n  '[object Int16Array]': 1,\n  '[object Uint16Array]': 1,\n  '[object Int32Array]': 1,\n  '[object Uint32Array]': 1,\n  '[object Float32Array]': 1,\n  '[object Float64Array]': 1\n};\nvar objToString = Object.prototype.toString;\nvar arrayProto = Array.prototype;\nvar nativeForEach = arrayProto.forEach;\nvar nativeFilter = arrayProto.filter;\nvar nativeSlice = arrayProto.slice;\nvar nativeMap = arrayProto.map;\nvar nativeReduce = arrayProto.reduce; // Avoid assign to an exported variable, for transforming to cjs.\n\nvar methods = {};\n\nfunction $override(name, fn) {\n  methods[name] = fn;\n}\n/**\n * Those data types can be cloned:\n *     Plain object, Array, TypedArray, number, string, null, undefined.\n * Those data types will be assgined using the orginal data:\n *     BUILTIN_OBJECT\n * Instance of user defined class will be cloned to a plain object, without\n * properties in prototype.\n * Other data types is not supported (not sure what will happen).\n *\n * Caution: do not support clone Date, for performance consideration.\n * (There might be a large number of date in `series.data`).\n * So date should not be modified in and out of echarts.\n *\n * @param {*} source\n * @return {*} new\n */\n\n\nfunction clone(source) {\n  if (source == null || typeof source != 'object') {\n    return source;\n  }\n\n  var result = source;\n  var typeStr = objToString.call(source);\n\n  if (typeStr === '[object Array]') {\n    result = [];\n\n    for (var i = 0, len = source.length; i < len; i++) {\n      result[i] = clone(source[i]);\n    }\n  } else if (TYPED_ARRAY[typeStr]) {\n    var Ctor = source.constructor;\n\n    if (source.constructor.from) {\n      result = Ctor.from(source);\n    } else {\n      result = new Ctor(source.length);\n\n      for (var i = 0, len = source.length; i < len; i++) {\n        result[i] = clone(source[i]);\n      }\n    }\n  } else if (!BUILTIN_OBJECT[typeStr] && !isPrimitive(source) && !isDom(source)) {\n    result = {};\n\n    for (var key in source) {\n      if (source.hasOwnProperty(key)) {\n        result[key] = clone(source[key]);\n      }\n    }\n  }\n\n  return result;\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {*} target\n * @param {*} source\n * @param {boolean} [overwrite=false]\n */\n\n\nfunction merge(target, source, overwrite) {\n  // We should escapse that source is string\n  // and enter for ... in ...\n  if (!isObject(source) || !isObject(target)) {\n    return overwrite ? clone(source) : target;\n  }\n\n  for (var key in source) {\n    if (source.hasOwnProperty(key)) {\n      var targetProp = target[key];\n      var sourceProp = source[key];\n\n      if (isObject(sourceProp) && isObject(targetProp) && !isArray(sourceProp) && !isArray(targetProp) && !isDom(sourceProp) && !isDom(targetProp) && !isBuiltInObject(sourceProp) && !isBuiltInObject(targetProp) && !isPrimitive(sourceProp) && !isPrimitive(targetProp)) {\n        // 如果需要递归覆盖，就递归调用merge\n        merge(targetProp, sourceProp, overwrite);\n      } else if (overwrite || !(key in target)) {\n        // 否则只处理overwrite为true，或者在目标对象中没有此属性的情况\n        // NOTE，在 target[key] 不存在的时候也是直接覆盖\n        target[key] = clone(source[key], true);\n      }\n    }\n  }\n\n  return target;\n}\n/**\n * @param {Array} targetAndSources The first item is target, and the rests are source.\n * @param {boolean} [overwrite=false]\n * @return {*} target\n */\n\n\nfunction mergeAll(targetAndSources, overwrite) {\n  var result = targetAndSources[0];\n\n  for (var i = 1, len = targetAndSources.length; i < len; i++) {\n    result = merge(result, targetAndSources[i], overwrite);\n  }\n\n  return result;\n}\n/**\n * @param {*} target\n * @param {*} source\n * @memberOf module:zrender/core/util\n */\n\n\nfunction extend(target, source) {\n  for (var key in source) {\n    if (source.hasOwnProperty(key)) {\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n/**\n * @param {*} target\n * @param {*} source\n * @param {boolean} [overlay=false]\n * @memberOf module:zrender/core/util\n */\n\n\nfunction defaults(target, source, overlay) {\n  for (var key in source) {\n    if (source.hasOwnProperty(key) && (overlay ? source[key] != null : target[key] == null)) {\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nvar createCanvas = function () {\n  return methods.createCanvas();\n};\n\nmethods.createCanvas = function () {\n  return document.createElement('canvas');\n}; // FIXME\n\n\nvar _ctx;\n\nfunction getContext() {\n  if (!_ctx) {\n    // Use util.createCanvas instead of createCanvas\n    // because createCanvas may be overwritten in different environment\n    _ctx = createCanvas().getContext('2d');\n  }\n\n  return _ctx;\n}\n/**\n * 查询数组中元素的index\n * @memberOf module:zrender/core/util\n */\n\n\nfunction indexOf(array, value) {\n  if (array) {\n    if (array.indexOf) {\n      return array.indexOf(value);\n    }\n\n    for (var i = 0, len = array.length; i < len; i++) {\n      if (array[i] === value) {\n        return i;\n      }\n    }\n  }\n\n  return -1;\n}\n/**\n * 构造类继承关系\n *\n * @memberOf module:zrender/core/util\n * @param {Function} clazz 源类\n * @param {Function} baseClazz 基类\n */\n\n\nfunction inherits(clazz, baseClazz) {\n  var clazzPrototype = clazz.prototype;\n\n  function F() {}\n\n  F.prototype = baseClazz.prototype;\n  clazz.prototype = new F();\n\n  for (var prop in clazzPrototype) {\n    clazz.prototype[prop] = clazzPrototype[prop];\n  }\n\n  clazz.prototype.constructor = clazz;\n  clazz.superClass = baseClazz;\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {Object|Function} target\n * @param {Object|Function} sorce\n * @param {boolean} overlay\n */\n\n\nfunction mixin(target, source, overlay) {\n  target = 'prototype' in target ? target.prototype : target;\n  source = 'prototype' in source ? source.prototype : source;\n  defaults(target, source, overlay);\n}\n/**\n * Consider typed array.\n * @param {Array|TypedArray} data\n */\n\n\nfunction isArrayLike(data) {\n  if (!data) {\n    return;\n  }\n\n  if (typeof data == 'string') {\n    return false;\n  }\n\n  return typeof data.length == 'number';\n}\n/**\n * 数组或对象遍历\n * @memberOf module:zrender/core/util\n * @param {Object|Array} obj\n * @param {Function} cb\n * @param {*} [context]\n */\n\n\nfunction each(obj, cb, context) {\n  if (!(obj && cb)) {\n    return;\n  }\n\n  if (obj.forEach && obj.forEach === nativeForEach) {\n    obj.forEach(cb, context);\n  } else if (obj.length === +obj.length) {\n    for (var i = 0, len = obj.length; i < len; i++) {\n      cb.call(context, obj[i], i, obj);\n    }\n  } else {\n    for (var key in obj) {\n      if (obj.hasOwnProperty(key)) {\n        cb.call(context, obj[key], key, obj);\n      }\n    }\n  }\n}\n/**\n * 数组映射\n * @memberOf module:zrender/core/util\n * @param {Array} obj\n * @param {Function} cb\n * @param {*} [context]\n * @return {Array}\n */\n\n\nfunction map(obj, cb, context) {\n  if (!(obj && cb)) {\n    return;\n  }\n\n  if (obj.map && obj.map === nativeMap) {\n    return obj.map(cb, context);\n  } else {\n    var result = [];\n\n    for (var i = 0, len = obj.length; i < len; i++) {\n      result.push(cb.call(context, obj[i], i, obj));\n    }\n\n    return result;\n  }\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {Array} obj\n * @param {Function} cb\n * @param {Object} [memo]\n * @param {*} [context]\n * @return {Array}\n */\n\n\nfunction reduce(obj, cb, memo, context) {\n  if (!(obj && cb)) {\n    return;\n  }\n\n  if (obj.reduce && obj.reduce === nativeReduce) {\n    return obj.reduce(cb, memo, context);\n  } else {\n    for (var i = 0, len = obj.length; i < len; i++) {\n      memo = cb.call(context, memo, obj[i], i, obj);\n    }\n\n    return memo;\n  }\n}\n/**\n * 数组过滤\n * @memberOf module:zrender/core/util\n * @param {Array} obj\n * @param {Function} cb\n * @param {*} [context]\n * @return {Array}\n */\n\n\nfunction filter(obj, cb, context) {\n  if (!(obj && cb)) {\n    return;\n  }\n\n  if (obj.filter && obj.filter === nativeFilter) {\n    return obj.filter(cb, context);\n  } else {\n    var result = [];\n\n    for (var i = 0, len = obj.length; i < len; i++) {\n      if (cb.call(context, obj[i], i, obj)) {\n        result.push(obj[i]);\n      }\n    }\n\n    return result;\n  }\n}\n/**\n * 数组项查找\n * @memberOf module:zrender/core/util\n * @param {Array} obj\n * @param {Function} cb\n * @param {*} [context]\n * @return {*}\n */\n\n\nfunction find(obj, cb, context) {\n  if (!(obj && cb)) {\n    return;\n  }\n\n  for (var i = 0, len = obj.length; i < len; i++) {\n    if (cb.call(context, obj[i], i, obj)) {\n      return obj[i];\n    }\n  }\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {Function} func\n * @param {*} context\n * @return {Function}\n */\n\n\nfunction bind(func, context) {\n  var args = nativeSlice.call(arguments, 2);\n  return function () {\n    return func.apply(context, args.concat(nativeSlice.call(arguments)));\n  };\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {Function} func\n * @return {Function}\n */\n\n\nfunction curry(func) {\n  var args = nativeSlice.call(arguments, 1);\n  return function () {\n    return func.apply(this, args.concat(nativeSlice.call(arguments)));\n  };\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {*} value\n * @return {boolean}\n */\n\n\nfunction isArray(value) {\n  return objToString.call(value) === '[object Array]';\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {*} value\n * @return {boolean}\n */\n\n\nfunction isFunction(value) {\n  return typeof value === 'function';\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {*} value\n * @return {boolean}\n */\n\n\nfunction isString(value) {\n  return objToString.call(value) === '[object String]';\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {*} value\n * @return {boolean}\n */\n\n\nfunction isObject(value) {\n  // Avoid a V8 JIT bug in Chrome 19-20.\n  // See https://code.google.com/p/v8/issues/detail?id=2291 for more details.\n  var type = typeof value;\n  return type === 'function' || !!value && type == 'object';\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {*} value\n * @return {boolean}\n */\n\n\nfunction isBuiltInObject(value) {\n  return !!BUILTIN_OBJECT[objToString.call(value)];\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {*} value\n * @return {boolean}\n */\n\n\nfunction isDom(value) {\n  return typeof value === 'object' && typeof value.nodeType === 'number' && typeof value.ownerDocument === 'object';\n}\n/**\n * Whether is exactly NaN. Notice isNaN('a') returns true.\n * @param {*} value\n * @return {boolean}\n */\n\n\nfunction eqNaN(value) {\n  return value !== value;\n}\n/**\n * If value1 is not null, then return value1, otherwise judget rest of values.\n * Low performance.\n * @memberOf module:zrender/core/util\n * @return {*} Final value\n */\n\n\nfunction retrieve(values) {\n  for (var i = 0, len = arguments.length; i < len; i++) {\n    if (arguments[i] != null) {\n      return arguments[i];\n    }\n  }\n}\n\nfunction retrieve2(value0, value1) {\n  return value0 != null ? value0 : value1;\n}\n\nfunction retrieve3(value0, value1, value2) {\n  return value0 != null ? value0 : value1 != null ? value1 : value2;\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {Array} arr\n * @param {number} startIndex\n * @param {number} endIndex\n * @return {Array}\n */\n\n\nfunction slice() {\n  return Function.call.apply(nativeSlice, arguments);\n}\n/**\n * Normalize css liked array configuration\n * e.g.\n *  3 => [3, 3, 3, 3]\n *  [4, 2] => [4, 2, 4, 2]\n *  [4, 3, 2] => [4, 3, 2, 3]\n * @param {number|Array.<number>} val\n * @return {Array.<number>}\n */\n\n\nfunction normalizeCssArray(val) {\n  if (typeof val === 'number') {\n    return [val, val, val, val];\n  }\n\n  var len = val.length;\n\n  if (len === 2) {\n    // vertical | horizontal\n    return [val[0], val[1], val[0], val[1]];\n  } else if (len === 3) {\n    // top | horizontal | bottom\n    return [val[0], val[1], val[2], val[1]];\n  }\n\n  return val;\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {boolean} condition\n * @param {string} message\n */\n\n\nfunction assert(condition, message) {\n  if (!condition) {\n    throw new Error(message);\n  }\n}\n\nvar primitiveKey = '__ec_primitive__';\n/**\n * Set an object as primitive to be ignored traversing children in clone or merge\n */\n\nfunction setAsPrimitive(obj) {\n  obj[primitiveKey] = true;\n}\n\nfunction isPrimitive(obj) {\n  return obj[primitiveKey];\n}\n/**\n * @constructor\n * @param {Object} obj Only apply `ownProperty`.\n */\n\n\nfunction HashMap(obj) {\n  obj && each(obj, function (value, key) {\n    this.set(key, value);\n  }, this);\n} // Add prefix to avoid conflict with Object.prototype.\n\n\nvar HASH_MAP_PREFIX = '_ec_';\nvar HASH_MAP_PREFIX_LENGTH = 4;\nHashMap.prototype = {\n  constructor: HashMap,\n  // Do not provide `has` method to avoid defining what is `has`.\n  // (We usually treat `null` and `undefined` as the same, different\n  // from ES6 Map).\n  get: function (key) {\n    return this[HASH_MAP_PREFIX + key];\n  },\n  set: function (key, value) {\n    this[HASH_MAP_PREFIX + key] = value; // Comparing with invocation chaining, `return value` is more commonly\n    // used in this case: `var someVal = map.set('a', genVal());`\n\n    return value;\n  },\n  // Although util.each can be performed on this hashMap directly, user\n  // should not use the exposed keys, who are prefixed.\n  each: function (cb, context) {\n    context !== void 0 && (cb = bind(cb, context));\n\n    for (var prefixedKey in this) {\n      this.hasOwnProperty(prefixedKey) && cb(this[prefixedKey], prefixedKey.slice(HASH_MAP_PREFIX_LENGTH));\n    }\n  },\n  // Do not use this method if performance sensitive.\n  removeKey: function (key) {\n    delete this[HASH_MAP_PREFIX + key];\n  }\n};\n\nfunction createHashMap(obj) {\n  return new HashMap(obj);\n}\n\nfunction noop() {}\n\nexports.$override = $override;\nexports.clone = clone;\nexports.merge = merge;\nexports.mergeAll = mergeAll;\nexports.extend = extend;\nexports.defaults = defaults;\nexports.createCanvas = createCanvas;\nexports.getContext = getContext;\nexports.indexOf = indexOf;\nexports.inherits = inherits;\nexports.mixin = mixin;\nexports.isArrayLike = isArrayLike;\nexports.each = each;\nexports.map = map;\nexports.reduce = reduce;\nexports.filter = filter;\nexports.find = find;\nexports.bind = bind;\nexports.curry = curry;\nexports.isArray = isArray;\nexports.isFunction = isFunction;\nexports.isString = isString;\nexports.isObject = isObject;\nexports.isBuiltInObject = isBuiltInObject;\nexports.isDom = isDom;\nexports.eqNaN = eqNaN;\nexports.retrieve = retrieve;\nexports.retrieve2 = retrieve2;\nexports.retrieve3 = retrieve3;\nexports.slice = slice;\nexports.normalizeCssArray = normalizeCssArray;\nexports.assert = assert;\nexports.setAsPrimitive = setAsPrimitive;\nexports.isPrimitive = isPrimitive;\nexports.createHashMap = createHashMap;\nexports.noop = noop;\n\n/***/ }),\n/* 461 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Displayable = __webpack_require__(489);\n\nvar zrUtil = __webpack_require__(460);\n\nvar PathProxy = __webpack_require__(476);\n\nvar pathContain = __webpack_require__(604);\n\nvar Pattern = __webpack_require__(498);\n\nvar getCanvasPattern = Pattern.prototype.getCanvasPattern;\nvar abs = Math.abs;\nvar pathProxyForDraw = new PathProxy(true);\n/**\n * @alias module:zrender/graphic/Path\n * @extends module:zrender/graphic/Displayable\n * @constructor\n * @param {Object} opts\n */\n\nfunction Path(opts) {\n  Displayable.call(this, opts);\n  /**\n   * @type {module:zrender/core/PathProxy}\n   * @readOnly\n   */\n\n  this.path = null;\n}\n\nPath.prototype = {\n  constructor: Path,\n  type: 'path',\n  __dirtyPath: true,\n  strokeContainThreshold: 5,\n  brush: function (ctx, prevEl) {\n    var style = this.style;\n    var path = this.path || pathProxyForDraw;\n    var hasStroke = style.hasStroke();\n    var hasFill = style.hasFill();\n    var fill = style.fill;\n    var stroke = style.stroke;\n    var hasFillGradient = hasFill && !!fill.colorStops;\n    var hasStrokeGradient = hasStroke && !!stroke.colorStops;\n    var hasFillPattern = hasFill && !!fill.image;\n    var hasStrokePattern = hasStroke && !!stroke.image;\n    style.bind(ctx, this, prevEl);\n    this.setTransform(ctx);\n\n    if (this.__dirty) {\n      var rect; // Update gradient because bounding rect may changed\n\n      if (hasFillGradient) {\n        rect = rect || this.getBoundingRect();\n        this._fillGradient = style.getGradient(ctx, fill, rect);\n      }\n\n      if (hasStrokeGradient) {\n        rect = rect || this.getBoundingRect();\n        this._strokeGradient = style.getGradient(ctx, stroke, rect);\n      }\n    } // Use the gradient or pattern\n\n\n    if (hasFillGradient) {\n      // PENDING If may have affect the state\n      ctx.fillStyle = this._fillGradient;\n    } else if (hasFillPattern) {\n      ctx.fillStyle = getCanvasPattern.call(fill, ctx);\n    }\n\n    if (hasStrokeGradient) {\n      ctx.strokeStyle = this._strokeGradient;\n    } else if (hasStrokePattern) {\n      ctx.strokeStyle = getCanvasPattern.call(stroke, ctx);\n    }\n\n    var lineDash = style.lineDash;\n    var lineDashOffset = style.lineDashOffset;\n    var ctxLineDash = !!ctx.setLineDash; // Update path sx, sy\n\n    var scale = this.getGlobalScale();\n    path.setScale(scale[0], scale[1]); // Proxy context\n    // Rebuild path in following 2 cases\n    // 1. Path is dirty\n    // 2. Path needs javascript implemented lineDash stroking.\n    //    In this case, lineDash information will not be saved in PathProxy\n\n    if (this.__dirtyPath || lineDash && !ctxLineDash && hasStroke) {\n      path.beginPath(ctx); // Setting line dash before build path\n\n      if (lineDash && !ctxLineDash) {\n        path.setLineDash(lineDash);\n        path.setLineDashOffset(lineDashOffset);\n      }\n\n      this.buildPath(path, this.shape, false); // Clear path dirty flag\n\n      if (this.path) {\n        this.__dirtyPath = false;\n      }\n    } else {\n      // Replay path building\n      ctx.beginPath();\n      this.path.rebuildPath(ctx);\n    }\n\n    hasFill && path.fill(ctx);\n\n    if (lineDash && ctxLineDash) {\n      ctx.setLineDash(lineDash);\n      ctx.lineDashOffset = lineDashOffset;\n    }\n\n    hasStroke && path.stroke(ctx);\n\n    if (lineDash && ctxLineDash) {\n      // PENDING\n      // Remove lineDash\n      ctx.setLineDash([]);\n    }\n\n    this.restoreTransform(ctx); // Draw rect text\n\n    if (style.text != null) {\n      this.drawRectText(ctx, this.getBoundingRect());\n    }\n  },\n  // When bundling path, some shape may decide if use moveTo to begin a new subpath or closePath\n  // Like in circle\n  buildPath: function (ctx, shapeCfg, inBundle) {},\n  createPathProxy: function () {\n    this.path = new PathProxy();\n  },\n  getBoundingRect: function () {\n    var rect = this._rect;\n    var style = this.style;\n    var needsUpdateRect = !rect;\n\n    if (needsUpdateRect) {\n      var path = this.path;\n\n      if (!path) {\n        // Create path on demand.\n        path = this.path = new PathProxy();\n      }\n\n      if (this.__dirtyPath) {\n        path.beginPath();\n        this.buildPath(path, this.shape, false);\n      }\n\n      rect = path.getBoundingRect();\n    }\n\n    this._rect = rect;\n\n    if (style.hasStroke()) {\n      // Needs update rect with stroke lineWidth when\n      // 1. Element changes scale or lineWidth\n      // 2. Shape is changed\n      var rectWithStroke = this._rectWithStroke || (this._rectWithStroke = rect.clone());\n\n      if (this.__dirty || needsUpdateRect) {\n        rectWithStroke.copy(rect); // FIXME Must after updateTransform\n\n        var w = style.lineWidth; // PENDING, Min line width is needed when line is horizontal or vertical\n\n        var lineScale = style.strokeNoScale ? this.getLineScale() : 1; // Only add extra hover lineWidth when there are no fill\n\n        if (!style.hasFill()) {\n          w = Math.max(w, this.strokeContainThreshold || 4);\n        } // Consider line width\n        // Line scale can't be 0;\n\n\n        if (lineScale > 1e-10) {\n          rectWithStroke.width += w / lineScale;\n          rectWithStroke.height += w / lineScale;\n          rectWithStroke.x -= w / lineScale / 2;\n          rectWithStroke.y -= w / lineScale / 2;\n        }\n      } // Return rect with stroke\n\n\n      return rectWithStroke;\n    }\n\n    return rect;\n  },\n  contain: function (x, y) {\n    var localPos = this.transformCoordToLocal(x, y);\n    var rect = this.getBoundingRect();\n    var style = this.style;\n    x = localPos[0];\n    y = localPos[1];\n\n    if (rect.contain(x, y)) {\n      var pathData = this.path.data;\n\n      if (style.hasStroke()) {\n        var lineWidth = style.lineWidth;\n        var lineScale = style.strokeNoScale ? this.getLineScale() : 1; // Line scale can't be 0;\n\n        if (lineScale > 1e-10) {\n          // Only add extra hover lineWidth when there are no fill\n          if (!style.hasFill()) {\n            lineWidth = Math.max(lineWidth, this.strokeContainThreshold);\n          }\n\n          if (pathContain.containStroke(pathData, lineWidth / lineScale, x, y)) {\n            return true;\n          }\n        }\n      }\n\n      if (style.hasFill()) {\n        return pathContain.contain(pathData, x, y);\n      }\n    }\n\n    return false;\n  },\n\n  /**\n   * @param  {boolean} dirtyPath\n   */\n  dirty: function (dirtyPath) {\n    if (dirtyPath == null) {\n      dirtyPath = true;\n    } // Only mark dirty, not mark clean\n\n\n    if (dirtyPath) {\n      this.__dirtyPath = dirtyPath;\n      this._rect = null;\n    }\n\n    this.__dirty = true;\n    this.__zr && this.__zr.refresh(); // Used as a clipping path\n\n    if (this.__clipTarget) {\n      this.__clipTarget.dirty();\n    }\n  },\n\n  /**\n   * Alias for animate('shape')\n   * @param {boolean} loop\n   */\n  animateShape: function (loop) {\n    return this.animate('shape', loop);\n  },\n  // Overwrite attrKV\n  attrKV: function (key, value) {\n    // FIXME\n    if (key === 'shape') {\n      this.setShape(value);\n      this.__dirtyPath = true;\n      this._rect = null;\n    } else {\n      Displayable.prototype.attrKV.call(this, key, value);\n    }\n  },\n\n  /**\n   * @param {Object|string} key\n   * @param {*} value\n   */\n  setShape: function (key, value) {\n    var shape = this.shape; // Path from string may not have shape\n\n    if (shape) {\n      if (zrUtil.isObject(key)) {\n        for (var name in key) {\n          if (key.hasOwnProperty(name)) {\n            shape[name] = key[name];\n          }\n        }\n      } else {\n        shape[key] = value;\n      }\n\n      this.dirty(true);\n    }\n\n    return this;\n  },\n  getLineScale: function () {\n    var m = this.transform; // Get the line scale.\n    // Determinant of `m` means how much the area is enlarged by the\n    // transformation. So its square root can be used as a scale factor\n    // for width.\n\n    return m && abs(m[0] - 1) > 1e-10 && abs(m[3] - 1) > 1e-10 ? Math.sqrt(abs(m[0] * m[3] - m[2] * m[1])) : 1;\n  }\n};\n/**\n * 扩展一个 Path element, 比如星形，圆等。\n * Extend a path element\n * @param {Object} props\n * @param {string} props.type Path type\n * @param {Function} props.init Initialize\n * @param {Function} props.buildPath Overwrite buildPath method\n * @param {Object} [props.style] Extended default style config\n * @param {Object} [props.shape] Extended default shape config\n */\n\nPath.extend = function (defaults) {\n  var Sub = function (opts) {\n    Path.call(this, opts);\n\n    if (defaults.style) {\n      // Extend default style\n      this.style.extendFrom(defaults.style, false);\n    } // Extend default shape\n\n\n    var defaultShape = defaults.shape;\n\n    if (defaultShape) {\n      this.shape = this.shape || {};\n      var thisShape = this.shape;\n\n      for (var name in defaultShape) {\n        if (!thisShape.hasOwnProperty(name) && defaultShape.hasOwnProperty(name)) {\n          thisShape[name] = defaultShape[name];\n        }\n      }\n    }\n\n    defaults.init && defaults.init.call(this, opts);\n  };\n\n  zrUtil.inherits(Sub, Path); // FIXME 不能 extend position, rotation 等引用对象\n\n  for (var name in defaults) {\n    // Extending prototype values and methods\n    if (name !== 'style' && name !== 'shape') {\n      Sub.prototype[name] = defaults[name];\n    }\n  }\n\n  return Sub;\n};\n\nzrUtil.inherits(Path, Displayable);\nvar _default = Path;\nmodule.exports = _default;\n\n/***/ }),\n/* 462 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/* WEBPACK VAR INJECTION */(function(global) {// Enable DEV mode when using source code without build. which has no __DEV__ variable\n// In build process 'typeof __DEV__' will be replace with 'boolean'\n// So this code will be removed or disabled anyway after built.\nif (typeof __DEV__ === 'undefined') {\n    // In browser\n    if (typeof window !== 'undefined') {\n        window.__DEV__ = true;\n    }\n    // In node\n    else if (typeof global !== 'undefined') {\n        global.__DEV__ = true;\n    }\n}\n\n/*!\n * ECharts, a javascript interactive chart library.\n *\n * Copyright (c) 2015, Baidu Inc.\n * All rights reserved.\n *\n * LICENSE\n * https://github.com/ecomfe/echarts/blob/master/LICENSE.txt\n */\n\n/**\n * @module echarts\n */\n\n\n    var env = __webpack_require__(466);\n\n    var GlobalModel = __webpack_require__(577);\n    var ExtensionAPI = __webpack_require__(540);\n    var CoordinateSystemManager = __webpack_require__(493);\n    var OptionManager = __webpack_require__(578);\n\n    var ComponentModel = __webpack_require__(472);\n    var SeriesModel = __webpack_require__(503);\n\n    var ComponentView = __webpack_require__(539);\n    var ChartView = __webpack_require__(510);\n    var graphic = __webpack_require__(464);\n    var modelUtil = __webpack_require__(469);\n    var throttle = __webpack_require__(509);\n\n    var zrender = __webpack_require__(593);\n    var zrUtil = __webpack_require__(460);\n    var colorTool = __webpack_require__(474);\n    var Eventful = __webpack_require__(481);\n    var timsort = __webpack_require__(497);\n\n    var each = zrUtil.each;\n    var parseClassType = ComponentModel.parseClassType;\n\n    var PRIORITY_PROCESSOR_FILTER = 1000;\n    var PRIORITY_PROCESSOR_STATISTIC = 5000;\n\n\n    var PRIORITY_VISUAL_LAYOUT = 1000;\n    var PRIORITY_VISUAL_GLOBAL = 2000;\n    var PRIORITY_VISUAL_CHART = 3000;\n    var PRIORITY_VISUAL_COMPONENT = 4000;\n    // FIXME\n    // necessary?\n    var PRIORITY_VISUAL_BRUSH = 5000;\n\n    // Main process have three entries: `setOption`, `dispatchAction` and `resize`,\n    // where they must not be invoked nestedly, except the only case: invoke\n    // dispatchAction with updateMethod \"none\" in main process.\n    // This flag is used to carry out this rule.\n    // All events will be triggered out side main process (i.e. when !this[IN_MAIN_PROCESS]).\n    var IN_MAIN_PROCESS = '__flagInMainProcess';\n    var HAS_GRADIENT_OR_PATTERN_BG = '__hasGradientOrPatternBg';\n    var OPTION_UPDATED = '__optionUpdated';\n    var ACTION_REG = /^[a-zA-Z0-9_]+$/;\n\n    function createRegisterEventWithLowercaseName(method) {\n        return function (eventName, handler, context) {\n            // Event name is all lowercase\n            eventName = eventName && eventName.toLowerCase();\n            Eventful.prototype[method].call(this, eventName, handler, context);\n        };\n    }\n\n    /**\n     * @module echarts~MessageCenter\n     */\n    function MessageCenter() {\n        Eventful.call(this);\n    }\n    MessageCenter.prototype.on = createRegisterEventWithLowercaseName('on');\n    MessageCenter.prototype.off = createRegisterEventWithLowercaseName('off');\n    MessageCenter.prototype.one = createRegisterEventWithLowercaseName('one');\n    zrUtil.mixin(MessageCenter, Eventful);\n\n    /**\n     * @module echarts~ECharts\n     */\n    function ECharts (dom, theme, opts) {\n        opts = opts || {};\n\n        // Get theme by name\n        if (typeof theme === 'string') {\n            theme = themeStorage[theme];\n        }\n\n        /**\n         * @type {string}\n         */\n        this.id;\n        /**\n         * Group id\n         * @type {string}\n         */\n        this.group;\n        /**\n         * @type {HTMLDomElement}\n         * @private\n         */\n        this._dom = dom;\n        /**\n         * @type {module:zrender/ZRender}\n         * @private\n         */\n        var zr = this._zr = zrender.init(dom, {\n            renderer: opts.renderer || 'canvas',\n            devicePixelRatio: opts.devicePixelRatio,\n            width: opts.width,\n            height: opts.height\n        });\n\n        /**\n         * Expect 60 pfs.\n         * @type {Function}\n         * @private\n         */\n        this._throttledZrFlush = throttle.throttle(zrUtil.bind(zr.flush, zr), 17);\n\n        /**\n         * @type {Object}\n         * @private\n         */\n        this._theme = zrUtil.clone(theme);\n\n        /**\n         * @type {Array.<module:echarts/view/Chart>}\n         * @private\n         */\n        this._chartsViews = [];\n\n        /**\n         * @type {Object.<string, module:echarts/view/Chart>}\n         * @private\n         */\n        this._chartsMap = {};\n\n        /**\n         * @type {Array.<module:echarts/view/Component>}\n         * @private\n         */\n        this._componentsViews = [];\n\n        /**\n         * @type {Object.<string, module:echarts/view/Component>}\n         * @private\n         */\n        this._componentsMap = {};\n\n        /**\n         * @type {module:echarts/ExtensionAPI}\n         * @private\n         */\n        this._api = new ExtensionAPI(this);\n\n        /**\n         * @type {module:echarts/CoordinateSystem}\n         * @private\n         */\n        this._coordSysMgr = new CoordinateSystemManager();\n\n        Eventful.call(this);\n\n        /**\n         * @type {module:echarts~MessageCenter}\n         * @private\n         */\n        this._messageCenter = new MessageCenter();\n\n        // Init mouse events\n        this._initEvents();\n\n        // In case some people write `window.onresize = chart.resize`\n        this.resize = zrUtil.bind(this.resize, this);\n\n        // Can't dispatch action during rendering procedure\n        this._pendingActions = [];\n        // Sort on demand\n        function prioritySortFunc(a, b) {\n            return a.prio - b.prio;\n        }\n        timsort(visualFuncs, prioritySortFunc);\n        timsort(dataProcessorFuncs, prioritySortFunc);\n\n        zr.animation.on('frame', this._onframe, this);\n    }\n\n    var echartsProto = ECharts.prototype;\n\n    echartsProto._onframe = function () {\n        // Lazy update\n        if (this[OPTION_UPDATED]) {\n            var silent = this[OPTION_UPDATED].silent;\n\n            this[IN_MAIN_PROCESS] = true;\n\n            updateMethods.prepareAndUpdate.call(this);\n\n            this[IN_MAIN_PROCESS] = false;\n\n            this[OPTION_UPDATED] = false;\n\n            flushPendingActions.call(this, silent);\n\n            triggerUpdatedEvent.call(this, silent);\n        }\n    };\n    /**\n     * @return {HTMLDomElement}\n     */\n    echartsProto.getDom = function () {\n        return this._dom;\n    };\n\n    /**\n     * @return {module:zrender~ZRender}\n     */\n    echartsProto.getZr = function () {\n        return this._zr;\n    };\n\n    /**\n     * Usage:\n     * chart.setOption(option, notMerge, lazyUpdate);\n     * chart.setOption(option, {\n     *     notMerge: ...,\n     *     lazyUpdate: ...,\n     *     silent: ...\n     * });\n     *\n     * @param {Object} option\n     * @param {Object|boolean} [opts] opts or notMerge.\n     * @param {boolean} [opts.notMerge=false]\n     * @param {boolean} [opts.lazyUpdate=false] Useful when setOption frequently.\n     */\n    echartsProto.setOption = function (option, notMerge, lazyUpdate) {\n        if (__DEV__) {\n            zrUtil.assert(!this[IN_MAIN_PROCESS], '`setOption` should not be called during main process.');\n        }\n\n        var silent;\n        if (zrUtil.isObject(notMerge)) {\n            lazyUpdate = notMerge.lazyUpdate;\n            silent = notMerge.silent;\n            notMerge = notMerge.notMerge;\n        }\n\n        this[IN_MAIN_PROCESS] = true;\n\n        if (!this._model || notMerge) {\n            var optionManager = new OptionManager(this._api);\n            var theme = this._theme;\n            var ecModel = this._model = new GlobalModel(null, null, theme, optionManager);\n            ecModel.init(null, null, theme, optionManager);\n        }\n\n        // FIXME\n        // ugly\n        this.__lastOnlyGraphic = !!(option && option.graphic);\n        zrUtil.each(option, function (o, mainType) {\n            mainType !== 'graphic' && (this.__lastOnlyGraphic = false);\n        }, this);\n\n        this._model.setOption(option, optionPreprocessorFuncs);\n\n        if (lazyUpdate) {\n            this[OPTION_UPDATED] = {silent: silent};\n            this[IN_MAIN_PROCESS] = false;\n        }\n        else {\n            updateMethods.prepareAndUpdate.call(this);\n            // Ensure zr refresh sychronously, and then pixel in canvas can be\n            // fetched after `setOption`.\n            this._zr.flush();\n\n            this[OPTION_UPDATED] = false;\n            this[IN_MAIN_PROCESS] = false;\n\n            flushPendingActions.call(this, silent);\n            triggerUpdatedEvent.call(this, silent);\n        }\n    };\n\n    /**\n     * @DEPRECATED\n     */\n    echartsProto.setTheme = function () {\n        console.log('ECharts#setTheme() is DEPRECATED in ECharts 3.0');\n    };\n\n    /**\n     * @return {module:echarts/model/Global}\n     */\n    echartsProto.getModel = function () {\n        return this._model;\n    };\n\n    /**\n     * @return {Object}\n     */\n    echartsProto.getOption = function () {\n        return this._model && this._model.getOption();\n    };\n\n    /**\n     * @return {number}\n     */\n    echartsProto.getWidth = function () {\n        return this._zr.getWidth();\n    };\n\n    /**\n     * @return {number}\n     */\n    echartsProto.getHeight = function () {\n        return this._zr.getHeight();\n    };\n\n    /**\n     * Get canvas which has all thing rendered\n     * @param {Object} opts\n     * @param {string} [opts.backgroundColor]\n     */\n    echartsProto.getRenderedCanvas = function (opts) {\n        if (!env.canvasSupported) {\n            return;\n        }\n        opts = opts || {};\n        opts.pixelRatio = opts.pixelRatio || 1;\n        opts.backgroundColor = opts.backgroundColor\n            || this._model.get('backgroundColor');\n        var zr = this._zr;\n        var list = zr.storage.getDisplayList();\n        // Stop animations\n        zrUtil.each(list, function (el) {\n            el.stopAnimation(true);\n        });\n        return zr.painter.getRenderedCanvas(opts);\n    };\n    /**\n     * @return {string}\n     * @param {Object} opts\n     * @param {string} [opts.type='png']\n     * @param {string} [opts.pixelRatio=1]\n     * @param {string} [opts.backgroundColor]\n     * @param {string} [opts.excludeComponents]\n     */\n    echartsProto.getDataURL = function (opts) {\n        opts = opts || {};\n        var excludeComponents = opts.excludeComponents;\n        var ecModel = this._model;\n        var excludesComponentViews = [];\n        var self = this;\n\n        each(excludeComponents, function (componentType) {\n            ecModel.eachComponent({\n                mainType: componentType\n            }, function (component) {\n                var view = self._componentsMap[component.__viewId];\n                if (!view.group.ignore) {\n                    excludesComponentViews.push(view);\n                    view.group.ignore = true;\n                }\n            });\n        });\n\n        var url = this.getRenderedCanvas(opts).toDataURL(\n            'image/' + (opts && opts.type || 'png')\n        );\n\n        each(excludesComponentViews, function (view) {\n            view.group.ignore = false;\n        });\n        return url;\n    };\n\n\n    /**\n     * @return {string}\n     * @param {Object} opts\n     * @param {string} [opts.type='png']\n     * @param {string} [opts.pixelRatio=1]\n     * @param {string} [opts.backgroundColor]\n     */\n    echartsProto.getConnectedDataURL = function (opts) {\n        if (!env.canvasSupported) {\n            return;\n        }\n        var groupId = this.group;\n        var mathMin = Math.min;\n        var mathMax = Math.max;\n        var MAX_NUMBER = Infinity;\n        if (connectedGroups[groupId]) {\n            var left = MAX_NUMBER;\n            var top = MAX_NUMBER;\n            var right = -MAX_NUMBER;\n            var bottom = -MAX_NUMBER;\n            var canvasList = [];\n            var dpr = (opts && opts.pixelRatio) || 1;\n\n            zrUtil.each(instances, function (chart, id) {\n                if (chart.group === groupId) {\n                    var canvas = chart.getRenderedCanvas(\n                        zrUtil.clone(opts)\n                    );\n                    var boundingRect = chart.getDom().getBoundingClientRect();\n                    left = mathMin(boundingRect.left, left);\n                    top = mathMin(boundingRect.top, top);\n                    right = mathMax(boundingRect.right, right);\n                    bottom = mathMax(boundingRect.bottom, bottom);\n                    canvasList.push({\n                        dom: canvas,\n                        left: boundingRect.left,\n                        top: boundingRect.top\n                    });\n                }\n            });\n\n            left *= dpr;\n            top *= dpr;\n            right *= dpr;\n            bottom *= dpr;\n            var width = right - left;\n            var height = bottom - top;\n            var targetCanvas = zrUtil.createCanvas();\n            targetCanvas.width = width;\n            targetCanvas.height = height;\n            var zr = zrender.init(targetCanvas);\n\n            each(canvasList, function (item) {\n                var img = new graphic.Image({\n                    style: {\n                        x: item.left * dpr - left,\n                        y: item.top * dpr - top,\n                        image: item.dom\n                    }\n                });\n                zr.add(img);\n            });\n            zr.refreshImmediately();\n\n            return targetCanvas.toDataURL('image/' + (opts && opts.type || 'png'));\n        }\n        else {\n            return this.getDataURL(opts);\n        }\n    };\n\n    /**\n     * Convert from logical coordinate system to pixel coordinate system.\n     * See CoordinateSystem#convertToPixel.\n     * @param {string|Object} finder\n     *        If string, e.g., 'geo', means {geoIndex: 0}.\n     *        If Object, could contain some of these properties below:\n     *        {\n     *            seriesIndex / seriesId / seriesName,\n     *            geoIndex / geoId, geoName,\n     *            bmapIndex / bmapId / bmapName,\n     *            xAxisIndex / xAxisId / xAxisName,\n     *            yAxisIndex / yAxisId / yAxisName,\n     *            gridIndex / gridId / gridName,\n     *            ... (can be extended)\n     *        }\n     * @param {Array|number} value\n     * @return {Array|number} result\n     */\n    echartsProto.convertToPixel = zrUtil.curry(doConvertPixel, 'convertToPixel');\n\n    /**\n     * Convert from pixel coordinate system to logical coordinate system.\n     * See CoordinateSystem#convertFromPixel.\n     * @param {string|Object} finder\n     *        If string, e.g., 'geo', means {geoIndex: 0}.\n     *        If Object, could contain some of these properties below:\n     *        {\n     *            seriesIndex / seriesId / seriesName,\n     *            geoIndex / geoId / geoName,\n     *            bmapIndex / bmapId / bmapName,\n     *            xAxisIndex / xAxisId / xAxisName,\n     *            yAxisIndex / yAxisId / yAxisName\n     *            gridIndex / gridId / gridName,\n     *            ... (can be extended)\n     *        }\n     * @param {Array|number} value\n     * @return {Array|number} result\n     */\n    echartsProto.convertFromPixel = zrUtil.curry(doConvertPixel, 'convertFromPixel');\n\n    function doConvertPixel(methodName, finder, value) {\n        var ecModel = this._model;\n        var coordSysList = this._coordSysMgr.getCoordinateSystems();\n        var result;\n\n        finder = modelUtil.parseFinder(ecModel, finder);\n\n        for (var i = 0; i < coordSysList.length; i++) {\n            var coordSys = coordSysList[i];\n            if (coordSys[methodName]\n                && (result = coordSys[methodName](ecModel, finder, value)) != null\n            ) {\n                return result;\n            }\n        }\n\n        if (__DEV__) {\n            console.warn(\n                'No coordinate system that supports ' + methodName + ' found by the given finder.'\n            );\n        }\n    }\n\n    /**\n     * Is the specified coordinate systems or components contain the given pixel point.\n     * @param {string|Object} finder\n     *        If string, e.g., 'geo', means {geoIndex: 0}.\n     *        If Object, could contain some of these properties below:\n     *        {\n     *            seriesIndex / seriesId / seriesName,\n     *            geoIndex / geoId / geoName,\n     *            bmapIndex / bmapId / bmapName,\n     *            xAxisIndex / xAxisId / xAxisName,\n     *            yAxisIndex / yAxisId / yAxisName\n     *            gridIndex / gridId / gridName,\n     *            ... (can be extended)\n     *        }\n     * @param {Array|number} value\n     * @return {boolean} result\n     */\n    echartsProto.containPixel = function (finder, value) {\n        var ecModel = this._model;\n        var result;\n\n        finder = modelUtil.parseFinder(ecModel, finder);\n\n        zrUtil.each(finder, function (models, key) {\n            key.indexOf('Models') >= 0 && zrUtil.each(models, function (model) {\n                var coordSys = model.coordinateSystem;\n                if (coordSys && coordSys.containPoint) {\n                    result |= !!coordSys.containPoint(value);\n                }\n                else if (key === 'seriesModels') {\n                    var view = this._chartsMap[model.__viewId];\n                    if (view && view.containPoint) {\n                        result |= view.containPoint(value, model);\n                    }\n                    else {\n                        if (__DEV__) {\n                            console.warn(key + ': ' + (view\n                                ? 'The found component do not support containPoint.'\n                                : 'No view mapping to the found component.'\n                            ));\n                        }\n                    }\n                }\n                else {\n                    if (__DEV__) {\n                        console.warn(key + ': containPoint is not supported');\n                    }\n                }\n            }, this);\n        }, this);\n\n        return !!result;\n    };\n\n    /**\n     * Get visual from series or data.\n     * @param {string|Object} finder\n     *        If string, e.g., 'series', means {seriesIndex: 0}.\n     *        If Object, could contain some of these properties below:\n     *        {\n     *            seriesIndex / seriesId / seriesName,\n     *            dataIndex / dataIndexInside\n     *        }\n     *        If dataIndex is not specified, series visual will be fetched,\n     *        but not data item visual.\n     *        If all of seriesIndex, seriesId, seriesName are not specified,\n     *        visual will be fetched from first series.\n     * @param {string} visualType 'color', 'symbol', 'symbolSize'\n     */\n    echartsProto.getVisual = function (finder, visualType) {\n        var ecModel = this._model;\n\n        finder = modelUtil.parseFinder(ecModel, finder, {defaultMainType: 'series'});\n\n        var seriesModel = finder.seriesModel;\n\n        if (__DEV__) {\n            if (!seriesModel) {\n                console.warn('There is no specified seires model');\n            }\n        }\n\n        var data = seriesModel.getData();\n\n        var dataIndexInside = finder.hasOwnProperty('dataIndexInside')\n            ? finder.dataIndexInside\n            : finder.hasOwnProperty('dataIndex')\n            ? data.indexOfRawIndex(finder.dataIndex)\n            : null;\n\n        return dataIndexInside != null\n            ? data.getItemVisual(dataIndexInside, visualType)\n            : data.getVisual(visualType);\n    };\n\n\n    var updateMethods = {\n\n        /**\n         * @param {Object} payload\n         * @private\n         */\n        update: function (payload) {\n            // console.time && console.time('update');\n\n            var ecModel = this._model;\n            var api = this._api;\n            var coordSysMgr = this._coordSysMgr;\n            var zr = this._zr;\n            // update before setOption\n            if (!ecModel) {\n                return;\n            }\n\n            // Fixme First time update ?\n            ecModel.restoreData();\n\n            // TODO\n            // Save total ecModel here for undo/redo (after restoring data and before processing data).\n            // Undo (restoration of total ecModel) can be carried out in 'action' or outside API call.\n\n            // Create new coordinate system each update\n            // In LineView may save the old coordinate system and use it to get the orignal point\n            coordSysMgr.create(this._model, this._api);\n\n            processData.call(this, ecModel, api);\n\n            stackSeriesData.call(this, ecModel);\n\n            coordSysMgr.update(ecModel, api);\n\n            doVisualEncoding.call(this, ecModel, payload);\n\n            doRender.call(this, ecModel, payload);\n\n            // Set background\n            var backgroundColor = ecModel.get('backgroundColor') || 'transparent';\n\n            var painter = zr.painter;\n            // TODO all use clearColor ?\n            if (painter.isSingleCanvas && painter.isSingleCanvas()) {\n                zr.configLayer(0, {\n                    clearColor: backgroundColor\n                });\n            }\n            else {\n                // In IE8\n                if (!env.canvasSupported) {\n                    var colorArr = colorTool.parse(backgroundColor);\n                    backgroundColor = colorTool.stringify(colorArr, 'rgb');\n                    if (colorArr[3] === 0) {\n                        backgroundColor = 'transparent';\n                    }\n                }\n                if (backgroundColor.colorStops || backgroundColor.image) {\n                    // Gradient background\n                    // FIXME Fixed layer？\n                    zr.configLayer(0, {\n                        clearColor: backgroundColor\n                    });\n                    this[HAS_GRADIENT_OR_PATTERN_BG] = true;\n\n                    this._dom.style.background = 'transparent';\n                }\n                else {\n                    if (this[HAS_GRADIENT_OR_PATTERN_BG]) {\n                        zr.configLayer(0, {\n                            clearColor: null\n                        });\n                    }\n                    this[HAS_GRADIENT_OR_PATTERN_BG] = false;\n\n                    this._dom.style.background = backgroundColor;\n                }\n            }\n\n            // console.time && console.timeEnd('update');\n        },\n\n        /**\n         * @param {Object} payload\n         * @private\n         */\n        updateView: function (payload) {\n            var ecModel = this._model;\n\n            // update before setOption\n            if (!ecModel) {\n                return;\n            }\n\n            ecModel.eachSeries(function (seriesModel) {\n                seriesModel.getData().clearAllVisual();\n            });\n\n            doVisualEncoding.call(this, ecModel, payload);\n\n            invokeUpdateMethod.call(this, 'updateView', ecModel, payload);\n        },\n\n        /**\n         * @param {Object} payload\n         * @private\n         */\n        updateVisual: function (payload) {\n            var ecModel = this._model;\n\n            // update before setOption\n            if (!ecModel) {\n                return;\n            }\n\n            ecModel.eachSeries(function (seriesModel) {\n                seriesModel.getData().clearAllVisual();\n            });\n\n            doVisualEncoding.call(this, ecModel, payload, true);\n\n            invokeUpdateMethod.call(this, 'updateVisual', ecModel, payload);\n        },\n\n        /**\n         * @param {Object} payload\n         * @private\n         */\n        updateLayout: function (payload) {\n            var ecModel = this._model;\n\n            // update before setOption\n            if (!ecModel) {\n                return;\n            }\n\n            doLayout.call(this, ecModel, payload);\n\n            invokeUpdateMethod.call(this, 'updateLayout', ecModel, payload);\n        },\n\n        /**\n         * @param {Object} payload\n         * @private\n         */\n        prepareAndUpdate: function (payload) {\n            var ecModel = this._model;\n\n            prepareView.call(this, 'component', ecModel);\n\n            prepareView.call(this, 'chart', ecModel);\n\n            // FIXME\n            // ugly\n            if (this.__lastOnlyGraphic) {\n                each(this._componentsViews, function (componentView) {\n                    var componentModel = componentView.__model;\n                    if (componentModel && componentModel.mainType === 'graphic') {\n                        componentView.render(componentModel, ecModel, this._api, payload);\n                        updateZ(componentModel, componentView);\n                    }\n                }, this);\n                this.__lastOnlyGraphic = false;\n            }\n            else {\n                updateMethods.update.call(this, payload);\n            }\n        }\n    };\n\n    /**\n     * @private\n     */\n    function updateDirectly(ecIns, method, payload, mainType, subType) {\n        var ecModel = ecIns._model;\n        var query = {};\n        query[mainType + 'Id'] = payload[mainType + 'Id'];\n        query[mainType + 'Index'] = payload[mainType + 'Index'];\n        query[mainType + 'Name'] = payload[mainType + 'Name'];\n\n        var condition = {mainType: mainType, query: query};\n        subType && (condition.subType = subType); // subType may be '' by parseClassType;\n\n        // If dispatchAction before setOption, do nothing.\n        ecModel && ecModel.eachComponent(condition, function (model, index) {\n            var view = ecIns[\n                mainType === 'series' ? '_chartsMap' : '_componentsMap'\n            ][model.__viewId];\n            if (view && view.__alive) {\n                view[method](model, ecModel, ecIns._api, payload);\n            }\n        }, ecIns);\n    }\n\n    /**\n     * Resize the chart\n     * @param {Object} opts\n     * @param {number} [opts.width] Can be 'auto' (the same as null/undefined)\n     * @param {number} [opts.height] Can be 'auto' (the same as null/undefined)\n     * @param {boolean} [opts.silent=false]\n     */\n    echartsProto.resize = function (opts) {\n        if (__DEV__) {\n            zrUtil.assert(!this[IN_MAIN_PROCESS], '`resize` should not be called during main process.');\n        }\n\n        this[IN_MAIN_PROCESS] = true;\n\n        this._zr.resize(opts);\n\n        var optionChanged = this._model && this._model.resetOption('media');\n        var updateMethod = optionChanged ? 'prepareAndUpdate' : 'update';\n\n        updateMethods[updateMethod].call(this);\n\n        // Resize loading effect\n        this._loadingFX && this._loadingFX.resize();\n\n        this[IN_MAIN_PROCESS] = false;\n\n        var silent = opts && opts.silent;\n\n        flushPendingActions.call(this, silent);\n\n        triggerUpdatedEvent.call(this, silent);\n    };\n\n    /**\n     * Show loading effect\n     * @param  {string} [name='default']\n     * @param  {Object} [cfg]\n     */\n    echartsProto.showLoading = function (name, cfg) {\n        if (zrUtil.isObject(name)) {\n            cfg = name;\n            name = '';\n        }\n        name = name || 'default';\n\n        this.hideLoading();\n        if (!loadingEffects[name]) {\n            if (__DEV__) {\n                console.warn('Loading effects ' + name + ' not exists.');\n            }\n            return;\n        }\n        var el = loadingEffects[name](this._api, cfg);\n        var zr = this._zr;\n        this._loadingFX = el;\n\n        zr.add(el);\n    };\n\n    /**\n     * Hide loading effect\n     */\n    echartsProto.hideLoading = function () {\n        this._loadingFX && this._zr.remove(this._loadingFX);\n        this._loadingFX = null;\n    };\n\n    /**\n     * @param {Object} eventObj\n     * @return {Object}\n     */\n    echartsProto.makeActionFromEvent = function (eventObj) {\n        var payload = zrUtil.extend({}, eventObj);\n        payload.type = eventActionMap[eventObj.type];\n        return payload;\n    };\n\n    /**\n     * @pubilc\n     * @param {Object} payload\n     * @param {string} [payload.type] Action type\n     * @param {Object|boolean} [opt] If pass boolean, means opt.silent\n     * @param {boolean} [opt.silent=false] Whether trigger events.\n     * @param {boolean} [opt.flush=undefined]\n     *                  true: Flush immediately, and then pixel in canvas can be fetched\n     *                      immediately. Caution: it might affect performance.\n     *                  false: Not not flush.\n     *                  undefined: Auto decide whether perform flush.\n     */\n    echartsProto.dispatchAction = function (payload, opt) {\n        if (!zrUtil.isObject(opt)) {\n            opt = {silent: !!opt};\n        }\n\n        if (!actions[payload.type]) {\n            return;\n        }\n\n        // if (__DEV__) {\n        //     zrUtil.assert(\n        //         !this[IN_MAIN_PROCESS],\n        //         '`dispatchAction` should not be called during main process.'\n        //         + 'unless updateMathod is \"none\".'\n        //     );\n        // }\n\n        // May dispatchAction in rendering procedure\n        if (this[IN_MAIN_PROCESS]) {\n            this._pendingActions.push(payload);\n            return;\n        }\n\n        doDispatchAction.call(this, payload, opt.silent);\n\n        if (opt.flush) {\n            this._zr.flush(true);\n        }\n        else if (opt.flush !== false && env.browser.weChat) {\n            // In WeChat embeded browser, `requestAnimationFrame` and `setInterval`\n            // hang when sliding page (on touch event), which cause that zr does not\n            // refresh util user interaction finished, which is not expected.\n            // But `dispatchAction` may be called too frequently when pan on touch\n            // screen, which impacts performance if do not throttle them.\n            this._throttledZrFlush();\n        }\n\n        flushPendingActions.call(this, opt.silent);\n\n        triggerUpdatedEvent.call(this, opt.silent);\n    };\n\n    function doDispatchAction(payload, silent) {\n        var payloadType = payload.type;\n        var actionWrap = actions[payloadType];\n        var actionInfo = actionWrap.actionInfo;\n\n        var cptType = (actionInfo.update || 'update').split(':');\n        var updateMethod = cptType.pop();\n        cptType = cptType[0] && parseClassType(cptType[0]);\n\n        this[IN_MAIN_PROCESS] = true;\n\n        var payloads = [payload];\n        var batched = false;\n        // Batch action\n        if (payload.batch) {\n            batched = true;\n            payloads = zrUtil.map(payload.batch, function (item) {\n                item = zrUtil.defaults(zrUtil.extend({}, item), payload);\n                item.batch = null;\n                return item;\n            });\n        }\n\n        var eventObjBatch = [];\n        var eventObj;\n        var isHighDown = payloadType === 'highlight' || payloadType === 'downplay';\n\n        for (var i = 0; i < payloads.length; i++) {\n            var batchItem = payloads[i];\n            // Action can specify the event by return it.\n            eventObj = actionWrap.action(batchItem, this._model);\n            // Emit event outside\n            eventObj = eventObj || zrUtil.extend({}, batchItem);\n            // Convert type to eventType\n            eventObj.type = actionInfo.event || eventObj.type;\n            eventObjBatch.push(eventObj);\n\n            // light update does not perform data process, layout and visual.\n            if (isHighDown) {\n                // method, payload, mainType, subType\n                updateDirectly(this, updateMethod, batchItem, 'series');\n            }\n            else if (cptType) {\n                updateDirectly(this, updateMethod, batchItem, cptType.main, cptType.sub);\n            }\n        }\n\n        if (updateMethod !== 'none' && !isHighDown && !cptType) {\n            // Still dirty\n            if (this[OPTION_UPDATED]) {\n                // FIXME Pass payload ?\n                updateMethods.prepareAndUpdate.call(this, payload);\n                this[OPTION_UPDATED] = false;\n            }\n            else {\n                updateMethods[updateMethod].call(this, payload);\n            }\n        }\n\n        // Follow the rule of action batch\n        if (batched) {\n            eventObj = {\n                type: actionInfo.event || payloadType,\n                batch: eventObjBatch\n            };\n        }\n        else {\n            eventObj = eventObjBatch[0];\n        }\n\n        this[IN_MAIN_PROCESS] = false;\n\n        !silent && this._messageCenter.trigger(eventObj.type, eventObj);\n    }\n\n    function flushPendingActions(silent) {\n        var pendingActions = this._pendingActions;\n        while (pendingActions.length) {\n            var payload = pendingActions.shift();\n            doDispatchAction.call(this, payload, silent);\n        }\n    }\n\n    function triggerUpdatedEvent(silent) {\n        !silent && this.trigger('updated');\n    }\n\n    /**\n     * Register event\n     * @method\n     */\n    echartsProto.on = createRegisterEventWithLowercaseName('on');\n    echartsProto.off = createRegisterEventWithLowercaseName('off');\n    echartsProto.one = createRegisterEventWithLowercaseName('one');\n\n    /**\n     * @param {string} methodName\n     * @private\n     */\n    function invokeUpdateMethod(methodName, ecModel, payload) {\n        var api = this._api;\n\n        // Update all components\n        each(this._componentsViews, function (component) {\n            var componentModel = component.__model;\n            component[methodName](componentModel, ecModel, api, payload);\n\n            updateZ(componentModel, component);\n        }, this);\n\n        // Upate all charts\n        ecModel.eachSeries(function (seriesModel, idx) {\n            var chart = this._chartsMap[seriesModel.__viewId];\n            chart[methodName](seriesModel, ecModel, api, payload);\n\n            updateZ(seriesModel, chart);\n\n            updateProgressiveAndBlend(seriesModel, chart);\n        }, this);\n\n        // If use hover layer\n        updateHoverLayerStatus(this._zr, ecModel);\n    }\n\n    /**\n     * Prepare view instances of charts and components\n     * @param  {module:echarts/model/Global} ecModel\n     * @private\n     */\n    function prepareView(type, ecModel) {\n        var isComponent = type === 'component';\n        var viewList = isComponent ? this._componentsViews : this._chartsViews;\n        var viewMap = isComponent ? this._componentsMap : this._chartsMap;\n        var zr = this._zr;\n\n        for (var i = 0; i < viewList.length; i++) {\n            viewList[i].__alive = false;\n        }\n\n        ecModel[isComponent ? 'eachComponent' : 'eachSeries'](function (componentType, model) {\n            if (isComponent) {\n                if (componentType === 'series') {\n                    return;\n                }\n            }\n            else {\n                model = componentType;\n            }\n\n            // Consider: id same and type changed.\n            var viewId = model.id + '_' + model.type;\n            var view = viewMap[viewId];\n            if (!view) {\n                var classType = parseClassType(model.type);\n                var Clazz = isComponent\n                    ? ComponentView.getClass(classType.main, classType.sub)\n                    : ChartView.getClass(classType.sub);\n                if (Clazz) {\n                    view = new Clazz();\n                    view.init(ecModel, this._api);\n                    viewMap[viewId] = view;\n                    viewList.push(view);\n                    zr.add(view.group);\n                }\n                else {\n                    // Error\n                    return;\n                }\n            }\n\n            model.__viewId = viewId;\n            view.__alive = true;\n            view.__id = viewId;\n            view.__model = model;\n        }, this);\n\n        for (var i = 0; i < viewList.length;) {\n            var view = viewList[i];\n            if (!view.__alive) {\n                zr.remove(view.group);\n                view.dispose(ecModel, this._api);\n                viewList.splice(i, 1);\n                delete viewMap[view.__id];\n            }\n            else {\n                i++;\n            }\n        }\n    }\n\n    /**\n     * Processor data in each series\n     *\n     * @param {module:echarts/model/Global} ecModel\n     * @private\n     */\n    function processData(ecModel, api) {\n        each(dataProcessorFuncs, function (process) {\n            process.func(ecModel, api);\n        });\n    }\n\n    /**\n     * @private\n     */\n    function stackSeriesData(ecModel) {\n        var stackedDataMap = {};\n        ecModel.eachSeries(function (series) {\n            var stack = series.get('stack');\n            var data = series.getData();\n            if (stack && data.type === 'list') {\n                var previousStack = stackedDataMap[stack];\n                if (previousStack) {\n                    data.stackedOn = previousStack;\n                }\n                stackedDataMap[stack] = data;\n            }\n        });\n    }\n\n    /**\n     * Layout before each chart render there series, special visual encoding stage\n     *\n     * @param {module:echarts/model/Global} ecModel\n     * @private\n     */\n    function doLayout(ecModel, payload) {\n        var api = this._api;\n        each(visualFuncs, function (visual) {\n            if (visual.isLayout) {\n                visual.func(ecModel, api, payload);\n            }\n        });\n    }\n\n    /**\n     * Encode visual infomation from data after data processing\n     *\n     * @param {module:echarts/model/Global} ecModel\n     * @param {object} layout\n     * @param {boolean} [excludesLayout]\n     * @private\n     */\n    function doVisualEncoding(ecModel, payload, excludesLayout) {\n        var api = this._api;\n        ecModel.clearColorPalette();\n        ecModel.eachSeries(function (seriesModel) {\n            seriesModel.clearColorPalette();\n        });\n        each(visualFuncs, function (visual) {\n            (!excludesLayout || !visual.isLayout)\n                && visual.func(ecModel, api, payload);\n        });\n    }\n\n    /**\n     * Render each chart and component\n     * @private\n     */\n    function doRender(ecModel, payload) {\n        var api = this._api;\n        // Render all components\n        each(this._componentsViews, function (componentView) {\n            var componentModel = componentView.__model;\n            componentView.render(componentModel, ecModel, api, payload);\n\n            updateZ(componentModel, componentView);\n        }, this);\n\n        each(this._chartsViews, function (chart) {\n            chart.__alive = false;\n        }, this);\n\n        // Render all charts\n        ecModel.eachSeries(function (seriesModel, idx) {\n            var chartView = this._chartsMap[seriesModel.__viewId];\n            chartView.__alive = true;\n            chartView.render(seriesModel, ecModel, api, payload);\n\n            chartView.group.silent = !!seriesModel.get('silent');\n\n            updateZ(seriesModel, chartView);\n\n            updateProgressiveAndBlend(seriesModel, chartView);\n\n        }, this);\n\n        // If use hover layer\n        updateHoverLayerStatus(this._zr, ecModel);\n\n        // Remove groups of unrendered charts\n        each(this._chartsViews, function (chart) {\n            if (!chart.__alive) {\n                chart.remove(ecModel, api);\n            }\n        }, this);\n    }\n\n    var MOUSE_EVENT_NAMES = [\n        'click', 'dblclick', 'mouseover', 'mouseout', 'mousemove',\n        'mousedown', 'mouseup', 'globalout', 'contextmenu'\n    ];\n    /**\n     * @private\n     */\n    echartsProto._initEvents = function () {\n        each(MOUSE_EVENT_NAMES, function (eveName) {\n            this._zr.on(eveName, function (e) {\n                var ecModel = this.getModel();\n                var el = e.target;\n                var params;\n\n                // no e.target when 'globalout'.\n                if (eveName === 'globalout') {\n                    params = {};\n                }\n                else if (el && el.dataIndex != null) {\n                    var dataModel = el.dataModel || ecModel.getSeriesByIndex(el.seriesIndex);\n                    params = dataModel && dataModel.getDataParams(el.dataIndex, el.dataType) || {};\n                }\n                // If element has custom eventData of components\n                else if (el && el.eventData) {\n                    params = zrUtil.extend({}, el.eventData);\n                }\n\n                if (params) {\n                    params.event = e;\n                    params.type = eveName;\n                    this.trigger(eveName, params);\n                }\n\n            }, this);\n        }, this);\n\n        each(eventActionMap, function (actionType, eventType) {\n            this._messageCenter.on(eventType, function (event) {\n                this.trigger(eventType, event);\n            }, this);\n        }, this);\n    };\n\n    /**\n     * @return {boolean}\n     */\n    echartsProto.isDisposed = function () {\n        return this._disposed;\n    };\n\n    /**\n     * Clear\n     */\n    echartsProto.clear = function () {\n        this.setOption({ series: [] }, true);\n    };\n    /**\n     * Dispose instance\n     */\n    echartsProto.dispose = function () {\n        if (this._disposed) {\n            if (__DEV__) {\n                console.warn('Instance ' + this.id + ' has been disposed');\n            }\n            return;\n        }\n        this._disposed = true;\n\n        var api = this._api;\n        var ecModel = this._model;\n\n        each(this._componentsViews, function (component) {\n            component.dispose(ecModel, api);\n        });\n        each(this._chartsViews, function (chart) {\n            chart.dispose(ecModel, api);\n        });\n\n        // Dispose after all views disposed\n        this._zr.dispose();\n\n        delete instances[this.id];\n    };\n\n    zrUtil.mixin(ECharts, Eventful);\n\n    function updateHoverLayerStatus(zr, ecModel) {\n        var storage = zr.storage;\n        var elCount = 0;\n        storage.traverse(function (el) {\n            if (!el.isGroup) {\n                elCount++;\n            }\n        });\n        if (elCount > ecModel.get('hoverLayerThreshold') && !env.node) {\n            storage.traverse(function (el) {\n                if (!el.isGroup) {\n                    el.useHoverLayer = true;\n                }\n            });\n        }\n    }\n    /**\n     * Update chart progressive and blend.\n     * @param {module:echarts/model/Series|module:echarts/model/Component} model\n     * @param {module:echarts/view/Component|module:echarts/view/Chart} view\n     */\n    function updateProgressiveAndBlend(seriesModel, chartView) {\n        // Progressive configuration\n        var elCount = 0;\n        chartView.group.traverse(function (el) {\n            if (el.type !== 'group' && !el.ignore) {\n                elCount++;\n            }\n        });\n        var frameDrawNum = +seriesModel.get('progressive');\n        var needProgressive = elCount > seriesModel.get('progressiveThreshold') && frameDrawNum && !env.node;\n        if (needProgressive) {\n            chartView.group.traverse(function (el) {\n                // FIXME marker and other components\n                if (!el.isGroup) {\n                    el.progressive = needProgressive ?\n                        Math.floor(elCount++ / frameDrawNum) : -1;\n                    if (needProgressive) {\n                        el.stopAnimation(true);\n                    }\n                }\n            });\n        }\n\n        // Blend configration\n        var blendMode = seriesModel.get('blendMode') || null;\n        if (__DEV__) {\n            if (!env.canvasSupported && blendMode && blendMode !== 'source-over') {\n                console.warn('Only canvas support blendMode');\n            }\n        }\n        chartView.group.traverse(function (el) {\n            // FIXME marker and other components\n            if (!el.isGroup) {\n                el.setStyle('blend', blendMode);\n            }\n        });\n    }\n    /**\n     * @param {module:echarts/model/Series|module:echarts/model/Component} model\n     * @param {module:echarts/view/Component|module:echarts/view/Chart} view\n     */\n    function updateZ(model, view) {\n        var z = model.get('z');\n        var zlevel = model.get('zlevel');\n        // Set z and zlevel\n        view.group.traverse(function (el) {\n            if (el.type !== 'group') {\n                z != null && (el.z = z);\n                zlevel != null && (el.zlevel = zlevel);\n            }\n        });\n    }\n    /**\n     * @type {Array.<Function>}\n     * @inner\n     */\n    var actions = [];\n\n    /**\n     * Map eventType to actionType\n     * @type {Object}\n     */\n    var eventActionMap = {};\n\n    /**\n     * Data processor functions of each stage\n     * @type {Array.<Object.<string, Function>>}\n     * @inner\n     */\n    var dataProcessorFuncs = [];\n\n    /**\n     * @type {Array.<Function>}\n     * @inner\n     */\n    var optionPreprocessorFuncs = [];\n\n    /**\n     * Visual encoding functions of each stage\n     * @type {Array.<Object.<string, Function>>}\n     * @inner\n     */\n    var visualFuncs = [];\n    /**\n     * Theme storage\n     * @type {Object.<key, Object>}\n     */\n    var themeStorage = {};\n    /**\n     * Loading effects\n     */\n    var loadingEffects = {};\n\n\n    var instances = {};\n    var connectedGroups = {};\n\n    var idBase = new Date() - 0;\n    var groupIdBase = new Date() - 0;\n    var DOM_ATTRIBUTE_KEY = '_echarts_instance_';\n    /**\n     * @alias module:echarts\n     */\n    var echarts = {\n        /**\n         * @type {number}\n         */\n        version: '3.4.0',\n        dependencies: {\n            zrender: '3.3.0'\n        }\n    };\n\n    function enableConnect(chart) {\n\n        var STATUS_PENDING = 0;\n        var STATUS_UPDATING = 1;\n        var STATUS_UPDATED = 2;\n        var STATUS_KEY = '__connectUpdateStatus';\n        function updateConnectedChartsStatus(charts, status) {\n            for (var i = 0; i < charts.length; i++) {\n                var otherChart = charts[i];\n                otherChart[STATUS_KEY] = status;\n            }\n        }\n        zrUtil.each(eventActionMap, function (actionType, eventType) {\n            chart._messageCenter.on(eventType, function (event) {\n                if (connectedGroups[chart.group] && chart[STATUS_KEY] !== STATUS_PENDING) {\n                    var action = chart.makeActionFromEvent(event);\n                    var otherCharts = [];\n\n                    zrUtil.each(instances, function (otherChart) {\n                        if (otherChart !== chart && otherChart.group === chart.group) {\n                            otherCharts.push(otherChart);\n                        }\n                    });\n\n                    updateConnectedChartsStatus(otherCharts, STATUS_PENDING);\n                    each(otherCharts, function (otherChart) {\n                        if (otherChart[STATUS_KEY] !== STATUS_UPDATING) {\n                            otherChart.dispatchAction(action);\n                        }\n                    });\n                    updateConnectedChartsStatus(otherCharts, STATUS_UPDATED);\n                }\n            });\n        });\n\n    }\n    /**\n     * @param {HTMLDomElement} dom\n     * @param {Object} [theme]\n     * @param {Object} opts\n     * @param {number} [opts.devicePixelRatio] Use window.devicePixelRatio by default\n     * @param {string} [opts.renderer] Currently only 'canvas' is supported.\n     * @param {number} [opts.width] Use clientWidth of the input `dom` by default.\n     *                              Can be 'auto' (the same as null/undefined)\n     * @param {number} [opts.height] Use clientHeight of the input `dom` by default.\n     *                               Can be 'auto' (the same as null/undefined)\n     */\n    echarts.init = function (dom, theme, opts) {\n        if (__DEV__) {\n            // Check version\n            if ((zrender.version.replace('.', '') - 0) < (echarts.dependencies.zrender.replace('.', '') - 0)) {\n                throw new Error(\n                    'ZRender ' + zrender.version\n                    + ' is too old for ECharts ' + echarts.version\n                    + '. Current version need ZRender '\n                    + echarts.dependencies.zrender + '+'\n                );\n            }\n            if (!dom) {\n                throw new Error('Initialize failed: invalid dom.');\n            }\n            if (zrUtil.isDom(dom) && dom.nodeName.toUpperCase() !== 'CANVAS' && (!dom.clientWidth || !dom.clientHeight)) {\n                console.warn('Can\\'t get dom width or height');\n            }\n        }\n\n        var chart = new ECharts(dom, theme, opts);\n        chart.id = 'ec_' + idBase++;\n        instances[chart.id] = chart;\n\n        dom.setAttribute &&\n            dom.setAttribute(DOM_ATTRIBUTE_KEY, chart.id);\n\n        enableConnect(chart);\n\n        return chart;\n    };\n\n    /**\n     * @return {string|Array.<module:echarts~ECharts>} groupId\n     */\n    echarts.connect = function (groupId) {\n        // Is array of charts\n        if (zrUtil.isArray(groupId)) {\n            var charts = groupId;\n            groupId = null;\n            // If any chart has group\n            zrUtil.each(charts, function (chart) {\n                if (chart.group != null) {\n                    groupId = chart.group;\n                }\n            });\n            groupId = groupId || ('g_' + groupIdBase++);\n            zrUtil.each(charts, function (chart) {\n                chart.group = groupId;\n            });\n        }\n        connectedGroups[groupId] = true;\n        return groupId;\n    };\n\n    /**\n     * @return {string} groupId\n     */\n    echarts.disConnect = function (groupId) {\n        connectedGroups[groupId] = false;\n    };\n\n    /**\n     * Dispose a chart instance\n     * @param  {module:echarts~ECharts|HTMLDomElement|string} chart\n     */\n    echarts.dispose = function (chart) {\n        if (zrUtil.isDom(chart)) {\n            chart = echarts.getInstanceByDom(chart);\n        }\n        else if (typeof chart === 'string') {\n            chart = instances[chart];\n        }\n        if ((chart instanceof ECharts) && !chart.isDisposed()) {\n            chart.dispose();\n        }\n    };\n\n    /**\n     * @param  {HTMLDomElement} dom\n     * @return {echarts~ECharts}\n     */\n    echarts.getInstanceByDom = function (dom) {\n        var key = dom.getAttribute(DOM_ATTRIBUTE_KEY);\n        return instances[key];\n    };\n    /**\n     * @param {string} key\n     * @return {echarts~ECharts}\n     */\n    echarts.getInstanceById = function (key) {\n        return instances[key];\n    };\n\n    /**\n     * Register theme\n     */\n    echarts.registerTheme = function (name, theme) {\n        themeStorage[name] = theme;\n    };\n\n    /**\n     * Register option preprocessor\n     * @param {Function} preprocessorFunc\n     */\n    echarts.registerPreprocessor = function (preprocessorFunc) {\n        optionPreprocessorFuncs.push(preprocessorFunc);\n    };\n\n    /**\n     * @param {number} [priority=1000]\n     * @param {Function} processorFunc\n     */\n    echarts.registerProcessor = function (priority, processorFunc) {\n        if (typeof priority === 'function') {\n            processorFunc = priority;\n            priority = PRIORITY_PROCESSOR_FILTER;\n        }\n        if (__DEV__) {\n            if (isNaN(priority)) {\n                throw new Error('Unkown processor priority');\n            }\n        }\n        dataProcessorFuncs.push({\n            prio: priority,\n            func: processorFunc\n        });\n    };\n\n    /**\n     * Usage:\n     * registerAction('someAction', 'someEvent', function () { ... });\n     * registerAction('someAction', function () { ... });\n     * registerAction(\n     *     {type: 'someAction', event: 'someEvent', update: 'updateView'},\n     *     function () { ... }\n     * );\n     *\n     * @param {(string|Object)} actionInfo\n     * @param {string} actionInfo.type\n     * @param {string} [actionInfo.event]\n     * @param {string} [actionInfo.update]\n     * @param {string} [eventName]\n     * @param {Function} action\n     */\n    echarts.registerAction = function (actionInfo, eventName, action) {\n        if (typeof eventName === 'function') {\n            action = eventName;\n            eventName = '';\n        }\n        var actionType = zrUtil.isObject(actionInfo)\n            ? actionInfo.type\n            : ([actionInfo, actionInfo = {\n                event: eventName\n            }][0]);\n\n        // Event name is all lowercase\n        actionInfo.event = (actionInfo.event || actionType).toLowerCase();\n        eventName = actionInfo.event;\n\n        // Validate action type and event name.\n        zrUtil.assert(ACTION_REG.test(actionType) && ACTION_REG.test(eventName));\n\n        if (!actions[actionType]) {\n            actions[actionType] = {action: action, actionInfo: actionInfo};\n        }\n        eventActionMap[eventName] = actionType;\n    };\n\n    /**\n     * @param {string} type\n     * @param {*} CoordinateSystem\n     */\n    echarts.registerCoordinateSystem = function (type, CoordinateSystem) {\n        CoordinateSystemManager.register(type, CoordinateSystem);\n    };\n\n    /**\n     * Layout is a special stage of visual encoding\n     * Most visual encoding like color are common for different chart\n     * But each chart has it's own layout algorithm\n     *\n     * @param {number} [priority=1000]\n     * @param {Function} layoutFunc\n     */\n    echarts.registerLayout = function (priority, layoutFunc) {\n        if (typeof priority === 'function') {\n            layoutFunc = priority;\n            priority = PRIORITY_VISUAL_LAYOUT;\n        }\n        if (__DEV__) {\n            if (isNaN(priority)) {\n                throw new Error('Unkown layout priority');\n            }\n        }\n        visualFuncs.push({\n            prio: priority,\n            func: layoutFunc,\n            isLayout: true\n        });\n    };\n\n    /**\n     * @param {number} [priority=3000]\n     * @param {Function} visualFunc\n     */\n    echarts.registerVisual = function (priority, visualFunc) {\n        if (typeof priority === 'function') {\n            visualFunc = priority;\n            priority = PRIORITY_VISUAL_CHART;\n        }\n        if (__DEV__) {\n            if (isNaN(priority)) {\n                throw new Error('Unkown visual priority');\n            }\n        }\n        visualFuncs.push({\n            prio: priority,\n            func: visualFunc\n        });\n    };\n\n    /**\n     * @param {string} name\n     */\n    echarts.registerLoading = function (name, loadingFx) {\n        loadingEffects[name] = loadingFx;\n    };\n\n    /**\n     * @param {Object} opts\n     * @param {string} [superClass]\n     */\n    echarts.extendComponentModel = function (opts/*, superClass*/) {\n        // var Clazz = ComponentModel;\n        // if (superClass) {\n        //     var classType = parseClassType(superClass);\n        //     Clazz = ComponentModel.getClass(classType.main, classType.sub, true);\n        // }\n        return ComponentModel.extend(opts);\n    };\n\n    /**\n     * @param {Object} opts\n     * @param {string} [superClass]\n     */\n    echarts.extendComponentView = function (opts/*, superClass*/) {\n        // var Clazz = ComponentView;\n        // if (superClass) {\n        //     var classType = parseClassType(superClass);\n        //     Clazz = ComponentView.getClass(classType.main, classType.sub, true);\n        // }\n        return ComponentView.extend(opts);\n    };\n\n    /**\n     * @param {Object} opts\n     * @param {string} [superClass]\n     */\n    echarts.extendSeriesModel = function (opts/*, superClass*/) {\n        // var Clazz = SeriesModel;\n        // if (superClass) {\n        //     superClass = 'series.' + superClass.replace('series.', '');\n        //     var classType = parseClassType(superClass);\n        //     Clazz = ComponentModel.getClass(classType.main, classType.sub, true);\n        // }\n        return SeriesModel.extend(opts);\n    };\n\n    /**\n     * @param {Object} opts\n     * @param {string} [superClass]\n     */\n    echarts.extendChartView = function (opts/*, superClass*/) {\n        // var Clazz = ChartView;\n        // if (superClass) {\n        //     superClass = superClass.replace('series.', '');\n        //     var classType = parseClassType(superClass);\n        //     Clazz = ChartView.getClass(classType.main, true);\n        // }\n        return ChartView.extend(opts);\n    };\n\n    /**\n     * ZRender need a canvas context to do measureText.\n     * But in node environment canvas may be created by node-canvas.\n     * So we need to specify how to create a canvas instead of using document.createElement('canvas')\n     *\n     * Be careful of using it in the browser.\n     *\n     * @param {Function} creator\n     * @example\n     *     var Canvas = require('canvas');\n     *     var echarts = require('echarts');\n     *     echarts.setCanvasCreator(function () {\n     *         // Small size is enough.\n     *         return new Canvas(32, 32);\n     *     });\n     */\n    echarts.setCanvasCreator = function (creator) {\n        zrUtil.createCanvas = creator;\n    };\n\n    echarts.registerVisual(PRIORITY_VISUAL_GLOBAL, __webpack_require__(591));\n    echarts.registerPreprocessor(__webpack_require__(585));\n    echarts.registerLoading('default', __webpack_require__(576));\n\n    // Default action\n    echarts.registerAction({\n        type: 'highlight',\n        event: 'highlight',\n        update: 'highlight'\n    }, zrUtil.noop);\n    echarts.registerAction({\n        type: 'downplay',\n        event: 'downplay',\n        update: 'downplay'\n    }, zrUtil.noop);\n\n\n    // --------\n    // Exports\n    // --------\n    //\n    echarts.List = __webpack_require__(506);\n    echarts.Model = __webpack_require__(470);\n\n    echarts.graphic = __webpack_require__(464);\n    echarts.number = __webpack_require__(465);\n    echarts.format = __webpack_require__(468);\n    echarts.throttle = throttle.throttle;\n    echarts.matrix = __webpack_require__(478);\n    echarts.vector = __webpack_require__(463);\n    echarts.color = __webpack_require__(474);\n\n    echarts.util = {};\n    each([\n            'map', 'each', 'filter', 'indexOf', 'inherits', 'reduce', 'filter',\n            'bind', 'curry', 'isArray', 'isString', 'isObject', 'isFunction',\n            'extend', 'defaults', 'clone'\n        ],\n        function (name) {\n            echarts.util[name] = zrUtil[name];\n        }\n    );\n\n    // PRIORITY\n    echarts.PRIORITY = {\n        PROCESSOR: {\n            FILTER: PRIORITY_PROCESSOR_FILTER,\n            STATISTIC: PRIORITY_PROCESSOR_STATISTIC\n        },\n        VISUAL: {\n            LAYOUT: PRIORITY_VISUAL_LAYOUT,\n            GLOBAL: PRIORITY_VISUAL_GLOBAL,\n            CHART: PRIORITY_VISUAL_CHART,\n            COMPONENT: PRIORITY_VISUAL_COMPONENT,\n            BRUSH: PRIORITY_VISUAL_BRUSH\n        }\n    };\n\n    module.exports = echarts;\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(52)))\n\n/***/ }),\n/* 463 */\n/***/ (function(module, exports) {\n\nvar ArrayCtor = typeof Float32Array === 'undefined' ? Array : Float32Array;\n/**\n * 创建一个向量\n * @param {number} [x=0]\n * @param {number} [y=0]\n * @return {Vector2}\n */\n\nfunction create(x, y) {\n  var out = new ArrayCtor(2);\n\n  if (x == null) {\n    x = 0;\n  }\n\n  if (y == null) {\n    y = 0;\n  }\n\n  out[0] = x;\n  out[1] = y;\n  return out;\n}\n/**\n * 复制向量数据\n * @param {Vector2} out\n * @param {Vector2} v\n * @return {Vector2}\n */\n\n\nfunction copy(out, v) {\n  out[0] = v[0];\n  out[1] = v[1];\n  return out;\n}\n/**\n * 克隆一个向量\n * @param {Vector2} v\n * @return {Vector2}\n */\n\n\nfunction clone(v) {\n  var out = new ArrayCtor(2);\n  out[0] = v[0];\n  out[1] = v[1];\n  return out;\n}\n/**\n * 设置向量的两个项\n * @param {Vector2} out\n * @param {number} a\n * @param {number} b\n * @return {Vector2} 结果\n */\n\n\nfunction set(out, a, b) {\n  out[0] = a;\n  out[1] = b;\n  return out;\n}\n/**\n * 向量相加\n * @param {Vector2} out\n * @param {Vector2} v1\n * @param {Vector2} v2\n */\n\n\nfunction add(out, v1, v2) {\n  out[0] = v1[0] + v2[0];\n  out[1] = v1[1] + v2[1];\n  return out;\n}\n/**\n * 向量缩放后相加\n * @param {Vector2} out\n * @param {Vector2} v1\n * @param {Vector2} v2\n * @param {number} a\n */\n\n\nfunction scaleAndAdd(out, v1, v2, a) {\n  out[0] = v1[0] + v2[0] * a;\n  out[1] = v1[1] + v2[1] * a;\n  return out;\n}\n/**\n * 向量相减\n * @param {Vector2} out\n * @param {Vector2} v1\n * @param {Vector2} v2\n */\n\n\nfunction sub(out, v1, v2) {\n  out[0] = v1[0] - v2[0];\n  out[1] = v1[1] - v2[1];\n  return out;\n}\n/**\n * 向量长度\n * @param {Vector2} v\n * @return {number}\n */\n\n\nfunction len(v) {\n  return Math.sqrt(lenSquare(v));\n}\n\nvar length = len; // jshint ignore:line\n\n/**\n * 向量长度平方\n * @param {Vector2} v\n * @return {number}\n */\n\nfunction lenSquare(v) {\n  return v[0] * v[0] + v[1] * v[1];\n}\n\nvar lengthSquare = lenSquare;\n/**\n * 向量乘法\n * @param {Vector2} out\n * @param {Vector2} v1\n * @param {Vector2} v2\n */\n\nfunction mul(out, v1, v2) {\n  out[0] = v1[0] * v2[0];\n  out[1] = v1[1] * v2[1];\n  return out;\n}\n/**\n * 向量除法\n * @param {Vector2} out\n * @param {Vector2} v1\n * @param {Vector2} v2\n */\n\n\nfunction div(out, v1, v2) {\n  out[0] = v1[0] / v2[0];\n  out[1] = v1[1] / v2[1];\n  return out;\n}\n/**\n * 向量点乘\n * @param {Vector2} v1\n * @param {Vector2} v2\n * @return {number}\n */\n\n\nfunction dot(v1, v2) {\n  return v1[0] * v2[0] + v1[1] * v2[1];\n}\n/**\n * 向量缩放\n * @param {Vector2} out\n * @param {Vector2} v\n * @param {number} s\n */\n\n\nfunction scale(out, v, s) {\n  out[0] = v[0] * s;\n  out[1] = v[1] * s;\n  return out;\n}\n/**\n * 向量归一化\n * @param {Vector2} out\n * @param {Vector2} v\n */\n\n\nfunction normalize(out, v) {\n  var d = len(v);\n\n  if (d === 0) {\n    out[0] = 0;\n    out[1] = 0;\n  } else {\n    out[0] = v[0] / d;\n    out[1] = v[1] / d;\n  }\n\n  return out;\n}\n/**\n * 计算向量间距离\n * @param {Vector2} v1\n * @param {Vector2} v2\n * @return {number}\n */\n\n\nfunction distance(v1, v2) {\n  return Math.sqrt((v1[0] - v2[0]) * (v1[0] - v2[0]) + (v1[1] - v2[1]) * (v1[1] - v2[1]));\n}\n\nvar dist = distance;\n/**\n * 向量距离平方\n * @param {Vector2} v1\n * @param {Vector2} v2\n * @return {number}\n */\n\nfunction distanceSquare(v1, v2) {\n  return (v1[0] - v2[0]) * (v1[0] - v2[0]) + (v1[1] - v2[1]) * (v1[1] - v2[1]);\n}\n\nvar distSquare = distanceSquare;\n/**\n * 求负向量\n * @param {Vector2} out\n * @param {Vector2} v\n */\n\nfunction negate(out, v) {\n  out[0] = -v[0];\n  out[1] = -v[1];\n  return out;\n}\n/**\n * 插值两个点\n * @param {Vector2} out\n * @param {Vector2} v1\n * @param {Vector2} v2\n * @param {number} t\n */\n\n\nfunction lerp(out, v1, v2, t) {\n  out[0] = v1[0] + t * (v2[0] - v1[0]);\n  out[1] = v1[1] + t * (v2[1] - v1[1]);\n  return out;\n}\n/**\n * 矩阵左乘向量\n * @param {Vector2} out\n * @param {Vector2} v\n * @param {Vector2} m\n */\n\n\nfunction applyTransform(out, v, m) {\n  var x = v[0];\n  var y = v[1];\n  out[0] = m[0] * x + m[2] * y + m[4];\n  out[1] = m[1] * x + m[3] * y + m[5];\n  return out;\n}\n/**\n * 求两个向量最小值\n * @param  {Vector2} out\n * @param  {Vector2} v1\n * @param  {Vector2} v2\n */\n\n\nfunction min(out, v1, v2) {\n  out[0] = Math.min(v1[0], v2[0]);\n  out[1] = Math.min(v1[1], v2[1]);\n  return out;\n}\n/**\n * 求两个向量最大值\n * @param  {Vector2} out\n * @param  {Vector2} v1\n * @param  {Vector2} v2\n */\n\n\nfunction max(out, v1, v2) {\n  out[0] = Math.max(v1[0], v2[0]);\n  out[1] = Math.max(v1[1], v2[1]);\n  return out;\n}\n\nexports.create = create;\nexports.copy = copy;\nexports.clone = clone;\nexports.set = set;\nexports.add = add;\nexports.scaleAndAdd = scaleAndAdd;\nexports.sub = sub;\nexports.len = len;\nexports.length = length;\nexports.lenSquare = lenSquare;\nexports.lengthSquare = lengthSquare;\nexports.mul = mul;\nexports.div = div;\nexports.dot = dot;\nexports.scale = scale;\nexports.normalize = normalize;\nexports.distance = distance;\nexports.dist = dist;\nexports.distanceSquare = distanceSquare;\nexports.distSquare = distSquare;\nexports.negate = negate;\nexports.lerp = lerp;\nexports.applyTransform = applyTransform;\nexports.min = min;\nexports.max = max;\n\n/***/ }),\n/* 464 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n\n    var zrUtil = __webpack_require__(460);\n\n    var pathTool = __webpack_require__(534);\n    var round = Math.round;\n    var Path = __webpack_require__(461);\n    var colorTool = __webpack_require__(474);\n    var matrix = __webpack_require__(478);\n    var vector = __webpack_require__(463);\n\n    var graphic = {};\n\n    graphic.Group = __webpack_require__(483);\n\n    graphic.Image = __webpack_require__(479);\n\n    graphic.Text = __webpack_require__(480);\n\n    graphic.Circle = __webpack_require__(526);\n\n    graphic.Sector = __webpack_require__(532);\n\n    graphic.Ring = __webpack_require__(531);\n\n    graphic.Polygon = __webpack_require__(528);\n\n    graphic.Polyline = __webpack_require__(529);\n\n    graphic.Rect = __webpack_require__(530);\n\n    graphic.Line = __webpack_require__(527);\n\n    graphic.BezierCurve = __webpack_require__(525);\n\n    graphic.Arc = __webpack_require__(524);\n\n    graphic.CompoundPath = __webpack_require__(517);\n\n    graphic.LinearGradient = __webpack_require__(518);\n\n    graphic.RadialGradient = __webpack_require__(519);\n\n    graphic.BoundingRect = __webpack_require__(467);\n\n    /**\n     * Extend shape with parameters\n     */\n    graphic.extendShape = function (opts) {\n        return Path.extend(opts);\n    };\n\n    /**\n     * Extend path\n     */\n    graphic.extendPath = function (pathData, opts) {\n        return pathTool.extendFromString(pathData, opts);\n    };\n\n    /**\n     * Create a path element from path data string\n     * @param {string} pathData\n     * @param {Object} opts\n     * @param {module:zrender/core/BoundingRect} rect\n     * @param {string} [layout=cover] 'center' or 'cover'\n     */\n    graphic.makePath = function (pathData, opts, rect, layout) {\n        var path = pathTool.createFromString(pathData, opts);\n        var boundingRect = path.getBoundingRect();\n        if (rect) {\n            var aspect = boundingRect.width / boundingRect.height;\n\n            if (layout === 'center') {\n                // Set rect to center, keep width / height ratio.\n                var width = rect.height * aspect;\n                var height;\n                if (width <= rect.width) {\n                    height = rect.height;\n                }\n                else {\n                    width = rect.width;\n                    height = width / aspect;\n                }\n                var cx = rect.x + rect.width / 2;\n                var cy = rect.y + rect.height / 2;\n\n                rect.x = cx - width / 2;\n                rect.y = cy - height / 2;\n                rect.width = width;\n                rect.height = height;\n            }\n\n            graphic.resizePath(path, rect);\n        }\n        return path;\n    };\n\n    graphic.mergePath = pathTool.mergePath,\n\n    /**\n     * Resize a path to fit the rect\n     * @param {module:zrender/graphic/Path} path\n     * @param {Object} rect\n     */\n    graphic.resizePath = function (path, rect) {\n        if (!path.applyTransform) {\n            return;\n        }\n\n        var pathRect = path.getBoundingRect();\n\n        var m = pathRect.calculateTransform(rect);\n\n        path.applyTransform(m);\n    };\n\n    /**\n     * Sub pixel optimize line for canvas\n     *\n     * @param {Object} param\n     * @param {Object} [param.shape]\n     * @param {number} [param.shape.x1]\n     * @param {number} [param.shape.y1]\n     * @param {number} [param.shape.x2]\n     * @param {number} [param.shape.y2]\n     * @param {Object} [param.style]\n     * @param {number} [param.style.lineWidth]\n     * @return {Object} Modified param\n     */\n    graphic.subPixelOptimizeLine = function (param) {\n        var subPixelOptimize = graphic.subPixelOptimize;\n        var shape = param.shape;\n        var lineWidth = param.style.lineWidth;\n\n        if (round(shape.x1 * 2) === round(shape.x2 * 2)) {\n            shape.x1 = shape.x2 = subPixelOptimize(shape.x1, lineWidth, true);\n        }\n        if (round(shape.y1 * 2) === round(shape.y2 * 2)) {\n            shape.y1 = shape.y2 = subPixelOptimize(shape.y1, lineWidth, true);\n        }\n        return param;\n    };\n\n    /**\n     * Sub pixel optimize rect for canvas\n     *\n     * @param {Object} param\n     * @param {Object} [param.shape]\n     * @param {number} [param.shape.x]\n     * @param {number} [param.shape.y]\n     * @param {number} [param.shape.width]\n     * @param {number} [param.shape.height]\n     * @param {Object} [param.style]\n     * @param {number} [param.style.lineWidth]\n     * @return {Object} Modified param\n     */\n    graphic.subPixelOptimizeRect = function (param) {\n        var subPixelOptimize = graphic.subPixelOptimize;\n        var shape = param.shape;\n        var lineWidth = param.style.lineWidth;\n        var originX = shape.x;\n        var originY = shape.y;\n        var originWidth = shape.width;\n        var originHeight = shape.height;\n        shape.x = subPixelOptimize(shape.x, lineWidth, true);\n        shape.y = subPixelOptimize(shape.y, lineWidth, true);\n        shape.width = Math.max(\n            subPixelOptimize(originX + originWidth, lineWidth, false) - shape.x,\n            originWidth === 0 ? 0 : 1\n        );\n        shape.height = Math.max(\n            subPixelOptimize(originY + originHeight, lineWidth, false) - shape.y,\n            originHeight === 0 ? 0 : 1\n        );\n        return param;\n    };\n\n    /**\n     * Sub pixel optimize for canvas\n     *\n     * @param {number} position Coordinate, such as x, y\n     * @param {number} lineWidth Should be nonnegative integer.\n     * @param {boolean=} positiveOrNegative Default false (negative).\n     * @return {number} Optimized position.\n     */\n    graphic.subPixelOptimize = function (position, lineWidth, positiveOrNegative) {\n        // Assure that (position + lineWidth / 2) is near integer edge,\n        // otherwise line will be fuzzy in canvas.\n        var doubledPosition = round(position * 2);\n        return (doubledPosition + round(lineWidth)) % 2 === 0\n            ? doubledPosition / 2\n            : (doubledPosition + (positiveOrNegative ? 1 : -1)) / 2;\n    };\n\n    function hasFillOrStroke(fillOrStroke) {\n        return fillOrStroke != null && fillOrStroke != 'none';\n    }\n\n    function liftColor(color) {\n        return typeof color === 'string' ? colorTool.lift(color, -0.1) : color;\n    }\n\n    /**\n     * @private\n     */\n    function cacheElementStl(el) {\n        if (el.__hoverStlDirty) {\n            var stroke = el.style.stroke;\n            var fill = el.style.fill;\n\n            // Create hoverStyle on mouseover\n            var hoverStyle = el.__hoverStl;\n            hoverStyle.fill = hoverStyle.fill\n                || (hasFillOrStroke(fill) ? liftColor(fill) : null);\n            hoverStyle.stroke = hoverStyle.stroke\n                || (hasFillOrStroke(stroke) ? liftColor(stroke) : null);\n\n            var normalStyle = {};\n            for (var name in hoverStyle) {\n                if (hoverStyle.hasOwnProperty(name)) {\n                    normalStyle[name] = el.style[name];\n                }\n            }\n\n            el.__normalStl = normalStyle;\n\n            el.__hoverStlDirty = false;\n        }\n    }\n\n    /**\n     * @private\n     */\n    function doSingleEnterHover(el) {\n        if (el.__isHover) {\n            return;\n        }\n\n        cacheElementStl(el);\n\n        if (el.useHoverLayer) {\n            el.__zr && el.__zr.addHover(el, el.__hoverStl);\n        }\n        else {\n            el.setStyle(el.__hoverStl);\n            el.z2 += 1;\n        }\n\n        el.__isHover = true;\n    }\n\n    /**\n     * @inner\n     */\n    function doSingleLeaveHover(el) {\n        if (!el.__isHover) {\n            return;\n        }\n\n        var normalStl = el.__normalStl;\n        if (el.useHoverLayer) {\n            el.__zr && el.__zr.removeHover(el);\n        }\n        else {\n            normalStl && el.setStyle(normalStl);\n            el.z2 -= 1;\n        }\n\n        el.__isHover = false;\n    }\n\n    /**\n     * @inner\n     */\n    function doEnterHover(el) {\n        el.type === 'group'\n            ? el.traverse(function (child) {\n                if (child.type !== 'group') {\n                    doSingleEnterHover(child);\n                }\n            })\n            : doSingleEnterHover(el);\n    }\n\n    function doLeaveHover(el) {\n        el.type === 'group'\n            ? el.traverse(function (child) {\n                if (child.type !== 'group') {\n                    doSingleLeaveHover(child);\n                }\n            })\n            : doSingleLeaveHover(el);\n    }\n\n    /**\n     * @inner\n     */\n    function setElementHoverStl(el, hoverStl) {\n        // If element has sepcified hoverStyle, then use it instead of given hoverStyle\n        // Often used when item group has a label element and it's hoverStyle is different\n        el.__hoverStl = el.hoverStyle || hoverStl || {};\n        el.__hoverStlDirty = true;\n\n        if (el.__isHover) {\n            cacheElementStl(el);\n        }\n    }\n\n    /**\n     * @inner\n     */\n    function onElementMouseOver(e) {\n        if (this.__hoverSilentOnTouch && e.zrByTouch) {\n            return;\n        }\n\n        // Only if element is not in emphasis status\n        !this.__isEmphasis && doEnterHover(this);\n    }\n\n    /**\n     * @inner\n     */\n    function onElementMouseOut(e) {\n        if (this.__hoverSilentOnTouch && e.zrByTouch) {\n            return;\n        }\n\n        // Only if element is not in emphasis status\n        !this.__isEmphasis && doLeaveHover(this);\n    }\n\n    /**\n     * @inner\n     */\n    function enterEmphasis() {\n        this.__isEmphasis = true;\n        doEnterHover(this);\n    }\n\n    /**\n     * @inner\n     */\n    function leaveEmphasis() {\n        this.__isEmphasis = false;\n        doLeaveHover(this);\n    }\n\n    /**\n     * Set hover style of element\n     * @param {module:zrender/Element} el\n     * @param {Object} [hoverStyle]\n     * @param {Object} [opt]\n     * @param {boolean} [opt.hoverSilentOnTouch=false]\n     *        In touch device, mouseover event will be trigger on touchstart event\n     *        (see module:zrender/dom/HandlerProxy). By this mechanism, we can\n     *        conviniently use hoverStyle when tap on touch screen without additional\n     *        code for compatibility.\n     *        But if the chart/component has select feature, which usually also use\n     *        hoverStyle, there might be conflict between 'select-highlight' and\n     *        'hover-highlight' especially when roam is enabled (see geo for example).\n     *        In this case, hoverSilentOnTouch should be used to disable hover-highlight\n     *        on touch device.\n     */\n    graphic.setHoverStyle = function (el, hoverStyle, opt) {\n        el.__hoverSilentOnTouch = opt && opt.hoverSilentOnTouch;\n\n        el.type === 'group'\n            ? el.traverse(function (child) {\n                if (child.type !== 'group') {\n                    setElementHoverStl(child, hoverStyle);\n                }\n            })\n            : setElementHoverStl(el, hoverStyle);\n\n        // Duplicated function will be auto-ignored, see Eventful.js.\n        el.on('mouseover', onElementMouseOver)\n          .on('mouseout', onElementMouseOut);\n\n        // Emphasis, normal can be triggered manually\n        el.on('emphasis', enterEmphasis)\n          .on('normal', leaveEmphasis);\n    };\n\n    /**\n     * Set text option in the style\n     * @param {Object} textStyle\n     * @param {module:echarts/model/Model} labelModel\n     * @param {string} color\n     */\n    graphic.setText = function (textStyle, labelModel, color) {\n        var labelPosition = labelModel.getShallow('position') || 'inside';\n        var labelOffset = labelModel.getShallow('offset');\n        var labelColor = labelPosition.indexOf('inside') >= 0 ? 'white' : color;\n        var textStyleModel = labelModel.getModel('textStyle');\n        zrUtil.extend(textStyle, {\n            textDistance: labelModel.getShallow('distance') || 5,\n            textFont: textStyleModel.getFont(),\n            textPosition: labelPosition,\n            textOffset: labelOffset,\n            textFill: textStyleModel.getTextColor() || labelColor\n        });\n    };\n\n    function animateOrSetProps(isUpdate, el, props, animatableModel, dataIndex, cb) {\n        if (typeof dataIndex === 'function') {\n            cb = dataIndex;\n            dataIndex = null;\n        }\n        // Do not check 'animation' property directly here. Consider this case:\n        // animation model is an `itemModel`, whose does not have `isAnimationEnabled`\n        // but its parent model (`seriesModel`) does.\n        var animationEnabled = animatableModel && animatableModel.isAnimationEnabled();\n\n        if (animationEnabled) {\n            var postfix = isUpdate ? 'Update' : '';\n            var duration = animatableModel.getShallow('animationDuration' + postfix);\n            var animationEasing = animatableModel.getShallow('animationEasing' + postfix);\n            var animationDelay = animatableModel.getShallow('animationDelay' + postfix);\n            if (typeof animationDelay === 'function') {\n                animationDelay = animationDelay(\n                    dataIndex,\n                    animatableModel.getAnimationDelayParams\n                        ? animatableModel.getAnimationDelayParams(el, dataIndex)\n                        : null\n                );\n            }\n            if (typeof duration === 'function') {\n                duration = duration(dataIndex);\n            }\n\n            duration > 0\n                ? el.animateTo(props, duration, animationDelay || 0, animationEasing, cb)\n                : (el.attr(props), cb && cb());\n        }\n        else {\n            el.attr(props);\n            cb && cb();\n        }\n    }\n\n    /**\n     * Update graphic element properties with or without animation according to the configuration in series\n     * @param {module:zrender/Element} el\n     * @param {Object} props\n     * @param {module:echarts/model/Model} [animatableModel]\n     * @param {number} [dataIndex]\n     * @param {Function} [cb]\n     * @example\n     *     graphic.updateProps(el, {\n     *         position: [100, 100]\n     *     }, seriesModel, dataIndex, function () { console.log('Animation done!'); });\n     *     // Or\n     *     graphic.updateProps(el, {\n     *         position: [100, 100]\n     *     }, seriesModel, function () { console.log('Animation done!'); });\n     */\n    graphic.updateProps = function (el, props, animatableModel, dataIndex, cb) {\n        animateOrSetProps(true, el, props, animatableModel, dataIndex, cb);\n    };\n\n    /**\n     * Init graphic element properties with or without animation according to the configuration in series\n     * @param {module:zrender/Element} el\n     * @param {Object} props\n     * @param {module:echarts/model/Model} [animatableModel]\n     * @param {number} [dataIndex]\n     * @param {Function} cb\n     */\n    graphic.initProps = function (el, props, animatableModel, dataIndex, cb) {\n        animateOrSetProps(false, el, props, animatableModel, dataIndex, cb);\n    };\n\n    /**\n     * Get transform matrix of target (param target),\n     * in coordinate of its ancestor (param ancestor)\n     *\n     * @param {module:zrender/mixin/Transformable} target\n     * @param {module:zrender/mixin/Transformable} [ancestor]\n     */\n    graphic.getTransform = function (target, ancestor) {\n        var mat = matrix.identity([]);\n\n        while (target && target !== ancestor) {\n            matrix.mul(mat, target.getLocalTransform(), mat);\n            target = target.parent;\n        }\n\n        return mat;\n    };\n\n    /**\n     * Apply transform to an vertex.\n     * @param {Array.<number>} vertex [x, y]\n     * @param {Array.<number>} transform Transform matrix: like [1, 0, 0, 1, 0, 0]\n     * @param {boolean=} invert Whether use invert matrix.\n     * @return {Array.<number>} [x, y]\n     */\n    graphic.applyTransform = function (vertex, transform, invert) {\n        if (invert) {\n            transform = matrix.invert([], transform);\n        }\n        return vector.applyTransform([], vertex, transform);\n    };\n\n    /**\n     * @param {string} direction 'left' 'right' 'top' 'bottom'\n     * @param {Array.<number>} transform Transform matrix: like [1, 0, 0, 1, 0, 0]\n     * @param {boolean=} invert Whether use invert matrix.\n     * @return {string} Transformed direction. 'left' 'right' 'top' 'bottom'\n     */\n    graphic.transformDirection = function (direction, transform, invert) {\n\n        // Pick a base, ensure that transform result will not be (0, 0).\n        var hBase = (transform[4] === 0 || transform[5] === 0 || transform[0] === 0)\n            ? 1 : Math.abs(2 * transform[4] / transform[0]);\n        var vBase = (transform[4] === 0 || transform[5] === 0 || transform[2] === 0)\n            ? 1 : Math.abs(2 * transform[4] / transform[2]);\n\n        var vertex = [\n            direction === 'left' ? -hBase : direction === 'right' ? hBase : 0,\n            direction === 'top' ? -vBase : direction === 'bottom' ? vBase : 0\n        ];\n\n        vertex = graphic.applyTransform(vertex, transform, invert);\n\n        return Math.abs(vertex[0]) > Math.abs(vertex[1])\n            ? (vertex[0] > 0 ? 'right' : 'left')\n            : (vertex[1] > 0 ? 'bottom' : 'top');\n    };\n\n    /**\n     * Apply group transition animation from g1 to g2\n     */\n    graphic.groupTransition = function (g1, g2, animatableModel, cb) {\n        if (!g1 || !g2) {\n            return;\n        }\n\n        function getElMap(g) {\n            var elMap = {};\n            g.traverse(function (el) {\n                if (!el.isGroup && el.anid) {\n                    elMap[el.anid] = el;\n                }\n            });\n            return elMap;\n        }\n        function getAnimatableProps(el) {\n            var obj = {\n                position: vector.clone(el.position),\n                rotation: el.rotation\n            };\n            if (el.shape) {\n                obj.shape = zrUtil.extend({}, el.shape);\n            }\n            return obj;\n        }\n        var elMap1 = getElMap(g1);\n\n        g2.traverse(function (el) {\n            if (!el.isGroup && el.anid) {\n                var oldEl = elMap1[el.anid];\n                if (oldEl) {\n                    var newProp = getAnimatableProps(el);\n                    el.attr(getAnimatableProps(oldEl));\n                    graphic.updateProps(el, newProp, animatableModel, el.dataIndex);\n                }\n                // else {\n                //     if (el.previousProps) {\n                //         graphic.updateProps\n                //     }\n                // }\n            }\n        });\n    };\n\n    module.exports = graphic;\n\n\n\n/***/ }),\n/* 465 */\n/***/ (function(module, exports) {\n\n/**\n * 数值处理模块\n * @module echarts/util/number\n */\n\n\n\n    var number = {};\n\n    var RADIAN_EPSILON = 1e-4;\n\n    function _trim(str) {\n        return str.replace(/^\\s+/, '').replace(/\\s+$/, '');\n    }\n\n    /**\n     * Linear mapping a value from domain to range\n     * @memberOf module:echarts/util/number\n     * @param  {(number|Array.<number>)} val\n     * @param  {Array.<number>} domain Domain extent domain[0] can be bigger than domain[1]\n     * @param  {Array.<number>} range  Range extent range[0] can be bigger than range[1]\n     * @param  {boolean} clamp\n     * @return {(number|Array.<number>}\n     */\n    number.linearMap = function (val, domain, range, clamp) {\n        var subDomain = domain[1] - domain[0];\n        var subRange = range[1] - range[0];\n\n        if (subDomain === 0) {\n            return subRange === 0\n                ? range[0]\n                : (range[0] + range[1]) / 2;\n        }\n\n        // Avoid accuracy problem in edge, such as\n        // 146.39 - 62.83 === 83.55999999999999.\n        // See echarts/test/ut/spec/util/number.js#linearMap#accuracyError\n        // It is a little verbose for efficiency considering this method\n        // is a hotspot.\n        if (clamp) {\n            if (subDomain > 0) {\n                if (val <= domain[0]) {\n                    return range[0];\n                }\n                else if (val >= domain[1]) {\n                    return range[1];\n                }\n            }\n            else {\n                if (val >= domain[0]) {\n                    return range[0];\n                }\n                else if (val <= domain[1]) {\n                    return range[1];\n                }\n            }\n        }\n        else {\n            if (val === domain[0]) {\n                return range[0];\n            }\n            if (val === domain[1]) {\n                return range[1];\n            }\n        }\n\n        return (val - domain[0]) / subDomain * subRange + range[0];\n    };\n\n    /**\n     * Convert a percent string to absolute number.\n     * Returns NaN if percent is not a valid string or number\n     * @memberOf module:echarts/util/number\n     * @param {string|number} percent\n     * @param {number} all\n     * @return {number}\n     */\n    number.parsePercent = function(percent, all) {\n        switch (percent) {\n            case 'center':\n            case 'middle':\n                percent = '50%';\n                break;\n            case 'left':\n            case 'top':\n                percent = '0%';\n                break;\n            case 'right':\n            case 'bottom':\n                percent = '100%';\n                break;\n        }\n        if (typeof percent === 'string') {\n            if (_trim(percent).match(/%$/)) {\n                return parseFloat(percent) / 100 * all;\n            }\n\n            return parseFloat(percent);\n        }\n\n        return percent == null ? NaN : +percent;\n    };\n\n    /**\n     * Fix rounding error of float numbers\n     * @param {number} x\n     * @return {number}\n     */\n    number.round = function (x, precision) {\n        if (precision == null) {\n            precision = 10;\n        }\n        // Avoid range error\n        precision = Math.min(Math.max(0, precision), 20);\n        return +(+x).toFixed(precision);\n    };\n\n    number.asc = function (arr) {\n        arr.sort(function (a, b) {\n            return a - b;\n        });\n        return arr;\n    };\n\n    /**\n     * Get precision\n     * @param {number} val\n     */\n    number.getPrecision = function (val) {\n        val = +val;\n        if (isNaN(val)) {\n            return 0;\n        }\n        // It is much faster than methods converting number to string as follows\n        //      var tmp = val.toString();\n        //      return tmp.length - 1 - tmp.indexOf('.');\n        // especially when precision is low\n        var e = 1;\n        var count = 0;\n        while (Math.round(val * e) / e !== val) {\n            e *= 10;\n            count++;\n        }\n        return count;\n    };\n\n    number.getPrecisionSafe = function (val) {\n        var str = val.toString();\n        var dotIndex = str.indexOf('.');\n        if (dotIndex < 0) {\n            return 0;\n        }\n        return str.length - 1 - dotIndex;\n    };\n\n    /**\n     * Minimal dicernible data precisioin according to a single pixel.\n     * @param {Array.<number>} dataExtent\n     * @param {Array.<number>} pixelExtent\n     * @return {number} precision\n     */\n    number.getPixelPrecision = function (dataExtent, pixelExtent) {\n        var log = Math.log;\n        var LN10 = Math.LN10;\n        var dataQuantity = Math.floor(log(dataExtent[1] - dataExtent[0]) / LN10);\n        var sizeQuantity = Math.round(log(Math.abs(pixelExtent[1] - pixelExtent[0])) / LN10);\n        // toFixed() digits argument must be between 0 and 20.\n        var precision = Math.min(Math.max(-dataQuantity + sizeQuantity, 0), 20);\n        return !isFinite(precision) ? 20 : precision;\n    };\n\n    // Number.MAX_SAFE_INTEGER, ie do not support.\n    number.MAX_SAFE_INTEGER = 9007199254740991;\n\n    /**\n     * To 0 - 2 * PI, considering negative radian.\n     * @param {number} radian\n     * @return {number}\n     */\n    number.remRadian = function (radian) {\n        var pi2 = Math.PI * 2;\n        return (radian % pi2 + pi2) % pi2;\n    };\n\n    /**\n     * @param {type} radian\n     * @return {boolean}\n     */\n    number.isRadianAroundZero = function (val) {\n        return val > -RADIAN_EPSILON && val < RADIAN_EPSILON;\n    };\n\n    /**\n     * @param {string|Date|number} value\n     * @return {Date} date\n     */\n    number.parseDate = function (value) {\n        if (value instanceof Date) {\n            return value;\n        }\n        else if (typeof value === 'string') {\n            // Treat as ISO format. See issue #3623\n            var ret = new Date(value);\n            if (isNaN(+ret)) {\n                // FIXME new Date('1970-01-01') is UTC, new Date('1970/01/01') is local\n                ret = new Date(new Date(value.replace(/-/g, '/')) - new Date('1970/01/01'));\n            }\n            return ret;\n        }\n\n        return new Date(Math.round(value));\n    };\n\n    /**\n     * Quantity of a number. e.g. 0.1, 1, 10, 100\n     * @param  {number} val\n     * @return {number}\n     */\n    number.quantity = function (val) {\n        return Math.pow(10, Math.floor(Math.log(val) / Math.LN10));\n    };\n\n    // \"Nice Numbers for Graph Labels\" of Graphic Gems\n    /**\n     * find a “nice” number approximately equal to x. Round the number if round = true, take ceiling if round = false\n     * The primary observation is that the “nicest” numbers in decimal are 1, 2, and 5, and all power-of-ten multiples of these numbers.\n     * @param  {number} val\n     * @param  {boolean} round\n     * @return {number}\n     */\n    number.nice = function (val, round) {\n        var exp10 = number.quantity(val);\n        var f = val / exp10; // between 1 and 10\n        var nf;\n        if (round) {\n            if (f < 1.5) { nf = 1; }\n            else if (f < 2.5) { nf = 2; }\n            else if (f < 4) { nf = 3; }\n            else if (f < 7) { nf = 5; }\n            else { nf = 10; }\n        }\n        else {\n            if (f < 1) { nf = 1; }\n            else if (f < 2) { nf = 2; }\n            else if (f < 3) { nf = 3; }\n            else if (f < 5) { nf = 5; }\n            else { nf = 10; }\n        }\n        return nf * exp10;\n    };\n\n    /**\n     * Order intervals asc, and split them when overlap.\n     * expect(numberUtil.reformIntervals([\n     *     {interval: [18, 62], close: [1, 1]},\n     *     {interval: [-Infinity, -70], close: [0, 0]},\n     *     {interval: [-70, -26], close: [1, 1]},\n     *     {interval: [-26, 18], close: [1, 1]},\n     *     {interval: [62, 150], close: [1, 1]},\n     *     {interval: [106, 150], close: [1, 1]},\n     *     {interval: [150, Infinity], close: [0, 0]}\n     * ])).toEqual([\n     *     {interval: [-Infinity, -70], close: [0, 0]},\n     *     {interval: [-70, -26], close: [1, 1]},\n     *     {interval: [-26, 18], close: [0, 1]},\n     *     {interval: [18, 62], close: [0, 1]},\n     *     {interval: [62, 150], close: [0, 1]},\n     *     {interval: [150, Infinity], close: [0, 0]}\n     * ]);\n     * @param {Array.<Object>} list, where `close` mean open or close\n     *        of the interval, and Infinity can be used.\n     * @return {Array.<Object>} The origin list, which has been reformed.\n     */\n    number.reformIntervals = function (list) {\n        list.sort(function (a, b) {\n            return littleThan(a, b, 0) ? -1 : 1;\n        });\n\n        var curr = -Infinity;\n        var currClose = 1;\n        for (var i = 0; i < list.length;) {\n            var interval = list[i].interval;\n            var close = list[i].close;\n\n            for (var lg = 0; lg < 2; lg++) {\n                if (interval[lg] <= curr) {\n                    interval[lg] = curr;\n                    close[lg] = !lg ? 1 - currClose : 1;\n                }\n                curr = interval[lg];\n                currClose = close[lg];\n            }\n\n            if (interval[0] === interval[1] && close[0] * close[1] !== 1) {\n                list.splice(i, 1);\n            }\n            else {\n                i++;\n            }\n        }\n\n        return list;\n\n        function littleThan(a, b, lg) {\n            return a.interval[lg] < b.interval[lg]\n                || (\n                    a.interval[lg] === b.interval[lg]\n                    && (\n                        (a.close[lg] - b.close[lg] === (!lg ? 1 : -1))\n                        || (!lg && littleThan(a, b, 1))\n                    )\n                );\n        }\n    };\n\n    /**\n     * parseFloat NaNs numeric-cast false positives (null|true|false|\"\")\n     * ...but misinterprets leading-number strings, particularly hex literals (\"0x...\")\n     * subtraction forces infinities to NaN\n     * @param {*} v\n     * @return {boolean}\n     */\n    number.isNumeric = function (v) {\n        return v - parseFloat(v) >= 0;\n    };\n\n    module.exports = number;\n\n\n/***/ }),\n/* 466 */\n/***/ (function(module, exports) {\n\n/**\n * echarts设备环境识别\n *\n * @desc echarts基于Canvas，纯Javascript图表库，提供直观，生动，可交互，可个性化定制的数据统计图表。\n * @author firede[firede@firede.us]\n * @desc thanks zepto.\n */\nvar env = {};\n\nif (typeof navigator === 'undefined') {\n  // In node\n  env = {\n    browser: {},\n    os: {},\n    node: true,\n    // Assume canvas is supported\n    canvasSupported: true,\n    svgSupported: true\n  };\n} else {\n  env = detect(navigator.userAgent);\n}\n\nvar _default = env; // Zepto.js\n// (c) 2010-2013 Thomas Fuchs\n// Zepto.js may be freely distributed under the MIT license.\n\nfunction detect(ua) {\n  var os = {};\n  var browser = {}; // var webkit = ua.match(/Web[kK]it[\\/]{0,1}([\\d.]+)/);\n  // var android = ua.match(/(Android);?[\\s\\/]+([\\d.]+)?/);\n  // var ipad = ua.match(/(iPad).*OS\\s([\\d_]+)/);\n  // var ipod = ua.match(/(iPod)(.*OS\\s([\\d_]+))?/);\n  // var iphone = !ipad && ua.match(/(iPhone\\sOS)\\s([\\d_]+)/);\n  // var webos = ua.match(/(webOS|hpwOS)[\\s\\/]([\\d.]+)/);\n  // var touchpad = webos && ua.match(/TouchPad/);\n  // var kindle = ua.match(/Kindle\\/([\\d.]+)/);\n  // var silk = ua.match(/Silk\\/([\\d._]+)/);\n  // var blackberry = ua.match(/(BlackBerry).*Version\\/([\\d.]+)/);\n  // var bb10 = ua.match(/(BB10).*Version\\/([\\d.]+)/);\n  // var rimtabletos = ua.match(/(RIM\\sTablet\\sOS)\\s([\\d.]+)/);\n  // var playbook = ua.match(/PlayBook/);\n  // var chrome = ua.match(/Chrome\\/([\\d.]+)/) || ua.match(/CriOS\\/([\\d.]+)/);\n\n  var firefox = ua.match(/Firefox\\/([\\d.]+)/); // var safari = webkit && ua.match(/Mobile\\//) && !chrome;\n  // var webview = ua.match(/(iPhone|iPod|iPad).*AppleWebKit(?!.*Safari)/) && !chrome;\n\n  var ie = ua.match(/MSIE\\s([\\d.]+)/) // IE 11 Trident/7.0; rv:11.0\n  || ua.match(/Trident\\/.+?rv:(([\\d.]+))/);\n  var edge = ua.match(/Edge\\/([\\d.]+)/); // IE 12 and 12+\n\n  var weChat = /micromessenger/i.test(ua); // Todo: clean this up with a better OS/browser seperation:\n  // - discern (more) between multiple browsers on android\n  // - decide if kindle fire in silk mode is android or not\n  // - Firefox on Android doesn't specify the Android version\n  // - possibly devide in os, device and browser hashes\n  // if (browser.webkit = !!webkit) browser.version = webkit[1];\n  // if (android) os.android = true, os.version = android[2];\n  // if (iphone && !ipod) os.ios = os.iphone = true, os.version = iphone[2].replace(/_/g, '.');\n  // if (ipad) os.ios = os.ipad = true, os.version = ipad[2].replace(/_/g, '.');\n  // if (ipod) os.ios = os.ipod = true, os.version = ipod[3] ? ipod[3].replace(/_/g, '.') : null;\n  // if (webos) os.webos = true, os.version = webos[2];\n  // if (touchpad) os.touchpad = true;\n  // if (blackberry) os.blackberry = true, os.version = blackberry[2];\n  // if (bb10) os.bb10 = true, os.version = bb10[2];\n  // if (rimtabletos) os.rimtabletos = true, os.version = rimtabletos[2];\n  // if (playbook) browser.playbook = true;\n  // if (kindle) os.kindle = true, os.version = kindle[1];\n  // if (silk) browser.silk = true, browser.version = silk[1];\n  // if (!silk && os.android && ua.match(/Kindle Fire/)) browser.silk = true;\n  // if (chrome) browser.chrome = true, browser.version = chrome[1];\n\n  if (firefox) {\n    browser.firefox = true;\n    browser.version = firefox[1];\n  } // if (safari && (ua.match(/Safari/) || !!os.ios)) browser.safari = true;\n  // if (webview) browser.webview = true;\n\n\n  if (ie) {\n    browser.ie = true;\n    browser.version = ie[1];\n  }\n\n  if (edge) {\n    browser.edge = true;\n    browser.version = edge[1];\n  } // It is difficult to detect WeChat in Win Phone precisely, because ua can\n  // not be set on win phone. So we do not consider Win Phone.\n\n\n  if (weChat) {\n    browser.weChat = true;\n  } // os.tablet = !!(ipad || playbook || (android && !ua.match(/Mobile/)) ||\n  //     (firefox && ua.match(/Tablet/)) || (ie && !ua.match(/Phone/) && ua.match(/Touch/)));\n  // os.phone  = !!(!os.tablet && !os.ipod && (android || iphone || webos ||\n  //     (chrome && ua.match(/Android/)) || (chrome && ua.match(/CriOS\\/([\\d.]+)/)) ||\n  //     (firefox && ua.match(/Mobile/)) || (ie && ua.match(/Touch/))));\n\n\n  return {\n    browser: browser,\n    os: os,\n    node: false,\n    // 原生canvas支持，改极端点了\n    // canvasSupported : !(browser.ie && parseFloat(browser.version) < 9)\n    canvasSupported: !!document.createElement('canvas').getContext,\n    svgSupported: typeof SVGRect !== 'undefined',\n    // @see <http://stackoverflow.com/questions/4817029/whats-the-best-way-to-detect-a-touch-screen-device-using-javascript>\n    // works on most browsers\n    // IE10/11 does not support touch event, and MS Edge supports them but not by\n    // default, so we dont check navigator.maxTouchPoints for them here.\n    touchEventsSupported: 'ontouchstart' in window && !browser.ie && !browser.edge,\n    // <http://caniuse.com/#search=pointer%20event>.\n    pointerEventsSupported: 'onpointerdown' in window // Firefox supports pointer but not by default, only MS browsers are reliable on pointer\n    // events currently. So we dont use that on other browsers unless tested sufficiently.\n    // Although IE 10 supports pointer event, it use old style and is different from the\n    // standard. So we exclude that. (IE 10 is hardly used on touch device)\n    && (browser.edge || browser.ie && browser.version >= 11)\n  };\n}\n\nmodule.exports = _default;\n\n/***/ }),\n/* 467 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar vec2 = __webpack_require__(463);\n\nvar matrix = __webpack_require__(478);\n\n/**\n * @module echarts/core/BoundingRect\n */\nvar v2ApplyTransform = vec2.applyTransform;\nvar mathMin = Math.min;\nvar mathMax = Math.max;\n/**\n * @alias module:echarts/core/BoundingRect\n */\n\nfunction BoundingRect(x, y, width, height) {\n  if (width < 0) {\n    x = x + width;\n    width = -width;\n  }\n\n  if (height < 0) {\n    y = y + height;\n    height = -height;\n  }\n  /**\n   * @type {number}\n   */\n\n\n  this.x = x;\n  /**\n   * @type {number}\n   */\n\n  this.y = y;\n  /**\n   * @type {number}\n   */\n\n  this.width = width;\n  /**\n   * @type {number}\n   */\n\n  this.height = height;\n}\n\nBoundingRect.prototype = {\n  constructor: BoundingRect,\n\n  /**\n   * @param {module:echarts/core/BoundingRect} other\n   */\n  union: function (other) {\n    var x = mathMin(other.x, this.x);\n    var y = mathMin(other.y, this.y);\n    this.width = mathMax(other.x + other.width, this.x + this.width) - x;\n    this.height = mathMax(other.y + other.height, this.y + this.height) - y;\n    this.x = x;\n    this.y = y;\n  },\n\n  /**\n   * @param {Array.<number>} m\n   * @methods\n   */\n  applyTransform: function () {\n    var lt = [];\n    var rb = [];\n    var lb = [];\n    var rt = [];\n    return function (m) {\n      // In case usage like this\n      // el.getBoundingRect().applyTransform(el.transform)\n      // And element has no transform\n      if (!m) {\n        return;\n      }\n\n      lt[0] = lb[0] = this.x;\n      lt[1] = rt[1] = this.y;\n      rb[0] = rt[0] = this.x + this.width;\n      rb[1] = lb[1] = this.y + this.height;\n      v2ApplyTransform(lt, lt, m);\n      v2ApplyTransform(rb, rb, m);\n      v2ApplyTransform(lb, lb, m);\n      v2ApplyTransform(rt, rt, m);\n      this.x = mathMin(lt[0], rb[0], lb[0], rt[0]);\n      this.y = mathMin(lt[1], rb[1], lb[1], rt[1]);\n      var maxX = mathMax(lt[0], rb[0], lb[0], rt[0]);\n      var maxY = mathMax(lt[1], rb[1], lb[1], rt[1]);\n      this.width = maxX - this.x;\n      this.height = maxY - this.y;\n    };\n  }(),\n\n  /**\n   * Calculate matrix of transforming from self to target rect\n   * @param  {module:zrender/core/BoundingRect} b\n   * @return {Array.<number>}\n   */\n  calculateTransform: function (b) {\n    var a = this;\n    var sx = b.width / a.width;\n    var sy = b.height / a.height;\n    var m = matrix.create(); // 矩阵右乘\n\n    matrix.translate(m, m, [-a.x, -a.y]);\n    matrix.scale(m, m, [sx, sy]);\n    matrix.translate(m, m, [b.x, b.y]);\n    return m;\n  },\n\n  /**\n   * @param {(module:echarts/core/BoundingRect|Object)} b\n   * @return {boolean}\n   */\n  intersect: function (b) {\n    if (!b) {\n      return false;\n    }\n\n    if (!(b instanceof BoundingRect)) {\n      // Normalize negative width/height.\n      b = BoundingRect.create(b);\n    }\n\n    var a = this;\n    var ax0 = a.x;\n    var ax1 = a.x + a.width;\n    var ay0 = a.y;\n    var ay1 = a.y + a.height;\n    var bx0 = b.x;\n    var bx1 = b.x + b.width;\n    var by0 = b.y;\n    var by1 = b.y + b.height;\n    return !(ax1 < bx0 || bx1 < ax0 || ay1 < by0 || by1 < ay0);\n  },\n  contain: function (x, y) {\n    var rect = this;\n    return x >= rect.x && x <= rect.x + rect.width && y >= rect.y && y <= rect.y + rect.height;\n  },\n\n  /**\n   * @return {module:echarts/core/BoundingRect}\n   */\n  clone: function () {\n    return new BoundingRect(this.x, this.y, this.width, this.height);\n  },\n\n  /**\n   * Copy from another rect\n   */\n  copy: function (other) {\n    this.x = other.x;\n    this.y = other.y;\n    this.width = other.width;\n    this.height = other.height;\n  },\n  plain: function () {\n    return {\n      x: this.x,\n      y: this.y,\n      width: this.width,\n      height: this.height\n    };\n  }\n};\n/**\n * @param {Object|module:zrender/core/BoundingRect} rect\n * @param {number} rect.x\n * @param {number} rect.y\n * @param {number} rect.width\n * @param {number} rect.height\n * @return {module:zrender/core/BoundingRect}\n */\n\nBoundingRect.create = function (rect) {\n  return new BoundingRect(rect.x, rect.y, rect.width, rect.height);\n};\n\nvar _default = BoundingRect;\nmodule.exports = _default;\n\n/***/ }),\n/* 468 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var zrUtil = __webpack_require__(460);\n    var numberUtil = __webpack_require__(465);\n    var textContain = __webpack_require__(473);\n\n    var formatUtil = {};\n    /**\n     * 每三位默认加,格式化\n     * @type {string|number} x\n     */\n    formatUtil.addCommas = function (x) {\n        if (isNaN(x)) {\n            return '-';\n        }\n        x = (x + '').split('.');\n        return x[0].replace(/(\\d{1,3})(?=(?:\\d{3})+(?!\\d))/g,'$1,')\n               + (x.length > 1 ? ('.' + x[1]) : '');\n    };\n\n    /**\n     * @param {string} str\n     * @param {boolean} [upperCaseFirst=false]\n     * @return {string} str\n     */\n    formatUtil.toCamelCase = function (str, upperCaseFirst) {\n        str = (str || '').toLowerCase().replace(/-(.)/g, function(match, group1) {\n            return group1.toUpperCase();\n        });\n\n        if (upperCaseFirst && str) {\n            str = str.charAt(0).toUpperCase() + str.slice(1);\n        }\n\n        return str;\n    };\n\n    /**\n     * Normalize css liked array configuration\n     * e.g.\n     *  3 => [3, 3, 3, 3]\n     *  [4, 2] => [4, 2, 4, 2]\n     *  [4, 3, 2] => [4, 3, 2, 3]\n     * @param {number|Array.<number>} val\n     */\n    formatUtil.normalizeCssArray = function (val) {\n        var len = val.length;\n        if (typeof (val) === 'number') {\n            return [val, val, val, val];\n        }\n        else if (len === 2) {\n            // vertical | horizontal\n            return [val[0], val[1], val[0], val[1]];\n        }\n        else if (len === 3) {\n            // top | horizontal | bottom\n            return [val[0], val[1], val[2], val[1]];\n        }\n        return val;\n    };\n\n    var encodeHTML = formatUtil.encodeHTML = function (source) {\n        return String(source)\n            .replace(/&/g, '&amp;')\n            .replace(/</g, '&lt;')\n            .replace(/>/g, '&gt;')\n            .replace(/\"/g, '&quot;')\n            .replace(/'/g, '&#39;');\n    };\n\n    var TPL_VAR_ALIAS = ['a', 'b', 'c', 'd', 'e', 'f', 'g'];\n\n    var wrapVar = function (varName, seriesIdx) {\n        return '{' + varName + (seriesIdx == null ? '' : seriesIdx) + '}';\n    };\n\n    /**\n     * Template formatter\n     * @param {string} tpl\n     * @param {Array.<Object>|Object} paramsList\n     * @param {boolean} [encode=false]\n     * @return {string}\n     */\n    formatUtil.formatTpl = function (tpl, paramsList, encode) {\n        if (!zrUtil.isArray(paramsList)) {\n            paramsList = [paramsList];\n        }\n        var seriesLen = paramsList.length;\n        if (!seriesLen) {\n            return '';\n        }\n\n        var $vars = paramsList[0].$vars || [];\n        for (var i = 0; i < $vars.length; i++) {\n            var alias = TPL_VAR_ALIAS[i];\n            var val = wrapVar(alias, 0);\n            tpl = tpl.replace(wrapVar(alias), encode ? encodeHTML(val) : val);\n        }\n        for (var seriesIdx = 0; seriesIdx < seriesLen; seriesIdx++) {\n            for (var k = 0; k < $vars.length; k++) {\n                var val = paramsList[seriesIdx][$vars[k]];\n                tpl = tpl.replace(\n                    wrapVar(TPL_VAR_ALIAS[k], seriesIdx),\n                    encode ? encodeHTML(val) : val\n                );\n            }\n        }\n\n        return tpl;\n    };\n\n\n    /**\n     * @param {string} str\n     * @return {string}\n     * @inner\n     */\n    var s2d = function (str) {\n        return str < 10 ? ('0' + str) : str;\n    };\n\n    /**\n     * ISO Date format\n     * @param {string} tpl\n     * @param {number} value\n     * @inner\n     */\n    formatUtil.formatTime = function (tpl, value) {\n        if (tpl === 'week'\n            || tpl === 'month'\n            || tpl === 'quarter'\n            || tpl === 'half-year'\n            || tpl === 'year'\n        ) {\n            tpl = 'MM-dd\\nyyyy';\n        }\n\n        var date = numberUtil.parseDate(value);\n        var y = date.getFullYear();\n        var M = date.getMonth() + 1;\n        var d = date.getDate();\n        var h = date.getHours();\n        var m = date.getMinutes();\n        var s = date.getSeconds();\n\n        tpl = tpl.replace('MM', s2d(M))\n            .toLowerCase()\n            .replace('yyyy', y)\n            .replace('yy', y % 100)\n            .replace('dd', s2d(d))\n            .replace('d', d)\n            .replace('hh', s2d(h))\n            .replace('h', h)\n            .replace('mm', s2d(m))\n            .replace('m', m)\n            .replace('ss', s2d(s))\n            .replace('s', s);\n\n        return tpl;\n    };\n\n    /**\n     * Capital first\n     * @param {string} str\n     * @return {string}\n     */\n    formatUtil.capitalFirst = function (str) {\n        return str ? str.charAt(0).toUpperCase() + str.substr(1) : str;\n    };\n\n    formatUtil.truncateText = textContain.truncateText;\n\n    module.exports = formatUtil;\n\n\n/***/ }),\n/* 469 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var formatUtil = __webpack_require__(468);\n    var nubmerUtil = __webpack_require__(465);\n    var Model = __webpack_require__(470);\n    var zrUtil = __webpack_require__(460);\n    var each = zrUtil.each;\n    var isObject = zrUtil.isObject;\n\n    var modelUtil = {};\n\n    /**\n     * If value is not array, then translate it to array.\n     * @param  {*} value\n     * @return {Array} [value] or value\n     */\n    modelUtil.normalizeToArray = function (value) {\n        return value instanceof Array\n            ? value\n            : value == null\n            ? []\n            : [value];\n    };\n\n    /**\n     * Sync default option between normal and emphasis like `position` and `show`\n     * In case some one will write code like\n     *     label: {\n     *         normal: {\n     *             show: false,\n     *             position: 'outside',\n     *             textStyle: {\n     *                 fontSize: 18\n     *             }\n     *         },\n     *         emphasis: {\n     *             show: true\n     *         }\n     *     }\n     * @param {Object} opt\n     * @param {Array.<string>} subOpts\n     */\n     modelUtil.defaultEmphasis = function (opt, subOpts) {\n        if (opt) {\n            var emphasisOpt = opt.emphasis = opt.emphasis || {};\n            var normalOpt = opt.normal = opt.normal || {};\n\n            // Default emphasis option from normal\n            each(subOpts, function (subOptName) {\n                var val = zrUtil.retrieve(emphasisOpt[subOptName], normalOpt[subOptName]);\n                if (val != null) {\n                    emphasisOpt[subOptName] = val;\n                }\n            });\n        }\n    };\n\n    modelUtil.LABEL_OPTIONS = ['position', 'offset', 'show', 'textStyle', 'distance', 'formatter'];\n\n    /**\n     * data could be [12, 2323, {value: 223}, [1221, 23], {value: [2, 23]}]\n     * This helper method retieves value from data.\n     * @param {string|number|Date|Array|Object} dataItem\n     * @return {number|string|Date|Array.<number|string|Date>}\n     */\n    modelUtil.getDataItemValue = function (dataItem) {\n        // Performance sensitive.\n        return dataItem && (dataItem.value == null ? dataItem : dataItem.value);\n    };\n\n    /**\n     * data could be [12, 2323, {value: 223}, [1221, 23], {value: [2, 23]}]\n     * This helper method determine if dataItem has extra option besides value\n     * @param {string|number|Date|Array|Object} dataItem\n     */\n    modelUtil.isDataItemOption = function (dataItem) {\n        return isObject(dataItem)\n            && !(dataItem instanceof Array);\n            // // markLine data can be array\n            // && !(dataItem[0] && isObject(dataItem[0]) && !(dataItem[0] instanceof Array));\n    };\n\n    /**\n     * This helper method convert value in data.\n     * @param {string|number|Date} value\n     * @param {Object|string} [dimInfo] If string (like 'x'), dimType defaults 'number'.\n     */\n    modelUtil.converDataValue = function (value, dimInfo) {\n        // Performance sensitive.\n        var dimType = dimInfo && dimInfo.type;\n        if (dimType === 'ordinal') {\n            return value;\n        }\n\n        if (dimType === 'time' && !isFinite(value) && value != null && value !== '-') {\n            value = +nubmerUtil.parseDate(value);\n        }\n\n        // dimType defaults 'number'.\n        // If dimType is not ordinal and value is null or undefined or NaN or '-',\n        // parse to NaN.\n        return (value == null || value === '')\n            ? NaN : +value; // If string (like '-'), using '+' parse to NaN\n    };\n\n    /**\n     * Create a model proxy to be used in tooltip for edge data, markLine data, markPoint data.\n     * @param {module:echarts/data/List} data\n     * @param {Object} opt\n     * @param {string} [opt.seriesIndex]\n     * @param {Object} [opt.name]\n     * @param {Object} [opt.mainType]\n     * @param {Object} [opt.subType]\n     */\n    modelUtil.createDataFormatModel = function (data, opt) {\n        var model = new Model();\n        zrUtil.mixin(model, modelUtil.dataFormatMixin);\n        model.seriesIndex = opt.seriesIndex;\n        model.name = opt.name || '';\n        model.mainType = opt.mainType;\n        model.subType = opt.subType;\n\n        model.getData = function () {\n            return data;\n        };\n        return model;\n    };\n\n    // PENDING A little ugly\n    modelUtil.dataFormatMixin = {\n        /**\n         * Get params for formatter\n         * @param {number} dataIndex\n         * @param {string} [dataType]\n         * @return {Object}\n         */\n        getDataParams: function (dataIndex, dataType) {\n            var data = this.getData(dataType);\n\n            var seriesIndex = this.seriesIndex;\n            var seriesName = this.name;\n\n            var rawValue = this.getRawValue(dataIndex, dataType);\n            var rawDataIndex = data.getRawIndex(dataIndex);\n            var name = data.getName(dataIndex, true);\n            var itemOpt = data.getRawDataItem(dataIndex);\n\n            return {\n                componentType: this.mainType,\n                componentSubType: this.subType,\n                seriesType: this.mainType === 'series' ? this.subType : null,\n                seriesIndex: seriesIndex,\n                seriesName: seriesName,\n                name: name,\n                dataIndex: rawDataIndex,\n                data: itemOpt,\n                dataType: dataType,\n                value: rawValue,\n                color: data.getItemVisual(dataIndex, 'color'),\n\n                // Param name list for mapping `a`, `b`, `c`, `d`, `e`\n                $vars: ['seriesName', 'name', 'value']\n            };\n        },\n\n        /**\n         * Format label\n         * @param {number} dataIndex\n         * @param {string} [status='normal'] 'normal' or 'emphasis'\n         * @param {string} [dataType]\n         * @param {number} [dimIndex]\n         * @return {string}\n         */\n        getFormattedLabel: function (dataIndex, status, dataType, dimIndex) {\n            status = status || 'normal';\n            var data = this.getData(dataType);\n            var itemModel = data.getItemModel(dataIndex);\n\n            var params = this.getDataParams(dataIndex, dataType);\n            if (dimIndex != null && (params.value instanceof Array)) {\n                params.value = params.value[dimIndex];\n            }\n\n            var formatter = itemModel.get(['label', status, 'formatter']);\n\n            if (typeof formatter === 'function') {\n                params.status = status;\n                return formatter(params);\n            }\n            else if (typeof formatter === 'string') {\n                return formatUtil.formatTpl(formatter, params);\n            }\n        },\n\n        /**\n         * Get raw value in option\n         * @param {number} idx\n         * @param {string} [dataType]\n         * @return {Object}\n         */\n        getRawValue: function (idx, dataType) {\n            var data = this.getData(dataType);\n            var dataItem = data.getRawDataItem(idx);\n            if (dataItem != null) {\n                return (isObject(dataItem) && !(dataItem instanceof Array))\n                    ? dataItem.value : dataItem;\n            }\n        },\n\n        /**\n         * Should be implemented.\n         * @param {number} dataIndex\n         * @param {boolean} [multipleSeries=false]\n         * @param {number} [dataType]\n         * @return {string} tooltip string\n         */\n        formatTooltip: zrUtil.noop\n    };\n\n    /**\n     * Mapping to exists for merge.\n     *\n     * @public\n     * @param {Array.<Object>|Array.<module:echarts/model/Component>} exists\n     * @param {Object|Array.<Object>} newCptOptions\n     * @return {Array.<Object>} Result, like [{exist: ..., option: ...}, {}],\n     *                          index of which is the same as exists.\n     */\n    modelUtil.mappingToExists = function (exists, newCptOptions) {\n        // Mapping by the order by original option (but not order of\n        // new option) in merge mode. Because we should ensure\n        // some specified index (like xAxisIndex) is consistent with\n        // original option, which is easy to understand, espatially in\n        // media query. And in most case, merge option is used to\n        // update partial option but not be expected to change order.\n        newCptOptions = (newCptOptions || []).slice();\n\n        var result = zrUtil.map(exists || [], function (obj, index) {\n            return {exist: obj};\n        });\n\n        // Mapping by id or name if specified.\n        each(newCptOptions, function (cptOption, index) {\n            if (!isObject(cptOption)) {\n                return;\n            }\n\n            // id has highest priority.\n            for (var i = 0; i < result.length; i++) {\n                if (!result[i].option // Consider name: two map to one.\n                    && cptOption.id != null\n                    && result[i].exist.id === cptOption.id + ''\n                ) {\n                    result[i].option = cptOption;\n                    newCptOptions[index] = null;\n                    return;\n                }\n            }\n\n            for (var i = 0; i < result.length; i++) {\n                var exist = result[i].exist;\n                if (!result[i].option // Consider name: two map to one.\n                    // Can not match when both ids exist but different.\n                    && (exist.id == null || cptOption.id == null)\n                    && cptOption.name != null\n                    && !modelUtil.isIdInner(cptOption)\n                    && !modelUtil.isIdInner(exist)\n                    && exist.name === cptOption.name + ''\n                ) {\n                    result[i].option = cptOption;\n                    newCptOptions[index] = null;\n                    return;\n                }\n            }\n        });\n\n        // Otherwise mapping by index.\n        each(newCptOptions, function (cptOption, index) {\n            if (!isObject(cptOption)) {\n                return;\n            }\n\n            var i = 0;\n            for (; i < result.length; i++) {\n                var exist = result[i].exist;\n                if (!result[i].option\n                    // Existing model that already has id should be able to\n                    // mapped to (because after mapping performed model may\n                    // be assigned with a id, whish should not affect next\n                    // mapping), except those has inner id.\n                    && !modelUtil.isIdInner(exist)\n                    // Caution:\n                    // Do not overwrite id. But name can be overwritten,\n                    // because axis use name as 'show label text'.\n                    // 'exist' always has id and name and we dont\n                    // need to check it.\n                    && cptOption.id == null\n                ) {\n                    result[i].option = cptOption;\n                    break;\n                }\n            }\n\n            if (i >= result.length) {\n                result.push({option: cptOption});\n            }\n        });\n\n        return result;\n    };\n\n    /**\n     * Make id and name for mapping result (result of mappingToExists)\n     * into `keyInfo` field.\n     *\n     * @public\n     * @param {Array.<Object>} Result, like [{exist: ..., option: ...}, {}],\n     *                          which order is the same as exists.\n     * @return {Array.<Object>} The input.\n     */\n    modelUtil.makeIdAndName = function (mapResult) {\n        // We use this id to hash component models and view instances\n        // in echarts. id can be specified by user, or auto generated.\n\n        // The id generation rule ensures new view instance are able\n        // to mapped to old instance when setOption are called in\n        // no-merge mode. So we generate model id by name and plus\n        // type in view id.\n\n        // name can be duplicated among components, which is convenient\n        // to specify multi components (like series) by one name.\n\n        // Ensure that each id is distinct.\n        var idMap = {};\n\n        each(mapResult, function (item, index) {\n            var existCpt = item.exist;\n            existCpt && (idMap[existCpt.id] = item);\n        });\n\n        each(mapResult, function (item, index) {\n            var opt = item.option;\n\n            zrUtil.assert(\n                !opt || opt.id == null || !idMap[opt.id] || idMap[opt.id] === item,\n                'id duplicates: ' + (opt && opt.id)\n            );\n\n            opt && opt.id != null && (idMap[opt.id] = item);\n            !item.keyInfo && (item.keyInfo = {});\n        });\n\n        // Make name and id.\n        each(mapResult, function (item, index) {\n            var existCpt = item.exist;\n            var opt = item.option;\n            var keyInfo = item.keyInfo;\n\n            if (!isObject(opt)) {\n                return;\n            }\n\n            // name can be overwitten. Consider case: axis.name = '20km'.\n            // But id generated by name will not be changed, which affect\n            // only in that case: setOption with 'not merge mode' and view\n            // instance will be recreated, which can be accepted.\n            keyInfo.name = opt.name != null\n                ? opt.name + ''\n                : existCpt\n                ? existCpt.name\n                : '\\0-';\n\n            if (existCpt) {\n                keyInfo.id = existCpt.id;\n            }\n            else if (opt.id != null) {\n                keyInfo.id = opt.id + '';\n            }\n            else {\n                // Consider this situatoin:\n                //  optionA: [{name: 'a'}, {name: 'a'}, {..}]\n                //  optionB [{..}, {name: 'a'}, {name: 'a'}]\n                // Series with the same name between optionA and optionB\n                // should be mapped.\n                var idNum = 0;\n                do {\n                    keyInfo.id = '\\0' + keyInfo.name + '\\0' + idNum++;\n                }\n                while (idMap[keyInfo.id]);\n            }\n\n            idMap[keyInfo.id] = item;\n        });\n    };\n\n    /**\n     * @public\n     * @param {Object} cptOption\n     * @return {boolean}\n     */\n    modelUtil.isIdInner = function (cptOption) {\n        return isObject(cptOption)\n            && cptOption.id\n            && (cptOption.id + '').indexOf('\\0_ec_\\0') === 0;\n    };\n\n    /**\n     * A helper for removing duplicate items between batchA and batchB,\n     * and in themselves, and categorize by series.\n     *\n     * @param {Array.<Object>} batchA Like: [{seriesId: 2, dataIndex: [32, 4, 5]}, ...]\n     * @param {Array.<Object>} batchB Like: [{seriesId: 2, dataIndex: [32, 4, 5]}, ...]\n     * @return {Array.<Array.<Object>, Array.<Object>>} result: [resultBatchA, resultBatchB]\n     */\n    modelUtil.compressBatches = function (batchA, batchB) {\n        var mapA = {};\n        var mapB = {};\n\n        makeMap(batchA || [], mapA);\n        makeMap(batchB || [], mapB, mapA);\n\n        return [mapToArray(mapA), mapToArray(mapB)];\n\n        function makeMap(sourceBatch, map, otherMap) {\n            for (var i = 0, len = sourceBatch.length; i < len; i++) {\n                var seriesId = sourceBatch[i].seriesId;\n                var dataIndices = modelUtil.normalizeToArray(sourceBatch[i].dataIndex);\n                var otherDataIndices = otherMap && otherMap[seriesId];\n\n                for (var j = 0, lenj = dataIndices.length; j < lenj; j++) {\n                    var dataIndex = dataIndices[j];\n\n                    if (otherDataIndices && otherDataIndices[dataIndex]) {\n                        otherDataIndices[dataIndex] = null;\n                    }\n                    else {\n                        (map[seriesId] || (map[seriesId] = {}))[dataIndex] = 1;\n                    }\n                }\n            }\n        }\n\n        function mapToArray(map, isData) {\n            var result = [];\n            for (var i in map) {\n                if (map.hasOwnProperty(i) && map[i] != null) {\n                    if (isData) {\n                        result.push(+i);\n                    }\n                    else {\n                        var dataIndices = mapToArray(map[i], true);\n                        dataIndices.length && result.push({seriesId: i, dataIndex: dataIndices});\n                    }\n                }\n            }\n            return result;\n        }\n    };\n\n    /**\n     * @param {module:echarts/data/List} data\n     * @param {Object} payload Contains dataIndex (means rawIndex) / dataIndexInside / name\n     *                         each of which can be Array or primary type.\n     * @return {number|Array.<number>} dataIndex If not found, return undefined/null.\n     */\n    modelUtil.queryDataIndex = function (data, payload) {\n        if (payload.dataIndexInside != null) {\n            return payload.dataIndexInside;\n        }\n        else if (payload.dataIndex != null) {\n            return zrUtil.isArray(payload.dataIndex)\n                ? zrUtil.map(payload.dataIndex, function (value) {\n                    return data.indexOfRawIndex(value);\n                })\n                : data.indexOfRawIndex(payload.dataIndex);\n        }\n        else if (payload.name != null) {\n            return zrUtil.isArray(payload.name)\n                ? zrUtil.map(payload.name, function (value) {\n                    return data.indexOfName(value);\n                })\n                : data.indexOfName(payload.name);\n        }\n    };\n\n    /**\n     * @param {module:echarts/model/Global} ecModel\n     * @param {string|Object} finder\n     *        If string, e.g., 'geo', means {geoIndex: 0}.\n     *        If Object, could contain some of these properties below:\n     *        {\n     *            seriesIndex, seriesId, seriesName,\n     *            geoIndex, geoId, goeName,\n     *            bmapIndex, bmapId, bmapName,\n     *            xAxisIndex, xAxisId, xAxisName,\n     *            yAxisIndex, yAxisId, yAxisName,\n     *            gridIndex, gridId, gridName,\n     *            ... (can be extended)\n     *        }\n     *        Each properties can be number|string|Array.<number>|Array.<string>\n     *        For example, a finder could be\n     *        {\n     *            seriesIndex: 3,\n     *            geoId: ['aa', 'cc'],\n     *            gridName: ['xx', 'rr']\n     *        }\n     * @param {Object} [opt]\n     * @param {string} [opt.defaultMainType]\n     * @return {Object} result like:\n     *        {\n     *            seriesModels: [seriesModel1, seriesModel2],\n     *            seriesModel: seriesModel1, // The first model\n     *            geoModels: [geoModel1, geoModel2],\n     *            geoModel: geoModel1, // The first model\n     *            ...\n     *        }\n     */\n    modelUtil.parseFinder = function (ecModel, finder, opt) {\n        if (zrUtil.isString(finder)) {\n            var obj = {};\n            obj[finder + 'Index'] = 0;\n            finder = obj;\n        }\n\n        var defaultMainType = opt && opt.defaultMainType;\n        if (defaultMainType\n            && !has(finder, defaultMainType + 'Index')\n            && !has(finder, defaultMainType + 'Id')\n            && !has(finder, defaultMainType + 'Name')\n        ) {\n            finder[defaultMainType + 'Index'] = 0;\n        }\n\n        var result = {};\n\n        each(finder, function (value, key) {\n            var value = finder[key];\n\n            // Exclude 'dataIndex' and other illgal keys.\n            if (key === 'dataIndex' || key === 'dataIndexInside') {\n                result[key] = value;\n                return;\n            }\n\n            var parsedKey = key.match(/^(\\w+)(Index|Id|Name)$/) || [];\n            var mainType = parsedKey[1];\n            var queryType = parsedKey[2];\n\n            if (!mainType || !queryType) {\n                return;\n            }\n\n            var queryParam = {mainType: mainType};\n            queryParam[queryType.toLowerCase()] = value;\n            var models = ecModel.queryComponents(queryParam);\n            result[mainType + 'Models'] = models;\n            result[mainType + 'Model'] = models[0];\n        });\n\n        return result;\n    };\n\n    function has(obj, prop) {\n        return obj && obj.hasOwnProperty(prop);\n    }\n\n    module.exports = modelUtil;\n\n\n/***/ }),\n/* 470 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * @module echarts/model/Model\n */\n\n\n    var zrUtil = __webpack_require__(460);\n    var clazzUtil = __webpack_require__(471);\n    var env = __webpack_require__(466);\n\n    /**\n     * @alias module:echarts/model/Model\n     * @constructor\n     * @param {Object} option\n     * @param {module:echarts/model/Model} [parentModel]\n     * @param {module:echarts/model/Global} [ecModel]\n     */\n    function Model(option, parentModel, ecModel) {\n        /**\n         * @type {module:echarts/model/Model}\n         * @readOnly\n         */\n        this.parentModel = parentModel;\n\n        /**\n         * @type {module:echarts/model/Global}\n         * @readOnly\n         */\n        this.ecModel = ecModel;\n\n        /**\n         * @type {Object}\n         * @protected\n         */\n        this.option = option;\n\n        // Simple optimization\n        // if (this.init) {\n        //     if (arguments.length <= 4) {\n        //         this.init(option, parentModel, ecModel, extraOpt);\n        //     }\n        //     else {\n        //         this.init.apply(this, arguments);\n        //     }\n        // }\n    }\n\n    Model.prototype = {\n\n        constructor: Model,\n\n        /**\n         * Model 的初始化函数\n         * @param {Object} option\n         */\n        init: null,\n\n        /**\n         * 从新的 Option merge\n         */\n        mergeOption: function (option) {\n            zrUtil.merge(this.option, option, true);\n        },\n\n        /**\n         * @param {string|Array.<string>} path\n         * @param {boolean} [ignoreParent=false]\n         * @return {*}\n         */\n        get: function (path, ignoreParent) {\n            if (path == null) {\n                return this.option;\n            }\n\n            return doGet(\n                this.option,\n                this.parsePath(path),\n                !ignoreParent && getParent(this, path)\n            );\n        },\n\n        /**\n         * @param {string} key\n         * @param {boolean} [ignoreParent=false]\n         * @return {*}\n         */\n        getShallow: function (key, ignoreParent) {\n            var option = this.option;\n\n            var val = option == null ? option : option[key];\n            var parentModel = !ignoreParent && getParent(this, key);\n            if (val == null && parentModel) {\n                val = parentModel.getShallow(key);\n            }\n            return val;\n        },\n\n        /**\n         * @param {string|Array.<string>} path\n         * @param {module:echarts/model/Model} [parentModel]\n         * @return {module:echarts/model/Model}\n         */\n        getModel: function (path, parentModel) {\n            var obj = path == null\n                ? this.option\n                : doGet(this.option, path = this.parsePath(path));\n\n            var thisParentModel;\n            parentModel = parentModel || (\n                (thisParentModel = getParent(this, path))\n                    && thisParentModel.getModel(path)\n            );\n\n            return new Model(obj, parentModel, this.ecModel);\n        },\n\n        /**\n         * If model has option\n         */\n        isEmpty: function () {\n            return this.option == null;\n        },\n\n        restoreData: function () {},\n\n        // Pending\n        clone: function () {\n            var Ctor = this.constructor;\n            return new Ctor(zrUtil.clone(this.option));\n        },\n\n        setReadOnly: function (properties) {\n            clazzUtil.setReadOnly(this, properties);\n        },\n\n        // If path is null/undefined, return null/undefined.\n        parsePath: function(path) {\n            if (typeof path === 'string') {\n                path = path.split('.');\n            }\n            return path;\n        },\n\n        /**\n         * @param {Function} getParentMethod\n         *        param {Array.<string>|string} path\n         *        return {module:echarts/model/Model}\n         */\n        customizeGetParent: function (getParentMethod) {\n            clazzUtil.set(this, 'getParent', getParentMethod);\n        },\n\n        isAnimationEnabled: function () {\n            if (!env.node) {\n                if (this.option.animation != null) {\n                    return !!this.option.animation;\n                }\n                else if (this.parentModel) {\n                    return this.parentModel.isAnimationEnabled();\n                }\n            }\n        }\n    };\n\n    function doGet(obj, pathArr, parentModel) {\n        for (var i = 0; i < pathArr.length; i++) {\n            // Ignore empty\n            if (!pathArr[i]) {\n                continue;\n            }\n            // obj could be number/string/... (like 0)\n            obj = (obj && typeof obj === 'object') ? obj[pathArr[i]] : null;\n            if (obj == null) {\n                break;\n            }\n        }\n        if (obj == null && parentModel) {\n            obj = parentModel.get(pathArr);\n        }\n        return obj;\n    }\n\n    function getParent(model, path) {\n        var getParentMethod = clazzUtil.get(model, 'getParent');\n        return getParentMethod ? getParentMethod.call(model, path) : model.parentModel;\n    }\n\n    // Enable Model.extend.\n    clazzUtil.enableClassExtend(Model);\n\n    var mixin = zrUtil.mixin;\n    mixin(Model, __webpack_require__(583));\n    mixin(Model, __webpack_require__(580));\n    mixin(Model, __webpack_require__(584));\n    mixin(Model, __webpack_require__(582));\n\n    module.exports = Model;\n\n\n/***/ }),\n/* 471 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var zrUtil = __webpack_require__(460);\n\n    var clazz = {};\n\n    var TYPE_DELIMITER = '.';\n    var IS_CONTAINER = '___EC__COMPONENT__CONTAINER___';\n    var MEMBER_PRIFIX = '\\0ec_\\0';\n\n    /**\n     * Hide private class member.\n     * The same behavior as `host[name] = value;` (can be right-value)\n     * @public\n     */\n    clazz.set = function (host, name, value) {\n        return (host[MEMBER_PRIFIX + name] = value);\n    };\n\n    /**\n     * Hide private class member.\n     * The same behavior as `host[name];`\n     * @public\n     */\n    clazz.get = function (host, name) {\n        return host[MEMBER_PRIFIX + name];\n    };\n\n    /**\n     * For hidden private class member.\n     * The same behavior as `host.hasOwnProperty(name);`\n     * @public\n     */\n    clazz.hasOwn = function (host, name) {\n        return host.hasOwnProperty(MEMBER_PRIFIX + name);\n    };\n\n    /**\n     * @public\n     */\n    var parseClassType = clazz.parseClassType = function (componentType) {\n        var ret = {main: '', sub: ''};\n        if (componentType) {\n            componentType = componentType.split(TYPE_DELIMITER);\n            ret.main = componentType[0] || '';\n            ret.sub = componentType[1] || '';\n        }\n        return ret;\n    };\n\n    /**\n     * @public\n     */\n    function checkClassType(componentType) {\n        zrUtil.assert(\n            /^[a-zA-Z0-9_]+([.][a-zA-Z0-9_]+)?$/.test(componentType),\n            'componentType \"' + componentType + '\" illegal'\n        );\n    }\n\n    /**\n     * @public\n     */\n    clazz.enableClassExtend = function (RootClass, mandatoryMethods) {\n\n        RootClass.$constructor = RootClass;\n        RootClass.extend = function (proto) {\n\n            if (__DEV__) {\n                zrUtil.each(mandatoryMethods, function (method) {\n                    if (!proto[method]) {\n                        console.warn(\n                            'Method `' + method + '` should be implemented'\n                            + (proto.type ? ' in ' + proto.type : '') + '.'\n                        );\n                    }\n                });\n            }\n\n            var superClass = this;\n            var ExtendedClass = function () {\n                if (!proto.$constructor) {\n                    superClass.apply(this, arguments);\n                }\n                else {\n                    proto.$constructor.apply(this, arguments);\n                }\n            };\n\n            zrUtil.extend(ExtendedClass.prototype, proto);\n\n            ExtendedClass.extend = this.extend;\n            ExtendedClass.superCall = superCall;\n            ExtendedClass.superApply = superApply;\n            zrUtil.inherits(ExtendedClass, this);\n            ExtendedClass.superClass = superClass;\n\n            return ExtendedClass;\n        };\n    };\n\n    // superCall should have class info, which can not be fetch from 'this'.\n    // Consider this case:\n    // class A has method f,\n    // class B inherits class A, overrides method f, f call superApply('f'),\n    // class C inherits class B, do not overrides method f,\n    // then when method of class C is called, dead loop occured.\n    function superCall(context, methodName) {\n        var args = zrUtil.slice(arguments, 2);\n        return this.superClass.prototype[methodName].apply(context, args);\n    }\n\n    function superApply(context, methodName, args) {\n        return this.superClass.prototype[methodName].apply(context, args);\n    }\n\n    /**\n     * @param {Object} entity\n     * @param {Object} options\n     * @param {boolean} [options.registerWhenExtend]\n     * @public\n     */\n    clazz.enableClassManagement = function (entity, options) {\n        options = options || {};\n\n        /**\n         * Component model classes\n         * key: componentType,\n         * value:\n         *     componentClass, when componentType is 'xxx'\n         *     or Object.<subKey, componentClass>, when componentType is 'xxx.yy'\n         * @type {Object}\n         */\n        var storage = {};\n\n        entity.registerClass = function (Clazz, componentType) {\n            if (componentType) {\n                checkClassType(componentType);\n                componentType = parseClassType(componentType);\n\n                if (!componentType.sub) {\n                    if (__DEV__) {\n                        if (storage[componentType.main]) {\n                            console.warn(componentType.main + ' exists.');\n                        }\n                    }\n                    storage[componentType.main] = Clazz;\n                }\n                else if (componentType.sub !== IS_CONTAINER) {\n                    var container = makeContainer(componentType);\n                    container[componentType.sub] = Clazz;\n                }\n            }\n            return Clazz;\n        };\n\n        entity.getClass = function (componentMainType, subType, throwWhenNotFound) {\n            var Clazz = storage[componentMainType];\n\n            if (Clazz && Clazz[IS_CONTAINER]) {\n                Clazz = subType ? Clazz[subType] : null;\n            }\n\n            if (throwWhenNotFound && !Clazz) {\n                throw new Error(\n                    !subType\n                        ? componentMainType + '.' + 'type should be specified.'\n                        : 'Component ' + componentMainType + '.' + (subType || '') + ' not exists. Load it first.'\n                );\n            }\n\n            return Clazz;\n        };\n\n        entity.getClassesByMainType = function (componentType) {\n            componentType = parseClassType(componentType);\n\n            var result = [];\n            var obj = storage[componentType.main];\n\n            if (obj && obj[IS_CONTAINER]) {\n                zrUtil.each(obj, function (o, type) {\n                    type !== IS_CONTAINER && result.push(o);\n                });\n            }\n            else {\n                result.push(obj);\n            }\n\n            return result;\n        };\n\n        entity.hasClass = function (componentType) {\n            // Just consider componentType.main.\n            componentType = parseClassType(componentType);\n            return !!storage[componentType.main];\n        };\n\n        /**\n         * @return {Array.<string>} Like ['aa', 'bb'], but can not be ['aa.xx']\n         */\n        entity.getAllClassMainTypes = function () {\n            var types = [];\n            zrUtil.each(storage, function (obj, type) {\n                types.push(type);\n            });\n            return types;\n        };\n\n        /**\n         * If a main type is container and has sub types\n         * @param  {string}  mainType\n         * @return {boolean}\n         */\n        entity.hasSubTypes = function (componentType) {\n            componentType = parseClassType(componentType);\n            var obj = storage[componentType.main];\n            return obj && obj[IS_CONTAINER];\n        };\n\n        entity.parseClassType = parseClassType;\n\n        function makeContainer(componentType) {\n            var container = storage[componentType.main];\n            if (!container || !container[IS_CONTAINER]) {\n                container = storage[componentType.main] = {};\n                container[IS_CONTAINER] = true;\n            }\n            return container;\n        }\n\n        if (options.registerWhenExtend) {\n            var originalExtend = entity.extend;\n            if (originalExtend) {\n                entity.extend = function (proto) {\n                    var ExtendedClass = originalExtend.call(this, proto);\n                    return entity.registerClass(ExtendedClass, proto.type);\n                };\n            }\n        }\n\n        return entity;\n    };\n\n    /**\n     * @param {string|Array.<string>} properties\n     */\n    clazz.setReadOnly = function (obj, properties) {\n        // FIXME It seems broken in IE8 simulation of IE11\n        // if (!zrUtil.isArray(properties)) {\n        //     properties = properties != null ? [properties] : [];\n        // }\n        // zrUtil.each(properties, function (prop) {\n        //     var value = obj[prop];\n\n        //     Object.defineProperty\n        //         && Object.defineProperty(obj, prop, {\n        //             value: value, writable: false\n        //         });\n        //     zrUtil.isArray(obj[prop])\n        //         && Object.freeze\n        //         && Object.freeze(obj[prop]);\n        // });\n    };\n\n    module.exports = clazz;\n\n\n/***/ }),\n/* 472 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * Component model\n *\n * @module echarts/model/Component\n */\n\n\n    var Model = __webpack_require__(470);\n    var zrUtil = __webpack_require__(460);\n    var arrayPush = Array.prototype.push;\n    var componentUtil = __webpack_require__(496);\n    var clazzUtil = __webpack_require__(471);\n    var layout = __webpack_require__(475);\n\n    /**\n     * @alias module:echarts/model/Component\n     * @constructor\n     * @param {Object} option\n     * @param {module:echarts/model/Model} parentModel\n     * @param {module:echarts/model/Model} ecModel\n     */\n    var ComponentModel = Model.extend({\n\n        type: 'component',\n\n        /**\n         * @readOnly\n         * @type {string}\n         */\n        id: '',\n\n        /**\n         * @readOnly\n         */\n        name: '',\n\n        /**\n         * @readOnly\n         * @type {string}\n         */\n        mainType: '',\n\n        /**\n         * @readOnly\n         * @type {string}\n         */\n        subType: '',\n\n        /**\n         * @readOnly\n         * @type {number}\n         */\n        componentIndex: 0,\n\n        /**\n         * @type {Object}\n         * @protected\n         */\n        defaultOption: null,\n\n        /**\n         * @type {module:echarts/model/Global}\n         * @readOnly\n         */\n        ecModel: null,\n\n        /**\n         * key: componentType\n         * value:  Component model list, can not be null.\n         * @type {Object.<string, Array.<module:echarts/model/Model>>}\n         * @readOnly\n         */\n        dependentModels: [],\n\n        /**\n         * @type {string}\n         * @readOnly\n         */\n        uid: null,\n\n        /**\n         * Support merge layout params.\n         * Only support 'box' now (left/right/top/bottom/width/height).\n         * @type {string|Object} Object can be {ignoreSize: true}\n         * @readOnly\n         */\n        layoutMode: null,\n\n        $constructor: function (option, parentModel, ecModel, extraOpt) {\n            Model.call(this, option, parentModel, ecModel, extraOpt);\n\n            this.uid = componentUtil.getUID('componentModel');\n        },\n\n\n        init: function (option, parentModel, ecModel, extraOpt) {\n            this.mergeDefaultAndTheme(option, ecModel);\n        },\n\n        mergeDefaultAndTheme: function (option, ecModel) {\n            var layoutMode = this.layoutMode;\n            var inputPositionParams = layoutMode\n                ? layout.getLayoutParams(option) : {};\n\n            var themeModel = ecModel.getTheme();\n            zrUtil.merge(option, themeModel.get(this.mainType));\n            zrUtil.merge(option, this.getDefaultOption());\n\n            if (layoutMode) {\n                layout.mergeLayoutParam(option, inputPositionParams, layoutMode);\n            }\n        },\n\n        mergeOption: function (option, extraOpt) {\n            zrUtil.merge(this.option, option, true);\n\n            var layoutMode = this.layoutMode;\n            if (layoutMode) {\n                layout.mergeLayoutParam(this.option, option, layoutMode);\n            }\n        },\n\n        // Hooker after init or mergeOption\n        optionUpdated: function (newCptOption, isInit) {},\n\n        getDefaultOption: function () {\n            if (!clazzUtil.hasOwn(this, '__defaultOption')) {\n                var optList = [];\n                var Class = this.constructor;\n                while (Class) {\n                    var opt = Class.prototype.defaultOption;\n                    opt && optList.push(opt);\n                    Class = Class.superClass;\n                }\n\n                var defaultOption = {};\n                for (var i = optList.length - 1; i >= 0; i--) {\n                    defaultOption = zrUtil.merge(defaultOption, optList[i], true);\n                }\n                clazzUtil.set(this, '__defaultOption', defaultOption);\n            }\n            return clazzUtil.get(this, '__defaultOption');\n        },\n\n        getReferringComponents: function (mainType) {\n            return this.ecModel.queryComponents({\n                mainType: mainType,\n                index: this.get(mainType + 'Index', true),\n                id: this.get(mainType + 'Id', true)\n            });\n        }\n\n    });\n\n    // Reset ComponentModel.extend, add preConstruct.\n    // clazzUtil.enableClassExtend(\n    //     ComponentModel,\n    //     function (option, parentModel, ecModel, extraOpt) {\n    //         // Set dependentModels, componentIndex, name, id, mainType, subType.\n    //         zrUtil.extend(this, extraOpt);\n\n    //         this.uid = componentUtil.getUID('componentModel');\n\n    //         // this.setReadOnly([\n    //         //     'type', 'id', 'uid', 'name', 'mainType', 'subType',\n    //         //     'dependentModels', 'componentIndex'\n    //         // ]);\n    //     }\n    // );\n\n    // Add capability of registerClass, getClass, hasClass, registerSubTypeDefaulter and so on.\n    clazzUtil.enableClassManagement(\n        ComponentModel, {registerWhenExtend: true}\n    );\n    componentUtil.enableSubTypeDefaulter(ComponentModel);\n\n    // Add capability of ComponentModel.topologicalTravel.\n    componentUtil.enableTopologicalTravel(ComponentModel, getDependencies);\n\n    function getDependencies(componentType) {\n        var deps = [];\n        zrUtil.each(ComponentModel.getClassesByMainType(componentType), function (Clazz) {\n            arrayPush.apply(deps, Clazz.prototype.dependencies || []);\n        });\n        // Ensure main type\n        return zrUtil.map(deps, function (type) {\n            return clazzUtil.parseClassType(type).main;\n        });\n    }\n\n    zrUtil.mixin(ComponentModel, __webpack_require__(581));\n\n    module.exports = ComponentModel;\n\n\n/***/ }),\n/* 473 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar BoundingRect = __webpack_require__(467);\n\nvar imageHelper = __webpack_require__(499);\n\nvar _util = __webpack_require__(460);\n\nvar getContext = _util.getContext;\nvar extend = _util.extend;\nvar retrieve2 = _util.retrieve2;\nvar retrieve3 = _util.retrieve3;\nvar textWidthCache = {};\nvar textWidthCacheCounter = 0;\nvar TEXT_CACHE_MAX = 5000;\nvar STYLE_REG = /\\{([a-zA-Z0-9_]+)\\|([^}]*)\\}/g;\nvar DEFAULT_FONT = '12px sans-serif'; // Avoid assign to an exported variable, for transforming to cjs.\n\nvar methods = {};\n\nfunction $override(name, fn) {\n  methods[name] = fn;\n}\n/**\n * @public\n * @param {string} text\n * @param {string} font\n * @return {number} width\n */\n\n\nfunction getWidth(text, font) {\n  font = font || DEFAULT_FONT;\n  var key = text + ':' + font;\n\n  if (textWidthCache[key]) {\n    return textWidthCache[key];\n  }\n\n  var textLines = (text + '').split('\\n');\n  var width = 0;\n\n  for (var i = 0, l = textLines.length; i < l; i++) {\n    // textContain.measureText may be overrided in SVG or VML\n    width = Math.max(measureText(textLines[i], font).width, width);\n  }\n\n  if (textWidthCacheCounter > TEXT_CACHE_MAX) {\n    textWidthCacheCounter = 0;\n    textWidthCache = {};\n  }\n\n  textWidthCacheCounter++;\n  textWidthCache[key] = width;\n  return width;\n}\n/**\n * @public\n * @param {string} text\n * @param {string} font\n * @param {string} [textAlign='left']\n * @param {string} [textVerticalAlign='top']\n * @param {Array.<number>} [textPadding]\n * @param {Object} [rich]\n * @param {Object} [truncate]\n * @return {Object} {x, y, width, height, lineHeight}\n */\n\n\nfunction getBoundingRect(text, font, textAlign, textVerticalAlign, textPadding, rich, truncate) {\n  return rich ? getRichTextRect(text, font, textAlign, textVerticalAlign, textPadding, rich, truncate) : getPlainTextRect(text, font, textAlign, textVerticalAlign, textPadding, truncate);\n}\n\nfunction getPlainTextRect(text, font, textAlign, textVerticalAlign, textPadding, truncate) {\n  var contentBlock = parsePlainText(text, font, textPadding, truncate);\n  var outerWidth = getWidth(text, font);\n\n  if (textPadding) {\n    outerWidth += textPadding[1] + textPadding[3];\n  }\n\n  var outerHeight = contentBlock.outerHeight;\n  var x = adjustTextX(0, outerWidth, textAlign);\n  var y = adjustTextY(0, outerHeight, textVerticalAlign);\n  var rect = new BoundingRect(x, y, outerWidth, outerHeight);\n  rect.lineHeight = contentBlock.lineHeight;\n  return rect;\n}\n\nfunction getRichTextRect(text, font, textAlign, textVerticalAlign, textPadding, rich, truncate) {\n  var contentBlock = parseRichText(text, {\n    rich: rich,\n    truncate: truncate,\n    font: font,\n    textAlign: textAlign,\n    textPadding: textPadding\n  });\n  var outerWidth = contentBlock.outerWidth;\n  var outerHeight = contentBlock.outerHeight;\n  var x = adjustTextX(0, outerWidth, textAlign);\n  var y = adjustTextY(0, outerHeight, textVerticalAlign);\n  return new BoundingRect(x, y, outerWidth, outerHeight);\n}\n/**\n * @public\n * @param {number} x\n * @param {number} width\n * @param {string} [textAlign='left']\n * @return {number} Adjusted x.\n */\n\n\nfunction adjustTextX(x, width, textAlign) {\n  // FIXME Right to left language\n  if (textAlign === 'right') {\n    x -= width;\n  } else if (textAlign === 'center') {\n    x -= width / 2;\n  }\n\n  return x;\n}\n/**\n * @public\n * @param {number} y\n * @param {number} height\n * @param {string} [textVerticalAlign='top']\n * @return {number} Adjusted y.\n */\n\n\nfunction adjustTextY(y, height, textVerticalAlign) {\n  if (textVerticalAlign === 'middle') {\n    y -= height / 2;\n  } else if (textVerticalAlign === 'bottom') {\n    y -= height;\n  }\n\n  return y;\n}\n/**\n * @public\n * @param {stirng} textPosition\n * @param {Object} rect {x, y, width, height}\n * @param {number} distance\n * @return {Object} {x, y, textAlign, textVerticalAlign}\n */\n\n\nfunction adjustTextPositionOnRect(textPosition, rect, distance) {\n  var x = rect.x;\n  var y = rect.y;\n  var height = rect.height;\n  var width = rect.width;\n  var halfHeight = height / 2;\n  var textAlign = 'left';\n  var textVerticalAlign = 'top';\n\n  switch (textPosition) {\n    case 'left':\n      x -= distance;\n      y += halfHeight;\n      textAlign = 'right';\n      textVerticalAlign = 'middle';\n      break;\n\n    case 'right':\n      x += distance + width;\n      y += halfHeight;\n      textVerticalAlign = 'middle';\n      break;\n\n    case 'top':\n      x += width / 2;\n      y -= distance;\n      textAlign = 'center';\n      textVerticalAlign = 'bottom';\n      break;\n\n    case 'bottom':\n      x += width / 2;\n      y += height + distance;\n      textAlign = 'center';\n      break;\n\n    case 'inside':\n      x += width / 2;\n      y += halfHeight;\n      textAlign = 'center';\n      textVerticalAlign = 'middle';\n      break;\n\n    case 'insideLeft':\n      x += distance;\n      y += halfHeight;\n      textVerticalAlign = 'middle';\n      break;\n\n    case 'insideRight':\n      x += width - distance;\n      y += halfHeight;\n      textAlign = 'right';\n      textVerticalAlign = 'middle';\n      break;\n\n    case 'insideTop':\n      x += width / 2;\n      y += distance;\n      textAlign = 'center';\n      break;\n\n    case 'insideBottom':\n      x += width / 2;\n      y += height - distance;\n      textAlign = 'center';\n      textVerticalAlign = 'bottom';\n      break;\n\n    case 'insideTopLeft':\n      x += distance;\n      y += distance;\n      break;\n\n    case 'insideTopRight':\n      x += width - distance;\n      y += distance;\n      textAlign = 'right';\n      break;\n\n    case 'insideBottomLeft':\n      x += distance;\n      y += height - distance;\n      textVerticalAlign = 'bottom';\n      break;\n\n    case 'insideBottomRight':\n      x += width - distance;\n      y += height - distance;\n      textAlign = 'right';\n      textVerticalAlign = 'bottom';\n      break;\n  }\n\n  return {\n    x: x,\n    y: y,\n    textAlign: textAlign,\n    textVerticalAlign: textVerticalAlign\n  };\n}\n/**\n * Show ellipsis if overflow.\n *\n * @public\n * @param  {string} text\n * @param  {string} containerWidth\n * @param  {string} font\n * @param  {number} [ellipsis='...']\n * @param  {Object} [options]\n * @param  {number} [options.maxIterations=3]\n * @param  {number} [options.minChar=0] If truncate result are less\n *                  then minChar, ellipsis will not show, which is\n *                  better for user hint in some cases.\n * @param  {number} [options.placeholder=''] When all truncated, use the placeholder.\n * @return {string}\n */\n\n\nfunction truncateText(text, containerWidth, font, ellipsis, options) {\n  if (!containerWidth) {\n    return '';\n  }\n\n  var textLines = (text + '').split('\\n');\n  options = prepareTruncateOptions(containerWidth, font, ellipsis, options); // FIXME\n  // It is not appropriate that every line has '...' when truncate multiple lines.\n\n  for (var i = 0, len = textLines.length; i < len; i++) {\n    textLines[i] = truncateSingleLine(textLines[i], options);\n  }\n\n  return textLines.join('\\n');\n}\n\nfunction prepareTruncateOptions(containerWidth, font, ellipsis, options) {\n  options = extend({}, options);\n  options.font = font;\n  var ellipsis = retrieve2(ellipsis, '...');\n  options.maxIterations = retrieve2(options.maxIterations, 2);\n  var minChar = options.minChar = retrieve2(options.minChar, 0); // FIXME\n  // Other languages?\n\n  options.cnCharWidth = getWidth('国', font); // FIXME\n  // Consider proportional font?\n\n  var ascCharWidth = options.ascCharWidth = getWidth('a', font);\n  options.placeholder = retrieve2(options.placeholder, ''); // Example 1: minChar: 3, text: 'asdfzxcv', truncate result: 'asdf', but not: 'a...'.\n  // Example 2: minChar: 3, text: '维度', truncate result: '维', but not: '...'.\n\n  var contentWidth = containerWidth = Math.max(0, containerWidth - 1); // Reserve some gap.\n\n  for (var i = 0; i < minChar && contentWidth >= ascCharWidth; i++) {\n    contentWidth -= ascCharWidth;\n  }\n\n  var ellipsisWidth = getWidth(ellipsis);\n\n  if (ellipsisWidth > contentWidth) {\n    ellipsis = '';\n    ellipsisWidth = 0;\n  }\n\n  contentWidth = containerWidth - ellipsisWidth;\n  options.ellipsis = ellipsis;\n  options.ellipsisWidth = ellipsisWidth;\n  options.contentWidth = contentWidth;\n  options.containerWidth = containerWidth;\n  return options;\n}\n\nfunction truncateSingleLine(textLine, options) {\n  var containerWidth = options.containerWidth;\n  var font = options.font;\n  var contentWidth = options.contentWidth;\n\n  if (!containerWidth) {\n    return '';\n  }\n\n  var lineWidth = getWidth(textLine, font);\n\n  if (lineWidth <= containerWidth) {\n    return textLine;\n  }\n\n  for (var j = 0;; j++) {\n    if (lineWidth <= contentWidth || j >= options.maxIterations) {\n      textLine += options.ellipsis;\n      break;\n    }\n\n    var subLength = j === 0 ? estimateLength(textLine, contentWidth, options.ascCharWidth, options.cnCharWidth) : lineWidth > 0 ? Math.floor(textLine.length * contentWidth / lineWidth) : 0;\n    textLine = textLine.substr(0, subLength);\n    lineWidth = getWidth(textLine, font);\n  }\n\n  if (textLine === '') {\n    textLine = options.placeholder;\n  }\n\n  return textLine;\n}\n\nfunction estimateLength(text, contentWidth, ascCharWidth, cnCharWidth) {\n  var width = 0;\n  var i = 0;\n\n  for (var len = text.length; i < len && width < contentWidth; i++) {\n    var charCode = text.charCodeAt(i);\n    width += 0 <= charCode && charCode <= 127 ? ascCharWidth : cnCharWidth;\n  }\n\n  return i;\n}\n/**\n * @public\n * @param {string} font\n * @return {number} line height\n */\n\n\nfunction getLineHeight(font) {\n  // FIXME A rough approach.\n  return getWidth('国', font);\n}\n/**\n * @public\n * @param {string} text\n * @param {string} font\n * @return {Object} width\n */\n\n\nfunction measureText(text, font) {\n  return methods.measureText(text, font);\n} // Avoid assign to an exported variable, for transforming to cjs.\n\n\nmethods.measureText = function (text, font) {\n  var ctx = getContext();\n  ctx.font = font || DEFAULT_FONT;\n  return ctx.measureText(text);\n};\n/**\n * @public\n * @param {string} text\n * @param {string} font\n * @param {Object} [truncate]\n * @return {Object} block: {lineHeight, lines, height, outerHeight}\n *  Notice: for performance, do not calculate outerWidth util needed.\n */\n\n\nfunction parsePlainText(text, font, padding, truncate) {\n  text != null && (text += '');\n  var lineHeight = getLineHeight(font);\n  var lines = text ? text.split('\\n') : [];\n  var height = lines.length * lineHeight;\n  var outerHeight = height;\n\n  if (padding) {\n    outerHeight += padding[0] + padding[2];\n  }\n\n  if (text && truncate) {\n    var truncOuterHeight = truncate.outerHeight;\n    var truncOuterWidth = truncate.outerWidth;\n\n    if (truncOuterHeight != null && outerHeight > truncOuterHeight) {\n      text = '';\n      lines = [];\n    } else if (truncOuterWidth != null) {\n      var options = prepareTruncateOptions(truncOuterWidth - (padding ? padding[1] + padding[3] : 0), font, truncate.ellipsis, {\n        minChar: truncate.minChar,\n        placeholder: truncate.placeholder\n      }); // FIXME\n      // It is not appropriate that every line has '...' when truncate multiple lines.\n\n      for (var i = 0, len = lines.length; i < len; i++) {\n        lines[i] = truncateSingleLine(lines[i], options);\n      }\n    }\n  }\n\n  return {\n    lines: lines,\n    height: height,\n    outerHeight: outerHeight,\n    lineHeight: lineHeight\n  };\n}\n/**\n * For example: 'some text {a|some text}other text{b|some text}xxx{c|}xxx'\n * Also consider 'bbbb{a|xxx\\nzzz}xxxx\\naaaa'.\n *\n * @public\n * @param {string} text\n * @param {Object} style\n * @return {Object} block\n * {\n *      width,\n *      height,\n *      lines: [{\n *          lineHeight,\n *          width,\n *          tokens: [[{\n *              styleName,\n *              text,\n *              width,      // include textPadding\n *              height,     // include textPadding\n *              textWidth, // pure text width\n *              textHeight, // pure text height\n *              lineHeihgt,\n *              font,\n *              textAlign,\n *              textVerticalAlign\n *          }], [...], ...]\n *      }, ...]\n * }\n * If styleName is undefined, it is plain text.\n */\n\n\nfunction parseRichText(text, style) {\n  var contentBlock = {\n    lines: [],\n    width: 0,\n    height: 0\n  };\n  text != null && (text += '');\n\n  if (!text) {\n    return contentBlock;\n  }\n\n  var lastIndex = STYLE_REG.lastIndex = 0;\n  var result;\n\n  while ((result = STYLE_REG.exec(text)) != null) {\n    var matchedIndex = result.index;\n\n    if (matchedIndex > lastIndex) {\n      pushTokens(contentBlock, text.substring(lastIndex, matchedIndex));\n    }\n\n    pushTokens(contentBlock, result[2], result[1]);\n    lastIndex = STYLE_REG.lastIndex;\n  }\n\n  if (lastIndex < text.length) {\n    pushTokens(contentBlock, text.substring(lastIndex, text.length));\n  }\n\n  var lines = contentBlock.lines;\n  var contentHeight = 0;\n  var contentWidth = 0; // For `textWidth: 100%`\n\n  var pendingList = [];\n  var stlPadding = style.textPadding;\n  var truncate = style.truncate;\n  var truncateWidth = truncate && truncate.outerWidth;\n  var truncateHeight = truncate && truncate.outerHeight;\n\n  if (stlPadding) {\n    truncateWidth != null && (truncateWidth -= stlPadding[1] + stlPadding[3]);\n    truncateHeight != null && (truncateHeight -= stlPadding[0] + stlPadding[2]);\n  } // Calculate layout info of tokens.\n\n\n  for (var i = 0; i < lines.length; i++) {\n    var line = lines[i];\n    var lineHeight = 0;\n    var lineWidth = 0;\n\n    for (var j = 0; j < line.tokens.length; j++) {\n      var token = line.tokens[j];\n      var tokenStyle = token.styleName && style.rich[token.styleName] || {}; // textPadding should not inherit from style.\n\n      var textPadding = token.textPadding = tokenStyle.textPadding; // textFont has been asigned to font by `normalizeStyle`.\n\n      var font = token.font = tokenStyle.font || style.font; // textHeight can be used when textVerticalAlign is specified in token.\n\n      var tokenHeight = token.textHeight = retrieve2( // textHeight should not be inherited, consider it can be specified\n      // as box height of the block.\n      tokenStyle.textHeight, getLineHeight(font));\n      textPadding && (tokenHeight += textPadding[0] + textPadding[2]);\n      token.height = tokenHeight;\n      token.lineHeight = retrieve3(tokenStyle.textLineHeight, style.textLineHeight, tokenHeight);\n      token.textAlign = tokenStyle && tokenStyle.textAlign || style.textAlign;\n      token.textVerticalAlign = tokenStyle && tokenStyle.textVerticalAlign || 'middle';\n\n      if (truncateHeight != null && contentHeight + token.lineHeight > truncateHeight) {\n        return {\n          lines: [],\n          width: 0,\n          height: 0\n        };\n      }\n\n      token.textWidth = getWidth(token.text, font);\n      var tokenWidth = tokenStyle.textWidth;\n      var tokenWidthNotSpecified = tokenWidth == null || tokenWidth === 'auto'; // Percent width, can be `100%`, can be used in drawing separate\n      // line when box width is needed to be auto.\n\n      if (typeof tokenWidth === 'string' && tokenWidth.charAt(tokenWidth.length - 1) === '%') {\n        token.percentWidth = tokenWidth;\n        pendingList.push(token);\n        tokenWidth = 0; // Do not truncate in this case, because there is no user case\n        // and it is too complicated.\n      } else {\n        if (tokenWidthNotSpecified) {\n          tokenWidth = token.textWidth; // FIXME: If image is not loaded and textWidth is not specified, calling\n          // `getBoundingRect()` will not get correct result.\n\n          var textBackgroundColor = tokenStyle.textBackgroundColor;\n          var bgImg = textBackgroundColor && textBackgroundColor.image; // Use cases:\n          // (1) If image is not loaded, it will be loaded at render phase and call\n          // `dirty()` and `textBackgroundColor.image` will be replaced with the loaded\n          // image, and then the right size will be calculated here at the next tick.\n          // See `graphic/helper/text.js`.\n          // (2) If image loaded, and `textBackgroundColor.image` is image src string,\n          // use `imageHelper.findExistImage` to find cached image.\n          // `imageHelper.findExistImage` will always be called here before\n          // `imageHelper.createOrUpdateImage` in `graphic/helper/text.js#renderRichText`\n          // which ensures that image will not be rendered before correct size calcualted.\n\n          if (bgImg) {\n            bgImg = imageHelper.findExistImage(bgImg);\n\n            if (imageHelper.isImageReady(bgImg)) {\n              tokenWidth = Math.max(tokenWidth, bgImg.width * tokenHeight / bgImg.height);\n            }\n          }\n        }\n\n        var paddingW = textPadding ? textPadding[1] + textPadding[3] : 0;\n        tokenWidth += paddingW;\n        var remianTruncWidth = truncateWidth != null ? truncateWidth - lineWidth : null;\n\n        if (remianTruncWidth != null && remianTruncWidth < tokenWidth) {\n          if (!tokenWidthNotSpecified || remianTruncWidth < paddingW) {\n            token.text = '';\n            token.textWidth = tokenWidth = 0;\n          } else {\n            token.text = truncateText(token.text, remianTruncWidth - paddingW, font, truncate.ellipsis, {\n              minChar: truncate.minChar\n            });\n            token.textWidth = getWidth(token.text, font);\n            tokenWidth = token.textWidth + paddingW;\n          }\n        }\n      }\n\n      lineWidth += token.width = tokenWidth;\n      tokenStyle && (lineHeight = Math.max(lineHeight, token.lineHeight));\n    }\n\n    line.width = lineWidth;\n    line.lineHeight = lineHeight;\n    contentHeight += lineHeight;\n    contentWidth = Math.max(contentWidth, lineWidth);\n  }\n\n  contentBlock.outerWidth = contentBlock.width = retrieve2(style.textWidth, contentWidth);\n  contentBlock.outerHeight = contentBlock.height = retrieve2(style.textHeight, contentHeight);\n\n  if (stlPadding) {\n    contentBlock.outerWidth += stlPadding[1] + stlPadding[3];\n    contentBlock.outerHeight += stlPadding[0] + stlPadding[2];\n  }\n\n  for (var i = 0; i < pendingList.length; i++) {\n    var token = pendingList[i];\n    var percentWidth = token.percentWidth; // Should not base on outerWidth, because token can not be placed out of padding.\n\n    token.width = parseInt(percentWidth, 10) / 100 * contentWidth;\n  }\n\n  return contentBlock;\n}\n\nfunction pushTokens(block, str, styleName) {\n  var isEmptyStr = str === '';\n  var strs = str.split('\\n');\n  var lines = block.lines;\n\n  for (var i = 0; i < strs.length; i++) {\n    var text = strs[i];\n    var token = {\n      styleName: styleName,\n      text: text,\n      isLineHolder: !text && !isEmptyStr\n    }; // The first token should be appended to the last line.\n\n    if (!i) {\n      var tokens = (lines[lines.length - 1] || (lines[0] = {\n        tokens: []\n      })).tokens; // Consider cases:\n      // (1) ''.split('\\n') => ['', '\\n', ''], the '' at the first item\n      // (which is a placeholder) should be replaced by new token.\n      // (2) A image backage, where token likes {a|}.\n      // (3) A redundant '' will affect textAlign in line.\n      // (4) tokens with the same tplName should not be merged, because\n      // they should be displayed in different box (with border and padding).\n\n      var tokensLen = tokens.length;\n      tokensLen === 1 && tokens[0].isLineHolder ? tokens[0] = token : // Consider text is '', only insert when it is the \"lineHolder\" or\n      // \"emptyStr\". Otherwise a redundant '' will affect textAlign in line.\n      (text || !tokensLen || isEmptyStr) && tokens.push(token);\n    } // Other tokens always start a new line.\n    else {\n        // If there is '', insert it as a placeholder.\n        lines.push({\n          tokens: [token]\n        });\n      }\n  }\n}\n\nfunction makeFont(style) {\n  // FIXME in node-canvas fontWeight is before fontStyle\n  // Use `fontSize` `fontFamily` to check whether font properties are defined.\n  return (style.fontSize || style.fontFamily) && [style.fontStyle, style.fontWeight, (style.fontSize || 12) + 'px', // If font properties are defined, `fontFamily` should not be ignored.\n  style.fontFamily || 'sans-serif'].join(' ') || style.textFont || style.font;\n}\n\nexports.DEFAULT_FONT = DEFAULT_FONT;\nexports.$override = $override;\nexports.getWidth = getWidth;\nexports.getBoundingRect = getBoundingRect;\nexports.adjustTextX = adjustTextX;\nexports.adjustTextY = adjustTextY;\nexports.adjustTextPositionOnRect = adjustTextPositionOnRect;\nexports.truncateText = truncateText;\nexports.getLineHeight = getLineHeight;\nexports.measureText = measureText;\nexports.parsePlainText = parsePlainText;\nexports.parseRichText = parseRichText;\nexports.makeFont = makeFont;\n\n/***/ }),\n/* 474 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar LRU = __webpack_require__(515);\n\nvar kCSSColorTable = {\n  'transparent': [0, 0, 0, 0],\n  'aliceblue': [240, 248, 255, 1],\n  'antiquewhite': [250, 235, 215, 1],\n  'aqua': [0, 255, 255, 1],\n  'aquamarine': [127, 255, 212, 1],\n  'azure': [240, 255, 255, 1],\n  'beige': [245, 245, 220, 1],\n  'bisque': [255, 228, 196, 1],\n  'black': [0, 0, 0, 1],\n  'blanchedalmond': [255, 235, 205, 1],\n  'blue': [0, 0, 255, 1],\n  'blueviolet': [138, 43, 226, 1],\n  'brown': [165, 42, 42, 1],\n  'burlywood': [222, 184, 135, 1],\n  'cadetblue': [95, 158, 160, 1],\n  'chartreuse': [127, 255, 0, 1],\n  'chocolate': [210, 105, 30, 1],\n  'coral': [255, 127, 80, 1],\n  'cornflowerblue': [100, 149, 237, 1],\n  'cornsilk': [255, 248, 220, 1],\n  'crimson': [220, 20, 60, 1],\n  'cyan': [0, 255, 255, 1],\n  'darkblue': [0, 0, 139, 1],\n  'darkcyan': [0, 139, 139, 1],\n  'darkgoldenrod': [184, 134, 11, 1],\n  'darkgray': [169, 169, 169, 1],\n  'darkgreen': [0, 100, 0, 1],\n  'darkgrey': [169, 169, 169, 1],\n  'darkkhaki': [189, 183, 107, 1],\n  'darkmagenta': [139, 0, 139, 1],\n  'darkolivegreen': [85, 107, 47, 1],\n  'darkorange': [255, 140, 0, 1],\n  'darkorchid': [153, 50, 204, 1],\n  'darkred': [139, 0, 0, 1],\n  'darksalmon': [233, 150, 122, 1],\n  'darkseagreen': [143, 188, 143, 1],\n  'darkslateblue': [72, 61, 139, 1],\n  'darkslategray': [47, 79, 79, 1],\n  'darkslategrey': [47, 79, 79, 1],\n  'darkturquoise': [0, 206, 209, 1],\n  'darkviolet': [148, 0, 211, 1],\n  'deeppink': [255, 20, 147, 1],\n  'deepskyblue': [0, 191, 255, 1],\n  'dimgray': [105, 105, 105, 1],\n  'dimgrey': [105, 105, 105, 1],\n  'dodgerblue': [30, 144, 255, 1],\n  'firebrick': [178, 34, 34, 1],\n  'floralwhite': [255, 250, 240, 1],\n  'forestgreen': [34, 139, 34, 1],\n  'fuchsia': [255, 0, 255, 1],\n  'gainsboro': [220, 220, 220, 1],\n  'ghostwhite': [248, 248, 255, 1],\n  'gold': [255, 215, 0, 1],\n  'goldenrod': [218, 165, 32, 1],\n  'gray': [128, 128, 128, 1],\n  'green': [0, 128, 0, 1],\n  'greenyellow': [173, 255, 47, 1],\n  'grey': [128, 128, 128, 1],\n  'honeydew': [240, 255, 240, 1],\n  'hotpink': [255, 105, 180, 1],\n  'indianred': [205, 92, 92, 1],\n  'indigo': [75, 0, 130, 1],\n  'ivory': [255, 255, 240, 1],\n  'khaki': [240, 230, 140, 1],\n  'lavender': [230, 230, 250, 1],\n  'lavenderblush': [255, 240, 245, 1],\n  'lawngreen': [124, 252, 0, 1],\n  'lemonchiffon': [255, 250, 205, 1],\n  'lightblue': [173, 216, 230, 1],\n  'lightcoral': [240, 128, 128, 1],\n  'lightcyan': [224, 255, 255, 1],\n  'lightgoldenrodyellow': [250, 250, 210, 1],\n  'lightgray': [211, 211, 211, 1],\n  'lightgreen': [144, 238, 144, 1],\n  'lightgrey': [211, 211, 211, 1],\n  'lightpink': [255, 182, 193, 1],\n  'lightsalmon': [255, 160, 122, 1],\n  'lightseagreen': [32, 178, 170, 1],\n  'lightskyblue': [135, 206, 250, 1],\n  'lightslategray': [119, 136, 153, 1],\n  'lightslategrey': [119, 136, 153, 1],\n  'lightsteelblue': [176, 196, 222, 1],\n  'lightyellow': [255, 255, 224, 1],\n  'lime': [0, 255, 0, 1],\n  'limegreen': [50, 205, 50, 1],\n  'linen': [250, 240, 230, 1],\n  'magenta': [255, 0, 255, 1],\n  'maroon': [128, 0, 0, 1],\n  'mediumaquamarine': [102, 205, 170, 1],\n  'mediumblue': [0, 0, 205, 1],\n  'mediumorchid': [186, 85, 211, 1],\n  'mediumpurple': [147, 112, 219, 1],\n  'mediumseagreen': [60, 179, 113, 1],\n  'mediumslateblue': [123, 104, 238, 1],\n  'mediumspringgreen': [0, 250, 154, 1],\n  'mediumturquoise': [72, 209, 204, 1],\n  'mediumvioletred': [199, 21, 133, 1],\n  'midnightblue': [25, 25, 112, 1],\n  'mintcream': [245, 255, 250, 1],\n  'mistyrose': [255, 228, 225, 1],\n  'moccasin': [255, 228, 181, 1],\n  'navajowhite': [255, 222, 173, 1],\n  'navy': [0, 0, 128, 1],\n  'oldlace': [253, 245, 230, 1],\n  'olive': [128, 128, 0, 1],\n  'olivedrab': [107, 142, 35, 1],\n  'orange': [255, 165, 0, 1],\n  'orangered': [255, 69, 0, 1],\n  'orchid': [218, 112, 214, 1],\n  'palegoldenrod': [238, 232, 170, 1],\n  'palegreen': [152, 251, 152, 1],\n  'paleturquoise': [175, 238, 238, 1],\n  'palevioletred': [219, 112, 147, 1],\n  'papayawhip': [255, 239, 213, 1],\n  'peachpuff': [255, 218, 185, 1],\n  'peru': [205, 133, 63, 1],\n  'pink': [255, 192, 203, 1],\n  'plum': [221, 160, 221, 1],\n  'powderblue': [176, 224, 230, 1],\n  'purple': [128, 0, 128, 1],\n  'red': [255, 0, 0, 1],\n  'rosybrown': [188, 143, 143, 1],\n  'royalblue': [65, 105, 225, 1],\n  'saddlebrown': [139, 69, 19, 1],\n  'salmon': [250, 128, 114, 1],\n  'sandybrown': [244, 164, 96, 1],\n  'seagreen': [46, 139, 87, 1],\n  'seashell': [255, 245, 238, 1],\n  'sienna': [160, 82, 45, 1],\n  'silver': [192, 192, 192, 1],\n  'skyblue': [135, 206, 235, 1],\n  'slateblue': [106, 90, 205, 1],\n  'slategray': [112, 128, 144, 1],\n  'slategrey': [112, 128, 144, 1],\n  'snow': [255, 250, 250, 1],\n  'springgreen': [0, 255, 127, 1],\n  'steelblue': [70, 130, 180, 1],\n  'tan': [210, 180, 140, 1],\n  'teal': [0, 128, 128, 1],\n  'thistle': [216, 191, 216, 1],\n  'tomato': [255, 99, 71, 1],\n  'turquoise': [64, 224, 208, 1],\n  'violet': [238, 130, 238, 1],\n  'wheat': [245, 222, 179, 1],\n  'white': [255, 255, 255, 1],\n  'whitesmoke': [245, 245, 245, 1],\n  'yellow': [255, 255, 0, 1],\n  'yellowgreen': [154, 205, 50, 1]\n};\n\nfunction clampCssByte(i) {\n  // Clamp to integer 0 .. 255.\n  i = Math.round(i); // Seems to be what Chrome does (vs truncation).\n\n  return i < 0 ? 0 : i > 255 ? 255 : i;\n}\n\nfunction clampCssAngle(i) {\n  // Clamp to integer 0 .. 360.\n  i = Math.round(i); // Seems to be what Chrome does (vs truncation).\n\n  return i < 0 ? 0 : i > 360 ? 360 : i;\n}\n\nfunction clampCssFloat(f) {\n  // Clamp to float 0.0 .. 1.0.\n  return f < 0 ? 0 : f > 1 ? 1 : f;\n}\n\nfunction parseCssInt(str) {\n  // int or percentage.\n  if (str.length && str.charAt(str.length - 1) === '%') {\n    return clampCssByte(parseFloat(str) / 100 * 255);\n  }\n\n  return clampCssByte(parseInt(str, 10));\n}\n\nfunction parseCssFloat(str) {\n  // float or percentage.\n  if (str.length && str.charAt(str.length - 1) === '%') {\n    return clampCssFloat(parseFloat(str) / 100);\n  }\n\n  return clampCssFloat(parseFloat(str));\n}\n\nfunction cssHueToRgb(m1, m2, h) {\n  if (h < 0) {\n    h += 1;\n  } else if (h > 1) {\n    h -= 1;\n  }\n\n  if (h * 6 < 1) {\n    return m1 + (m2 - m1) * h * 6;\n  }\n\n  if (h * 2 < 1) {\n    return m2;\n  }\n\n  if (h * 3 < 2) {\n    return m1 + (m2 - m1) * (2 / 3 - h) * 6;\n  }\n\n  return m1;\n}\n\nfunction lerpNumber(a, b, p) {\n  return a + (b - a) * p;\n}\n\nfunction setRgba(out, r, g, b, a) {\n  out[0] = r;\n  out[1] = g;\n  out[2] = b;\n  out[3] = a;\n  return out;\n}\n\nfunction copyRgba(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  return out;\n}\n\nvar colorCache = new LRU(20);\nvar lastRemovedArr = null;\n\nfunction putToCache(colorStr, rgbaArr) {\n  // Reuse removed array\n  if (lastRemovedArr) {\n    copyRgba(lastRemovedArr, rgbaArr);\n  }\n\n  lastRemovedArr = colorCache.put(colorStr, lastRemovedArr || rgbaArr.slice());\n}\n/**\n * @param {string} colorStr\n * @param {Array.<number>} out\n * @return {Array.<number>}\n * @memberOf module:zrender/util/color\n */\n\n\nfunction parse(colorStr, rgbaArr) {\n  if (!colorStr) {\n    return;\n  }\n\n  rgbaArr = rgbaArr || [];\n  var cached = colorCache.get(colorStr);\n\n  if (cached) {\n    return copyRgba(rgbaArr, cached);\n  } // colorStr may be not string\n\n\n  colorStr = colorStr + ''; // Remove all whitespace, not compliant, but should just be more accepting.\n\n  var str = colorStr.replace(/ /g, '').toLowerCase(); // Color keywords (and transparent) lookup.\n\n  if (str in kCSSColorTable) {\n    copyRgba(rgbaArr, kCSSColorTable[str]);\n    putToCache(colorStr, rgbaArr);\n    return rgbaArr;\n  } // #abc and #abc123 syntax.\n\n\n  if (str.charAt(0) === '#') {\n    if (str.length === 4) {\n      var iv = parseInt(str.substr(1), 16); // TODO(deanm): Stricter parsing.\n\n      if (!(iv >= 0 && iv <= 0xfff)) {\n        setRgba(rgbaArr, 0, 0, 0, 1);\n        return; // Covers NaN.\n      }\n\n      setRgba(rgbaArr, (iv & 0xf00) >> 4 | (iv & 0xf00) >> 8, iv & 0xf0 | (iv & 0xf0) >> 4, iv & 0xf | (iv & 0xf) << 4, 1);\n      putToCache(colorStr, rgbaArr);\n      return rgbaArr;\n    } else if (str.length === 7) {\n      var iv = parseInt(str.substr(1), 16); // TODO(deanm): Stricter parsing.\n\n      if (!(iv >= 0 && iv <= 0xffffff)) {\n        setRgba(rgbaArr, 0, 0, 0, 1);\n        return; // Covers NaN.\n      }\n\n      setRgba(rgbaArr, (iv & 0xff0000) >> 16, (iv & 0xff00) >> 8, iv & 0xff, 1);\n      putToCache(colorStr, rgbaArr);\n      return rgbaArr;\n    }\n\n    return;\n  }\n\n  var op = str.indexOf('('),\n      ep = str.indexOf(')');\n\n  if (op !== -1 && ep + 1 === str.length) {\n    var fname = str.substr(0, op);\n    var params = str.substr(op + 1, ep - (op + 1)).split(',');\n    var alpha = 1; // To allow case fallthrough.\n\n    switch (fname) {\n      case 'rgba':\n        if (params.length !== 4) {\n          setRgba(rgbaArr, 0, 0, 0, 1);\n          return;\n        }\n\n        alpha = parseCssFloat(params.pop());\n      // jshint ignore:line\n      // Fall through.\n\n      case 'rgb':\n        if (params.length !== 3) {\n          setRgba(rgbaArr, 0, 0, 0, 1);\n          return;\n        }\n\n        setRgba(rgbaArr, parseCssInt(params[0]), parseCssInt(params[1]), parseCssInt(params[2]), alpha);\n        putToCache(colorStr, rgbaArr);\n        return rgbaArr;\n\n      case 'hsla':\n        if (params.length !== 4) {\n          setRgba(rgbaArr, 0, 0, 0, 1);\n          return;\n        }\n\n        params[3] = parseCssFloat(params[3]);\n        hsla2rgba(params, rgbaArr);\n        putToCache(colorStr, rgbaArr);\n        return rgbaArr;\n\n      case 'hsl':\n        if (params.length !== 3) {\n          setRgba(rgbaArr, 0, 0, 0, 1);\n          return;\n        }\n\n        hsla2rgba(params, rgbaArr);\n        putToCache(colorStr, rgbaArr);\n        return rgbaArr;\n\n      default:\n        return;\n    }\n  }\n\n  setRgba(rgbaArr, 0, 0, 0, 1);\n  return;\n}\n/**\n * @param {Array.<number>} hsla\n * @param {Array.<number>} rgba\n * @return {Array.<number>} rgba\n */\n\n\nfunction hsla2rgba(hsla, rgba) {\n  var h = (parseFloat(hsla[0]) % 360 + 360) % 360 / 360; // 0 .. 1\n  // NOTE(deanm): According to the CSS spec s/l should only be\n  // percentages, but we don't bother and let float or percentage.\n\n  var s = parseCssFloat(hsla[1]);\n  var l = parseCssFloat(hsla[2]);\n  var m2 = l <= 0.5 ? l * (s + 1) : l + s - l * s;\n  var m1 = l * 2 - m2;\n  rgba = rgba || [];\n  setRgba(rgba, clampCssByte(cssHueToRgb(m1, m2, h + 1 / 3) * 255), clampCssByte(cssHueToRgb(m1, m2, h) * 255), clampCssByte(cssHueToRgb(m1, m2, h - 1 / 3) * 255), 1);\n\n  if (hsla.length === 4) {\n    rgba[3] = hsla[3];\n  }\n\n  return rgba;\n}\n/**\n * @param {Array.<number>} rgba\n * @return {Array.<number>} hsla\n */\n\n\nfunction rgba2hsla(rgba) {\n  if (!rgba) {\n    return;\n  } // RGB from 0 to 255\n\n\n  var R = rgba[0] / 255;\n  var G = rgba[1] / 255;\n  var B = rgba[2] / 255;\n  var vMin = Math.min(R, G, B); // Min. value of RGB\n\n  var vMax = Math.max(R, G, B); // Max. value of RGB\n\n  var delta = vMax - vMin; // Delta RGB value\n\n  var L = (vMax + vMin) / 2;\n  var H;\n  var S; // HSL results from 0 to 1\n\n  if (delta === 0) {\n    H = 0;\n    S = 0;\n  } else {\n    if (L < 0.5) {\n      S = delta / (vMax + vMin);\n    } else {\n      S = delta / (2 - vMax - vMin);\n    }\n\n    var deltaR = ((vMax - R) / 6 + delta / 2) / delta;\n    var deltaG = ((vMax - G) / 6 + delta / 2) / delta;\n    var deltaB = ((vMax - B) / 6 + delta / 2) / delta;\n\n    if (R === vMax) {\n      H = deltaB - deltaG;\n    } else if (G === vMax) {\n      H = 1 / 3 + deltaR - deltaB;\n    } else if (B === vMax) {\n      H = 2 / 3 + deltaG - deltaR;\n    }\n\n    if (H < 0) {\n      H += 1;\n    }\n\n    if (H > 1) {\n      H -= 1;\n    }\n  }\n\n  var hsla = [H * 360, S, L];\n\n  if (rgba[3] != null) {\n    hsla.push(rgba[3]);\n  }\n\n  return hsla;\n}\n/**\n * @param {string} color\n * @param {number} level\n * @return {string}\n * @memberOf module:zrender/util/color\n */\n\n\nfunction lift(color, level) {\n  var colorArr = parse(color);\n\n  if (colorArr) {\n    for (var i = 0; i < 3; i++) {\n      if (level < 0) {\n        colorArr[i] = colorArr[i] * (1 - level) | 0;\n      } else {\n        colorArr[i] = (255 - colorArr[i]) * level + colorArr[i] | 0;\n      }\n    }\n\n    return stringify(colorArr, colorArr.length === 4 ? 'rgba' : 'rgb');\n  }\n}\n/**\n * @param {string} color\n * @return {string}\n * @memberOf module:zrender/util/color\n */\n\n\nfunction toHex(color) {\n  var colorArr = parse(color);\n\n  if (colorArr) {\n    return ((1 << 24) + (colorArr[0] << 16) + (colorArr[1] << 8) + +colorArr[2]).toString(16).slice(1);\n  }\n}\n/**\n * Map value to color. Faster than lerp methods because color is represented by rgba array.\n * @param {number} normalizedValue A float between 0 and 1.\n * @param {Array.<Array.<number>>} colors List of rgba color array\n * @param {Array.<number>} [out] Mapped gba color array\n * @return {Array.<number>} will be null/undefined if input illegal.\n */\n\n\nfunction fastLerp(normalizedValue, colors, out) {\n  if (!(colors && colors.length) || !(normalizedValue >= 0 && normalizedValue <= 1)) {\n    return;\n  }\n\n  out = out || [];\n  var value = normalizedValue * (colors.length - 1);\n  var leftIndex = Math.floor(value);\n  var rightIndex = Math.ceil(value);\n  var leftColor = colors[leftIndex];\n  var rightColor = colors[rightIndex];\n  var dv = value - leftIndex;\n  out[0] = clampCssByte(lerpNumber(leftColor[0], rightColor[0], dv));\n  out[1] = clampCssByte(lerpNumber(leftColor[1], rightColor[1], dv));\n  out[2] = clampCssByte(lerpNumber(leftColor[2], rightColor[2], dv));\n  out[3] = clampCssFloat(lerpNumber(leftColor[3], rightColor[3], dv));\n  return out;\n}\n/**\n * @deprecated\n */\n\n\nvar fastMapToColor = fastLerp;\n/**\n * @param {number} normalizedValue A float between 0 and 1.\n * @param {Array.<string>} colors Color list.\n * @param {boolean=} fullOutput Default false.\n * @return {(string|Object)} Result color. If fullOutput,\n *                           return {color: ..., leftIndex: ..., rightIndex: ..., value: ...},\n * @memberOf module:zrender/util/color\n */\n\nfunction lerp(normalizedValue, colors, fullOutput) {\n  if (!(colors && colors.length) || !(normalizedValue >= 0 && normalizedValue <= 1)) {\n    return;\n  }\n\n  var value = normalizedValue * (colors.length - 1);\n  var leftIndex = Math.floor(value);\n  var rightIndex = Math.ceil(value);\n  var leftColor = parse(colors[leftIndex]);\n  var rightColor = parse(colors[rightIndex]);\n  var dv = value - leftIndex;\n  var color = stringify([clampCssByte(lerpNumber(leftColor[0], rightColor[0], dv)), clampCssByte(lerpNumber(leftColor[1], rightColor[1], dv)), clampCssByte(lerpNumber(leftColor[2], rightColor[2], dv)), clampCssFloat(lerpNumber(leftColor[3], rightColor[3], dv))], 'rgba');\n  return fullOutput ? {\n    color: color,\n    leftIndex: leftIndex,\n    rightIndex: rightIndex,\n    value: value\n  } : color;\n}\n/**\n * @deprecated\n */\n\n\nvar mapToColor = lerp;\n/**\n * @param {string} color\n * @param {number=} h 0 ~ 360, ignore when null.\n * @param {number=} s 0 ~ 1, ignore when null.\n * @param {number=} l 0 ~ 1, ignore when null.\n * @return {string} Color string in rgba format.\n * @memberOf module:zrender/util/color\n */\n\nfunction modifyHSL(color, h, s, l) {\n  color = parse(color);\n\n  if (color) {\n    color = rgba2hsla(color);\n    h != null && (color[0] = clampCssAngle(h));\n    s != null && (color[1] = parseCssFloat(s));\n    l != null && (color[2] = parseCssFloat(l));\n    return stringify(hsla2rgba(color), 'rgba');\n  }\n}\n/**\n * @param {string} color\n * @param {number=} alpha 0 ~ 1\n * @return {string} Color string in rgba format.\n * @memberOf module:zrender/util/color\n */\n\n\nfunction modifyAlpha(color, alpha) {\n  color = parse(color);\n\n  if (color && alpha != null) {\n    color[3] = clampCssFloat(alpha);\n    return stringify(color, 'rgba');\n  }\n}\n/**\n * @param {Array.<number>} arrColor like [12,33,44,0.4]\n * @param {string} type 'rgba', 'hsva', ...\n * @return {string} Result color. (If input illegal, return undefined).\n */\n\n\nfunction stringify(arrColor, type) {\n  if (!arrColor || !arrColor.length) {\n    return;\n  }\n\n  var colorStr = arrColor[0] + ',' + arrColor[1] + ',' + arrColor[2];\n\n  if (type === 'rgba' || type === 'hsva' || type === 'hsla') {\n    colorStr += ',' + arrColor[3];\n  }\n\n  return type + '(' + colorStr + ')';\n}\n\nexports.parse = parse;\nexports.lift = lift;\nexports.toHex = toHex;\nexports.fastLerp = fastLerp;\nexports.fastMapToColor = fastMapToColor;\nexports.lerp = lerp;\nexports.mapToColor = mapToColor;\nexports.modifyHSL = modifyHSL;\nexports.modifyAlpha = modifyAlpha;\nexports.stringify = stringify;\n\n/***/ }),\n/* 475 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n// Layout helpers for each component positioning\n\n\n    var zrUtil = __webpack_require__(460);\n    var BoundingRect = __webpack_require__(467);\n    var numberUtil = __webpack_require__(465);\n    var formatUtil = __webpack_require__(468);\n    var parsePercent = numberUtil.parsePercent;\n    var each = zrUtil.each;\n\n    var layout = {};\n\n    var LOCATION_PARAMS = layout.LOCATION_PARAMS = [\n        'left', 'right', 'top', 'bottom', 'width', 'height'\n    ];\n\n    function boxLayout(orient, group, gap, maxWidth, maxHeight) {\n        var x = 0;\n        var y = 0;\n        if (maxWidth == null) {\n            maxWidth = Infinity;\n        }\n        if (maxHeight == null) {\n            maxHeight = Infinity;\n        }\n        var currentLineMaxSize = 0;\n        group.eachChild(function (child, idx) {\n            var position = child.position;\n            var rect = child.getBoundingRect();\n            var nextChild = group.childAt(idx + 1);\n            var nextChildRect = nextChild && nextChild.getBoundingRect();\n            var nextX;\n            var nextY;\n            if (orient === 'horizontal') {\n                var moveX = rect.width + (nextChildRect ? (-nextChildRect.x + rect.x) : 0);\n                nextX = x + moveX;\n                // Wrap when width exceeds maxWidth or meet a `newline` group\n                if (nextX > maxWidth || child.newline) {\n                    x = 0;\n                    nextX = moveX;\n                    y += currentLineMaxSize + gap;\n                    currentLineMaxSize = rect.height;\n                }\n                else {\n                    currentLineMaxSize = Math.max(currentLineMaxSize, rect.height);\n                }\n            }\n            else {\n                var moveY = rect.height + (nextChildRect ? (-nextChildRect.y + rect.y) : 0);\n                nextY = y + moveY;\n                // Wrap when width exceeds maxHeight or meet a `newline` group\n                if (nextY > maxHeight || child.newline) {\n                    x += currentLineMaxSize + gap;\n                    y = 0;\n                    nextY = moveY;\n                    currentLineMaxSize = rect.width;\n                }\n                else {\n                    currentLineMaxSize = Math.max(currentLineMaxSize, rect.width);\n                }\n            }\n\n            if (child.newline) {\n                return;\n            }\n\n            position[0] = x;\n            position[1] = y;\n\n            orient === 'horizontal'\n                ? (x = nextX + gap)\n                : (y = nextY + gap);\n        });\n    }\n\n    /**\n     * VBox or HBox layouting\n     * @param {string} orient\n     * @param {module:zrender/container/Group} group\n     * @param {number} gap\n     * @param {number} [width=Infinity]\n     * @param {number} [height=Infinity]\n     */\n    layout.box = boxLayout;\n\n    /**\n     * VBox layouting\n     * @param {module:zrender/container/Group} group\n     * @param {number} gap\n     * @param {number} [width=Infinity]\n     * @param {number} [height=Infinity]\n     */\n    layout.vbox = zrUtil.curry(boxLayout, 'vertical');\n\n    /**\n     * HBox layouting\n     * @param {module:zrender/container/Group} group\n     * @param {number} gap\n     * @param {number} [width=Infinity]\n     * @param {number} [height=Infinity]\n     */\n    layout.hbox = zrUtil.curry(boxLayout, 'horizontal');\n\n    /**\n     * If x or x2 is not specified or 'center' 'left' 'right',\n     * the width would be as long as possible.\n     * If y or y2 is not specified or 'middle' 'top' 'bottom',\n     * the height would be as long as possible.\n     *\n     * @param {Object} positionInfo\n     * @param {number|string} [positionInfo.x]\n     * @param {number|string} [positionInfo.y]\n     * @param {number|string} [positionInfo.x2]\n     * @param {number|string} [positionInfo.y2]\n     * @param {Object} containerRect\n     * @param {string|number} margin\n     * @return {Object} {width, height}\n     */\n    layout.getAvailableSize = function (positionInfo, containerRect, margin) {\n        var containerWidth = containerRect.width;\n        var containerHeight = containerRect.height;\n\n        var x = parsePercent(positionInfo.x, containerWidth);\n        var y = parsePercent(positionInfo.y, containerHeight);\n        var x2 = parsePercent(positionInfo.x2, containerWidth);\n        var y2 = parsePercent(positionInfo.y2, containerHeight);\n\n        (isNaN(x) || isNaN(parseFloat(positionInfo.x))) && (x = 0);\n        (isNaN(x2) || isNaN(parseFloat(positionInfo.x2))) && (x2 = containerWidth);\n        (isNaN(y) || isNaN(parseFloat(positionInfo.y))) && (y = 0);\n        (isNaN(y2) || isNaN(parseFloat(positionInfo.y2))) && (y2 = containerHeight);\n\n        margin = formatUtil.normalizeCssArray(margin || 0);\n\n        return {\n            width: Math.max(x2 - x - margin[1] - margin[3], 0),\n            height: Math.max(y2 - y - margin[0] - margin[2], 0)\n        };\n    };\n\n    /**\n     * Parse position info.\n     *\n     * @param {Object} positionInfo\n     * @param {number|string} [positionInfo.left]\n     * @param {number|string} [positionInfo.top]\n     * @param {number|string} [positionInfo.right]\n     * @param {number|string} [positionInfo.bottom]\n     * @param {number|string} [positionInfo.width]\n     * @param {number|string} [positionInfo.height]\n     * @param {number|string} [positionInfo.aspect] Aspect is width / height\n     * @param {Object} containerRect\n     * @param {string|number} [margin]\n     *\n     * @return {module:zrender/core/BoundingRect}\n     */\n    layout.getLayoutRect = function (\n        positionInfo, containerRect, margin\n    ) {\n        margin = formatUtil.normalizeCssArray(margin || 0);\n\n        var containerWidth = containerRect.width;\n        var containerHeight = containerRect.height;\n\n        var left = parsePercent(positionInfo.left, containerWidth);\n        var top = parsePercent(positionInfo.top, containerHeight);\n        var right = parsePercent(positionInfo.right, containerWidth);\n        var bottom = parsePercent(positionInfo.bottom, containerHeight);\n        var width = parsePercent(positionInfo.width, containerWidth);\n        var height = parsePercent(positionInfo.height, containerHeight);\n\n        var verticalMargin = margin[2] + margin[0];\n        var horizontalMargin = margin[1] + margin[3];\n        var aspect = positionInfo.aspect;\n\n        // If width is not specified, calculate width from left and right\n        if (isNaN(width)) {\n            width = containerWidth - right - horizontalMargin - left;\n        }\n        if (isNaN(height)) {\n            height = containerHeight - bottom - verticalMargin - top;\n        }\n\n        // If width and height are not given\n        // 1. Graph should not exceeds the container\n        // 2. Aspect must be keeped\n        // 3. Graph should take the space as more as possible\n        if (isNaN(width) && isNaN(height)) {\n            if (aspect > containerWidth / containerHeight) {\n                width = containerWidth * 0.8;\n            }\n            else {\n                height = containerHeight * 0.8;\n            }\n        }\n\n        if (aspect != null) {\n            // Calculate width or height with given aspect\n            if (isNaN(width)) {\n                width = aspect * height;\n            }\n            if (isNaN(height)) {\n                height = width / aspect;\n            }\n        }\n\n        // If left is not specified, calculate left from right and width\n        if (isNaN(left)) {\n            left = containerWidth - right - width - horizontalMargin;\n        }\n        if (isNaN(top)) {\n            top = containerHeight - bottom - height - verticalMargin;\n        }\n\n        // Align left and top\n        switch (positionInfo.left || positionInfo.right) {\n            case 'center':\n                left = containerWidth / 2 - width / 2 - margin[3];\n                break;\n            case 'right':\n                left = containerWidth - width - horizontalMargin;\n                break;\n        }\n        switch (positionInfo.top || positionInfo.bottom) {\n            case 'middle':\n            case 'center':\n                top = containerHeight / 2 - height / 2 - margin[0];\n                break;\n            case 'bottom':\n                top = containerHeight - height - verticalMargin;\n                break;\n        }\n        // If something is wrong and left, top, width, height are calculated as NaN\n        left = left || 0;\n        top = top || 0;\n        if (isNaN(width)) {\n            // Width may be NaN if only one value is given except width\n            width = containerWidth - left - (right || 0);\n        }\n        if (isNaN(height)) {\n            // Height may be NaN if only one value is given except height\n            height = containerHeight - top - (bottom || 0);\n        }\n\n        var rect = new BoundingRect(left + margin[3], top + margin[0], width, height);\n        rect.margin = margin;\n        return rect;\n    };\n\n\n    /**\n     * Position a zr element in viewport\n     *  Group position is specified by either\n     *  {left, top}, {right, bottom}\n     *  If all properties exists, right and bottom will be igonred.\n     *\n     * Logic:\n     *     1. Scale (against origin point in parent coord)\n     *     2. Rotate (against origin point in parent coord)\n     *     3. Traslate (with el.position by this method)\n     * So this method only fixes the last step 'Traslate', which does not affect\n     * scaling and rotating.\n     *\n     * If be called repeatly with the same input el, the same result will be gotten.\n     *\n     * @param {module:zrender/Element} el Should have `getBoundingRect` method.\n     * @param {Object} positionInfo\n     * @param {number|string} [positionInfo.left]\n     * @param {number|string} [positionInfo.top]\n     * @param {number|string} [positionInfo.right]\n     * @param {number|string} [positionInfo.bottom]\n     * @param {Object} containerRect\n     * @param {string|number} margin\n     * @param {Object} [opt]\n     * @param {Array.<number>} [opt.hv=[1,1]] Only horizontal or only vertical.\n     * @param {Array.<number>} [opt.boundingMode='all']\n     *        Specify how to calculate boundingRect when locating.\n     *        'all': Position the boundingRect that is transformed and uioned\n     *               both itself and its descendants.\n     *               This mode simplies confine the elements in the bounding\n     *               of their container (e.g., using 'right: 0').\n     *        'raw': Position the boundingRect that is not transformed and only itself.\n     *               This mode is useful when you want a element can overflow its\n     *               container. (Consider a rotated circle needs to be located in a corner.)\n     *               In this mode positionInfo.width/height can only be number.\n     */\n    layout.positionElement = function (el, positionInfo, containerRect, margin, opt) {\n        var h = !opt || !opt.hv || opt.hv[0];\n        var v = !opt || !opt.hv || opt.hv[1];\n        var boundingMode = opt && opt.boundingMode || 'all';\n\n        if (!h && !v) {\n            return;\n        }\n\n        var rect;\n        if (boundingMode === 'raw') {\n            rect = el.type === 'group'\n                ? new BoundingRect(0, 0, +positionInfo.width || 0, +positionInfo.height || 0)\n                : el.getBoundingRect();\n        }\n        else {\n            rect = el.getBoundingRect();\n            if (el.needLocalTransform()) {\n                var transform = el.getLocalTransform();\n                // Notice: raw rect may be inner object of el,\n                // which should not be modified.\n                rect = rect.clone();\n                rect.applyTransform(transform);\n            }\n        }\n\n        positionInfo = layout.getLayoutRect(\n            zrUtil.defaults(\n                {width: rect.width, height: rect.height},\n                positionInfo\n            ),\n            containerRect,\n            margin\n        );\n\n        // Because 'tranlate' is the last step in transform\n        // (see zrender/core/Transformable#getLocalTransfrom),\n        // we can just only modify el.position to get final result.\n        var elPos = el.position;\n        var dx = h ? positionInfo.x - rect.x : 0;\n        var dy = v ? positionInfo.y - rect.y : 0;\n\n        el.attr('position', boundingMode === 'raw' ? [dx, dy] : [elPos[0] + dx, elPos[1] + dy]);\n    };\n\n    /**\n     * Consider Case:\n     * When defulat option has {left: 0, width: 100}, and we set {right: 0}\n     * through setOption or media query, using normal zrUtil.merge will cause\n     * {right: 0} does not take effect.\n     *\n     * @example\n     * ComponentModel.extend({\n     *     init: function () {\n     *         ...\n     *         var inputPositionParams = layout.getLayoutParams(option);\n     *         this.mergeOption(inputPositionParams);\n     *     },\n     *     mergeOption: function (newOption) {\n     *         newOption && zrUtil.merge(thisOption, newOption, true);\n     *         layout.mergeLayoutParam(thisOption, newOption);\n     *     }\n     * });\n     *\n     * @param {Object} targetOption\n     * @param {Object} newOption\n     * @param {Object|string} [opt]\n     * @param {boolean} [opt.ignoreSize=false] Some component must has width and height.\n     */\n    layout.mergeLayoutParam = function (targetOption, newOption, opt) {\n        !zrUtil.isObject(opt) && (opt = {});\n        var hNames = ['width', 'left', 'right']; // Order by priority.\n        var vNames = ['height', 'top', 'bottom']; // Order by priority.\n        var hResult = merge(hNames);\n        var vResult = merge(vNames);\n\n        copy(hNames, targetOption, hResult);\n        copy(vNames, targetOption, vResult);\n\n        function merge(names) {\n            var newParams = {};\n            var newValueCount = 0;\n            var merged = {};\n            var mergedValueCount = 0;\n            var enoughParamNumber = opt.ignoreSize ? 1 : 2;\n\n            each(names, function (name) {\n                merged[name] = targetOption[name];\n            });\n            each(names, function (name) {\n                // Consider case: newOption.width is null, which is\n                // set by user for removing width setting.\n                hasProp(newOption, name) && (newParams[name] = merged[name] = newOption[name]);\n                hasValue(newParams, name) && newValueCount++;\n                hasValue(merged, name) && mergedValueCount++;\n            });\n\n            // Case: newOption: {width: ..., right: ...},\n            // or targetOption: {right: ...} and newOption: {width: ...},\n            // There is no conflict when merged only has params count\n            // little than enoughParamNumber.\n            if (mergedValueCount === enoughParamNumber || !newValueCount) {\n                return merged;\n            }\n            // Case: newOption: {width: ..., right: ...},\n            // Than we can make sure user only want those two, and ignore\n            // all origin params in targetOption.\n            else if (newValueCount >= enoughParamNumber) {\n                return newParams;\n            }\n            else {\n                // Chose another param from targetOption by priority.\n                // When 'ignoreSize', enoughParamNumber is 1 and those will not happen.\n                for (var i = 0; i < names.length; i++) {\n                    var name = names[i];\n                    if (!hasProp(newParams, name) && hasProp(targetOption, name)) {\n                        newParams[name] = targetOption[name];\n                        break;\n                    }\n                }\n                return newParams;\n            }\n        }\n\n        function hasProp(obj, name) {\n            return obj.hasOwnProperty(name);\n        }\n\n        function hasValue(obj, name) {\n            return obj[name] != null && obj[name] !== 'auto';\n        }\n\n        function copy(names, target, source) {\n            each(names, function (name) {\n                target[name] = source[name];\n            });\n        }\n    };\n\n    /**\n     * Retrieve 'left', 'right', 'top', 'bottom', 'width', 'height' from object.\n     * @param {Object} source\n     * @return {Object} Result contains those props.\n     */\n    layout.getLayoutParams = function (source) {\n        return layout.copyLayoutParams({}, source);\n    };\n\n    /**\n     * Retrieve 'left', 'right', 'top', 'bottom', 'width', 'height' from object.\n     * @param {Object} source\n     * @return {Object} Result contains those props.\n     */\n    layout.copyLayoutParams = function (target, source) {\n        source && target && each(LOCATION_PARAMS, function (name) {\n            source.hasOwnProperty(name) && (target[name] = source[name]);\n        });\n        return target;\n    };\n\n    module.exports = layout;\n\n\n/***/ }),\n/* 476 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar curve = __webpack_require__(477);\n\nvar vec2 = __webpack_require__(463);\n\nvar bbox = __webpack_require__(609);\n\nvar BoundingRect = __webpack_require__(467);\n\nvar _config = __webpack_require__(488);\n\nvar dpr = _config.devicePixelRatio;\n\n/**\n * Path 代理，可以在`buildPath`中用于替代`ctx`, 会保存每个path操作的命令到pathCommands属性中\n * 可以用于 isInsidePath 判断以及获取boundingRect\n *\n * @module zrender/core/PathProxy\n * @author Yi Shen (http://www.github.com/pissang)\n */\n// TODO getTotalLength, getPointAtLength\nvar CMD = {\n  M: 1,\n  L: 2,\n  C: 3,\n  Q: 4,\n  A: 5,\n  Z: 6,\n  // Rect\n  R: 7\n}; // var CMD_MEM_SIZE = {\n//     M: 3,\n//     L: 3,\n//     C: 7,\n//     Q: 5,\n//     A: 9,\n//     R: 5,\n//     Z: 1\n// };\n\nvar min = [];\nvar max = [];\nvar min2 = [];\nvar max2 = [];\nvar mathMin = Math.min;\nvar mathMax = Math.max;\nvar mathCos = Math.cos;\nvar mathSin = Math.sin;\nvar mathSqrt = Math.sqrt;\nvar mathAbs = Math.abs;\nvar hasTypedArray = typeof Float32Array != 'undefined';\n/**\n * @alias module:zrender/core/PathProxy\n * @constructor\n */\n\nvar PathProxy = function (notSaveData) {\n  this._saveData = !(notSaveData || false);\n\n  if (this._saveData) {\n    /**\n     * Path data. Stored as flat array\n     * @type {Array.<Object>}\n     */\n    this.data = [];\n  }\n\n  this._ctx = null;\n};\n/**\n * 快速计算Path包围盒（并不是最小包围盒）\n * @return {Object}\n */\n\n\nPathProxy.prototype = {\n  constructor: PathProxy,\n  _xi: 0,\n  _yi: 0,\n  _x0: 0,\n  _y0: 0,\n  // Unit x, Unit y. Provide for avoiding drawing that too short line segment\n  _ux: 0,\n  _uy: 0,\n  _len: 0,\n  _lineDash: null,\n  _dashOffset: 0,\n  _dashIdx: 0,\n  _dashSum: 0,\n\n  /**\n   * @readOnly\n   */\n  setScale: function (sx, sy) {\n    this._ux = mathAbs(1 / dpr / sx) || 0;\n    this._uy = mathAbs(1 / dpr / sy) || 0;\n  },\n  getContext: function () {\n    return this._ctx;\n  },\n\n  /**\n   * @param  {CanvasRenderingContext2D} ctx\n   * @return {module:zrender/core/PathProxy}\n   */\n  beginPath: function (ctx) {\n    this._ctx = ctx;\n    ctx && ctx.beginPath();\n    ctx && (this.dpr = ctx.dpr); // Reset\n\n    if (this._saveData) {\n      this._len = 0;\n    }\n\n    if (this._lineDash) {\n      this._lineDash = null;\n      this._dashOffset = 0;\n    }\n\n    return this;\n  },\n\n  /**\n   * @param  {number} x\n   * @param  {number} y\n   * @return {module:zrender/core/PathProxy}\n   */\n  moveTo: function (x, y) {\n    this.addData(CMD.M, x, y);\n    this._ctx && this._ctx.moveTo(x, y); // x0, y0, xi, yi 是记录在 _dashedXXXXTo 方法中使用\n    // xi, yi 记录当前点, x0, y0 在 closePath 的时候回到起始点。\n    // 有可能在 beginPath 之后直接调用 lineTo，这时候 x0, y0 需要\n    // 在 lineTo 方法中记录，这里先不考虑这种情况，dashed line 也只在 IE10- 中不支持\n\n    this._x0 = x;\n    this._y0 = y;\n    this._xi = x;\n    this._yi = y;\n    return this;\n  },\n\n  /**\n   * @param  {number} x\n   * @param  {number} y\n   * @return {module:zrender/core/PathProxy}\n   */\n  lineTo: function (x, y) {\n    var exceedUnit = mathAbs(x - this._xi) > this._ux || mathAbs(y - this._yi) > this._uy // Force draw the first segment\n    || this._len < 5;\n    this.addData(CMD.L, x, y);\n\n    if (this._ctx && exceedUnit) {\n      this._needsDash() ? this._dashedLineTo(x, y) : this._ctx.lineTo(x, y);\n    }\n\n    if (exceedUnit) {\n      this._xi = x;\n      this._yi = y;\n    }\n\n    return this;\n  },\n\n  /**\n   * @param  {number} x1\n   * @param  {number} y1\n   * @param  {number} x2\n   * @param  {number} y2\n   * @param  {number} x3\n   * @param  {number} y3\n   * @return {module:zrender/core/PathProxy}\n   */\n  bezierCurveTo: function (x1, y1, x2, y2, x3, y3) {\n    this.addData(CMD.C, x1, y1, x2, y2, x3, y3);\n\n    if (this._ctx) {\n      this._needsDash() ? this._dashedBezierTo(x1, y1, x2, y2, x3, y3) : this._ctx.bezierCurveTo(x1, y1, x2, y2, x3, y3);\n    }\n\n    this._xi = x3;\n    this._yi = y3;\n    return this;\n  },\n\n  /**\n   * @param  {number} x1\n   * @param  {number} y1\n   * @param  {number} x2\n   * @param  {number} y2\n   * @return {module:zrender/core/PathProxy}\n   */\n  quadraticCurveTo: function (x1, y1, x2, y2) {\n    this.addData(CMD.Q, x1, y1, x2, y2);\n\n    if (this._ctx) {\n      this._needsDash() ? this._dashedQuadraticTo(x1, y1, x2, y2) : this._ctx.quadraticCurveTo(x1, y1, x2, y2);\n    }\n\n    this._xi = x2;\n    this._yi = y2;\n    return this;\n  },\n\n  /**\n   * @param  {number} cx\n   * @param  {number} cy\n   * @param  {number} r\n   * @param  {number} startAngle\n   * @param  {number} endAngle\n   * @param  {boolean} anticlockwise\n   * @return {module:zrender/core/PathProxy}\n   */\n  arc: function (cx, cy, r, startAngle, endAngle, anticlockwise) {\n    this.addData(CMD.A, cx, cy, r, r, startAngle, endAngle - startAngle, 0, anticlockwise ? 0 : 1);\n    this._ctx && this._ctx.arc(cx, cy, r, startAngle, endAngle, anticlockwise);\n    this._xi = mathCos(endAngle) * r + cx;\n    this._yi = mathSin(endAngle) * r + cx;\n    return this;\n  },\n  // TODO\n  arcTo: function (x1, y1, x2, y2, radius) {\n    if (this._ctx) {\n      this._ctx.arcTo(x1, y1, x2, y2, radius);\n    }\n\n    return this;\n  },\n  // TODO\n  rect: function (x, y, w, h) {\n    this._ctx && this._ctx.rect(x, y, w, h);\n    this.addData(CMD.R, x, y, w, h);\n    return this;\n  },\n\n  /**\n   * @return {module:zrender/core/PathProxy}\n   */\n  closePath: function () {\n    this.addData(CMD.Z);\n    var ctx = this._ctx;\n    var x0 = this._x0;\n    var y0 = this._y0;\n\n    if (ctx) {\n      this._needsDash() && this._dashedLineTo(x0, y0);\n      ctx.closePath();\n    }\n\n    this._xi = x0;\n    this._yi = y0;\n    return this;\n  },\n\n  /**\n   * Context 从外部传入，因为有可能是 rebuildPath 完之后再 fill。\n   * stroke 同样\n   * @param {CanvasRenderingContext2D} ctx\n   * @return {module:zrender/core/PathProxy}\n   */\n  fill: function (ctx) {\n    ctx && ctx.fill();\n    this.toStatic();\n  },\n\n  /**\n   * @param {CanvasRenderingContext2D} ctx\n   * @return {module:zrender/core/PathProxy}\n   */\n  stroke: function (ctx) {\n    ctx && ctx.stroke();\n    this.toStatic();\n  },\n\n  /**\n   * 必须在其它绘制命令前调用\n   * Must be invoked before all other path drawing methods\n   * @return {module:zrender/core/PathProxy}\n   */\n  setLineDash: function (lineDash) {\n    if (lineDash instanceof Array) {\n      this._lineDash = lineDash;\n      this._dashIdx = 0;\n      var lineDashSum = 0;\n\n      for (var i = 0; i < lineDash.length; i++) {\n        lineDashSum += lineDash[i];\n      }\n\n      this._dashSum = lineDashSum;\n    }\n\n    return this;\n  },\n\n  /**\n   * 必须在其它绘制命令前调用\n   * Must be invoked before all other path drawing methods\n   * @return {module:zrender/core/PathProxy}\n   */\n  setLineDashOffset: function (offset) {\n    this._dashOffset = offset;\n    return this;\n  },\n\n  /**\n   *\n   * @return {boolean}\n   */\n  len: function () {\n    return this._len;\n  },\n\n  /**\n   * 直接设置 Path 数据\n   */\n  setData: function (data) {\n    var len = data.length;\n\n    if (!(this.data && this.data.length == len) && hasTypedArray) {\n      this.data = new Float32Array(len);\n    }\n\n    for (var i = 0; i < len; i++) {\n      this.data[i] = data[i];\n    }\n\n    this._len = len;\n  },\n\n  /**\n   * 添加子路径\n   * @param {module:zrender/core/PathProxy|Array.<module:zrender/core/PathProxy>} path\n   */\n  appendPath: function (path) {\n    if (!(path instanceof Array)) {\n      path = [path];\n    }\n\n    var len = path.length;\n    var appendSize = 0;\n    var offset = this._len;\n\n    for (var i = 0; i < len; i++) {\n      appendSize += path[i].len();\n    }\n\n    if (hasTypedArray && this.data instanceof Float32Array) {\n      this.data = new Float32Array(offset + appendSize);\n    }\n\n    for (var i = 0; i < len; i++) {\n      var appendPathData = path[i].data;\n\n      for (var k = 0; k < appendPathData.length; k++) {\n        this.data[offset++] = appendPathData[k];\n      }\n    }\n\n    this._len = offset;\n  },\n\n  /**\n   * 填充 Path 数据。\n   * 尽量复用而不申明新的数组。大部分图形重绘的指令数据长度都是不变的。\n   */\n  addData: function (cmd) {\n    if (!this._saveData) {\n      return;\n    }\n\n    var data = this.data;\n\n    if (this._len + arguments.length > data.length) {\n      // 因为之前的数组已经转换成静态的 Float32Array\n      // 所以不够用时需要扩展一个新的动态数组\n      this._expandData();\n\n      data = this.data;\n    }\n\n    for (var i = 0; i < arguments.length; i++) {\n      data[this._len++] = arguments[i];\n    }\n\n    this._prevCmd = cmd;\n  },\n  _expandData: function () {\n    // Only if data is Float32Array\n    if (!(this.data instanceof Array)) {\n      var newData = [];\n\n      for (var i = 0; i < this._len; i++) {\n        newData[i] = this.data[i];\n      }\n\n      this.data = newData;\n    }\n  },\n\n  /**\n   * If needs js implemented dashed line\n   * @return {boolean}\n   * @private\n   */\n  _needsDash: function () {\n    return this._lineDash;\n  },\n  _dashedLineTo: function (x1, y1) {\n    var dashSum = this._dashSum;\n    var offset = this._dashOffset;\n    var lineDash = this._lineDash;\n    var ctx = this._ctx;\n    var x0 = this._xi;\n    var y0 = this._yi;\n    var dx = x1 - x0;\n    var dy = y1 - y0;\n    var dist = mathSqrt(dx * dx + dy * dy);\n    var x = x0;\n    var y = y0;\n    var dash;\n    var nDash = lineDash.length;\n    var idx;\n    dx /= dist;\n    dy /= dist;\n\n    if (offset < 0) {\n      // Convert to positive offset\n      offset = dashSum + offset;\n    }\n\n    offset %= dashSum;\n    x -= offset * dx;\n    y -= offset * dy;\n\n    while (dx > 0 && x <= x1 || dx < 0 && x >= x1 || dx == 0 && (dy > 0 && y <= y1 || dy < 0 && y >= y1)) {\n      idx = this._dashIdx;\n      dash = lineDash[idx];\n      x += dx * dash;\n      y += dy * dash;\n      this._dashIdx = (idx + 1) % nDash; // Skip positive offset\n\n      if (dx > 0 && x < x0 || dx < 0 && x > x0 || dy > 0 && y < y0 || dy < 0 && y > y0) {\n        continue;\n      }\n\n      ctx[idx % 2 ? 'moveTo' : 'lineTo'](dx >= 0 ? mathMin(x, x1) : mathMax(x, x1), dy >= 0 ? mathMin(y, y1) : mathMax(y, y1));\n    } // Offset for next lineTo\n\n\n    dx = x - x1;\n    dy = y - y1;\n    this._dashOffset = -mathSqrt(dx * dx + dy * dy);\n  },\n  // Not accurate dashed line to\n  _dashedBezierTo: function (x1, y1, x2, y2, x3, y3) {\n    var dashSum = this._dashSum;\n    var offset = this._dashOffset;\n    var lineDash = this._lineDash;\n    var ctx = this._ctx;\n    var x0 = this._xi;\n    var y0 = this._yi;\n    var t;\n    var dx;\n    var dy;\n    var cubicAt = curve.cubicAt;\n    var bezierLen = 0;\n    var idx = this._dashIdx;\n    var nDash = lineDash.length;\n    var x;\n    var y;\n    var tmpLen = 0;\n\n    if (offset < 0) {\n      // Convert to positive offset\n      offset = dashSum + offset;\n    }\n\n    offset %= dashSum; // Bezier approx length\n\n    for (t = 0; t < 1; t += 0.1) {\n      dx = cubicAt(x0, x1, x2, x3, t + 0.1) - cubicAt(x0, x1, x2, x3, t);\n      dy = cubicAt(y0, y1, y2, y3, t + 0.1) - cubicAt(y0, y1, y2, y3, t);\n      bezierLen += mathSqrt(dx * dx + dy * dy);\n    } // Find idx after add offset\n\n\n    for (; idx < nDash; idx++) {\n      tmpLen += lineDash[idx];\n\n      if (tmpLen > offset) {\n        break;\n      }\n    }\n\n    t = (tmpLen - offset) / bezierLen;\n\n    while (t <= 1) {\n      x = cubicAt(x0, x1, x2, x3, t);\n      y = cubicAt(y0, y1, y2, y3, t); // Use line to approximate dashed bezier\n      // Bad result if dash is long\n\n      idx % 2 ? ctx.moveTo(x, y) : ctx.lineTo(x, y);\n      t += lineDash[idx] / bezierLen;\n      idx = (idx + 1) % nDash;\n    } // Finish the last segment and calculate the new offset\n\n\n    idx % 2 !== 0 && ctx.lineTo(x3, y3);\n    dx = x3 - x;\n    dy = y3 - y;\n    this._dashOffset = -mathSqrt(dx * dx + dy * dy);\n  },\n  _dashedQuadraticTo: function (x1, y1, x2, y2) {\n    // Convert quadratic to cubic using degree elevation\n    var x3 = x2;\n    var y3 = y2;\n    x2 = (x2 + 2 * x1) / 3;\n    y2 = (y2 + 2 * y1) / 3;\n    x1 = (this._xi + 2 * x1) / 3;\n    y1 = (this._yi + 2 * y1) / 3;\n\n    this._dashedBezierTo(x1, y1, x2, y2, x3, y3);\n  },\n\n  /**\n   * 转成静态的 Float32Array 减少堆内存占用\n   * Convert dynamic array to static Float32Array\n   */\n  toStatic: function () {\n    var data = this.data;\n\n    if (data instanceof Array) {\n      data.length = this._len;\n\n      if (hasTypedArray) {\n        this.data = new Float32Array(data);\n      }\n    }\n  },\n\n  /**\n   * @return {module:zrender/core/BoundingRect}\n   */\n  getBoundingRect: function () {\n    min[0] = min[1] = min2[0] = min2[1] = Number.MAX_VALUE;\n    max[0] = max[1] = max2[0] = max2[1] = -Number.MAX_VALUE;\n    var data = this.data;\n    var xi = 0;\n    var yi = 0;\n    var x0 = 0;\n    var y0 = 0;\n\n    for (var i = 0; i < data.length;) {\n      var cmd = data[i++];\n\n      if (i == 1) {\n        // 如果第一个命令是 L, C, Q\n        // 则 previous point 同绘制命令的第一个 point\n        //\n        // 第一个命令为 Arc 的情况下会在后面特殊处理\n        xi = data[i];\n        yi = data[i + 1];\n        x0 = xi;\n        y0 = yi;\n      }\n\n      switch (cmd) {\n        case CMD.M:\n          // moveTo 命令重新创建一个新的 subpath, 并且更新新的起点\n          // 在 closePath 的时候使用\n          x0 = data[i++];\n          y0 = data[i++];\n          xi = x0;\n          yi = y0;\n          min2[0] = x0;\n          min2[1] = y0;\n          max2[0] = x0;\n          max2[1] = y0;\n          break;\n\n        case CMD.L:\n          bbox.fromLine(xi, yi, data[i], data[i + 1], min2, max2);\n          xi = data[i++];\n          yi = data[i++];\n          break;\n\n        case CMD.C:\n          bbox.fromCubic(xi, yi, data[i++], data[i++], data[i++], data[i++], data[i], data[i + 1], min2, max2);\n          xi = data[i++];\n          yi = data[i++];\n          break;\n\n        case CMD.Q:\n          bbox.fromQuadratic(xi, yi, data[i++], data[i++], data[i], data[i + 1], min2, max2);\n          xi = data[i++];\n          yi = data[i++];\n          break;\n\n        case CMD.A:\n          // TODO Arc 判断的开销比较大\n          var cx = data[i++];\n          var cy = data[i++];\n          var rx = data[i++];\n          var ry = data[i++];\n          var startAngle = data[i++];\n          var endAngle = data[i++] + startAngle; // TODO Arc 旋转\n\n          var psi = data[i++];\n          var anticlockwise = 1 - data[i++];\n\n          if (i == 1) {\n            // 直接使用 arc 命令\n            // 第一个命令起点还未定义\n            x0 = mathCos(startAngle) * rx + cx;\n            y0 = mathSin(startAngle) * ry + cy;\n          }\n\n          bbox.fromArc(cx, cy, rx, ry, startAngle, endAngle, anticlockwise, min2, max2);\n          xi = mathCos(endAngle) * rx + cx;\n          yi = mathSin(endAngle) * ry + cy;\n          break;\n\n        case CMD.R:\n          x0 = xi = data[i++];\n          y0 = yi = data[i++];\n          var width = data[i++];\n          var height = data[i++]; // Use fromLine\n\n          bbox.fromLine(x0, y0, x0 + width, y0 + height, min2, max2);\n          break;\n\n        case CMD.Z:\n          xi = x0;\n          yi = y0;\n          break;\n      } // Union\n\n\n      vec2.min(min, min, min2);\n      vec2.max(max, max, max2);\n    } // No data\n\n\n    if (i === 0) {\n      min[0] = min[1] = max[0] = max[1] = 0;\n    }\n\n    return new BoundingRect(min[0], min[1], max[0] - min[0], max[1] - min[1]);\n  },\n\n  /**\n   * Rebuild path from current data\n   * Rebuild path will not consider javascript implemented line dash.\n   * @param {CanvasRenderingContext2D} ctx\n   */\n  rebuildPath: function (ctx) {\n    var d = this.data;\n    var x0, y0;\n    var xi, yi;\n    var x, y;\n    var ux = this._ux;\n    var uy = this._uy;\n    var len = this._len;\n\n    for (var i = 0; i < len;) {\n      var cmd = d[i++];\n\n      if (i == 1) {\n        // 如果第一个命令是 L, C, Q\n        // 则 previous point 同绘制命令的第一个 point\n        //\n        // 第一个命令为 Arc 的情况下会在后面特殊处理\n        xi = d[i];\n        yi = d[i + 1];\n        x0 = xi;\n        y0 = yi;\n      }\n\n      switch (cmd) {\n        case CMD.M:\n          x0 = xi = d[i++];\n          y0 = yi = d[i++];\n          ctx.moveTo(xi, yi);\n          break;\n\n        case CMD.L:\n          x = d[i++];\n          y = d[i++]; // Not draw too small seg between\n\n          if (mathAbs(x - xi) > ux || mathAbs(y - yi) > uy || i === len - 1) {\n            ctx.lineTo(x, y);\n            xi = x;\n            yi = y;\n          }\n\n          break;\n\n        case CMD.C:\n          ctx.bezierCurveTo(d[i++], d[i++], d[i++], d[i++], d[i++], d[i++]);\n          xi = d[i - 2];\n          yi = d[i - 1];\n          break;\n\n        case CMD.Q:\n          ctx.quadraticCurveTo(d[i++], d[i++], d[i++], d[i++]);\n          xi = d[i - 2];\n          yi = d[i - 1];\n          break;\n\n        case CMD.A:\n          var cx = d[i++];\n          var cy = d[i++];\n          var rx = d[i++];\n          var ry = d[i++];\n          var theta = d[i++];\n          var dTheta = d[i++];\n          var psi = d[i++];\n          var fs = d[i++];\n          var r = rx > ry ? rx : ry;\n          var scaleX = rx > ry ? 1 : rx / ry;\n          var scaleY = rx > ry ? ry / rx : 1;\n          var isEllipse = Math.abs(rx - ry) > 1e-3;\n          var endAngle = theta + dTheta;\n\n          if (isEllipse) {\n            ctx.translate(cx, cy);\n            ctx.rotate(psi);\n            ctx.scale(scaleX, scaleY);\n            ctx.arc(0, 0, r, theta, endAngle, 1 - fs);\n            ctx.scale(1 / scaleX, 1 / scaleY);\n            ctx.rotate(-psi);\n            ctx.translate(-cx, -cy);\n          } else {\n            ctx.arc(cx, cy, r, theta, endAngle, 1 - fs);\n          }\n\n          if (i == 1) {\n            // 直接使用 arc 命令\n            // 第一个命令起点还未定义\n            x0 = mathCos(theta) * rx + cx;\n            y0 = mathSin(theta) * ry + cy;\n          }\n\n          xi = mathCos(endAngle) * rx + cx;\n          yi = mathSin(endAngle) * ry + cy;\n          break;\n\n        case CMD.R:\n          x0 = xi = d[i];\n          y0 = yi = d[i + 1];\n          ctx.rect(d[i++], d[i++], d[i++], d[i++]);\n          break;\n\n        case CMD.Z:\n          ctx.closePath();\n          xi = x0;\n          yi = y0;\n      }\n    }\n  }\n};\nPathProxy.CMD = CMD;\nvar _default = PathProxy;\nmodule.exports = _default;\n\n/***/ }),\n/* 477 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _vector = __webpack_require__(463);\n\nvar v2Create = _vector.create;\nvar v2DistSquare = _vector.distSquare;\n\n/**\n * 曲线辅助模块\n * @module zrender/core/curve\n * @author pissang(https://www.github.com/pissang)\n */\nvar mathPow = Math.pow;\nvar mathSqrt = Math.sqrt;\nvar EPSILON = 1e-8;\nvar EPSILON_NUMERIC = 1e-4;\nvar THREE_SQRT = mathSqrt(3);\nvar ONE_THIRD = 1 / 3; // 临时变量\n\nvar _v0 = v2Create();\n\nvar _v1 = v2Create();\n\nvar _v2 = v2Create();\n\nfunction isAroundZero(val) {\n  return val > -EPSILON && val < EPSILON;\n}\n\nfunction isNotAroundZero(val) {\n  return val > EPSILON || val < -EPSILON;\n}\n/**\n * 计算三次贝塞尔值\n * @memberOf module:zrender/core/curve\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} p3\n * @param  {number} t\n * @return {number}\n */\n\n\nfunction cubicAt(p0, p1, p2, p3, t) {\n  var onet = 1 - t;\n  return onet * onet * (onet * p0 + 3 * t * p1) + t * t * (t * p3 + 3 * onet * p2);\n}\n/**\n * 计算三次贝塞尔导数值\n * @memberOf module:zrender/core/curve\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} p3\n * @param  {number} t\n * @return {number}\n */\n\n\nfunction cubicDerivativeAt(p0, p1, p2, p3, t) {\n  var onet = 1 - t;\n  return 3 * (((p1 - p0) * onet + 2 * (p2 - p1) * t) * onet + (p3 - p2) * t * t);\n}\n/**\n * 计算三次贝塞尔方程根，使用盛金公式\n * @memberOf module:zrender/core/curve\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} p3\n * @param  {number} val\n * @param  {Array.<number>} roots\n * @return {number} 有效根数目\n */\n\n\nfunction cubicRootAt(p0, p1, p2, p3, val, roots) {\n  // Evaluate roots of cubic functions\n  var a = p3 + 3 * (p1 - p2) - p0;\n  var b = 3 * (p2 - p1 * 2 + p0);\n  var c = 3 * (p1 - p0);\n  var d = p0 - val;\n  var A = b * b - 3 * a * c;\n  var B = b * c - 9 * a * d;\n  var C = c * c - 3 * b * d;\n  var n = 0;\n\n  if (isAroundZero(A) && isAroundZero(B)) {\n    if (isAroundZero(b)) {\n      roots[0] = 0;\n    } else {\n      var t1 = -c / b; //t1, t2, t3, b is not zero\n\n      if (t1 >= 0 && t1 <= 1) {\n        roots[n++] = t1;\n      }\n    }\n  } else {\n    var disc = B * B - 4 * A * C;\n\n    if (isAroundZero(disc)) {\n      var K = B / A;\n      var t1 = -b / a + K; // t1, a is not zero\n\n      var t2 = -K / 2; // t2, t3\n\n      if (t1 >= 0 && t1 <= 1) {\n        roots[n++] = t1;\n      }\n\n      if (t2 >= 0 && t2 <= 1) {\n        roots[n++] = t2;\n      }\n    } else if (disc > 0) {\n      var discSqrt = mathSqrt(disc);\n      var Y1 = A * b + 1.5 * a * (-B + discSqrt);\n      var Y2 = A * b + 1.5 * a * (-B - discSqrt);\n\n      if (Y1 < 0) {\n        Y1 = -mathPow(-Y1, ONE_THIRD);\n      } else {\n        Y1 = mathPow(Y1, ONE_THIRD);\n      }\n\n      if (Y2 < 0) {\n        Y2 = -mathPow(-Y2, ONE_THIRD);\n      } else {\n        Y2 = mathPow(Y2, ONE_THIRD);\n      }\n\n      var t1 = (-b - (Y1 + Y2)) / (3 * a);\n\n      if (t1 >= 0 && t1 <= 1) {\n        roots[n++] = t1;\n      }\n    } else {\n      var T = (2 * A * b - 3 * a * B) / (2 * mathSqrt(A * A * A));\n      var theta = Math.acos(T) / 3;\n      var ASqrt = mathSqrt(A);\n      var tmp = Math.cos(theta);\n      var t1 = (-b - 2 * ASqrt * tmp) / (3 * a);\n      var t2 = (-b + ASqrt * (tmp + THREE_SQRT * Math.sin(theta))) / (3 * a);\n      var t3 = (-b + ASqrt * (tmp - THREE_SQRT * Math.sin(theta))) / (3 * a);\n\n      if (t1 >= 0 && t1 <= 1) {\n        roots[n++] = t1;\n      }\n\n      if (t2 >= 0 && t2 <= 1) {\n        roots[n++] = t2;\n      }\n\n      if (t3 >= 0 && t3 <= 1) {\n        roots[n++] = t3;\n      }\n    }\n  }\n\n  return n;\n}\n/**\n * 计算三次贝塞尔方程极限值的位置\n * @memberOf module:zrender/core/curve\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} p3\n * @param  {Array.<number>} extrema\n * @return {number} 有效数目\n */\n\n\nfunction cubicExtrema(p0, p1, p2, p3, extrema) {\n  var b = 6 * p2 - 12 * p1 + 6 * p0;\n  var a = 9 * p1 + 3 * p3 - 3 * p0 - 9 * p2;\n  var c = 3 * p1 - 3 * p0;\n  var n = 0;\n\n  if (isAroundZero(a)) {\n    if (isNotAroundZero(b)) {\n      var t1 = -c / b;\n\n      if (t1 >= 0 && t1 <= 1) {\n        extrema[n++] = t1;\n      }\n    }\n  } else {\n    var disc = b * b - 4 * a * c;\n\n    if (isAroundZero(disc)) {\n      extrema[0] = -b / (2 * a);\n    } else if (disc > 0) {\n      var discSqrt = mathSqrt(disc);\n      var t1 = (-b + discSqrt) / (2 * a);\n      var t2 = (-b - discSqrt) / (2 * a);\n\n      if (t1 >= 0 && t1 <= 1) {\n        extrema[n++] = t1;\n      }\n\n      if (t2 >= 0 && t2 <= 1) {\n        extrema[n++] = t2;\n      }\n    }\n  }\n\n  return n;\n}\n/**\n * 细分三次贝塞尔曲线\n * @memberOf module:zrender/core/curve\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} p3\n * @param  {number} t\n * @param  {Array.<number>} out\n */\n\n\nfunction cubicSubdivide(p0, p1, p2, p3, t, out) {\n  var p01 = (p1 - p0) * t + p0;\n  var p12 = (p2 - p1) * t + p1;\n  var p23 = (p3 - p2) * t + p2;\n  var p012 = (p12 - p01) * t + p01;\n  var p123 = (p23 - p12) * t + p12;\n  var p0123 = (p123 - p012) * t + p012; // Seg0\n\n  out[0] = p0;\n  out[1] = p01;\n  out[2] = p012;\n  out[3] = p0123; // Seg1\n\n  out[4] = p0123;\n  out[5] = p123;\n  out[6] = p23;\n  out[7] = p3;\n}\n/**\n * 投射点到三次贝塞尔曲线上，返回投射距离。\n * 投射点有可能会有一个或者多个，这里只返回其中距离最短的一个。\n * @param {number} x0\n * @param {number} y0\n * @param {number} x1\n * @param {number} y1\n * @param {number} x2\n * @param {number} y2\n * @param {number} x3\n * @param {number} y3\n * @param {number} x\n * @param {number} y\n * @param {Array.<number>} [out] 投射点\n * @return {number}\n */\n\n\nfunction cubicProjectPoint(x0, y0, x1, y1, x2, y2, x3, y3, x, y, out) {\n  // http://pomax.github.io/bezierinfo/#projections\n  var t;\n  var interval = 0.005;\n  var d = Infinity;\n  var prev;\n  var next;\n  var d1;\n  var d2;\n  _v0[0] = x;\n  _v0[1] = y; // 先粗略估计一下可能的最小距离的 t 值\n  // PENDING\n\n  for (var _t = 0; _t < 1; _t += 0.05) {\n    _v1[0] = cubicAt(x0, x1, x2, x3, _t);\n    _v1[1] = cubicAt(y0, y1, y2, y3, _t);\n    d1 = v2DistSquare(_v0, _v1);\n\n    if (d1 < d) {\n      t = _t;\n      d = d1;\n    }\n  }\n\n  d = Infinity; // At most 32 iteration\n\n  for (var i = 0; i < 32; i++) {\n    if (interval < EPSILON_NUMERIC) {\n      break;\n    }\n\n    prev = t - interval;\n    next = t + interval; // t - interval\n\n    _v1[0] = cubicAt(x0, x1, x2, x3, prev);\n    _v1[1] = cubicAt(y0, y1, y2, y3, prev);\n    d1 = v2DistSquare(_v1, _v0);\n\n    if (prev >= 0 && d1 < d) {\n      t = prev;\n      d = d1;\n    } else {\n      // t + interval\n      _v2[0] = cubicAt(x0, x1, x2, x3, next);\n      _v2[1] = cubicAt(y0, y1, y2, y3, next);\n      d2 = v2DistSquare(_v2, _v0);\n\n      if (next <= 1 && d2 < d) {\n        t = next;\n        d = d2;\n      } else {\n        interval *= 0.5;\n      }\n    }\n  } // t\n\n\n  if (out) {\n    out[0] = cubicAt(x0, x1, x2, x3, t);\n    out[1] = cubicAt(y0, y1, y2, y3, t);\n  } // console.log(interval, i);\n\n\n  return mathSqrt(d);\n}\n/**\n * 计算二次方贝塞尔值\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} t\n * @return {number}\n */\n\n\nfunction quadraticAt(p0, p1, p2, t) {\n  var onet = 1 - t;\n  return onet * (onet * p0 + 2 * t * p1) + t * t * p2;\n}\n/**\n * 计算二次方贝塞尔导数值\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} t\n * @return {number}\n */\n\n\nfunction quadraticDerivativeAt(p0, p1, p2, t) {\n  return 2 * ((1 - t) * (p1 - p0) + t * (p2 - p1));\n}\n/**\n * 计算二次方贝塞尔方程根\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} t\n * @param  {Array.<number>} roots\n * @return {number} 有效根数目\n */\n\n\nfunction quadraticRootAt(p0, p1, p2, val, roots) {\n  var a = p0 - 2 * p1 + p2;\n  var b = 2 * (p1 - p0);\n  var c = p0 - val;\n  var n = 0;\n\n  if (isAroundZero(a)) {\n    if (isNotAroundZero(b)) {\n      var t1 = -c / b;\n\n      if (t1 >= 0 && t1 <= 1) {\n        roots[n++] = t1;\n      }\n    }\n  } else {\n    var disc = b * b - 4 * a * c;\n\n    if (isAroundZero(disc)) {\n      var t1 = -b / (2 * a);\n\n      if (t1 >= 0 && t1 <= 1) {\n        roots[n++] = t1;\n      }\n    } else if (disc > 0) {\n      var discSqrt = mathSqrt(disc);\n      var t1 = (-b + discSqrt) / (2 * a);\n      var t2 = (-b - discSqrt) / (2 * a);\n\n      if (t1 >= 0 && t1 <= 1) {\n        roots[n++] = t1;\n      }\n\n      if (t2 >= 0 && t2 <= 1) {\n        roots[n++] = t2;\n      }\n    }\n  }\n\n  return n;\n}\n/**\n * 计算二次贝塞尔方程极限值\n * @memberOf module:zrender/core/curve\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @return {number}\n */\n\n\nfunction quadraticExtremum(p0, p1, p2) {\n  var divider = p0 + p2 - 2 * p1;\n\n  if (divider === 0) {\n    // p1 is center of p0 and p2\n    return 0.5;\n  } else {\n    return (p0 - p1) / divider;\n  }\n}\n/**\n * 细分二次贝塞尔曲线\n * @memberOf module:zrender/core/curve\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} t\n * @param  {Array.<number>} out\n */\n\n\nfunction quadraticSubdivide(p0, p1, p2, t, out) {\n  var p01 = (p1 - p0) * t + p0;\n  var p12 = (p2 - p1) * t + p1;\n  var p012 = (p12 - p01) * t + p01; // Seg0\n\n  out[0] = p0;\n  out[1] = p01;\n  out[2] = p012; // Seg1\n\n  out[3] = p012;\n  out[4] = p12;\n  out[5] = p2;\n}\n/**\n * 投射点到二次贝塞尔曲线上，返回投射距离。\n * 投射点有可能会有一个或者多个，这里只返回其中距离最短的一个。\n * @param {number} x0\n * @param {number} y0\n * @param {number} x1\n * @param {number} y1\n * @param {number} x2\n * @param {number} y2\n * @param {number} x\n * @param {number} y\n * @param {Array.<number>} out 投射点\n * @return {number}\n */\n\n\nfunction quadraticProjectPoint(x0, y0, x1, y1, x2, y2, x, y, out) {\n  // http://pomax.github.io/bezierinfo/#projections\n  var t;\n  var interval = 0.005;\n  var d = Infinity;\n  _v0[0] = x;\n  _v0[1] = y; // 先粗略估计一下可能的最小距离的 t 值\n  // PENDING\n\n  for (var _t = 0; _t < 1; _t += 0.05) {\n    _v1[0] = quadraticAt(x0, x1, x2, _t);\n    _v1[1] = quadraticAt(y0, y1, y2, _t);\n    var d1 = v2DistSquare(_v0, _v1);\n\n    if (d1 < d) {\n      t = _t;\n      d = d1;\n    }\n  }\n\n  d = Infinity; // At most 32 iteration\n\n  for (var i = 0; i < 32; i++) {\n    if (interval < EPSILON_NUMERIC) {\n      break;\n    }\n\n    var prev = t - interval;\n    var next = t + interval; // t - interval\n\n    _v1[0] = quadraticAt(x0, x1, x2, prev);\n    _v1[1] = quadraticAt(y0, y1, y2, prev);\n    var d1 = v2DistSquare(_v1, _v0);\n\n    if (prev >= 0 && d1 < d) {\n      t = prev;\n      d = d1;\n    } else {\n      // t + interval\n      _v2[0] = quadraticAt(x0, x1, x2, next);\n      _v2[1] = quadraticAt(y0, y1, y2, next);\n      var d2 = v2DistSquare(_v2, _v0);\n\n      if (next <= 1 && d2 < d) {\n        t = next;\n        d = d2;\n      } else {\n        interval *= 0.5;\n      }\n    }\n  } // t\n\n\n  if (out) {\n    out[0] = quadraticAt(x0, x1, x2, t);\n    out[1] = quadraticAt(y0, y1, y2, t);\n  } // console.log(interval, i);\n\n\n  return mathSqrt(d);\n}\n\nexports.cubicAt = cubicAt;\nexports.cubicDerivativeAt = cubicDerivativeAt;\nexports.cubicRootAt = cubicRootAt;\nexports.cubicExtrema = cubicExtrema;\nexports.cubicSubdivide = cubicSubdivide;\nexports.cubicProjectPoint = cubicProjectPoint;\nexports.quadraticAt = quadraticAt;\nexports.quadraticDerivativeAt = quadraticDerivativeAt;\nexports.quadraticRootAt = quadraticRootAt;\nexports.quadraticExtremum = quadraticExtremum;\nexports.quadraticSubdivide = quadraticSubdivide;\nexports.quadraticProjectPoint = quadraticProjectPoint;\n\n/***/ }),\n/* 478 */\n/***/ (function(module, exports) {\n\n/**\n * 3x2矩阵操作类\n * @exports zrender/tool/matrix\n */\nvar ArrayCtor = typeof Float32Array === 'undefined' ? Array : Float32Array;\n/**\n * 创建一个单位矩阵\n * @return {Float32Array|Array.<number>}\n */\n\nfunction create() {\n  var out = new ArrayCtor(6);\n  identity(out);\n  return out;\n}\n/**\n * 设置矩阵为单位矩阵\n * @param {Float32Array|Array.<number>} out\n */\n\n\nfunction identity(out) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 1;\n  out[4] = 0;\n  out[5] = 0;\n  return out;\n}\n/**\n * 复制矩阵\n * @param {Float32Array|Array.<number>} out\n * @param {Float32Array|Array.<number>} m\n */\n\n\nfunction copy(out, m) {\n  out[0] = m[0];\n  out[1] = m[1];\n  out[2] = m[2];\n  out[3] = m[3];\n  out[4] = m[4];\n  out[5] = m[5];\n  return out;\n}\n/**\n * 矩阵相乘\n * @param {Float32Array|Array.<number>} out\n * @param {Float32Array|Array.<number>} m1\n * @param {Float32Array|Array.<number>} m2\n */\n\n\nfunction mul(out, m1, m2) {\n  // Consider matrix.mul(m, m2, m);\n  // where out is the same as m2.\n  // So use temp variable to escape error.\n  var out0 = m1[0] * m2[0] + m1[2] * m2[1];\n  var out1 = m1[1] * m2[0] + m1[3] * m2[1];\n  var out2 = m1[0] * m2[2] + m1[2] * m2[3];\n  var out3 = m1[1] * m2[2] + m1[3] * m2[3];\n  var out4 = m1[0] * m2[4] + m1[2] * m2[5] + m1[4];\n  var out5 = m1[1] * m2[4] + m1[3] * m2[5] + m1[5];\n  out[0] = out0;\n  out[1] = out1;\n  out[2] = out2;\n  out[3] = out3;\n  out[4] = out4;\n  out[5] = out5;\n  return out;\n}\n/**\n * 平移变换\n * @param {Float32Array|Array.<number>} out\n * @param {Float32Array|Array.<number>} a\n * @param {Float32Array|Array.<number>} v\n */\n\n\nfunction translate(out, a, v) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4] + v[0];\n  out[5] = a[5] + v[1];\n  return out;\n}\n/**\n * 旋转变换\n * @param {Float32Array|Array.<number>} out\n * @param {Float32Array|Array.<number>} a\n * @param {number} rad\n */\n\n\nfunction rotate(out, a, rad) {\n  var aa = a[0];\n  var ac = a[2];\n  var atx = a[4];\n  var ab = a[1];\n  var ad = a[3];\n  var aty = a[5];\n  var st = Math.sin(rad);\n  var ct = Math.cos(rad);\n  out[0] = aa * ct + ab * st;\n  out[1] = -aa * st + ab * ct;\n  out[2] = ac * ct + ad * st;\n  out[3] = -ac * st + ct * ad;\n  out[4] = ct * atx + st * aty;\n  out[5] = ct * aty - st * atx;\n  return out;\n}\n/**\n * 缩放变换\n * @param {Float32Array|Array.<number>} out\n * @param {Float32Array|Array.<number>} a\n * @param {Float32Array|Array.<number>} v\n */\n\n\nfunction scale(out, a, v) {\n  var vx = v[0];\n  var vy = v[1];\n  out[0] = a[0] * vx;\n  out[1] = a[1] * vy;\n  out[2] = a[2] * vx;\n  out[3] = a[3] * vy;\n  out[4] = a[4] * vx;\n  out[5] = a[5] * vy;\n  return out;\n}\n/**\n * 求逆矩阵\n * @param {Float32Array|Array.<number>} out\n * @param {Float32Array|Array.<number>} a\n */\n\n\nfunction invert(out, a) {\n  var aa = a[0];\n  var ac = a[2];\n  var atx = a[4];\n  var ab = a[1];\n  var ad = a[3];\n  var aty = a[5];\n  var det = aa * ad - ab * ac;\n\n  if (!det) {\n    return null;\n  }\n\n  det = 1.0 / det;\n  out[0] = ad * det;\n  out[1] = -ab * det;\n  out[2] = -ac * det;\n  out[3] = aa * det;\n  out[4] = (ac * aty - ad * atx) * det;\n  out[5] = (ab * atx - aa * aty) * det;\n  return out;\n}\n\nexports.create = create;\nexports.identity = identity;\nexports.copy = copy;\nexports.mul = mul;\nexports.translate = translate;\nexports.rotate = rotate;\nexports.scale = scale;\nexports.invert = invert;\n\n/***/ }),\n/* 479 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Displayable = __webpack_require__(489);\n\nvar BoundingRect = __webpack_require__(467);\n\nvar zrUtil = __webpack_require__(460);\n\nvar imageHelper = __webpack_require__(499);\n\n/**\n * @alias zrender/graphic/Image\n * @extends module:zrender/graphic/Displayable\n * @constructor\n * @param {Object} opts\n */\nfunction ZImage(opts) {\n  Displayable.call(this, opts);\n}\n\nZImage.prototype = {\n  constructor: ZImage,\n  type: 'image',\n  brush: function (ctx, prevEl) {\n    var style = this.style;\n    var src = style.image; // Must bind each time\n\n    style.bind(ctx, this, prevEl);\n    var image = this._image = imageHelper.createOrUpdateImage(src, this._image, this, this.onload);\n\n    if (!image || !imageHelper.isImageReady(image)) {\n      return;\n    } // 图片已经加载完成\n    // if (image.nodeName.toUpperCase() == 'IMG') {\n    //     if (!image.complete) {\n    //         return;\n    //     }\n    // }\n    // Else is canvas\n\n\n    var x = style.x || 0;\n    var y = style.y || 0;\n    var width = style.width;\n    var height = style.height;\n    var aspect = image.width / image.height;\n\n    if (width == null && height != null) {\n      // Keep image/height ratio\n      width = height * aspect;\n    } else if (height == null && width != null) {\n      height = width / aspect;\n    } else if (width == null && height == null) {\n      width = image.width;\n      height = image.height;\n    } // 设置transform\n\n\n    this.setTransform(ctx);\n\n    if (style.sWidth && style.sHeight) {\n      var sx = style.sx || 0;\n      var sy = style.sy || 0;\n      ctx.drawImage(image, sx, sy, style.sWidth, style.sHeight, x, y, width, height);\n    } else if (style.sx && style.sy) {\n      var sx = style.sx;\n      var sy = style.sy;\n      var sWidth = width - sx;\n      var sHeight = height - sy;\n      ctx.drawImage(image, sx, sy, sWidth, sHeight, x, y, width, height);\n    } else {\n      ctx.drawImage(image, x, y, width, height);\n    }\n\n    this.restoreTransform(ctx); // Draw rect text\n\n    if (style.text != null) {\n      this.drawRectText(ctx, this.getBoundingRect());\n    }\n  },\n  getBoundingRect: function () {\n    var style = this.style;\n\n    if (!this._rect) {\n      this._rect = new BoundingRect(style.x || 0, style.y || 0, style.width || 0, style.height || 0);\n    }\n\n    return this._rect;\n  }\n};\nzrUtil.inherits(ZImage, Displayable);\nvar _default = ZImage;\nmodule.exports = _default;\n\n/***/ }),\n/* 480 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Displayable = __webpack_require__(489);\n\nvar zrUtil = __webpack_require__(460);\n\nvar textContain = __webpack_require__(473);\n\nvar textHelper = __webpack_require__(491);\n\n/**\n * @alias zrender/graphic/Text\n * @extends module:zrender/graphic/Displayable\n * @constructor\n * @param {Object} opts\n */\nvar Text = function (opts) {\n  // jshint ignore:line\n  Displayable.call(this, opts);\n};\n\nText.prototype = {\n  constructor: Text,\n  type: 'text',\n  brush: function (ctx, prevEl) {\n    var style = this.style; // Optimize, avoid normalize every time.\n\n    this.__dirty && textHelper.normalizeTextStyle(style, true); // Use props with prefix 'text'.\n\n    style.fill = style.stroke = style.shadowBlur = style.shadowColor = style.shadowOffsetX = style.shadowOffsetY = null;\n    var text = style.text; // Convert to string\n\n    text != null && (text += ''); // Always bind style\n\n    style.bind(ctx, this, prevEl);\n\n    if (!textHelper.needDrawText(text, style)) {\n      return;\n    }\n\n    this.setTransform(ctx);\n    textHelper.renderText(this, ctx, text, style);\n    this.restoreTransform(ctx);\n  },\n  getBoundingRect: function () {\n    var style = this.style; // Optimize, avoid normalize every time.\n\n    this.__dirty && textHelper.normalizeTextStyle(style, true);\n\n    if (!this._rect) {\n      var text = style.text;\n      text != null ? text += '' : text = '';\n      var rect = textContain.getBoundingRect(style.text + '', style.font, style.textAlign, style.textVerticalAlign, style.textPadding, style.rich);\n      rect.x += style.x || 0;\n      rect.y += style.y || 0;\n\n      if (textHelper.getStroke(style.textStroke, style.textStrokeWidth)) {\n        var w = style.textStrokeWidth;\n        rect.x -= w / 2;\n        rect.y -= w / 2;\n        rect.width += w;\n        rect.height += w;\n      }\n\n      this._rect = rect;\n    }\n\n    return this._rect;\n  }\n};\nzrUtil.inherits(Text, Displayable);\nvar _default = Text;\nmodule.exports = _default;\n\n/***/ }),\n/* 481 */\n/***/ (function(module, exports) {\n\n/**\n * 事件扩展\n * @module zrender/mixin/Eventful\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *         pissang (https://www.github.com/pissang)\n */\nvar arrySlice = Array.prototype.slice;\n/**\n * 事件分发器\n * @alias module:zrender/mixin/Eventful\n * @constructor\n */\n\nvar Eventful = function () {\n  this._$handlers = {};\n};\n\nEventful.prototype = {\n  constructor: Eventful,\n\n  /**\n   * 单次触发绑定，trigger后销毁\n   *\n   * @param {string} event 事件名\n   * @param {Function} handler 响应函数\n   * @param {Object} context\n   */\n  one: function (event, handler, context) {\n    var _h = this._$handlers;\n\n    if (!handler || !event) {\n      return this;\n    }\n\n    if (!_h[event]) {\n      _h[event] = [];\n    }\n\n    for (var i = 0; i < _h[event].length; i++) {\n      if (_h[event][i].h === handler) {\n        return this;\n      }\n    }\n\n    _h[event].push({\n      h: handler,\n      one: true,\n      ctx: context || this\n    });\n\n    return this;\n  },\n\n  /**\n   * 绑定事件\n   * @param {string} event 事件名\n   * @param {Function} handler 事件处理函数\n   * @param {Object} [context]\n   */\n  on: function (event, handler, context) {\n    var _h = this._$handlers;\n\n    if (!handler || !event) {\n      return this;\n    }\n\n    if (!_h[event]) {\n      _h[event] = [];\n    }\n\n    for (var i = 0; i < _h[event].length; i++) {\n      if (_h[event][i].h === handler) {\n        return this;\n      }\n    }\n\n    _h[event].push({\n      h: handler,\n      one: false,\n      ctx: context || this\n    });\n\n    return this;\n  },\n\n  /**\n   * 是否绑定了事件\n   * @param  {string}  event\n   * @return {boolean}\n   */\n  isSilent: function (event) {\n    var _h = this._$handlers;\n    return _h[event] && _h[event].length;\n  },\n\n  /**\n   * 解绑事件\n   * @param {string} event 事件名\n   * @param {Function} [handler] 事件处理函数\n   */\n  off: function (event, handler) {\n    var _h = this._$handlers;\n\n    if (!event) {\n      this._$handlers = {};\n      return this;\n    }\n\n    if (handler) {\n      if (_h[event]) {\n        var newList = [];\n\n        for (var i = 0, l = _h[event].length; i < l; i++) {\n          if (_h[event][i]['h'] != handler) {\n            newList.push(_h[event][i]);\n          }\n        }\n\n        _h[event] = newList;\n      }\n\n      if (_h[event] && _h[event].length === 0) {\n        delete _h[event];\n      }\n    } else {\n      delete _h[event];\n    }\n\n    return this;\n  },\n\n  /**\n   * 事件分发\n   *\n   * @param {string} type 事件类型\n   */\n  trigger: function (type) {\n    if (this._$handlers[type]) {\n      var args = arguments;\n      var argLen = args.length;\n\n      if (argLen > 3) {\n        args = arrySlice.call(args, 1);\n      }\n\n      var _h = this._$handlers[type];\n      var len = _h.length;\n\n      for (var i = 0; i < len;) {\n        // Optimize advise from backbone\n        switch (argLen) {\n          case 1:\n            _h[i]['h'].call(_h[i]['ctx']);\n\n            break;\n\n          case 2:\n            _h[i]['h'].call(_h[i]['ctx'], args[1]);\n\n            break;\n\n          case 3:\n            _h[i]['h'].call(_h[i]['ctx'], args[1], args[2]);\n\n            break;\n\n          default:\n            // have more than 2 given arguments\n            _h[i]['h'].apply(_h[i]['ctx'], args);\n\n            break;\n        }\n\n        if (_h[i]['one']) {\n          _h.splice(i, 1);\n\n          len--;\n        } else {\n          i++;\n        }\n      }\n    }\n\n    return this;\n  },\n\n  /**\n   * 带有context的事件分发, 最后一个参数是事件回调的context\n   * @param {string} type 事件类型\n   */\n  triggerWithContext: function (type) {\n    if (this._$handlers[type]) {\n      var args = arguments;\n      var argLen = args.length;\n\n      if (argLen > 4) {\n        args = arrySlice.call(args, 1, args.length - 1);\n      }\n\n      var ctx = args[args.length - 1];\n      var _h = this._$handlers[type];\n      var len = _h.length;\n\n      for (var i = 0; i < len;) {\n        // Optimize advise from backbone\n        switch (argLen) {\n          case 1:\n            _h[i]['h'].call(ctx);\n\n            break;\n\n          case 2:\n            _h[i]['h'].call(ctx, args[1]);\n\n            break;\n\n          case 3:\n            _h[i]['h'].call(ctx, args[1], args[2]);\n\n            break;\n\n          default:\n            // have more than 2 given arguments\n            _h[i]['h'].apply(ctx, args);\n\n            break;\n        }\n\n        if (_h[i]['one']) {\n          _h.splice(i, 1);\n\n          len--;\n        } else {\n          i++;\n        }\n      }\n    }\n\n    return this;\n  }\n}; // 对象可以通过 onxxxx 绑定事件\n\n/**\n * @event module:zrender/mixin/Eventful#onclick\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#onmouseover\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#onmouseout\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#onmousemove\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#onmousewheel\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#onmousedown\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#onmouseup\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#ondrag\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#ondragstart\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#ondragend\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#ondragenter\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#ondragleave\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#ondragover\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#ondrop\n * @type {Function}\n * @default null\n */\n\nvar _default = Eventful;\nmodule.exports = _default;\n\n/***/ }),\n/* 482 */,\n/* 483 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(460);\n\nvar Element = __webpack_require__(511);\n\nvar BoundingRect = __webpack_require__(467);\n\n/**\n * Group是一个容器，可以插入子节点，Group的变换也会被应用到子节点上\n * @module zrender/graphic/Group\n * @example\n *     var Group = require('zrender/container/Group');\n *     var Circle = require('zrender/graphic/shape/Circle');\n *     var g = new Group();\n *     g.position[0] = 100;\n *     g.position[1] = 100;\n *     g.add(new Circle({\n *         style: {\n *             x: 100,\n *             y: 100,\n *             r: 20,\n *         }\n *     }));\n *     zr.add(g);\n */\n\n/**\n * @alias module:zrender/graphic/Group\n * @constructor\n * @extends module:zrender/mixin/Transformable\n * @extends module:zrender/mixin/Eventful\n */\nvar Group = function (opts) {\n  opts = opts || {};\n  Element.call(this, opts);\n\n  for (var key in opts) {\n    if (opts.hasOwnProperty(key)) {\n      this[key] = opts[key];\n    }\n  }\n\n  this._children = [];\n  this.__storage = null;\n  this.__dirty = true;\n};\n\nGroup.prototype = {\n  constructor: Group,\n  isGroup: true,\n\n  /**\n   * @type {string}\n   */\n  type: 'group',\n\n  /**\n   * 所有子孙元素是否响应鼠标事件\n   * @name module:/zrender/container/Group#silent\n   * @type {boolean}\n   * @default false\n   */\n  silent: false,\n\n  /**\n   * @return {Array.<module:zrender/Element>}\n   */\n  children: function () {\n    return this._children.slice();\n  },\n\n  /**\n   * 获取指定 index 的儿子节点\n   * @param  {number} idx\n   * @return {module:zrender/Element}\n   */\n  childAt: function (idx) {\n    return this._children[idx];\n  },\n\n  /**\n   * 获取指定名字的儿子节点\n   * @param  {string} name\n   * @return {module:zrender/Element}\n   */\n  childOfName: function (name) {\n    var children = this._children;\n\n    for (var i = 0; i < children.length; i++) {\n      if (children[i].name === name) {\n        return children[i];\n      }\n    }\n  },\n\n  /**\n   * @return {number}\n   */\n  childCount: function () {\n    return this._children.length;\n  },\n\n  /**\n   * 添加子节点到最后\n   * @param {module:zrender/Element} child\n   */\n  add: function (child) {\n    if (child && child !== this && child.parent !== this) {\n      this._children.push(child);\n\n      this._doAdd(child);\n    }\n\n    return this;\n  },\n\n  /**\n   * 添加子节点在 nextSibling 之前\n   * @param {module:zrender/Element} child\n   * @param {module:zrender/Element} nextSibling\n   */\n  addBefore: function (child, nextSibling) {\n    if (child && child !== this && child.parent !== this && nextSibling && nextSibling.parent === this) {\n      var children = this._children;\n      var idx = children.indexOf(nextSibling);\n\n      if (idx >= 0) {\n        children.splice(idx, 0, child);\n\n        this._doAdd(child);\n      }\n    }\n\n    return this;\n  },\n  _doAdd: function (child) {\n    if (child.parent) {\n      child.parent.remove(child);\n    }\n\n    child.parent = this;\n    var storage = this.__storage;\n    var zr = this.__zr;\n\n    if (storage && storage !== child.__storage) {\n      storage.addToStorage(child);\n\n      if (child instanceof Group) {\n        child.addChildrenToStorage(storage);\n      }\n    }\n\n    zr && zr.refresh();\n  },\n\n  /**\n   * 移除子节点\n   * @param {module:zrender/Element} child\n   */\n  remove: function (child) {\n    var zr = this.__zr;\n    var storage = this.__storage;\n    var children = this._children;\n    var idx = zrUtil.indexOf(children, child);\n\n    if (idx < 0) {\n      return this;\n    }\n\n    children.splice(idx, 1);\n    child.parent = null;\n\n    if (storage) {\n      storage.delFromStorage(child);\n\n      if (child instanceof Group) {\n        child.delChildrenFromStorage(storage);\n      }\n    }\n\n    zr && zr.refresh();\n    return this;\n  },\n\n  /**\n   * 移除所有子节点\n   */\n  removeAll: function () {\n    var children = this._children;\n    var storage = this.__storage;\n    var child;\n    var i;\n\n    for (i = 0; i < children.length; i++) {\n      child = children[i];\n\n      if (storage) {\n        storage.delFromStorage(child);\n\n        if (child instanceof Group) {\n          child.delChildrenFromStorage(storage);\n        }\n      }\n\n      child.parent = null;\n    }\n\n    children.length = 0;\n    return this;\n  },\n\n  /**\n   * 遍历所有子节点\n   * @param  {Function} cb\n   * @param  {}   context\n   */\n  eachChild: function (cb, context) {\n    var children = this._children;\n\n    for (var i = 0; i < children.length; i++) {\n      var child = children[i];\n      cb.call(context, child, i);\n    }\n\n    return this;\n  },\n\n  /**\n   * 深度优先遍历所有子孙节点\n   * @param  {Function} cb\n   * @param  {}   context\n   */\n  traverse: function (cb, context) {\n    for (var i = 0; i < this._children.length; i++) {\n      var child = this._children[i];\n      cb.call(context, child);\n\n      if (child.type === 'group') {\n        child.traverse(cb, context);\n      }\n    }\n\n    return this;\n  },\n  addChildrenToStorage: function (storage) {\n    for (var i = 0; i < this._children.length; i++) {\n      var child = this._children[i];\n      storage.addToStorage(child);\n\n      if (child instanceof Group) {\n        child.addChildrenToStorage(storage);\n      }\n    }\n  },\n  delChildrenFromStorage: function (storage) {\n    for (var i = 0; i < this._children.length; i++) {\n      var child = this._children[i];\n      storage.delFromStorage(child);\n\n      if (child instanceof Group) {\n        child.delChildrenFromStorage(storage);\n      }\n    }\n  },\n  dirty: function () {\n    this.__dirty = true;\n    this.__zr && this.__zr.refresh();\n    return this;\n  },\n\n  /**\n   * @return {module:zrender/core/BoundingRect}\n   */\n  getBoundingRect: function (includeChildren) {\n    // TODO Caching\n    var rect = null;\n    var tmpRect = new BoundingRect(0, 0, 0, 0);\n    var children = includeChildren || this._children;\n    var tmpMat = [];\n\n    for (var i = 0; i < children.length; i++) {\n      var child = children[i];\n\n      if (child.ignore || child.invisible) {\n        continue;\n      }\n\n      var childRect = child.getBoundingRect();\n      var transform = child.getLocalTransform(tmpMat); // TODO\n      // The boundingRect cacluated by transforming original\n      // rect may be bigger than the actual bundingRect when rotation\n      // is used. (Consider a circle rotated aginst its center, where\n      // the actual boundingRect should be the same as that not be\n      // rotated.) But we can not find better approach to calculate\n      // actual boundingRect yet, considering performance.\n\n      if (transform) {\n        tmpRect.copy(childRect);\n        tmpRect.applyTransform(transform);\n        rect = rect || tmpRect.clone();\n        rect.union(tmpRect);\n      } else {\n        rect = rect || childRect.clone();\n        rect.union(childRect);\n      }\n    }\n\n    return rect || tmpRect;\n  }\n};\nzrUtil.inherits(Group, Element);\nvar _default = Group;\nmodule.exports = _default;\n\n/***/ }),\n/* 484 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _config = __webpack_require__(488);\n\nvar debugMode = _config.debugMode;\n\nvar log = function () {};\n\nif (debugMode === 1) {\n  log = function () {\n    for (var k in arguments) {\n      throw new Error(arguments[k]);\n    }\n  };\n} else if (debugMode > 1) {\n  log = function () {\n    for (var k in arguments) {\n      console.log(arguments[k]);\n    }\n  };\n}\n\nvar _default = log;\nmodule.exports = _default;\n\n/***/ }),\n/* 485 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Eventful = __webpack_require__(481);\n\nexports.Dispatcher = Eventful;\n\nvar env = __webpack_require__(466);\n\n/**\n * 事件辅助类\n * @module zrender/core/event\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n */\nvar isDomLevel2 = typeof window !== 'undefined' && !!window.addEventListener;\nvar MOUSE_EVENT_REG = /^(?:mouse|pointer|contextmenu|drag|drop)|click/;\n\nfunction getBoundingClientRect(el) {\n  // BlackBerry 5, iOS 3 (original iPhone) don't have getBoundingRect\n  return el.getBoundingClientRect ? el.getBoundingClientRect() : {\n    left: 0,\n    top: 0\n  };\n} // `calculate` is optional, default false\n\n\nfunction clientToLocal(el, e, out, calculate) {\n  out = out || {}; // According to the W3C Working Draft, offsetX and offsetY should be relative\n  // to the padding edge of the target element. The only browser using this convention\n  // is IE. Webkit uses the border edge, Opera uses the content edge, and FireFox does\n  // not support the properties.\n  // (see http://www.jacklmoore.com/notes/mouse-position/)\n  // In zr painter.dom, padding edge equals to border edge.\n  // FIXME\n  // When mousemove event triggered on ec tooltip, target is not zr painter.dom, and\n  // offsetX/Y is relative to e.target, where the calculation of zrX/Y via offsetX/Y\n  // is too complex. So css-transfrom dont support in this case temporarily.\n\n  if (calculate || !env.canvasSupported) {\n    defaultGetZrXY(el, e, out);\n  } // Caution: In FireFox, layerX/layerY Mouse position relative to the closest positioned\n  // ancestor element, so we should make sure el is positioned (e.g., not position:static).\n  // BTW1, Webkit don't return the same results as FF in non-simple cases (like add\n  // zoom-factor, overflow / opacity layers, transforms ...)\n  // BTW2, (ev.offsetY || ev.pageY - $(ev.target).offset().top) is not correct in preserve-3d.\n  // <https://bugs.jquery.com/ticket/8523#comment:14>\n  // BTW3, In ff, offsetX/offsetY is always 0.\n  else if (env.browser.firefox && e.layerX != null && e.layerX !== e.offsetX) {\n      out.zrX = e.layerX;\n      out.zrY = e.layerY;\n    } // For IE6+, chrome, safari, opera. (When will ff support offsetX?)\n    else if (e.offsetX != null) {\n        out.zrX = e.offsetX;\n        out.zrY = e.offsetY;\n      } // For some other device, e.g., IOS safari.\n      else {\n          defaultGetZrXY(el, e, out);\n        }\n\n  return out;\n}\n\nfunction defaultGetZrXY(el, e, out) {\n  // This well-known method below does not support css transform.\n  var box = getBoundingClientRect(el);\n  out.zrX = e.clientX - box.left;\n  out.zrY = e.clientY - box.top;\n}\n/**\n * 如果存在第三方嵌入的一些dom触发的事件，或touch事件，需要转换一下事件坐标.\n * `calculate` is optional, default false.\n */\n\n\nfunction normalizeEvent(el, e, calculate) {\n  e = e || window.event;\n\n  if (e.zrX != null) {\n    return e;\n  }\n\n  var eventType = e.type;\n  var isTouch = eventType && eventType.indexOf('touch') >= 0;\n\n  if (!isTouch) {\n    clientToLocal(el, e, e, calculate);\n    e.zrDelta = e.wheelDelta ? e.wheelDelta / 120 : -(e.detail || 0) / 3;\n  } else {\n    var touch = eventType != 'touchend' ? e.targetTouches[0] : e.changedTouches[0];\n    touch && clientToLocal(el, touch, e, calculate);\n  } // Add which for click: 1 === left; 2 === middle; 3 === right; otherwise: 0;\n  // See jQuery: https://github.com/jquery/jquery/blob/master/src/event.js\n  // If e.which has been defined, if may be readonly,\n  // see: https://developer.mozilla.org/en-US/docs/Web/API/MouseEvent/which\n\n\n  var button = e.button;\n\n  if (e.which == null && button !== undefined && MOUSE_EVENT_REG.test(e.type)) {\n    e.which = button & 1 ? 1 : button & 2 ? 3 : button & 4 ? 2 : 0;\n  }\n\n  return e;\n}\n\nfunction addEventListener(el, name, handler) {\n  if (isDomLevel2) {\n    el.addEventListener(name, handler);\n  } else {\n    el.attachEvent('on' + name, handler);\n  }\n}\n\nfunction removeEventListener(el, name, handler) {\n  if (isDomLevel2) {\n    el.removeEventListener(name, handler);\n  } else {\n    el.detachEvent('on' + name, handler);\n  }\n}\n/**\n * preventDefault and stopPropagation.\n * Notice: do not do that in zrender. Upper application\n * do that if necessary.\n *\n * @memberOf module:zrender/core/event\n * @method\n * @param {Event} e : event对象\n */\n\n\nvar stop = isDomLevel2 ? function (e) {\n  e.preventDefault();\n  e.stopPropagation();\n  e.cancelBubble = true;\n} : function (e) {\n  e.returnValue = false;\n  e.cancelBubble = true;\n};\n\nfunction notLeftMouse(e) {\n  // If e.which is undefined, considered as left mouse event.\n  return e.which > 1;\n} // 做向上兼容\n\n\nexports.clientToLocal = clientToLocal;\nexports.normalizeEvent = normalizeEvent;\nexports.addEventListener = addEventListener;\nexports.removeEventListener = removeEventListener;\nexports.stop = stop;\nexports.notLeftMouse = notLeftMouse;\n\n/***/ }),\n/* 486 */,\n/* 487 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * // Scale class management\n * @module echarts/scale/Scale\n */\n\n\n    var clazzUtil = __webpack_require__(471);\n\n    function Scale() {\n        /**\n         * Extent\n         * @type {Array.<number>}\n         * @protected\n         */\n        this._extent = [Infinity, -Infinity];\n\n        /**\n         * Step is calculated in adjustExtent\n         * @type {Array.<number>}\n         * @protected\n         */\n        this._interval = 0;\n\n        this.init && this.init.apply(this, arguments);\n    }\n\n    var scaleProto = Scale.prototype;\n\n    /**\n     * Parse input val to valid inner number.\n     * @param {*} val\n     * @return {number}\n     */\n    scaleProto.parse = function (val) {\n        // Notice: This would be a trap here, If the implementation\n        // of this method depends on extent, and this method is used\n        // before extent set (like in dataZoom), it would be wrong.\n        // Nevertheless, parse does not depend on extent generally.\n        return val;\n    };\n\n    scaleProto.contain = function (val) {\n        var extent = this._extent;\n        return val >= extent[0] && val <= extent[1];\n    };\n\n    /**\n     * Normalize value to linear [0, 1], return 0.5 if extent span is 0\n     * @param {number} val\n     * @return {number}\n     */\n    scaleProto.normalize = function (val) {\n        var extent = this._extent;\n        if (extent[1] === extent[0]) {\n            return 0.5;\n        }\n        return (val - extent[0]) / (extent[1] - extent[0]);\n    };\n\n    /**\n     * Scale normalized value\n     * @param {number} val\n     * @return {number}\n     */\n    scaleProto.scale = function (val) {\n        var extent = this._extent;\n        return val * (extent[1] - extent[0]) + extent[0];\n    };\n\n    /**\n     * Set extent from data\n     * @param {Array.<number>} other\n     */\n    scaleProto.unionExtent = function (other) {\n        var extent = this._extent;\n        other[0] < extent[0] && (extent[0] = other[0]);\n        other[1] > extent[1] && (extent[1] = other[1]);\n        // not setExtent because in log axis it may transformed to power\n        // this.setExtent(extent[0], extent[1]);\n    };\n\n    /**\n     * Set extent from data\n     * @param {module:echarts/data/List} data\n     * @param {string} dim\n     */\n    scaleProto.unionExtentFromData = function (data, dim) {\n        this.unionExtent(data.getDataExtent(dim, true));\n    };\n\n    /**\n     * Get extent\n     * @return {Array.<number>}\n     */\n    scaleProto.getExtent = function () {\n        return this._extent.slice();\n    };\n\n    /**\n     * Set extent\n     * @param {number} start\n     * @param {number} end\n     */\n    scaleProto.setExtent = function (start, end) {\n        var thisExtent = this._extent;\n        if (!isNaN(start)) {\n            thisExtent[0] = start;\n        }\n        if (!isNaN(end)) {\n            thisExtent[1] = end;\n        }\n    };\n\n    /**\n     * @return {Array.<string>}\n     */\n    scaleProto.getTicksLabels = function () {\n        var labels = [];\n        var ticks = this.getTicks();\n        for (var i = 0; i < ticks.length; i++) {\n            labels.push(this.getLabel(ticks[i]));\n        }\n        return labels;\n    };\n\n    clazzUtil.enableClassExtend(Scale);\n    clazzUtil.enableClassManagement(Scale, {\n        registerWhenExtend: true\n    });\n\n    module.exports = Scale;\n\n\n/***/ }),\n/* 488 */\n/***/ (function(module, exports) {\n\nvar dpr = 1; // If in browser environment\n\nif (typeof window !== 'undefined') {\n  dpr = Math.max(window.devicePixelRatio || 1, 1);\n}\n/**\n * config默认配置项\n * @exports zrender/config\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n */\n\n/**\n * debug日志选项：catchBrushException为true下有效\n * 0 : 不生成debug数据，发布用\n * 1 : 异常抛出，调试用\n * 2 : 控制台输出，调试用\n */\n\n\nvar debugMode = 0; // retina 屏幕优化\n\nvar devicePixelRatio = dpr;\nexports.debugMode = debugMode;\nexports.devicePixelRatio = devicePixelRatio;\n\n/***/ }),\n/* 489 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(460);\n\nvar Style = __webpack_require__(520);\n\nvar Element = __webpack_require__(511);\n\nvar RectText = __webpack_require__(523);\n\n/**\n * 可绘制的图形基类\n * Base class of all displayable graphic objects\n * @module zrender/graphic/Displayable\n */\n\n/**\n * @alias module:zrender/graphic/Displayable\n * @extends module:zrender/Element\n * @extends module:zrender/graphic/mixin/RectText\n */\nfunction Displayable(opts) {\n  opts = opts || {};\n  Element.call(this, opts); // Extend properties\n\n  for (var name in opts) {\n    if (opts.hasOwnProperty(name) && name !== 'style') {\n      this[name] = opts[name];\n    }\n  }\n  /**\n   * @type {module:zrender/graphic/Style}\n   */\n\n\n  this.style = new Style(opts.style, this);\n  this._rect = null; // Shapes for cascade clipping.\n\n  this.__clipPaths = []; // FIXME Stateful must be mixined after style is setted\n  // Stateful.call(this, opts);\n}\n\nDisplayable.prototype = {\n  constructor: Displayable,\n  type: 'displayable',\n\n  /**\n   * Displayable 是否为脏，Painter 中会根据该标记判断是否需要是否需要重新绘制\n   * Dirty flag. From which painter will determine if this displayable object needs brush\n   * @name module:zrender/graphic/Displayable#__dirty\n   * @type {boolean}\n   */\n  __dirty: true,\n\n  /**\n   * 图形是否可见，为true时不绘制图形，但是仍能触发鼠标事件\n   * If ignore drawing of the displayable object. Mouse event will still be triggered\n   * @name module:/zrender/graphic/Displayable#invisible\n   * @type {boolean}\n   * @default false\n   */\n  invisible: false,\n\n  /**\n   * @name module:/zrender/graphic/Displayable#z\n   * @type {number}\n   * @default 0\n   */\n  z: 0,\n\n  /**\n   * @name module:/zrender/graphic/Displayable#z\n   * @type {number}\n   * @default 0\n   */\n  z2: 0,\n\n  /**\n   * z层level，决定绘画在哪层canvas中\n   * @name module:/zrender/graphic/Displayable#zlevel\n   * @type {number}\n   * @default 0\n   */\n  zlevel: 0,\n\n  /**\n   * 是否可拖拽\n   * @name module:/zrender/graphic/Displayable#draggable\n   * @type {boolean}\n   * @default false\n   */\n  draggable: false,\n\n  /**\n   * 是否正在拖拽\n   * @name module:/zrender/graphic/Displayable#draggable\n   * @type {boolean}\n   * @default false\n   */\n  dragging: false,\n\n  /**\n   * 是否相应鼠标事件\n   * @name module:/zrender/graphic/Displayable#silent\n   * @type {boolean}\n   * @default false\n   */\n  silent: false,\n\n  /**\n   * If enable culling\n   * @type {boolean}\n   * @default false\n   */\n  culling: false,\n\n  /**\n   * Mouse cursor when hovered\n   * @name module:/zrender/graphic/Displayable#cursor\n   * @type {string}\n   */\n  cursor: 'pointer',\n\n  /**\n   * If hover area is bounding rect\n   * @name module:/zrender/graphic/Displayable#rectHover\n   * @type {string}\n   */\n  rectHover: false,\n\n  /**\n   * Render the element progressively when the value >= 0,\n   * usefull for large data.\n   * @type {number}\n   */\n  progressive: -1,\n  beforeBrush: function (ctx) {},\n  afterBrush: function (ctx) {},\n\n  /**\n   * 图形绘制方法\n   * @param {CanvasRenderingContext2D} ctx\n   */\n  // Interface\n  brush: function (ctx, prevEl) {},\n\n  /**\n   * 获取最小包围盒\n   * @return {module:zrender/core/BoundingRect}\n   */\n  // Interface\n  getBoundingRect: function () {},\n\n  /**\n   * 判断坐标 x, y 是否在图形上\n   * If displayable element contain coord x, y\n   * @param  {number} x\n   * @param  {number} y\n   * @return {boolean}\n   */\n  contain: function (x, y) {\n    return this.rectContain(x, y);\n  },\n\n  /**\n   * @param  {Function} cb\n   * @param  {}   context\n   */\n  traverse: function (cb, context) {\n    cb.call(context, this);\n  },\n\n  /**\n   * 判断坐标 x, y 是否在图形的包围盒上\n   * If bounding rect of element contain coord x, y\n   * @param  {number} x\n   * @param  {number} y\n   * @return {boolean}\n   */\n  rectContain: function (x, y) {\n    var coord = this.transformCoordToLocal(x, y);\n    var rect = this.getBoundingRect();\n    return rect.contain(coord[0], coord[1]);\n  },\n\n  /**\n   * 标记图形元素为脏，并且在下一帧重绘\n   * Mark displayable element dirty and refresh next frame\n   */\n  dirty: function () {\n    this.__dirty = true;\n    this._rect = null;\n    this.__zr && this.__zr.refresh();\n  },\n\n  /**\n   * 图形是否会触发事件\n   * If displayable object binded any event\n   * @return {boolean}\n   */\n  // TODO, 通过 bind 绑定的事件\n  // isSilent: function () {\n  //     return !(\n  //         this.hoverable || this.draggable\n  //         || this.onmousemove || this.onmouseover || this.onmouseout\n  //         || this.onmousedown || this.onmouseup || this.onclick\n  //         || this.ondragenter || this.ondragover || this.ondragleave\n  //         || this.ondrop\n  //     );\n  // },\n\n  /**\n   * Alias for animate('style')\n   * @param {boolean} loop\n   */\n  animateStyle: function (loop) {\n    return this.animate('style', loop);\n  },\n  attrKV: function (key, value) {\n    if (key !== 'style') {\n      Element.prototype.attrKV.call(this, key, value);\n    } else {\n      this.style.set(value);\n    }\n  },\n\n  /**\n   * @param {Object|string} key\n   * @param {*} value\n   */\n  setStyle: function (key, value) {\n    this.style.set(key, value);\n    this.dirty(false);\n    return this;\n  },\n\n  /**\n   * Use given style object\n   * @param  {Object} obj\n   */\n  useStyle: function (obj) {\n    this.style = new Style(obj, this);\n    this.dirty(false);\n    return this;\n  }\n};\nzrUtil.inherits(Displayable, Element);\nzrUtil.mixin(Displayable, RectText); // zrUtil.mixin(Displayable, Stateful);\n\nvar _default = Displayable;\nmodule.exports = _default;\n\n/***/ }),\n/* 490 */\n/***/ (function(module, exports) {\n\n/**\n * @param {Array.<Object>} colorStops\n */\nvar Gradient = function (colorStops) {\n  this.colorStops = colorStops || [];\n};\n\nGradient.prototype = {\n  constructor: Gradient,\n  addColorStop: function (offset, color) {\n    this.colorStops.push({\n      offset: offset,\n      color: color\n    });\n  }\n};\nvar _default = Gradient;\nmodule.exports = _default;\n\n/***/ }),\n/* 491 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _util = __webpack_require__(460);\n\nvar retrieve2 = _util.retrieve2;\nvar retrieve3 = _util.retrieve3;\nvar each = _util.each;\nvar normalizeCssArray = _util.normalizeCssArray;\nvar isString = _util.isString;\nvar isObject = _util.isObject;\n\nvar textContain = __webpack_require__(473);\n\nvar roundRectHelper = __webpack_require__(522);\n\nvar imageHelper = __webpack_require__(499);\n\n// TODO: Have not support 'start', 'end' yet.\nvar VALID_TEXT_ALIGN = {\n  left: 1,\n  right: 1,\n  center: 1\n};\nvar VALID_TEXT_VERTICAL_ALIGN = {\n  top: 1,\n  bottom: 1,\n  middle: 1\n};\n/**\n * @param {module:zrender/graphic/Style} style\n * @return {module:zrender/graphic/Style} The input style.\n */\n\nfunction normalizeTextStyle(style) {\n  normalizeStyle(style);\n  each(style.rich, normalizeStyle);\n  return style;\n}\n\nfunction normalizeStyle(style) {\n  if (style) {\n    style.font = textContain.makeFont(style);\n    var textAlign = style.textAlign;\n    textAlign === 'middle' && (textAlign = 'center');\n    style.textAlign = textAlign == null || VALID_TEXT_ALIGN[textAlign] ? textAlign : 'left'; // Compatible with textBaseline.\n\n    var textVerticalAlign = style.textVerticalAlign || style.textBaseline;\n    textVerticalAlign === 'center' && (textVerticalAlign = 'middle');\n    style.textVerticalAlign = textVerticalAlign == null || VALID_TEXT_VERTICAL_ALIGN[textVerticalAlign] ? textVerticalAlign : 'top';\n    var textPadding = style.textPadding;\n\n    if (textPadding) {\n      style.textPadding = normalizeCssArray(style.textPadding);\n    }\n  }\n}\n/**\n * @param {CanvasRenderingContext2D} ctx\n * @param {string} text\n * @param {module:zrender/graphic/Style} style\n * @param {Object|boolean} [rect] {x, y, width, height}\n *                  If set false, rect text is not used.\n */\n\n\nfunction renderText(hostEl, ctx, text, style, rect) {\n  style.rich ? renderRichText(hostEl, ctx, text, style, rect) : renderPlainText(hostEl, ctx, text, style, rect);\n}\n\nfunction renderPlainText(hostEl, ctx, text, style, rect) {\n  var font = setCtx(ctx, 'font', style.font || textContain.DEFAULT_FONT);\n  var textPadding = style.textPadding;\n  var contentBlock = hostEl.__textCotentBlock;\n\n  if (!contentBlock || hostEl.__dirty) {\n    contentBlock = hostEl.__textCotentBlock = textContain.parsePlainText(text, font, textPadding, style.truncate);\n  }\n\n  var outerHeight = contentBlock.outerHeight;\n  var textLines = contentBlock.lines;\n  var lineHeight = contentBlock.lineHeight;\n  var boxPos = getBoxPosition(outerHeight, style, rect);\n  var baseX = boxPos.baseX;\n  var baseY = boxPos.baseY;\n  var textAlign = boxPos.textAlign;\n  var textVerticalAlign = boxPos.textVerticalAlign; // Origin of textRotation should be the base point of text drawing.\n\n  applyTextRotation(ctx, style, rect, baseX, baseY);\n  var boxY = textContain.adjustTextY(baseY, outerHeight, textVerticalAlign);\n  var textX = baseX;\n  var textY = boxY;\n  var needDrawBg = needDrawBackground(style);\n\n  if (needDrawBg || textPadding) {\n    // Consider performance, do not call getTextWidth util necessary.\n    var textWidth = textContain.getWidth(text, font);\n    var outerWidth = textWidth;\n    textPadding && (outerWidth += textPadding[1] + textPadding[3]);\n    var boxX = textContain.adjustTextX(baseX, outerWidth, textAlign);\n    needDrawBg && drawBackground(hostEl, ctx, style, boxX, boxY, outerWidth, outerHeight);\n\n    if (textPadding) {\n      textX = getTextXForPadding(baseX, textAlign, textPadding);\n      textY += textPadding[0];\n    }\n  }\n\n  setCtx(ctx, 'textAlign', textAlign || 'left'); // Force baseline to be \"middle\". Otherwise, if using \"top\", the\n  // text will offset downward a little bit in font \"Microsoft YaHei\".\n\n  setCtx(ctx, 'textBaseline', 'middle'); // Always set shadowBlur and shadowOffset to avoid leak from displayable.\n\n  setCtx(ctx, 'shadowBlur', style.textShadowBlur || 0);\n  setCtx(ctx, 'shadowColor', style.textShadowColor || 'transparent');\n  setCtx(ctx, 'shadowOffsetX', style.textShadowOffsetX || 0);\n  setCtx(ctx, 'shadowOffsetY', style.textShadowOffsetY || 0); // `textBaseline` is set as 'middle'.\n\n  textY += lineHeight / 2;\n  var textStrokeWidth = style.textStrokeWidth;\n  var textStroke = getStroke(style.textStroke, textStrokeWidth);\n  var textFill = getFill(style.textFill);\n\n  if (textStroke) {\n    setCtx(ctx, 'lineWidth', textStrokeWidth);\n    setCtx(ctx, 'strokeStyle', textStroke);\n  }\n\n  if (textFill) {\n    setCtx(ctx, 'fillStyle', textFill);\n  }\n\n  for (var i = 0; i < textLines.length; i++) {\n    // Fill after stroke so the outline will not cover the main part.\n    textStroke && ctx.strokeText(textLines[i], textX, textY);\n    textFill && ctx.fillText(textLines[i], textX, textY);\n    textY += lineHeight;\n  }\n}\n\nfunction renderRichText(hostEl, ctx, text, style, rect) {\n  var contentBlock = hostEl.__textCotentBlock;\n\n  if (!contentBlock || hostEl.__dirty) {\n    contentBlock = hostEl.__textCotentBlock = textContain.parseRichText(text, style);\n  }\n\n  drawRichText(hostEl, ctx, contentBlock, style, rect);\n}\n\nfunction drawRichText(hostEl, ctx, contentBlock, style, rect) {\n  var contentWidth = contentBlock.width;\n  var outerWidth = contentBlock.outerWidth;\n  var outerHeight = contentBlock.outerHeight;\n  var textPadding = style.textPadding;\n  var boxPos = getBoxPosition(outerHeight, style, rect);\n  var baseX = boxPos.baseX;\n  var baseY = boxPos.baseY;\n  var textAlign = boxPos.textAlign;\n  var textVerticalAlign = boxPos.textVerticalAlign; // Origin of textRotation should be the base point of text drawing.\n\n  applyTextRotation(ctx, style, rect, baseX, baseY);\n  var boxX = textContain.adjustTextX(baseX, outerWidth, textAlign);\n  var boxY = textContain.adjustTextY(baseY, outerHeight, textVerticalAlign);\n  var xLeft = boxX;\n  var lineTop = boxY;\n\n  if (textPadding) {\n    xLeft += textPadding[3];\n    lineTop += textPadding[0];\n  }\n\n  var xRight = xLeft + contentWidth;\n  needDrawBackground(style) && drawBackground(hostEl, ctx, style, boxX, boxY, outerWidth, outerHeight);\n\n  for (var i = 0; i < contentBlock.lines.length; i++) {\n    var line = contentBlock.lines[i];\n    var tokens = line.tokens;\n    var tokenCount = tokens.length;\n    var lineHeight = line.lineHeight;\n    var usedWidth = line.width;\n    var leftIndex = 0;\n    var lineXLeft = xLeft;\n    var lineXRight = xRight;\n    var rightIndex = tokenCount - 1;\n    var token;\n\n    while (leftIndex < tokenCount && (token = tokens[leftIndex], !token.textAlign || token.textAlign === 'left')) {\n      placeToken(hostEl, ctx, token, style, lineHeight, lineTop, lineXLeft, 'left');\n      usedWidth -= token.width;\n      lineXLeft += token.width;\n      leftIndex++;\n    }\n\n    while (rightIndex >= 0 && (token = tokens[rightIndex], token.textAlign === 'right')) {\n      placeToken(hostEl, ctx, token, style, lineHeight, lineTop, lineXRight, 'right');\n      usedWidth -= token.width;\n      lineXRight -= token.width;\n      rightIndex--;\n    } // The other tokens are placed as textAlign 'center' if there is enough space.\n\n\n    lineXLeft += (contentWidth - (lineXLeft - xLeft) - (xRight - lineXRight) - usedWidth) / 2;\n\n    while (leftIndex <= rightIndex) {\n      token = tokens[leftIndex]; // Consider width specified by user, use 'center' rather than 'left'.\n\n      placeToken(hostEl, ctx, token, style, lineHeight, lineTop, lineXLeft + token.width / 2, 'center');\n      lineXLeft += token.width;\n      leftIndex++;\n    }\n\n    lineTop += lineHeight;\n  }\n}\n\nfunction applyTextRotation(ctx, style, rect, x, y) {\n  // textRotation only apply in RectText.\n  if (rect && style.textRotation) {\n    var origin = style.textOrigin;\n\n    if (origin === 'center') {\n      x = rect.width / 2 + rect.x;\n      y = rect.height / 2 + rect.y;\n    } else if (origin) {\n      x = origin[0] + rect.x;\n      y = origin[1] + rect.y;\n    }\n\n    ctx.translate(x, y); // Positive: anticlockwise\n\n    ctx.rotate(-style.textRotation);\n    ctx.translate(-x, -y);\n  }\n}\n\nfunction placeToken(hostEl, ctx, token, style, lineHeight, lineTop, x, textAlign) {\n  var tokenStyle = style.rich[token.styleName] || {}; // 'ctx.textBaseline' is always set as 'middle', for sake of\n  // the bias of \"Microsoft YaHei\".\n\n  var textVerticalAlign = token.textVerticalAlign;\n  var y = lineTop + lineHeight / 2;\n\n  if (textVerticalAlign === 'top') {\n    y = lineTop + token.height / 2;\n  } else if (textVerticalAlign === 'bottom') {\n    y = lineTop + lineHeight - token.height / 2;\n  }\n\n  !token.isLineHolder && needDrawBackground(tokenStyle) && drawBackground(hostEl, ctx, tokenStyle, textAlign === 'right' ? x - token.width : textAlign === 'center' ? x - token.width / 2 : x, y - token.height / 2, token.width, token.height);\n  var textPadding = token.textPadding;\n\n  if (textPadding) {\n    x = getTextXForPadding(x, textAlign, textPadding);\n    y -= token.height / 2 - textPadding[2] - token.textHeight / 2;\n  }\n\n  setCtx(ctx, 'shadowBlur', retrieve3(tokenStyle.textShadowBlur, style.textShadowBlur, 0));\n  setCtx(ctx, 'shadowColor', tokenStyle.textShadowColor || style.textShadowColor || 'transparent');\n  setCtx(ctx, 'shadowOffsetX', retrieve3(tokenStyle.textShadowOffsetX, style.textShadowOffsetX, 0));\n  setCtx(ctx, 'shadowOffsetY', retrieve3(tokenStyle.textShadowOffsetY, style.textShadowOffsetY, 0));\n  setCtx(ctx, 'textAlign', textAlign); // Force baseline to be \"middle\". Otherwise, if using \"top\", the\n  // text will offset downward a little bit in font \"Microsoft YaHei\".\n\n  setCtx(ctx, 'textBaseline', 'middle');\n  setCtx(ctx, 'font', token.font || textContain.DEFAULT_FONT);\n  var textStroke = getStroke(tokenStyle.textStroke || style.textStroke, textStrokeWidth);\n  var textFill = getFill(tokenStyle.textFill || style.textFill);\n  var textStrokeWidth = retrieve2(tokenStyle.textStrokeWidth, style.textStrokeWidth); // Fill after stroke so the outline will not cover the main part.\n\n  if (textStroke) {\n    setCtx(ctx, 'lineWidth', textStrokeWidth);\n    setCtx(ctx, 'strokeStyle', textStroke);\n    ctx.strokeText(token.text, x, y);\n  }\n\n  if (textFill) {\n    setCtx(ctx, 'fillStyle', textFill);\n    ctx.fillText(token.text, x, y);\n  }\n}\n\nfunction needDrawBackground(style) {\n  return style.textBackgroundColor || style.textBorderWidth && style.textBorderColor;\n} // style: {textBackgroundColor, textBorderWidth, textBorderColor, textBorderRadius}\n// shape: {x, y, width, height}\n\n\nfunction drawBackground(hostEl, ctx, style, x, y, width, height) {\n  var textBackgroundColor = style.textBackgroundColor;\n  var textBorderWidth = style.textBorderWidth;\n  var textBorderColor = style.textBorderColor;\n  var isPlainBg = isString(textBackgroundColor);\n  setCtx(ctx, 'shadowBlur', style.textBoxShadowBlur || 0);\n  setCtx(ctx, 'shadowColor', style.textBoxShadowColor || 'transparent');\n  setCtx(ctx, 'shadowOffsetX', style.textBoxShadowOffsetX || 0);\n  setCtx(ctx, 'shadowOffsetY', style.textBoxShadowOffsetY || 0);\n\n  if (isPlainBg || textBorderWidth && textBorderColor) {\n    ctx.beginPath();\n    var textBorderRadius = style.textBorderRadius;\n\n    if (!textBorderRadius) {\n      ctx.rect(x, y, width, height);\n    } else {\n      roundRectHelper.buildPath(ctx, {\n        x: x,\n        y: y,\n        width: width,\n        height: height,\n        r: textBorderRadius\n      });\n    }\n\n    ctx.closePath();\n  }\n\n  if (isPlainBg) {\n    setCtx(ctx, 'fillStyle', textBackgroundColor);\n    ctx.fill();\n  } else if (isObject(textBackgroundColor)) {\n    var image = textBackgroundColor.image;\n    image = imageHelper.createOrUpdateImage(image, null, hostEl, onBgImageLoaded, textBackgroundColor);\n\n    if (image && imageHelper.isImageReady(image)) {\n      ctx.drawImage(image, x, y, width, height);\n    }\n  }\n\n  if (textBorderWidth && textBorderColor) {\n    setCtx(ctx, 'lineWidth', textBorderWidth);\n    setCtx(ctx, 'strokeStyle', textBorderColor);\n    ctx.stroke();\n  }\n}\n\nfunction onBgImageLoaded(image, textBackgroundColor) {\n  // Replace image, so that `contain/text.js#parseRichText`\n  // will get correct result in next tick.\n  textBackgroundColor.image = image;\n}\n\nfunction getBoxPosition(blockHeiht, style, rect) {\n  var baseX = style.x || 0;\n  var baseY = style.y || 0;\n  var textAlign = style.textAlign;\n  var textVerticalAlign = style.textVerticalAlign; // Text position represented by coord\n\n  if (rect) {\n    var textPosition = style.textPosition;\n\n    if (textPosition instanceof Array) {\n      // Percent\n      baseX = rect.x + parsePercent(textPosition[0], rect.width);\n      baseY = rect.y + parsePercent(textPosition[1], rect.height);\n    } else {\n      var res = textContain.adjustTextPositionOnRect(textPosition, rect, style.textDistance);\n      baseX = res.x;\n      baseY = res.y; // Default align and baseline when has textPosition\n\n      textAlign = textAlign || res.textAlign;\n      textVerticalAlign = textVerticalAlign || res.textVerticalAlign;\n    } // textOffset is only support in RectText, otherwise\n    // we have to adjust boundingRect for textOffset.\n\n\n    var textOffset = style.textOffset;\n\n    if (textOffset) {\n      baseX += textOffset[0];\n      baseY += textOffset[1];\n    }\n  }\n\n  return {\n    baseX: baseX,\n    baseY: baseY,\n    textAlign: textAlign,\n    textVerticalAlign: textVerticalAlign\n  };\n}\n\nfunction setCtx(ctx, prop, value) {\n  // FIXME ??? performance try\n  // if (ctx.__currentValues[prop] !== value) {\n  // ctx[prop] = ctx.__currentValues[prop] = value;\n  ctx[prop] = value; // }\n\n  return ctx[prop];\n}\n/**\n * @param {string} [stroke] If specified, do not check style.textStroke.\n * @param {string} [lineWidth] If specified, do not check style.textStroke.\n * @param {number} style\n */\n\n\nfunction getStroke(stroke, lineWidth) {\n  return stroke == null || lineWidth <= 0 || stroke === 'transparent' || stroke === 'none' ? null // TODO pattern and gradient?\n  : stroke.image || stroke.colorStops ? '#000' : stroke;\n}\n\nfunction getFill(fill) {\n  return fill == null || fill === 'none' ? null // TODO pattern and gradient?\n  : fill.image || fill.colorStops ? '#000' : fill;\n}\n\nfunction parsePercent(value, maxValue) {\n  if (typeof value === 'string') {\n    if (value.lastIndexOf('%') >= 0) {\n      return parseFloat(value) / 100 * maxValue;\n    }\n\n    return parseFloat(value);\n  }\n\n  return value;\n}\n\nfunction getTextXForPadding(x, textAlign, textPadding) {\n  return textAlign === 'right' ? x - textPadding[1] : textAlign === 'center' ? x + textPadding[3] / 2 - textPadding[1] / 2 : x + textPadding[3];\n}\n/**\n * @param {string} text\n * @param {module:zrender/Style} style\n * @return {boolean}\n */\n\n\nfunction needDrawText(text, style) {\n  return text != null && (text || style.textBackgroundColor || style.textBorderWidth && style.textBorderColor || style.textPadding);\n}\n\nexports.normalizeTextStyle = normalizeTextStyle;\nexports.renderText = renderText;\nexports.getStroke = getStroke;\nexports.getFill = getFill;\nexports.needDrawText = needDrawText;\n\n/***/ }),\n/* 492 */\n/***/ (function(module, exports, __webpack_require__) {\n\n// TODO Parse shadow style\n// TODO Only shallow path support\n\n    var zrUtil = __webpack_require__(460);\n\n    module.exports = function (properties) {\n        // Normalize\n        for (var i = 0; i < properties.length; i++) {\n            if (!properties[i][1]) {\n               properties[i][1] = properties[i][0];\n            }\n        }\n        return function (excludes) {\n            var style = {};\n            for (var i = 0; i < properties.length; i++) {\n                var propName = properties[i][1];\n                if (excludes && zrUtil.indexOf(excludes, propName) >= 0) {\n                    continue;\n                }\n                var val = this.getShallow(propName);\n                if (val != null) {\n                    style[properties[i][0]] = val;\n                }\n            }\n            return style;\n        };\n    };\n\n\n/***/ }),\n/* 493 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n\n    var zrUtil = __webpack_require__(460);\n\n    /**\n     * Interface of Coordinate System Class\n     *\n     * create:\n     *     @param {module:echarts/model/Global} ecModel\n     *     @param {module:echarts/ExtensionAPI} api\n     *     @return {Object} coordinate system instance\n     *\n     * update:\n     *     @param {module:echarts/model/Global} ecModel\n     *     @param {module:echarts/ExtensionAPI} api\n     *\n     * convertToPixel:\n     * convertFromPixel:\n     *     These two methods is also responsible for determine whether this\n     *     coodinate system is applicable to the given `finder`.\n     *     Each coordinate system will be tried, util one returns none\n     *     null/undefined value.\n     *     @param {module:echarts/model/Global} ecModel\n     *     @param {Object} finder\n     *     @param {Array|number} value\n     *     @return {Array|number} convert result.\n     *\n     * containPoint:\n     *     @param {Array.<number>} point In pixel coordinate system.\n     *     @return {boolean}\n     */\n\n    var coordinateSystemCreators = {};\n\n    function CoordinateSystemManager() {\n\n        this._coordinateSystems = [];\n    }\n\n    CoordinateSystemManager.prototype = {\n\n        constructor: CoordinateSystemManager,\n\n        create: function (ecModel, api) {\n            var coordinateSystems = [];\n            zrUtil.each(coordinateSystemCreators, function (creater, type) {\n                var list = creater.create(ecModel, api);\n                coordinateSystems = coordinateSystems.concat(list || []);\n            });\n\n            this._coordinateSystems = coordinateSystems;\n        },\n\n        update: function (ecModel, api) {\n            zrUtil.each(this._coordinateSystems, function (coordSys) {\n                // FIXME MUST have\n                coordSys.update && coordSys.update(ecModel, api);\n            });\n        },\n\n        getCoordinateSystems: function () {\n            return this._coordinateSystems.slice();\n        }\n    };\n\n    CoordinateSystemManager.register = function (type, coordinateSystemCreator) {\n        coordinateSystemCreators[type] = coordinateSystemCreator;\n    };\n\n    CoordinateSystemManager.get = function (type) {\n        return coordinateSystemCreators[type];\n    };\n\n    module.exports = CoordinateSystemManager;\n\n\n/***/ }),\n/* 494 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var OrdinalScale = __webpack_require__(589);\n    var IntervalScale = __webpack_require__(495);\n    __webpack_require__(590);\n    __webpack_require__(588);\n    var Scale = __webpack_require__(487);\n\n    var numberUtil = __webpack_require__(465);\n    var zrUtil = __webpack_require__(460);\n    var textContain = __webpack_require__(473);\n    var axisHelper = {};\n\n    /**\n     * Get axis scale extent before niced.\n     * Item of returned array can only be number (including Infinity and NaN).\n     */\n    axisHelper.getScaleExtent = function (axis, model) {\n        var scale = axis.scale;\n        var scaleType = scale.type;\n\n        var min = model.getMin();\n        var max = model.getMax();\n        var fixMin = min != null;\n        var fixMax = max != null;\n        var originalExtent = scale.getExtent();\n\n        var axisDataLen;\n        var boundaryGap;\n        var span;\n        if (scaleType === 'ordinal') {\n            axisDataLen = (model.get('data') || []).length;\n        }\n        else {\n            boundaryGap = model.get('boundaryGap');\n            if (!zrUtil.isArray(boundaryGap)) {\n                boundaryGap = [boundaryGap || 0, boundaryGap || 0];\n            }\n            boundaryGap[0] = numberUtil.parsePercent(boundaryGap[0], 1);\n            boundaryGap[1] = numberUtil.parsePercent(boundaryGap[1], 1);\n            span = originalExtent[1] - originalExtent[0];\n        }\n\n        if (min == null) {\n            min = scaleType === 'ordinal'\n                ? (axisDataLen ? 0 : NaN)\n                : originalExtent[0] - boundaryGap[0] * span;\n        }\n        if (max == null) {\n            max = scaleType === 'ordinal'\n                ? (axisDataLen ? axisDataLen - 1 : NaN)\n                : originalExtent[1] + boundaryGap[1] * span;\n        }\n\n        if (min === 'dataMin') {\n            min = originalExtent[0];\n        }\n        if (max === 'dataMax') {\n            max = originalExtent[1];\n        }\n\n        (min == null || !isFinite(min)) && (min = NaN);\n        (max == null || !isFinite(max)) && (max = NaN);\n\n        axis.setBlank(zrUtil.eqNaN(min) || zrUtil.eqNaN(max));\n\n        // Evaluate if axis needs cross zero\n        if (model.getNeedCrossZero()) {\n            // Axis is over zero and min is not set\n            if (min > 0 && max > 0 && !fixMin) {\n                min = 0;\n            }\n            // Axis is under zero and max is not set\n            if (min < 0 && max < 0 && !fixMax) {\n                max = 0;\n            }\n        }\n\n        return [min, max];\n    };\n\n    axisHelper.niceScaleExtent = function (axis, model) {\n        var scale = axis.scale;\n        var extent = axisHelper.getScaleExtent(axis, model);\n        var fixMin = model.getMin() != null;\n        var fixMax = model.getMax() != null;\n        var splitNumber = model.get('splitNumber');\n\n        if (scale.type === 'log') {\n            scale.base = model.get('logBase');\n        }\n\n        scale.setExtent(extent[0], extent[1]);\n        scale.niceExtent(splitNumber, fixMin, fixMax);\n\n        // Use minInterval to constraint the calculated interval.\n        // If calculated interval is less than minInterval. increase the interval quantity until\n        // it is larger than minInterval.\n        // For example:\n        //  minInterval is 1, calculated interval is 0.2, so increase it to be 1. In this way we can get\n        //  an integer axis.\n        var minInterval = model.get('minInterval');\n        if (isFinite(minInterval) && !fixMin && !fixMax && scale.type === 'interval') {\n            var interval = scale.getInterval();\n            var intervalScale = Math.max(Math.abs(interval), minInterval) / interval;\n            // while (interval < minInterval) {\n            //     var quantity = numberUtil.quantity(interval);\n            //     interval = quantity * 10;\n            //     scaleQuantity *= 10;\n            // }\n            extent = scale.getExtent();\n            var origin = (extent[1] + extent[0]) / 2;\n            scale.setExtent(\n                intervalScale * (extent[0] - origin) + origin,\n                intervalScale * (extent[1] - origin) + origin\n            );\n            scale.niceExtent(splitNumber);\n        }\n\n        // If some one specified the min, max. And the default calculated interval\n        // is not good enough. He can specify the interval. It is often appeared\n        // in angle axis with angle 0 - 360. Interval calculated in interval scale is hard\n        // to be 60.\n        // FIXME\n        var interval = model.get('interval');\n        if (interval != null) {\n            scale.setInterval && scale.setInterval(interval);\n        }\n    };\n\n    /**\n     * @param {module:echarts/model/Model} model\n     * @param {string} [axisType] Default retrieve from model.type\n     * @return {module:echarts/scale/*}\n     */\n    axisHelper.createScaleByModel = function(model, axisType) {\n        axisType = axisType || model.get('type');\n        if (axisType) {\n            switch (axisType) {\n                // Buildin scale\n                case 'category':\n                    return new OrdinalScale(\n                        model.getCategories(), [Infinity, -Infinity]\n                    );\n                case 'value':\n                    return new IntervalScale();\n                // Extended scale, like time and log\n                default:\n                    return (Scale.getClass(axisType) || IntervalScale).create(model);\n            }\n        }\n    };\n\n    /**\n     * Check if the axis corss 0\n     */\n    axisHelper.ifAxisCrossZero = function (axis) {\n        var dataExtent = axis.scale.getExtent();\n        var min = dataExtent[0];\n        var max = dataExtent[1];\n        return !((min > 0 && max > 0) || (min < 0 && max < 0));\n    };\n\n    /**\n     * @param {Array.<number>} tickCoords In axis self coordinate.\n     * @param {Array.<string>} labels\n     * @param {string} font\n     * @param {boolean} isAxisHorizontal\n     * @return {number}\n     */\n    axisHelper.getAxisLabelInterval = function (tickCoords, labels, font, isAxisHorizontal) {\n        // FIXME\n        // 不同角的axis和label，不只是horizontal和vertical.\n\n        var textSpaceTakenRect;\n        var autoLabelInterval = 0;\n        var accumulatedLabelInterval = 0;\n\n        var step = 1;\n        if (labels.length > 40) {\n            // Simple optimization for large amount of labels\n            step = Math.floor(labels.length / 40);\n        }\n\n        for (var i = 0; i < tickCoords.length; i += step) {\n            var tickCoord = tickCoords[i];\n            var rect = textContain.getBoundingRect(\n                labels[i], font, 'center', 'top'\n            );\n            rect[isAxisHorizontal ? 'x' : 'y'] += tickCoord;\n            // FIXME Magic number 1.5\n            rect[isAxisHorizontal ? 'width' : 'height'] *= 1.3;\n            if (!textSpaceTakenRect) {\n                textSpaceTakenRect = rect.clone();\n            }\n            // There is no space for current label;\n            else if (textSpaceTakenRect.intersect(rect)) {\n                accumulatedLabelInterval++;\n                autoLabelInterval = Math.max(autoLabelInterval, accumulatedLabelInterval);\n            }\n            else {\n                textSpaceTakenRect.union(rect);\n                // Reset\n                accumulatedLabelInterval = 0;\n            }\n        }\n        if (autoLabelInterval === 0 && step > 1) {\n            return step;\n        }\n        return (autoLabelInterval + 1) * step - 1;\n    };\n\n    /**\n     * @param {Object} axis\n     * @param {Function} labelFormatter\n     * @return {Array.<string>}\n     */\n    axisHelper.getFormattedLabels = function (axis, labelFormatter) {\n        var scale = axis.scale;\n        var labels = scale.getTicksLabels();\n        var ticks = scale.getTicks();\n        if (typeof labelFormatter === 'string') {\n            labelFormatter = (function (tpl) {\n                return function (val) {\n                    return tpl.replace('{value}', val != null ? val : '');\n                };\n            })(labelFormatter);\n            // Consider empty array\n            return zrUtil.map(labels, labelFormatter);\n        }\n        else if (typeof labelFormatter === 'function') {\n            return zrUtil.map(ticks, function (tick, idx) {\n                return labelFormatter(\n                    axis.type === 'category' ? scale.getLabel(tick) : tick,\n                    idx\n                );\n            }, this);\n        }\n        else {\n            return labels;\n        }\n    };\n\n    module.exports = axisHelper;\n\n\n/***/ }),\n/* 495 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * Interval scale\n * @module echarts/scale/Interval\n */\n\n\n\n    var numberUtil = __webpack_require__(465);\n    var formatUtil = __webpack_require__(468);\n    var Scale = __webpack_require__(487);\n\n    var mathFloor = Math.floor;\n    var mathCeil = Math.ceil;\n\n    var getPrecisionSafe = numberUtil.getPrecisionSafe;\n    var roundingErrorFix = numberUtil.round;\n    /**\n     * @alias module:echarts/coord/scale/Interval\n     * @constructor\n     */\n    var IntervalScale = Scale.extend({\n\n        type: 'interval',\n\n        _interval: 0,\n\n        setExtent: function (start, end) {\n            var thisExtent = this._extent;\n            //start,end may be a Number like '25',so...\n            if (!isNaN(start)) {\n                thisExtent[0] = parseFloat(start);\n            }\n            if (!isNaN(end)) {\n                thisExtent[1] = parseFloat(end);\n            }\n        },\n\n        unionExtent: function (other) {\n            var extent = this._extent;\n            other[0] < extent[0] && (extent[0] = other[0]);\n            other[1] > extent[1] && (extent[1] = other[1]);\n\n            // unionExtent may called by it's sub classes\n            IntervalScale.prototype.setExtent.call(this, extent[0], extent[1]);\n        },\n        /**\n         * Get interval\n         */\n        getInterval: function () {\n            if (!this._interval) {\n                this.niceTicks();\n            }\n            return this._interval;\n        },\n\n        /**\n         * Set interval\n         */\n        setInterval: function (interval) {\n            this._interval = interval;\n            // Dropped auto calculated niceExtent and use user setted extent\n            // We assume user wan't to set both interval, min, max to get a better result\n            this._niceExtent = this._extent.slice();\n        },\n\n        /**\n         * @return {Array.<number>}\n         */\n        getTicks: function () {\n            if (!this._interval) {\n                this.niceTicks();\n            }\n            var interval = this._interval;\n            var extent = this._extent;\n            var ticks = [];\n\n            // Consider this case: using dataZoom toolbox, zoom and zoom.\n            var safeLimit = 10000;\n\n            if (interval) {\n                var niceExtent = this._niceExtent;\n                var precision = getPrecisionSafe(interval) + 2;\n\n                if (extent[0] < niceExtent[0]) {\n                    ticks.push(extent[0]);\n                }\n                var tick = niceExtent[0];\n\n                while (tick <= niceExtent[1]) {\n                    ticks.push(tick);\n                    // Avoid rounding error\n                    tick = roundingErrorFix(tick + interval, precision);\n                    if (ticks.length > safeLimit) {\n                        return [];\n                    }\n                }\n                // Consider this case: the last item of ticks is smaller\n                // than niceExtent[1] and niceExtent[1] === extent[1].\n                if (extent[1] > (ticks.length ? ticks[ticks.length - 1] : niceExtent[1])) {\n                    ticks.push(extent[1]);\n                }\n            }\n\n            return ticks;\n        },\n\n        /**\n         * @return {Array.<string>}\n         */\n        getTicksLabels: function () {\n            var labels = [];\n            var ticks = this.getTicks();\n            for (var i = 0; i < ticks.length; i++) {\n                labels.push(this.getLabel(ticks[i]));\n            }\n            return labels;\n        },\n\n        /**\n         * @param {number} n\n         * @return {number}\n         */\n        getLabel: function (data) {\n            return formatUtil.addCommas(data);\n        },\n\n        /**\n         * Update interval and extent of intervals for nice ticks\n         *\n         * @param {number} [splitNumber = 5] Desired number of ticks\n         */\n        niceTicks: function (splitNumber) {\n            splitNumber = splitNumber || 5;\n            var extent = this._extent;\n            var span = extent[1] - extent[0];\n            if (!isFinite(span)) {\n                return;\n            }\n            // User may set axis min 0 and data are all negative\n            // FIXME If it needs to reverse ?\n            if (span < 0) {\n                span = -span;\n                extent.reverse();\n            }\n\n            // From \"Nice Numbers for Graph Labels\" of Graphic Gems\n            // var niceSpan = numberUtil.nice(span, false);\n            var step = roundingErrorFix(\n                numberUtil.nice(span / splitNumber, true),\n                Math.max(\n                    getPrecisionSafe(extent[0]),\n                    getPrecisionSafe(extent[1])\n                // extent may be [0, 1], and step should have 1 more digits.\n                // To make it safe we add 2 more digits\n                ) + 2\n            );\n\n            var precision = getPrecisionSafe(step) + 2;\n            // Niced extent inside original extent\n            var niceExtent = [\n                roundingErrorFix(mathCeil(extent[0] / step) * step, precision),\n                roundingErrorFix(mathFloor(extent[1] / step) * step, precision)\n            ];\n\n            this._interval = step;\n            this._niceExtent = niceExtent;\n        },\n\n        /**\n         * Nice extent.\n         * @param {number} [splitNumber = 5] Given approx tick number\n         * @param {boolean} [fixMin=false]\n         * @param {boolean} [fixMax=false]\n         */\n        niceExtent: function (splitNumber, fixMin, fixMax) {\n            var extent = this._extent;\n            // If extent start and end are same, expand them\n            if (extent[0] === extent[1]) {\n                if (extent[0] !== 0) {\n                    // Expand extent\n                    var expandSize = extent[0];\n                    // In the fowllowing case\n                    //      Axis has been fixed max 100\n                    //      Plus data are all 100 and axis extent are [100, 100].\n                    // Extend to the both side will cause expanded max is larger than fixed max.\n                    // So only expand to the smaller side.\n                    if (!fixMax) {\n                        extent[1] += expandSize / 2;\n                        extent[0] -= expandSize / 2;\n                    }\n                    else {\n                        extent[0] -= expandSize / 2;\n                    }\n                }\n                else {\n                    extent[1] = 1;\n                }\n            }\n            var span = extent[1] - extent[0];\n            // If there are no data and extent are [Infinity, -Infinity]\n            if (!isFinite(span)) {\n                extent[0] = 0;\n                extent[1] = 1;\n            }\n\n            this.niceTicks(splitNumber);\n\n            // var extent = this._extent;\n            var interval = this._interval;\n\n            if (!fixMin) {\n                extent[0] = roundingErrorFix(mathFloor(extent[0] / interval) * interval);\n            }\n            if (!fixMax) {\n                extent[1] = roundingErrorFix(mathCeil(extent[1] / interval) * interval);\n            }\n        }\n    });\n\n    /**\n     * @return {module:echarts/scale/Time}\n     */\n    IntervalScale.create = function () {\n        return new IntervalScale();\n    };\n\n    module.exports = IntervalScale;\n\n\n\n/***/ }),\n/* 496 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var zrUtil = __webpack_require__(460);\n    var clazz = __webpack_require__(471);\n\n    var parseClassType = clazz.parseClassType;\n\n    var base = 0;\n\n    var componentUtil = {};\n\n    var DELIMITER = '_';\n\n    /**\n     * @public\n     * @param {string} type\n     * @return {string}\n     */\n    componentUtil.getUID = function (type) {\n        // Considering the case of crossing js context,\n        // use Math.random to make id as unique as possible.\n        return [(type || ''), base++, Math.random()].join(DELIMITER);\n    };\n\n    /**\n     * @inner\n     */\n    componentUtil.enableSubTypeDefaulter = function (entity) {\n\n        var subTypeDefaulters = {};\n\n        entity.registerSubTypeDefaulter = function (componentType, defaulter) {\n            componentType = parseClassType(componentType);\n            subTypeDefaulters[componentType.main] = defaulter;\n        };\n\n        entity.determineSubType = function (componentType, option) {\n            var type = option.type;\n            if (!type) {\n                var componentTypeMain = parseClassType(componentType).main;\n                if (entity.hasSubTypes(componentType) && subTypeDefaulters[componentTypeMain]) {\n                    type = subTypeDefaulters[componentTypeMain](option);\n                }\n            }\n            return type;\n        };\n\n        return entity;\n    };\n\n    /**\n     * Topological travel on Activity Network (Activity On Vertices).\n     * Dependencies is defined in Model.prototype.dependencies, like ['xAxis', 'yAxis'].\n     *\n     * If 'xAxis' or 'yAxis' is absent in componentTypeList, just ignore it in topology.\n     *\n     * If there is circle dependencey, Error will be thrown.\n     *\n     */\n    componentUtil.enableTopologicalTravel = function (entity, dependencyGetter) {\n\n        /**\n         * @public\n         * @param {Array.<string>} targetNameList Target Component type list.\n         *                                           Can be ['aa', 'bb', 'aa.xx']\n         * @param {Array.<string>} fullNameList By which we can build dependency graph.\n         * @param {Function} callback Params: componentType, dependencies.\n         * @param {Object} context Scope of callback.\n         */\n        entity.topologicalTravel = function (targetNameList, fullNameList, callback, context) {\n            if (!targetNameList.length) {\n                return;\n            }\n\n            var result = makeDepndencyGraph(fullNameList);\n            var graph = result.graph;\n            var stack = result.noEntryList;\n\n            var targetNameSet = {};\n            zrUtil.each(targetNameList, function (name) {\n                targetNameSet[name] = true;\n            });\n\n            while (stack.length) {\n                var currComponentType = stack.pop();\n                var currVertex = graph[currComponentType];\n                var isInTargetNameSet = !!targetNameSet[currComponentType];\n                if (isInTargetNameSet) {\n                    callback.call(context, currComponentType, currVertex.originalDeps.slice());\n                    delete targetNameSet[currComponentType];\n                }\n                zrUtil.each(\n                    currVertex.successor,\n                    isInTargetNameSet ? removeEdgeAndAdd : removeEdge\n                );\n            }\n\n            zrUtil.each(targetNameSet, function () {\n                throw new Error('Circle dependency may exists');\n            });\n\n            function removeEdge(succComponentType) {\n                graph[succComponentType].entryCount--;\n                if (graph[succComponentType].entryCount === 0) {\n                    stack.push(succComponentType);\n                }\n            }\n\n            // Consider this case: legend depends on series, and we call\n            // chart.setOption({series: [...]}), where only series is in option.\n            // If we do not have 'removeEdgeAndAdd', legendModel.mergeOption will\n            // not be called, but only sereis.mergeOption is called. Thus legend\n            // have no chance to update its local record about series (like which\n            // name of series is available in legend).\n            function removeEdgeAndAdd(succComponentType) {\n                targetNameSet[succComponentType] = true;\n                removeEdge(succComponentType);\n            }\n        };\n\n        /**\n         * DepndencyGraph: {Object}\n         * key: conponentType,\n         * value: {\n         *     successor: [conponentTypes...],\n         *     originalDeps: [conponentTypes...],\n         *     entryCount: {number}\n         * }\n         */\n        function makeDepndencyGraph(fullNameList) {\n            var graph = {};\n            var noEntryList = [];\n\n            zrUtil.each(fullNameList, function (name) {\n\n                var thisItem = createDependencyGraphItem(graph, name);\n                var originalDeps = thisItem.originalDeps = dependencyGetter(name);\n\n                var availableDeps = getAvailableDependencies(originalDeps, fullNameList);\n                thisItem.entryCount = availableDeps.length;\n                if (thisItem.entryCount === 0) {\n                    noEntryList.push(name);\n                }\n\n                zrUtil.each(availableDeps, function (dependentName) {\n                    if (zrUtil.indexOf(thisItem.predecessor, dependentName) < 0) {\n                        thisItem.predecessor.push(dependentName);\n                    }\n                    var thatItem = createDependencyGraphItem(graph, dependentName);\n                    if (zrUtil.indexOf(thatItem.successor, dependentName) < 0) {\n                        thatItem.successor.push(name);\n                    }\n                });\n            });\n\n            return {graph: graph, noEntryList: noEntryList};\n        }\n\n        function createDependencyGraphItem(graph, name) {\n            if (!graph[name]) {\n                graph[name] = {predecessor: [], successor: []};\n            }\n            return graph[name];\n        }\n\n        function getAvailableDependencies(originalDeps, fullNameList) {\n            var availableDeps = [];\n            zrUtil.each(originalDeps, function (dep) {\n                zrUtil.indexOf(fullNameList, dep) >= 0 && availableDeps.push(dep);\n            });\n            return availableDeps;\n        }\n    };\n\n    module.exports = componentUtil;\n\n\n/***/ }),\n/* 497 */\n/***/ (function(module, exports) {\n\n// https://github.com/mziccard/node-timsort\nvar DEFAULT_MIN_MERGE = 32;\nvar DEFAULT_MIN_GALLOPING = 7;\nvar DEFAULT_TMP_STORAGE_LENGTH = 256;\n\nfunction minRunLength(n) {\n  var r = 0;\n\n  while (n >= DEFAULT_MIN_MERGE) {\n    r |= n & 1;\n    n >>= 1;\n  }\n\n  return n + r;\n}\n\nfunction makeAscendingRun(array, lo, hi, compare) {\n  var runHi = lo + 1;\n\n  if (runHi === hi) {\n    return 1;\n  }\n\n  if (compare(array[runHi++], array[lo]) < 0) {\n    while (runHi < hi && compare(array[runHi], array[runHi - 1]) < 0) {\n      runHi++;\n    }\n\n    reverseRun(array, lo, runHi);\n  } else {\n    while (runHi < hi && compare(array[runHi], array[runHi - 1]) >= 0) {\n      runHi++;\n    }\n  }\n\n  return runHi - lo;\n}\n\nfunction reverseRun(array, lo, hi) {\n  hi--;\n\n  while (lo < hi) {\n    var t = array[lo];\n    array[lo++] = array[hi];\n    array[hi--] = t;\n  }\n}\n\nfunction binaryInsertionSort(array, lo, hi, start, compare) {\n  if (start === lo) {\n    start++;\n  }\n\n  for (; start < hi; start++) {\n    var pivot = array[start];\n    var left = lo;\n    var right = start;\n    var mid;\n\n    while (left < right) {\n      mid = left + right >>> 1;\n\n      if (compare(pivot, array[mid]) < 0) {\n        right = mid;\n      } else {\n        left = mid + 1;\n      }\n    }\n\n    var n = start - left;\n\n    switch (n) {\n      case 3:\n        array[left + 3] = array[left + 2];\n\n      case 2:\n        array[left + 2] = array[left + 1];\n\n      case 1:\n        array[left + 1] = array[left];\n        break;\n\n      default:\n        while (n > 0) {\n          array[left + n] = array[left + n - 1];\n          n--;\n        }\n\n    }\n\n    array[left] = pivot;\n  }\n}\n\nfunction gallopLeft(value, array, start, length, hint, compare) {\n  var lastOffset = 0;\n  var maxOffset = 0;\n  var offset = 1;\n\n  if (compare(value, array[start + hint]) > 0) {\n    maxOffset = length - hint;\n\n    while (offset < maxOffset && compare(value, array[start + hint + offset]) > 0) {\n      lastOffset = offset;\n      offset = (offset << 1) + 1;\n\n      if (offset <= 0) {\n        offset = maxOffset;\n      }\n    }\n\n    if (offset > maxOffset) {\n      offset = maxOffset;\n    }\n\n    lastOffset += hint;\n    offset += hint;\n  } else {\n    maxOffset = hint + 1;\n\n    while (offset < maxOffset && compare(value, array[start + hint - offset]) <= 0) {\n      lastOffset = offset;\n      offset = (offset << 1) + 1;\n\n      if (offset <= 0) {\n        offset = maxOffset;\n      }\n    }\n\n    if (offset > maxOffset) {\n      offset = maxOffset;\n    }\n\n    var tmp = lastOffset;\n    lastOffset = hint - offset;\n    offset = hint - tmp;\n  }\n\n  lastOffset++;\n\n  while (lastOffset < offset) {\n    var m = lastOffset + (offset - lastOffset >>> 1);\n\n    if (compare(value, array[start + m]) > 0) {\n      lastOffset = m + 1;\n    } else {\n      offset = m;\n    }\n  }\n\n  return offset;\n}\n\nfunction gallopRight(value, array, start, length, hint, compare) {\n  var lastOffset = 0;\n  var maxOffset = 0;\n  var offset = 1;\n\n  if (compare(value, array[start + hint]) < 0) {\n    maxOffset = hint + 1;\n\n    while (offset < maxOffset && compare(value, array[start + hint - offset]) < 0) {\n      lastOffset = offset;\n      offset = (offset << 1) + 1;\n\n      if (offset <= 0) {\n        offset = maxOffset;\n      }\n    }\n\n    if (offset > maxOffset) {\n      offset = maxOffset;\n    }\n\n    var tmp = lastOffset;\n    lastOffset = hint - offset;\n    offset = hint - tmp;\n  } else {\n    maxOffset = length - hint;\n\n    while (offset < maxOffset && compare(value, array[start + hint + offset]) >= 0) {\n      lastOffset = offset;\n      offset = (offset << 1) + 1;\n\n      if (offset <= 0) {\n        offset = maxOffset;\n      }\n    }\n\n    if (offset > maxOffset) {\n      offset = maxOffset;\n    }\n\n    lastOffset += hint;\n    offset += hint;\n  }\n\n  lastOffset++;\n\n  while (lastOffset < offset) {\n    var m = lastOffset + (offset - lastOffset >>> 1);\n\n    if (compare(value, array[start + m]) < 0) {\n      offset = m;\n    } else {\n      lastOffset = m + 1;\n    }\n  }\n\n  return offset;\n}\n\nfunction TimSort(array, compare) {\n  var minGallop = DEFAULT_MIN_GALLOPING;\n  var length = 0;\n  var tmpStorageLength = DEFAULT_TMP_STORAGE_LENGTH;\n  var stackLength = 0;\n  var runStart;\n  var runLength;\n  var stackSize = 0;\n  length = array.length;\n\n  if (length < 2 * DEFAULT_TMP_STORAGE_LENGTH) {\n    tmpStorageLength = length >>> 1;\n  }\n\n  var tmp = [];\n  stackLength = length < 120 ? 5 : length < 1542 ? 10 : length < 119151 ? 19 : 40;\n  runStart = [];\n  runLength = [];\n\n  function pushRun(_runStart, _runLength) {\n    runStart[stackSize] = _runStart;\n    runLength[stackSize] = _runLength;\n    stackSize += 1;\n  }\n\n  function mergeRuns() {\n    while (stackSize > 1) {\n      var n = stackSize - 2;\n\n      if (n >= 1 && runLength[n - 1] <= runLength[n] + runLength[n + 1] || n >= 2 && runLength[n - 2] <= runLength[n] + runLength[n - 1]) {\n        if (runLength[n - 1] < runLength[n + 1]) {\n          n--;\n        }\n      } else if (runLength[n] > runLength[n + 1]) {\n        break;\n      }\n\n      mergeAt(n);\n    }\n  }\n\n  function forceMergeRuns() {\n    while (stackSize > 1) {\n      var n = stackSize - 2;\n\n      if (n > 0 && runLength[n - 1] < runLength[n + 1]) {\n        n--;\n      }\n\n      mergeAt(n);\n    }\n  }\n\n  function mergeAt(i) {\n    var start1 = runStart[i];\n    var length1 = runLength[i];\n    var start2 = runStart[i + 1];\n    var length2 = runLength[i + 1];\n    runLength[i] = length1 + length2;\n\n    if (i === stackSize - 3) {\n      runStart[i + 1] = runStart[i + 2];\n      runLength[i + 1] = runLength[i + 2];\n    }\n\n    stackSize--;\n    var k = gallopRight(array[start2], array, start1, length1, 0, compare);\n    start1 += k;\n    length1 -= k;\n\n    if (length1 === 0) {\n      return;\n    }\n\n    length2 = gallopLeft(array[start1 + length1 - 1], array, start2, length2, length2 - 1, compare);\n\n    if (length2 === 0) {\n      return;\n    }\n\n    if (length1 <= length2) {\n      mergeLow(start1, length1, start2, length2);\n    } else {\n      mergeHigh(start1, length1, start2, length2);\n    }\n  }\n\n  function mergeLow(start1, length1, start2, length2) {\n    var i = 0;\n\n    for (i = 0; i < length1; i++) {\n      tmp[i] = array[start1 + i];\n    }\n\n    var cursor1 = 0;\n    var cursor2 = start2;\n    var dest = start1;\n    array[dest++] = array[cursor2++];\n\n    if (--length2 === 0) {\n      for (i = 0; i < length1; i++) {\n        array[dest + i] = tmp[cursor1 + i];\n      }\n\n      return;\n    }\n\n    if (length1 === 1) {\n      for (i = 0; i < length2; i++) {\n        array[dest + i] = array[cursor2 + i];\n      }\n\n      array[dest + length2] = tmp[cursor1];\n      return;\n    }\n\n    var _minGallop = minGallop;\n    var count1, count2, exit;\n\n    while (1) {\n      count1 = 0;\n      count2 = 0;\n      exit = false;\n\n      do {\n        if (compare(array[cursor2], tmp[cursor1]) < 0) {\n          array[dest++] = array[cursor2++];\n          count2++;\n          count1 = 0;\n\n          if (--length2 === 0) {\n            exit = true;\n            break;\n          }\n        } else {\n          array[dest++] = tmp[cursor1++];\n          count1++;\n          count2 = 0;\n\n          if (--length1 === 1) {\n            exit = true;\n            break;\n          }\n        }\n      } while ((count1 | count2) < _minGallop);\n\n      if (exit) {\n        break;\n      }\n\n      do {\n        count1 = gallopRight(array[cursor2], tmp, cursor1, length1, 0, compare);\n\n        if (count1 !== 0) {\n          for (i = 0; i < count1; i++) {\n            array[dest + i] = tmp[cursor1 + i];\n          }\n\n          dest += count1;\n          cursor1 += count1;\n          length1 -= count1;\n\n          if (length1 <= 1) {\n            exit = true;\n            break;\n          }\n        }\n\n        array[dest++] = array[cursor2++];\n\n        if (--length2 === 0) {\n          exit = true;\n          break;\n        }\n\n        count2 = gallopLeft(tmp[cursor1], array, cursor2, length2, 0, compare);\n\n        if (count2 !== 0) {\n          for (i = 0; i < count2; i++) {\n            array[dest + i] = array[cursor2 + i];\n          }\n\n          dest += count2;\n          cursor2 += count2;\n          length2 -= count2;\n\n          if (length2 === 0) {\n            exit = true;\n            break;\n          }\n        }\n\n        array[dest++] = tmp[cursor1++];\n\n        if (--length1 === 1) {\n          exit = true;\n          break;\n        }\n\n        _minGallop--;\n      } while (count1 >= DEFAULT_MIN_GALLOPING || count2 >= DEFAULT_MIN_GALLOPING);\n\n      if (exit) {\n        break;\n      }\n\n      if (_minGallop < 0) {\n        _minGallop = 0;\n      }\n\n      _minGallop += 2;\n    }\n\n    minGallop = _minGallop;\n    minGallop < 1 && (minGallop = 1);\n\n    if (length1 === 1) {\n      for (i = 0; i < length2; i++) {\n        array[dest + i] = array[cursor2 + i];\n      }\n\n      array[dest + length2] = tmp[cursor1];\n    } else if (length1 === 0) {\n      throw new Error(); // throw new Error('mergeLow preconditions were not respected');\n    } else {\n      for (i = 0; i < length1; i++) {\n        array[dest + i] = tmp[cursor1 + i];\n      }\n    }\n  }\n\n  function mergeHigh(start1, length1, start2, length2) {\n    var i = 0;\n\n    for (i = 0; i < length2; i++) {\n      tmp[i] = array[start2 + i];\n    }\n\n    var cursor1 = start1 + length1 - 1;\n    var cursor2 = length2 - 1;\n    var dest = start2 + length2 - 1;\n    var customCursor = 0;\n    var customDest = 0;\n    array[dest--] = array[cursor1--];\n\n    if (--length1 === 0) {\n      customCursor = dest - (length2 - 1);\n\n      for (i = 0; i < length2; i++) {\n        array[customCursor + i] = tmp[i];\n      }\n\n      return;\n    }\n\n    if (length2 === 1) {\n      dest -= length1;\n      cursor1 -= length1;\n      customDest = dest + 1;\n      customCursor = cursor1 + 1;\n\n      for (i = length1 - 1; i >= 0; i--) {\n        array[customDest + i] = array[customCursor + i];\n      }\n\n      array[dest] = tmp[cursor2];\n      return;\n    }\n\n    var _minGallop = minGallop;\n\n    while (true) {\n      var count1 = 0;\n      var count2 = 0;\n      var exit = false;\n\n      do {\n        if (compare(tmp[cursor2], array[cursor1]) < 0) {\n          array[dest--] = array[cursor1--];\n          count1++;\n          count2 = 0;\n\n          if (--length1 === 0) {\n            exit = true;\n            break;\n          }\n        } else {\n          array[dest--] = tmp[cursor2--];\n          count2++;\n          count1 = 0;\n\n          if (--length2 === 1) {\n            exit = true;\n            break;\n          }\n        }\n      } while ((count1 | count2) < _minGallop);\n\n      if (exit) {\n        break;\n      }\n\n      do {\n        count1 = length1 - gallopRight(tmp[cursor2], array, start1, length1, length1 - 1, compare);\n\n        if (count1 !== 0) {\n          dest -= count1;\n          cursor1 -= count1;\n          length1 -= count1;\n          customDest = dest + 1;\n          customCursor = cursor1 + 1;\n\n          for (i = count1 - 1; i >= 0; i--) {\n            array[customDest + i] = array[customCursor + i];\n          }\n\n          if (length1 === 0) {\n            exit = true;\n            break;\n          }\n        }\n\n        array[dest--] = tmp[cursor2--];\n\n        if (--length2 === 1) {\n          exit = true;\n          break;\n        }\n\n        count2 = length2 - gallopLeft(array[cursor1], tmp, 0, length2, length2 - 1, compare);\n\n        if (count2 !== 0) {\n          dest -= count2;\n          cursor2 -= count2;\n          length2 -= count2;\n          customDest = dest + 1;\n          customCursor = cursor2 + 1;\n\n          for (i = 0; i < count2; i++) {\n            array[customDest + i] = tmp[customCursor + i];\n          }\n\n          if (length2 <= 1) {\n            exit = true;\n            break;\n          }\n        }\n\n        array[dest--] = array[cursor1--];\n\n        if (--length1 === 0) {\n          exit = true;\n          break;\n        }\n\n        _minGallop--;\n      } while (count1 >= DEFAULT_MIN_GALLOPING || count2 >= DEFAULT_MIN_GALLOPING);\n\n      if (exit) {\n        break;\n      }\n\n      if (_minGallop < 0) {\n        _minGallop = 0;\n      }\n\n      _minGallop += 2;\n    }\n\n    minGallop = _minGallop;\n\n    if (minGallop < 1) {\n      minGallop = 1;\n    }\n\n    if (length2 === 1) {\n      dest -= length1;\n      cursor1 -= length1;\n      customDest = dest + 1;\n      customCursor = cursor1 + 1;\n\n      for (i = length1 - 1; i >= 0; i--) {\n        array[customDest + i] = array[customCursor + i];\n      }\n\n      array[dest] = tmp[cursor2];\n    } else if (length2 === 0) {\n      throw new Error(); // throw new Error('mergeHigh preconditions were not respected');\n    } else {\n      customCursor = dest - (length2 - 1);\n\n      for (i = 0; i < length2; i++) {\n        array[customCursor + i] = tmp[i];\n      }\n    }\n  }\n\n  this.mergeRuns = mergeRuns;\n  this.forceMergeRuns = forceMergeRuns;\n  this.pushRun = pushRun;\n}\n\nfunction sort(array, compare, lo, hi) {\n  if (!lo) {\n    lo = 0;\n  }\n\n  if (!hi) {\n    hi = array.length;\n  }\n\n  var remaining = hi - lo;\n\n  if (remaining < 2) {\n    return;\n  }\n\n  var runLength = 0;\n\n  if (remaining < DEFAULT_MIN_MERGE) {\n    runLength = makeAscendingRun(array, lo, hi, compare);\n    binaryInsertionSort(array, lo, hi, lo + runLength, compare);\n    return;\n  }\n\n  var ts = new TimSort(array, compare);\n  var minRun = minRunLength(remaining);\n\n  do {\n    runLength = makeAscendingRun(array, lo, hi, compare);\n\n    if (runLength < minRun) {\n      var force = remaining;\n\n      if (force > minRun) {\n        force = minRun;\n      }\n\n      binaryInsertionSort(array, lo, lo + force, lo + runLength, compare);\n      runLength = force;\n    }\n\n    ts.pushRun(lo, runLength);\n    ts.mergeRuns();\n    remaining -= runLength;\n    lo += runLength;\n  } while (remaining !== 0);\n\n  ts.forceMergeRuns();\n}\n\nmodule.exports = sort;\n\n/***/ }),\n/* 498 */\n/***/ (function(module, exports) {\n\nvar Pattern = function (image, repeat) {\n  // Should do nothing more in this constructor. Because gradient can be\n  // declard by `color: {image: ...}`, where this constructor will not be called.\n  this.image = image;\n  this.repeat = repeat; // Can be cloned\n\n  this.type = 'pattern';\n};\n\nPattern.prototype.getCanvasPattern = function (ctx) {\n  return ctx.createPattern(this.image, this.repeat || 'repeat');\n};\n\nvar _default = Pattern;\nmodule.exports = _default;\n\n/***/ }),\n/* 499 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar LRU = __webpack_require__(515);\n\nvar globalImageCache = new LRU(50);\n/**\n * @param {string|HTMLImageElement|HTMLCanvasElement|Canvas} newImageOrSrc\n * @return {HTMLImageElement|HTMLCanvasElement|Canvas} image\n */\n\nfunction findExistImage(newImageOrSrc) {\n  if (typeof newImageOrSrc === 'string') {\n    var cachedImgObj = globalImageCache.get(newImageOrSrc);\n    return cachedImgObj && cachedImgObj.image;\n  } else {\n    return newImageOrSrc;\n  }\n}\n/**\n * Caution: User should cache loaded images, but not just count on LRU.\n * Consider if required images more than LRU size, will dead loop occur?\n *\n * @param {string|HTMLImageElement|HTMLCanvasElement|Canvas} newImageOrSrc\n * @param {HTMLImageElement|HTMLCanvasElement|Canvas} image Existent image.\n * @param {module:zrender/Element} [hostEl] For calling `dirty`.\n * @param {Function} [cb] params: (image, cbPayload)\n * @param {Object} [cbPayload] Payload on cb calling.\n * @return {HTMLImageElement|HTMLCanvasElement|Canvas} image\n */\n\n\nfunction createOrUpdateImage(newImageOrSrc, image, hostEl, cb, cbPayload) {\n  if (!newImageOrSrc) {\n    return image;\n  } else if (typeof newImageOrSrc === 'string') {\n    // Image should not be loaded repeatly.\n    if (image && image.__zrImageSrc === newImageOrSrc || !hostEl) {\n      return image;\n    } // Only when there is no existent image or existent image src\n    // is different, this method is responsible for load.\n\n\n    var cachedImgObj = globalImageCache.get(newImageOrSrc);\n    var pendingWrap = {\n      hostEl: hostEl,\n      cb: cb,\n      cbPayload: cbPayload\n    };\n\n    if (cachedImgObj) {\n      image = cachedImgObj.image;\n      !isImageReady(image) && cachedImgObj.pending.push(pendingWrap);\n    } else {\n      !image && (image = new Image());\n      image.onload = imageOnLoad;\n      globalImageCache.put(newImageOrSrc, image.__cachedImgObj = {\n        image: image,\n        pending: [pendingWrap]\n      });\n      image.src = image.__zrImageSrc = newImageOrSrc;\n    }\n\n    return image;\n  } // newImageOrSrc is an HTMLImageElement or HTMLCanvasElement or Canvas\n  else {\n      return newImageOrSrc;\n    }\n}\n\nfunction imageOnLoad() {\n  var cachedImgObj = this.__cachedImgObj;\n  this.onload = this.__cachedImgObj = null;\n\n  for (var i = 0; i < cachedImgObj.pending.length; i++) {\n    var pendingWrap = cachedImgObj.pending[i];\n    var cb = pendingWrap.cb;\n    cb && cb(this, pendingWrap.cbPayload);\n    pendingWrap.hostEl.dirty();\n  }\n\n  cachedImgObj.pending.length = 0;\n}\n\nfunction isImageReady(image) {\n  return image && image.width && image.height;\n}\n\nexports.findExistImage = findExistImage;\nexports.createOrUpdateImage = createOrUpdateImage;\nexports.isImageReady = isImageReady;\n\n/***/ }),\n/* 500 */\n/***/ (function(module, exports) {\n\nvar svgURI = 'http://www.w3.org/2000/svg';\n\nfunction createElement(name) {\n  return document.createElementNS(svgURI, name);\n}\n\nexports.createElement = createElement;\n\n/***/ }),\n/* 501 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _core = __webpack_require__(500);\n\nvar createElement = _core.createElement;\n\nvar PathProxy = __webpack_require__(476);\n\nvar BoundingRect = __webpack_require__(467);\n\nvar textContain = __webpack_require__(473);\n\nvar textHelper = __webpack_require__(491);\n\nvar Text = __webpack_require__(480);\n\n// TODO\n// 1. shadow\n// 2. Image: sx, sy, sw, sh\nvar CMD = PathProxy.CMD;\nvar arrayJoin = Array.prototype.join;\nvar NONE = 'none';\nvar mathRound = Math.round;\nvar mathSin = Math.sin;\nvar mathCos = Math.cos;\nvar PI = Math.PI;\nvar PI2 = Math.PI * 2;\nvar degree = 180 / PI;\nvar EPSILON = 1e-4;\n\nfunction round4(val) {\n  return mathRound(val * 1e4) / 1e4;\n}\n\nfunction isAroundZero(val) {\n  return val < EPSILON && val > -EPSILON;\n}\n\nfunction pathHasFill(style, isText) {\n  var fill = isText ? style.textFill : style.fill;\n  return fill != null && fill !== NONE;\n}\n\nfunction pathHasStroke(style, isText) {\n  var stroke = isText ? style.textStroke : style.stroke;\n  return stroke != null && stroke !== NONE;\n}\n\nfunction setTransform(svgEl, m) {\n  if (m) {\n    attr(svgEl, 'transform', 'matrix(' + arrayJoin.call(m, ',') + ')');\n  }\n}\n\nfunction attr(el, key, val) {\n  if (!val || val.type !== 'linear' && val.type !== 'radial') {\n    // Don't set attribute for gradient, since it need new dom nodes\n    el.setAttribute(key, val);\n  }\n}\n\nfunction attrXLink(el, key, val) {\n  el.setAttributeNS('http://www.w3.org/1999/xlink', key, val);\n}\n\nfunction bindStyle(svgEl, style, isText) {\n  if (pathHasFill(style, isText)) {\n    var fill = isText ? style.textFill : style.fill;\n    fill = fill === 'transparent' ? NONE : fill;\n    /**\n     * FIXME:\n     * This is a temporary fix for Chrome's clipping bug\n     * that happens when a clip-path is referring another one.\n     * This fix should be used before Chrome's bug is fixed.\n     * For an element that has clip-path, and fill is none,\n     * set it to be \"rgba(0, 0, 0, 0.002)\" will hide the element.\n     * Otherwise, it will show black fill color.\n     * 0.002 is used because this won't work for alpha values smaller\n     * than 0.002.\n     *\n     * See\n     * https://bugs.chromium.org/p/chromium/issues/detail?id=659790\n     * for more information.\n     */\n\n    if (svgEl.getAttribute('clip-path') !== 'none' && fill === NONE) {\n      fill = 'rgba(0, 0, 0, 0.002)';\n    }\n\n    attr(svgEl, 'fill', fill);\n    attr(svgEl, 'fill-opacity', style.opacity);\n  } else {\n    attr(svgEl, 'fill', NONE);\n  }\n\n  if (pathHasStroke(style, isText)) {\n    var stroke = isText ? style.textStroke : style.stroke;\n    stroke = stroke === 'transparent' ? NONE : stroke;\n    attr(svgEl, 'stroke', stroke);\n    var strokeWidth = isText ? style.textStrokeWidth : style.lineWidth;\n    var strokeScale = style.strokeNoScale ? style.host.getLineScale() : 1;\n    attr(svgEl, 'stroke-width', strokeWidth / strokeScale);\n    attr(svgEl, 'paint-order', 'stroke');\n    attr(svgEl, 'stroke-opacity', style.opacity);\n    var lineDash = style.lineDash;\n\n    if (lineDash) {\n      attr(svgEl, 'stroke-dasharray', style.lineDash.join(','));\n      attr(svgEl, 'stroke-dashoffset', mathRound(style.lineDashOffset || 0));\n    } else {\n      attr(svgEl, 'stroke-dasharray', '');\n    } // PENDING\n\n\n    style.lineCap && attr(svgEl, 'stroke-linecap', style.lineCap);\n    style.lineJoin && attr(svgEl, 'stroke-linejoin', style.lineJoin);\n    style.miterLimit && attr(svgEl, 'stroke-miterlimit', style.miterLimit);\n  } else {\n    attr(svgEl, 'stroke', NONE);\n  }\n}\n/***************************************************\n * PATH\n **************************************************/\n\n\nfunction pathDataToString(path) {\n  var str = [];\n  var data = path.data;\n  var dataLength = path.len();\n\n  for (var i = 0; i < dataLength;) {\n    var cmd = data[i++];\n    var cmdStr = '';\n    var nData = 0;\n\n    switch (cmd) {\n      case CMD.M:\n        cmdStr = 'M';\n        nData = 2;\n        break;\n\n      case CMD.L:\n        cmdStr = 'L';\n        nData = 2;\n        break;\n\n      case CMD.Q:\n        cmdStr = 'Q';\n        nData = 4;\n        break;\n\n      case CMD.C:\n        cmdStr = 'C';\n        nData = 6;\n        break;\n\n      case CMD.A:\n        var cx = data[i++];\n        var cy = data[i++];\n        var rx = data[i++];\n        var ry = data[i++];\n        var theta = data[i++];\n        var dTheta = data[i++];\n        var psi = data[i++];\n        var clockwise = data[i++];\n        var dThetaPositive = Math.abs(dTheta);\n        var isCircle = isAroundZero(dThetaPositive % PI2) && !isAroundZero(dThetaPositive);\n        var large = false;\n\n        if (dThetaPositive >= PI2) {\n          large = true;\n        } else if (isAroundZero(dThetaPositive)) {\n          large = false;\n        } else {\n          large = (dTheta > -PI && dTheta < 0 || dTheta > PI) === !!clockwise;\n        }\n\n        var x0 = round4(cx + rx * mathCos(theta));\n        var y0 = round4(cy + ry * mathSin(theta)); // It will not draw if start point and end point are exactly the same\n        // We need to shift the end point with a small value\n        // FIXME A better way to draw circle ?\n\n        if (isCircle) {\n          if (clockwise) {\n            dTheta = PI2 - 1e-4;\n          } else {\n            dTheta = -PI2 + 1e-4;\n          }\n\n          large = true;\n\n          if (i === 9) {\n            // Move to (x0, y0) only when CMD.A comes at the\n            // first position of a shape.\n            // For instance, when drawing a ring, CMD.A comes\n            // after CMD.M, so it's unnecessary to move to\n            // (x0, y0).\n            str.push('M', x0, y0);\n          }\n        }\n\n        var x = round4(cx + rx * mathCos(theta + dTheta));\n        var y = round4(cy + ry * mathSin(theta + dTheta)); // FIXME Ellipse\n\n        str.push('A', round4(rx), round4(ry), mathRound(psi * degree), +large, +clockwise, x, y);\n        break;\n\n      case CMD.Z:\n        cmdStr = 'Z';\n        break;\n\n      case CMD.R:\n        var x = round4(data[i++]);\n        var y = round4(data[i++]);\n        var w = round4(data[i++]);\n        var h = round4(data[i++]);\n        str.push('M', x, y, 'L', x + w, y, 'L', x + w, y + h, 'L', x, y + h, 'L', x, y);\n        break;\n    }\n\n    cmdStr && str.push(cmdStr);\n\n    for (var j = 0; j < nData; j++) {\n      // PENDING With scale\n      str.push(round4(data[i++]));\n    }\n  }\n\n  return str.join(' ');\n}\n\nvar svgPath = {};\n\nsvgPath.brush = function (el) {\n  var style = el.style;\n  var svgEl = el.__svgEl;\n\n  if (!svgEl) {\n    svgEl = createElement('path');\n    el.__svgEl = svgEl;\n  }\n\n  if (!el.path) {\n    el.createPathProxy();\n  }\n\n  var path = el.path;\n\n  if (el.__dirtyPath) {\n    path.beginPath();\n    el.buildPath(path, el.shape);\n    el.__dirtyPath = false;\n    var pathStr = pathDataToString(path);\n\n    if (pathStr.indexOf('NaN') < 0) {\n      // Ignore illegal path, which may happen such in out-of-range\n      // data in Calendar series.\n      attr(svgEl, 'd', pathStr);\n    }\n  }\n\n  bindStyle(svgEl, style);\n  setTransform(svgEl, el.transform);\n\n  if (style.text != null) {\n    svgTextDrawRectText(el, el.getBoundingRect());\n  }\n};\n/***************************************************\n * IMAGE\n **************************************************/\n\n\nvar svgImage = {};\n\nsvgImage.brush = function (el) {\n  var style = el.style;\n  var image = style.image;\n\n  if (image instanceof HTMLImageElement) {\n    var src = image.src;\n    image = src;\n  }\n\n  if (!image) {\n    return;\n  }\n\n  var x = style.x || 0;\n  var y = style.y || 0;\n  var dw = style.width;\n  var dh = style.height;\n  var svgEl = el.__svgEl;\n\n  if (!svgEl) {\n    svgEl = createElement('image');\n    el.__svgEl = svgEl;\n  }\n\n  if (image !== el.__imageSrc) {\n    attrXLink(svgEl, 'href', image); // Caching image src\n\n    el.__imageSrc = image;\n  }\n\n  attr(svgEl, 'width', dw);\n  attr(svgEl, 'height', dh);\n  attr(svgEl, 'x', x);\n  attr(svgEl, 'y', y);\n  setTransform(svgEl, el.transform);\n\n  if (style.text != null) {\n    svgTextDrawRectText(el, el.getBoundingRect());\n  }\n};\n/***************************************************\n * TEXT\n **************************************************/\n\n\nvar svgText = {};\nvar tmpRect = new BoundingRect();\n\nvar svgTextDrawRectText = function (el, rect, textRect) {\n  var style = el.style;\n  el.__dirty && textHelper.normalizeTextStyle(style, true);\n  var text = style.text; // Convert to string\n\n  if (text == null) {\n    // Draw no text only when text is set to null, but not ''\n    return;\n  } else {\n    text += '';\n  }\n\n  var textSvgEl = el.__textSvgEl;\n\n  if (!textSvgEl) {\n    textSvgEl = createElement('text');\n    el.__textSvgEl = textSvgEl;\n  }\n\n  bindStyle(textSvgEl, style, true);\n\n  if (el instanceof Text || el.style.transformText) {\n    // Transform text with element\n    setTransform(textSvgEl, el.transform);\n  } else {\n    if (el.transform) {\n      tmpRect.copy(rect);\n      tmpRect.applyTransform(el.transform);\n      rect = tmpRect;\n    } else {\n      var pos = el.transformCoordToGlobal(rect.x, rect.y);\n      rect.x = pos[0];\n      rect.y = pos[1];\n    }\n  }\n\n  var x;\n  var y;\n  var textPosition = style.textPosition;\n  var distance = style.textDistance;\n  var align = style.textAlign || 'left';\n\n  if (typeof style.fontSize === 'number') {\n    style.fontSize += 'px';\n  }\n\n  var font = style.font || [style.fontStyle || '', style.fontWeight || '', style.fontSize || '', style.fontFamily || ''].join(' ') || textContain.DEFAULT_FONT;\n  var verticalAlign = getVerticalAlignForSvg(style.textVerticalAlign);\n  textRect = textContain.getBoundingRect(text, font, align, verticalAlign);\n  var lineHeight = textRect.lineHeight; // Text position represented by coord\n\n  if (textPosition instanceof Array) {\n    x = rect.x + textPosition[0];\n    y = rect.y + textPosition[1];\n  } else {\n    var newPos = textContain.adjustTextPositionOnRect(textPosition, rect, distance);\n    x = newPos.x;\n    y = newPos.y;\n    verticalAlign = getVerticalAlignForSvg(newPos.textVerticalAlign);\n    align = newPos.textAlign;\n  }\n\n  attr(textSvgEl, 'alignment-baseline', verticalAlign);\n\n  if (font) {\n    textSvgEl.style.font = font;\n  }\n\n  var textPadding = style.textPadding; // Make baseline top\n\n  attr(textSvgEl, 'x', x);\n  attr(textSvgEl, 'y', y);\n  var textLines = text.split('\\n');\n  var nTextLines = textLines.length;\n  var textAnchor = align; // PENDING\n\n  if (textAnchor === 'left') {\n    textAnchor = 'start';\n    textPadding && (x += textPadding[3]);\n  } else if (textAnchor === 'right') {\n    textAnchor = 'end';\n    textPadding && (x -= textPadding[1]);\n  } else if (textAnchor === 'center') {\n    textAnchor = 'middle';\n    textPadding && (x += (textPadding[3] - textPadding[1]) / 2);\n  }\n\n  var dy = 0;\n\n  if (verticalAlign === 'baseline') {\n    dy = -textRect.height + lineHeight;\n    textPadding && (dy -= textPadding[2]);\n  } else if (verticalAlign === 'middle') {\n    dy = (-textRect.height + lineHeight) / 2;\n    textPadding && (y += (textPadding[0] - textPadding[2]) / 2);\n  } else {\n    textPadding && (dy += textPadding[0]);\n  } // Font may affect position of each tspan elements\n\n\n  if (el.__text !== text || el.__textFont !== font) {\n    var tspanList = el.__tspanList || [];\n    el.__tspanList = tspanList;\n\n    for (var i = 0; i < nTextLines; i++) {\n      // Using cached tspan elements\n      var tspan = tspanList[i];\n\n      if (!tspan) {\n        tspan = tspanList[i] = createElement('tspan');\n        textSvgEl.appendChild(tspan);\n        attr(tspan, 'alignment-baseline', verticalAlign);\n        attr(tspan, 'text-anchor', textAnchor);\n      } else {\n        tspan.innerHTML = '';\n      }\n\n      attr(tspan, 'x', x);\n      attr(tspan, 'y', y + i * lineHeight + dy);\n      tspan.appendChild(document.createTextNode(textLines[i]));\n    } // Remove unsed tspan elements\n\n\n    for (; i < tspanList.length; i++) {\n      textSvgEl.removeChild(tspanList[i]);\n    }\n\n    tspanList.length = nTextLines;\n    el.__text = text;\n    el.__textFont = font;\n  } else if (el.__tspanList.length) {\n    // Update span x and y\n    var len = el.__tspanList.length;\n\n    for (var i = 0; i < len; ++i) {\n      var tspan = el.__tspanList[i];\n\n      if (tspan) {\n        attr(tspan, 'x', x);\n        attr(tspan, 'y', y + i * lineHeight + dy);\n      }\n    }\n  }\n};\n\nfunction getVerticalAlignForSvg(verticalAlign) {\n  if (verticalAlign === 'middle') {\n    return 'middle';\n  } else if (verticalAlign === 'bottom') {\n    return 'baseline';\n  } else {\n    return 'hanging';\n  }\n}\n\nsvgText.drawRectText = svgTextDrawRectText;\n\nsvgText.brush = function (el) {\n  var style = el.style;\n\n  if (style.text != null) {\n    // 强制设置 textPosition\n    style.textPosition = [0, 0];\n    svgTextDrawRectText(el, {\n      x: style.x || 0,\n      y: style.y || 0,\n      width: 0,\n      height: 0\n    }, el.getBoundingRect());\n  }\n};\n\nexports.path = svgPath;\nexports.image = svgImage;\nexports.text = svgText;\n\n/***/ }),\n/* 502 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar guid = __webpack_require__(516);\n\nvar env = __webpack_require__(466);\n\nvar zrUtil = __webpack_require__(460);\n\nvar Handler = __webpack_require__(594);\n\nvar Storage = __webpack_require__(597);\n\nvar Painter = __webpack_require__(596);\n\nvar Animation = __webpack_require__(598);\n\nvar HandlerProxy = __webpack_require__(610);\n\n/*!\n* ZRender, a high performance 2d drawing library.\n*\n* Copyright (c) 2013, Baidu Inc.\n* All rights reserved.\n*\n* LICENSE\n* https://github.com/ecomfe/zrender/blob/master/LICENSE.txt\n*/\nvar useVML = !env.canvasSupported;\nvar painterCtors = {\n  canvas: Painter\n};\nvar instances = {}; // ZRender实例map索引\n\n/**\n * @type {string}\n */\n\nvar version = '3.7.4';\n/**\n * Initializing a zrender instance\n * @param {HTMLElement} dom\n * @param {Object} opts\n * @param {string} [opts.renderer='canvas'] 'canvas' or 'svg'\n * @param {number} [opts.devicePixelRatio]\n * @param {number|string} [opts.width] Can be 'auto' (the same as null/undefined)\n * @param {number|string} [opts.height] Can be 'auto' (the same as null/undefined)\n * @return {module:zrender/ZRender}\n */\n\nfunction init(dom, opts) {\n  var zr = new ZRender(guid(), dom, opts);\n  instances[zr.id] = zr;\n  return zr;\n}\n/**\n * Dispose zrender instance\n * @param {module:zrender/ZRender} zr\n */\n\n\nfunction dispose(zr) {\n  if (zr) {\n    zr.dispose();\n  } else {\n    for (var key in instances) {\n      if (instances.hasOwnProperty(key)) {\n        instances[key].dispose();\n      }\n    }\n\n    instances = {};\n  }\n\n  return this;\n}\n/**\n * Get zrender instance by id\n * @param {string} id zrender instance id\n * @return {module:zrender/ZRender}\n */\n\n\nfunction getInstance(id) {\n  return instances[id];\n}\n\nfunction registerPainter(name, Ctor) {\n  painterCtors[name] = Ctor;\n}\n\nfunction delInstance(id) {\n  delete instances[id];\n}\n/**\n * @module zrender/ZRender\n */\n\n/**\n * @constructor\n * @alias module:zrender/ZRender\n * @param {string} id\n * @param {HTMLElement} dom\n * @param {Object} opts\n * @param {string} [opts.renderer='canvas'] 'canvas' or 'svg'\n * @param {number} [opts.devicePixelRatio]\n * @param {number} [opts.width] Can be 'auto' (the same as null/undefined)\n * @param {number} [opts.height] Can be 'auto' (the same as null/undefined)\n */\n\n\nvar ZRender = function (id, dom, opts) {\n  opts = opts || {};\n  /**\n   * @type {HTMLDomElement}\n   */\n\n  this.dom = dom;\n  /**\n   * @type {string}\n   */\n\n  this.id = id;\n  var self = this;\n  var storage = new Storage();\n  var rendererType = opts.renderer; // TODO WebGL\n\n  if (useVML) {\n    if (!painterCtors.vml) {\n      throw new Error('You need to require \\'zrender/vml/vml\\' to support IE8');\n    }\n\n    rendererType = 'vml';\n  } else if (!rendererType || !painterCtors[rendererType]) {\n    rendererType = 'canvas';\n  }\n\n  var painter = new painterCtors[rendererType](dom, storage, opts);\n  this.storage = storage;\n  this.painter = painter;\n  var handerProxy = !env.node ? new HandlerProxy(painter.getViewportRoot()) : null;\n  this.handler = new Handler(storage, painter, handerProxy, painter.root);\n  /**\n   * @type {module:zrender/animation/Animation}\n   */\n\n  this.animation = new Animation({\n    stage: {\n      update: zrUtil.bind(this.flush, this)\n    }\n  });\n  this.animation.start();\n  /**\n   * @type {boolean}\n   * @private\n   */\n\n  this._needsRefresh; // 修改 storage.delFromStorage, 每次删除元素之前删除动画\n  // FIXME 有点ugly\n\n  var oldDelFromStorage = storage.delFromStorage;\n  var oldAddToStorage = storage.addToStorage;\n\n  storage.delFromStorage = function (el) {\n    oldDelFromStorage.call(storage, el);\n    el && el.removeSelfFromZr(self);\n  };\n\n  storage.addToStorage = function (el) {\n    oldAddToStorage.call(storage, el);\n    el.addSelfToZr(self);\n  };\n};\n\nZRender.prototype = {\n  constructor: ZRender,\n\n  /**\n   * 获取实例唯一标识\n   * @return {string}\n   */\n  getId: function () {\n    return this.id;\n  },\n\n  /**\n   * 添加元素\n   * @param  {module:zrender/Element} el\n   */\n  add: function (el) {\n    this.storage.addRoot(el);\n    this._needsRefresh = true;\n  },\n\n  /**\n   * 删除元素\n   * @param  {module:zrender/Element} el\n   */\n  remove: function (el) {\n    this.storage.delRoot(el);\n    this._needsRefresh = true;\n  },\n\n  /**\n   * Change configuration of layer\n   * @param {string} zLevel\n   * @param {Object} config\n   * @param {string} [config.clearColor=0] Clear color\n   * @param {string} [config.motionBlur=false] If enable motion blur\n   * @param {number} [config.lastFrameAlpha=0.7] Motion blur factor. Larger value cause longer trailer\n  */\n  configLayer: function (zLevel, config) {\n    this.painter.configLayer(zLevel, config);\n    this._needsRefresh = true;\n  },\n\n  /**\n   * Repaint the canvas immediately\n   */\n  refreshImmediately: function () {\n    // var start = new Date();\n    // Clear needsRefresh ahead to avoid something wrong happens in refresh\n    // Or it will cause zrender refreshes again and again.\n    this._needsRefresh = false;\n    this.painter.refresh();\n    /**\n     * Avoid trigger zr.refresh in Element#beforeUpdate hook\n     */\n\n    this._needsRefresh = false; // var end = new Date();\n    // var log = document.getElementById('log');\n    // if (log) {\n    //     log.innerHTML = log.innerHTML + '<br>' + (end - start);\n    // }\n  },\n\n  /**\n   * Mark and repaint the canvas in the next frame of browser\n   */\n  refresh: function () {\n    this._needsRefresh = true;\n  },\n\n  /**\n   * Perform all refresh\n   */\n  flush: function () {\n    if (this._needsRefresh) {\n      this.refreshImmediately();\n    }\n\n    if (this._needsRefreshHover) {\n      this.refreshHoverImmediately();\n    }\n  },\n\n  /**\n   * Add element to hover layer\n   * @param  {module:zrender/Element} el\n   * @param {Object} style\n   */\n  addHover: function (el, style) {\n    if (this.painter.addHover) {\n      this.painter.addHover(el, style);\n      this.refreshHover();\n    }\n  },\n\n  /**\n   * Add element from hover layer\n   * @param  {module:zrender/Element} el\n   */\n  removeHover: function (el) {\n    if (this.painter.removeHover) {\n      this.painter.removeHover(el);\n      this.refreshHover();\n    }\n  },\n\n  /**\n   * Clear all hover elements in hover layer\n   * @param  {module:zrender/Element} el\n   */\n  clearHover: function () {\n    if (this.painter.clearHover) {\n      this.painter.clearHover();\n      this.refreshHover();\n    }\n  },\n\n  /**\n   * Refresh hover in next frame\n   */\n  refreshHover: function () {\n    this._needsRefreshHover = true;\n  },\n\n  /**\n   * Refresh hover immediately\n   */\n  refreshHoverImmediately: function () {\n    this._needsRefreshHover = false;\n    this.painter.refreshHover && this.painter.refreshHover();\n  },\n\n  /**\n   * Resize the canvas.\n   * Should be invoked when container size is changed\n   * @param {Object} [opts]\n   * @param {number|string} [opts.width] Can be 'auto' (the same as null/undefined)\n   * @param {number|string} [opts.height] Can be 'auto' (the same as null/undefined)\n   */\n  resize: function (opts) {\n    opts = opts || {};\n    this.painter.resize(opts.width, opts.height);\n    this.handler.resize();\n  },\n\n  /**\n   * Stop and clear all animation immediately\n   */\n  clearAnimation: function () {\n    this.animation.clear();\n  },\n\n  /**\n   * Get container width\n   */\n  getWidth: function () {\n    return this.painter.getWidth();\n  },\n\n  /**\n   * Get container height\n   */\n  getHeight: function () {\n    return this.painter.getHeight();\n  },\n\n  /**\n   * Export the canvas as Base64 URL\n   * @param {string} type\n   * @param {string} [backgroundColor='#fff']\n   * @return {string} Base64 URL\n   */\n  // toDataURL: function(type, backgroundColor) {\n  //     return this.painter.getRenderedCanvas({\n  //         backgroundColor: backgroundColor\n  //     }).toDataURL(type);\n  // },\n\n  /**\n   * Converting a path to image.\n   * It has much better performance of drawing image rather than drawing a vector path.\n   * @param {module:zrender/graphic/Path} e\n   * @param {number} width\n   * @param {number} height\n   */\n  pathToImage: function (e, dpr) {\n    return this.painter.pathToImage(e, dpr);\n  },\n\n  /**\n   * Set default cursor\n   * @param {string} [cursorStyle='default'] 例如 crosshair\n   */\n  setCursorStyle: function (cursorStyle) {\n    this.handler.setCursorStyle(cursorStyle);\n  },\n\n  /**\n   * Find hovered element\n   * @param {number} x\n   * @param {number} y\n   * @return {Object} {target, topTarget}\n   */\n  findHover: function (x, y) {\n    return this.handler.findHover(x, y);\n  },\n\n  /**\n   * Bind event\n   *\n   * @param {string} eventName Event name\n   * @param {Function} eventHandler Handler function\n   * @param {Object} [context] Context object\n   */\n  on: function (eventName, eventHandler, context) {\n    this.handler.on(eventName, eventHandler, context);\n  },\n\n  /**\n   * Unbind event\n   * @param {string} eventName Event name\n   * @param {Function} [eventHandler] Handler function\n   */\n  off: function (eventName, eventHandler) {\n    this.handler.off(eventName, eventHandler);\n  },\n\n  /**\n   * Trigger event manually\n   *\n   * @param {string} eventName Event name\n   * @param {event=} event Event object\n   */\n  trigger: function (eventName, event) {\n    this.handler.trigger(eventName, event);\n  },\n\n  /**\n   * Clear all objects and the canvas.\n   */\n  clear: function () {\n    this.storage.delRoot();\n    this.painter.clear();\n  },\n\n  /**\n   * Dispose self.\n   */\n  dispose: function () {\n    this.animation.stop();\n    this.clear();\n    this.storage.dispose();\n    this.painter.dispose();\n    this.handler.dispose();\n    this.animation = this.storage = this.painter = this.handler = null;\n    delInstance(this.id);\n  }\n};\nexports.version = version;\nexports.init = init;\nexports.dispose = dispose;\nexports.getInstance = getInstance;\nexports.registerPainter = registerPainter;\n\n/***/ }),\n/* 503 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n\n    var zrUtil = __webpack_require__(460);\n    var formatUtil = __webpack_require__(468);\n    var classUtil = __webpack_require__(471);\n    var modelUtil = __webpack_require__(469);\n    var ComponentModel = __webpack_require__(472);\n    var colorPaletteMixin = __webpack_require__(507);\n    var env = __webpack_require__(466);\n    var layout = __webpack_require__(475);\n\n    var set = classUtil.set;\n    var get = classUtil.get;\n    var encodeHTML = formatUtil.encodeHTML;\n    var addCommas = formatUtil.addCommas;\n\n    var SeriesModel = ComponentModel.extend({\n\n        type: 'series.__base__',\n\n        /**\n         * @readOnly\n         */\n        seriesIndex: 0,\n\n        // coodinateSystem will be injected in the echarts/CoordinateSystem\n        coordinateSystem: null,\n\n        /**\n         * @type {Object}\n         * @protected\n         */\n        defaultOption: null,\n\n        /**\n         * Data provided for legend\n         * @type {Function}\n         */\n        // PENDING\n        legendDataProvider: null,\n\n        /**\n         * Access path of color for visual\n         */\n        visualColorAccessPath: 'itemStyle.normal.color',\n\n        /**\n         * Support merge layout params.\n         * Only support 'box' now (left/right/top/bottom/width/height).\n         * @type {string|Object} Object can be {ignoreSize: true}\n         * @readOnly\n         */\n        layoutMode: null,\n\n        init: function (option, parentModel, ecModel, extraOpt) {\n\n            /**\n             * @type {number}\n             * @readOnly\n             */\n            this.seriesIndex = this.componentIndex;\n\n            this.mergeDefaultAndTheme(option, ecModel);\n\n            /**\n             * @type {module:echarts/data/List|module:echarts/data/Tree|module:echarts/data/Graph}\n             * @private\n             */\n            set(this, 'dataBeforeProcessed', this.getInitialData(option, ecModel));\n\n            // If we reverse the order (make data firstly, and then make\n            // dataBeforeProcessed by cloneShallow), cloneShallow will\n            // cause data.graph.data !== data when using\n            // module:echarts/data/Graph or module:echarts/data/Tree.\n            // See module:echarts/data/helper/linkList\n            this.restoreData();\n        },\n\n        /**\n         * Util for merge default and theme to option\n         * @param  {Object} option\n         * @param  {module:echarts/model/Global} ecModel\n         */\n        mergeDefaultAndTheme: function (option, ecModel) {\n            var layoutMode = this.layoutMode;\n            var inputPositionParams = layoutMode\n                ? layout.getLayoutParams(option) : {};\n\n            zrUtil.merge(\n                option,\n                ecModel.getTheme().get(this.subType)\n            );\n            zrUtil.merge(option, this.getDefaultOption());\n\n            // Default label emphasis `position` and `show`\n            // FIXME Set label in mergeOption\n            modelUtil.defaultEmphasis(option.label, modelUtil.LABEL_OPTIONS);\n\n            this.fillDataTextStyle(option.data);\n\n            if (layoutMode) {\n                layout.mergeLayoutParam(option, inputPositionParams, layoutMode);\n            }\n        },\n\n        mergeOption: function (newSeriesOption, ecModel) {\n            newSeriesOption = zrUtil.merge(this.option, newSeriesOption, true);\n            this.fillDataTextStyle(newSeriesOption.data);\n\n            var layoutMode = this.layoutMode;\n            if (layoutMode) {\n                layout.mergeLayoutParam(this.option, newSeriesOption, layoutMode);\n            }\n\n            var data = this.getInitialData(newSeriesOption, ecModel);\n            // TODO Merge data?\n            if (data) {\n                set(this, 'data', data);\n                set(this, 'dataBeforeProcessed', data.cloneShallow());\n            }\n        },\n\n        fillDataTextStyle: function (data) {\n            // Default data label emphasis `position` and `show`\n            // FIXME Tree structure data ?\n            // FIXME Performance ?\n            if (data) {\n                for (var i = 0; i < data.length; i++) {\n                    if (data[i] && data[i].label) {\n                        modelUtil.defaultEmphasis(data[i].label, modelUtil.LABEL_OPTIONS);\n                    }\n                }\n            }\n        },\n\n        /**\n         * Init a data structure from data related option in series\n         * Must be overwritten\n         */\n        getInitialData: function () {},\n\n        /**\n         * @param {string} [dataType]\n         * @return {module:echarts/data/List}\n         */\n        getData: function (dataType) {\n            var data = get(this, 'data');\n            return dataType == null ? data : data.getLinkedData(dataType);\n        },\n\n        /**\n         * @param {module:echarts/data/List} data\n         */\n        setData: function (data) {\n            set(this, 'data', data);\n        },\n\n        /**\n         * Get data before processed\n         * @return {module:echarts/data/List}\n         */\n        getRawData: function () {\n            return get(this, 'dataBeforeProcessed');\n        },\n\n        /**\n         * Coord dimension to data dimension.\n         *\n         * By default the result is the same as dimensions of series data.\n         * But in some series data dimensions are different from coord dimensions (i.e.\n         * candlestick and boxplot). Override this method to handle those cases.\n         *\n         * Coord dimension to data dimension can be one-to-many\n         *\n         * @param {string} coordDim\n         * @return {Array.<string>} dimensions on the axis.\n         */\n        coordDimToDataDim: function (coordDim) {\n            return [coordDim];\n        },\n\n        /**\n         * Convert data dimension to coord dimension.\n         *\n         * @param {string|number} dataDim\n         * @return {string}\n         */\n        dataDimToCoordDim: function (dataDim) {\n            return dataDim;\n        },\n\n        /**\n         * Get base axis if has coordinate system and has axis.\n         * By default use coordSys.getBaseAxis();\n         * Can be overrided for some chart.\n         * @return {type} description\n         */\n        getBaseAxis: function () {\n            var coordSys = this.coordinateSystem;\n            return coordSys && coordSys.getBaseAxis && coordSys.getBaseAxis();\n        },\n\n        // FIXME\n        /**\n         * Default tooltip formatter\n         *\n         * @param {number} dataIndex\n         * @param {boolean} [multipleSeries=false]\n         * @param {number} [dataType]\n         */\n        formatTooltip: function (dataIndex, multipleSeries, dataType) {\n            function formatArrayValue(value) {\n                var result = [];\n\n                zrUtil.each(value, function (val, idx) {\n                    var dimInfo = data.getDimensionInfo(idx);\n                    var dimType = dimInfo && dimInfo.type;\n                    var valStr;\n\n                    if (dimType === 'ordinal') {\n                        valStr = val + '';\n                    }\n                    else if (dimType === 'time') {\n                        valStr = multipleSeries ? '' : formatUtil.formatTime('yyyy/MM/dd hh:mm:ss', val);\n                    }\n                    else {\n                        valStr = addCommas(val);\n                    }\n\n                    valStr && result.push(valStr);\n                });\n\n                return result.join(', ');\n            }\n\n            var data = get(this, 'data');\n\n            var value = this.getRawValue(dataIndex);\n            var formattedValue = encodeHTML(\n                zrUtil.isArray(value) ? formatArrayValue(value) : addCommas(value)\n            );\n            var name = data.getName(dataIndex);\n\n            var color = data.getItemVisual(dataIndex, 'color');\n            if (zrUtil.isObject(color) && color.colorStops) {\n                color = (color.colorStops[0] || {}).color;\n            }\n            color = color || 'transparent';\n\n            var colorEl = '<span style=\"display:inline-block;margin-right:5px;'\n                + 'border-radius:10px;width:9px;height:9px;background-color:' + encodeHTML(color) + '\"></span>';\n\n            var seriesName = this.name;\n            // FIXME\n            if (seriesName === '\\0-') {\n                // Not show '-'\n                seriesName = '';\n            }\n            return !multipleSeries\n                ? ((seriesName && encodeHTML(seriesName) + '<br />') + colorEl\n                    + (name\n                        ? encodeHTML(name) + ' : ' + formattedValue\n                        : formattedValue\n                    )\n                  )\n                : (colorEl + encodeHTML(this.name) + ' : ' + formattedValue);\n        },\n\n        /**\n         * @return {boolean}\n         */\n        isAnimationEnabled: function () {\n            if (env.node) {\n                return false;\n            }\n\n            var animationEnabled = this.getShallow('animation');\n            if (animationEnabled) {\n                if (this.getData().count() > this.getShallow('animationThreshold')) {\n                    animationEnabled = false;\n                }\n            }\n            return animationEnabled;\n        },\n\n        restoreData: function () {\n            set(this, 'data', get(this, 'dataBeforeProcessed').cloneShallow());\n        },\n\n        getColorFromPalette: function (name, scope) {\n            var ecModel = this.ecModel;\n            // PENDING\n            var color = colorPaletteMixin.getColorFromPalette.call(this, name, scope);\n            if (!color) {\n                color = ecModel.getColorFromPalette(name, scope);\n            }\n            return color;\n        },\n\n        /**\n         * Get data indices for show tooltip content. See tooltip.\n         * @abstract\n         * @param {Array.<string>|string} dim\n         * @param {Array.<number>} value\n         * @param {module:echarts/coord/single/SingleAxis} baseAxis\n         * @return {Array.<number>} data indices.\n         */\n        getAxisTooltipDataIndex: null,\n\n        /**\n         * See tooltip.\n         * @abstract\n         * @param {number} dataIndex\n         * @return {Array.<number>} Point of tooltip. null/undefined can be returned.\n         */\n        getTooltipPosition: null\n    });\n\n    zrUtil.mixin(SeriesModel, modelUtil.dataFormatMixin);\n    zrUtil.mixin(SeriesModel, colorPaletteMixin);\n\n    module.exports = SeriesModel;\n\n\n/***/ }),\n/* 504 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * @module echarts/chart/helper/Symbol\n */\n\n\n    var zrUtil = __webpack_require__(460);\n    var symbolUtil = __webpack_require__(508);\n    var graphic = __webpack_require__(464);\n    var numberUtil = __webpack_require__(465);\n\n    function getSymbolSize(data, idx) {\n        var symbolSize = data.getItemVisual(idx, 'symbolSize');\n        return symbolSize instanceof Array\n            ? symbolSize.slice()\n            : [+symbolSize, +symbolSize];\n    }\n\n    function getScale(symbolSize) {\n        return [symbolSize[0] / 2, symbolSize[1] / 2];\n    }\n\n    /**\n     * @constructor\n     * @alias {module:echarts/chart/helper/Symbol}\n     * @param {module:echarts/data/List} data\n     * @param {number} idx\n     * @extends {module:zrender/graphic/Group}\n     */\n    function Symbol(data, idx, seriesScope) {\n        graphic.Group.call(this);\n\n        this.updateData(data, idx, seriesScope);\n    }\n\n    var symbolProto = Symbol.prototype;\n\n    function driftSymbol(dx, dy) {\n        this.parent.drift(dx, dy);\n    }\n\n    symbolProto._createSymbol = function (symbolType, data, idx, symbolSize) {\n        // Remove paths created before\n        this.removeAll();\n\n        var seriesModel = data.hostModel;\n        var color = data.getItemVisual(idx, 'color');\n\n        // var symbolPath = symbolUtil.createSymbol(\n        //     symbolType, -0.5, -0.5, 1, 1, color\n        // );\n        // If width/height are set too small (e.g., set to 1) on ios10\n        // and macOS Sierra, a circle stroke become a rect, no matter what\n        // the scale is set. So we set width/height as 2. See #4150.\n        var symbolPath = symbolUtil.createSymbol(\n            symbolType, -1, -1, 2, 2, color\n        );\n\n        symbolPath.attr({\n            z2: 100,\n            culling: true,\n            scale: [0, 0]\n        });\n        // Rewrite drift method\n        symbolPath.drift = driftSymbol;\n\n        graphic.initProps(symbolPath, {\n            scale: getScale(symbolSize)\n        }, seriesModel, idx);\n        this._symbolType = symbolType;\n\n        this.add(symbolPath);\n    };\n\n    /**\n     * Stop animation\n     * @param {boolean} toLastFrame\n     */\n    symbolProto.stopSymbolAnimation = function (toLastFrame) {\n        this.childAt(0).stopAnimation(toLastFrame);\n    };\n\n    /**\n     * Get symbol path element\n     */\n    symbolProto.getSymbolPath = function () {\n        return this.childAt(0);\n    };\n\n    /**\n     * Get scale(aka, current symbol size).\n     * Including the change caused by animation\n     */\n    symbolProto.getScale = function () {\n        return this.childAt(0).scale;\n    };\n\n    /**\n     * Highlight symbol\n     */\n    symbolProto.highlight = function () {\n        this.childAt(0).trigger('emphasis');\n    };\n\n    /**\n     * Downplay symbol\n     */\n    symbolProto.downplay = function () {\n        this.childAt(0).trigger('normal');\n    };\n\n    /**\n     * @param {number} zlevel\n     * @param {number} z\n     */\n    symbolProto.setZ = function (zlevel, z) {\n        var symbolPath = this.childAt(0);\n        symbolPath.zlevel = zlevel;\n        symbolPath.z = z;\n    };\n\n    symbolProto.setDraggable = function (draggable) {\n        var symbolPath = this.childAt(0);\n        symbolPath.draggable = draggable;\n        symbolPath.cursor = draggable ? 'move' : 'pointer';\n    };\n\n    /**\n     * Update symbol properties\n     * @param  {module:echarts/data/List} data\n     * @param  {number} idx\n     */\n    symbolProto.updateData = function (data, idx, seriesScope) {\n        this.silent = false;\n\n        var symbolType = data.getItemVisual(idx, 'symbol') || 'circle';\n        var seriesModel = data.hostModel;\n        var symbolSize = getSymbolSize(data, idx);\n\n        if (symbolType !== this._symbolType) {\n            this._createSymbol(symbolType, data, idx, symbolSize);\n        }\n        else {\n            var symbolPath = this.childAt(0);\n            graphic.updateProps(symbolPath, {\n                scale: getScale(symbolSize)\n            }, seriesModel, idx);\n        }\n        this._updateCommon(data, idx, symbolSize, seriesScope);\n        this._seriesModel = seriesModel;\n    };\n\n    // Update common properties\n    var normalStyleAccessPath = ['itemStyle', 'normal'];\n    var emphasisStyleAccessPath = ['itemStyle', 'emphasis'];\n    var normalLabelAccessPath = ['label', 'normal'];\n    var emphasisLabelAccessPath = ['label', 'emphasis'];\n\n    symbolProto._updateCommon = function (data, idx, symbolSize, seriesScope) {\n        var symbolPath = this.childAt(0);\n        var seriesModel = data.hostModel;\n        var color = data.getItemVisual(idx, 'color');\n\n        // Reset style\n        if (symbolPath.type !== 'image') {\n            symbolPath.useStyle({\n                strokeNoScale: true\n            });\n        }\n\n        seriesScope = seriesScope || null;\n\n        var itemStyle = seriesScope && seriesScope.itemStyle;\n        var hoverItemStyle = seriesScope && seriesScope.hoverItemStyle;\n        var symbolRotate = seriesScope && seriesScope.symbolRotate;\n        var symbolOffset = seriesScope && seriesScope.symbolOffset;\n        var labelModel = seriesScope && seriesScope.labelModel;\n        var hoverLabelModel = seriesScope && seriesScope.hoverLabelModel;\n        var hoverAnimation = seriesScope && seriesScope.hoverAnimation;\n\n        if (!seriesScope || data.hasItemOption) {\n            var itemModel = data.getItemModel(idx);\n\n            // Color must be excluded.\n            // Because symbol provide setColor individually to set fill and stroke\n            itemStyle = itemModel.getModel(normalStyleAccessPath).getItemStyle(['color']);\n            hoverItemStyle = itemModel.getModel(emphasisStyleAccessPath).getItemStyle();\n\n            symbolRotate = itemModel.getShallow('symbolRotate');\n            symbolOffset = itemModel.getShallow('symbolOffset');\n\n            labelModel = itemModel.getModel(normalLabelAccessPath);\n            hoverLabelModel = itemModel.getModel(emphasisLabelAccessPath);\n            hoverAnimation = itemModel.getShallow('hoverAnimation');\n        }\n        else {\n            hoverItemStyle = zrUtil.extend({}, hoverItemStyle);\n        }\n\n        var elStyle = symbolPath.style;\n\n        symbolPath.attr('rotation', (symbolRotate || 0) * Math.PI / 180 || 0);\n\n        if (symbolOffset) {\n            symbolPath.attr('position', [\n                numberUtil.parsePercent(symbolOffset[0], symbolSize[0]),\n                numberUtil.parsePercent(symbolOffset[1], symbolSize[1])\n            ]);\n        }\n\n        // PENDING setColor before setStyle!!!\n        symbolPath.setColor(color);\n\n        symbolPath.setStyle(itemStyle);\n\n        var opacity = data.getItemVisual(idx, 'opacity');\n        if (opacity != null) {\n            elStyle.opacity = opacity;\n        }\n\n        // Get last value dim\n        var dimensions = data.dimensions.slice();\n        var valueDim;\n        var dataType;\n        while (dimensions.length && (\n            valueDim = dimensions.pop(),\n            dataType = data.getDimensionInfo(valueDim).type,\n            dataType === 'ordinal' || dataType === 'time'\n        )) {} // jshint ignore:line\n\n        if (valueDim != null && labelModel.getShallow('show')) {\n            graphic.setText(elStyle, labelModel, color);\n            elStyle.text = zrUtil.retrieve(\n                seriesModel.getFormattedLabel(idx, 'normal'),\n                data.get(valueDim, idx)\n            );\n        }\n        else {\n            elStyle.text = '';\n        }\n\n        if (valueDim != null && hoverLabelModel.getShallow('show')) {\n            graphic.setText(hoverItemStyle, hoverLabelModel, color);\n            hoverItemStyle.text = zrUtil.retrieve(\n                seriesModel.getFormattedLabel(idx, 'emphasis'),\n                data.get(valueDim, idx)\n            );\n        }\n        else {\n            hoverItemStyle.text = '';\n        }\n\n        symbolPath.off('mouseover')\n            .off('mouseout')\n            .off('emphasis')\n            .off('normal');\n\n        symbolPath.hoverStyle = hoverItemStyle;\n\n        graphic.setHoverStyle(symbolPath);\n\n        var scale = getScale(symbolSize);\n\n        if (hoverAnimation && seriesModel.isAnimationEnabled()) {\n            var onEmphasis = function() {\n                var ratio = scale[1] / scale[0];\n                this.animateTo({\n                    scale: [\n                        Math.max(scale[0] * 1.1, scale[0] + 3),\n                        Math.max(scale[1] * 1.1, scale[1] + 3 * ratio)\n                    ]\n                }, 400, 'elasticOut');\n            };\n            var onNormal = function() {\n                this.animateTo({\n                    scale: scale\n                }, 400, 'elasticOut');\n            };\n            symbolPath.on('mouseover', onEmphasis)\n                .on('mouseout', onNormal)\n                .on('emphasis', onEmphasis)\n                .on('normal', onNormal);\n        }\n    };\n\n    symbolProto.fadeOut = function (cb) {\n        var symbolPath = this.childAt(0);\n        // Avoid mistaken hover when fading out\n        this.silent = true;\n        // Not show text when animating\n        symbolPath.style.text = '';\n        graphic.updateProps(symbolPath, {\n            scale: [0, 0]\n        }, this._seriesModel, this.dataIndex, cb);\n    };\n\n    zrUtil.inherits(Symbol, graphic.Group);\n\n    module.exports = Symbol;\n\n\n/***/ }),\n/* 505 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n\n    var ComponentModel = __webpack_require__(472);\n    var zrUtil = __webpack_require__(460);\n    var axisModelCreator = __webpack_require__(567);\n\n    var AxisModel = ComponentModel.extend({\n\n        type: 'cartesian2dAxis',\n\n        /**\n         * @type {module:echarts/coord/cartesian/Axis2D}\n         */\n        axis: null,\n\n        /**\n         * @override\n         */\n        init: function () {\n            AxisModel.superApply(this, 'init', arguments);\n            this.resetRange();\n        },\n\n        /**\n         * @override\n         */\n        mergeOption: function () {\n            AxisModel.superApply(this, 'mergeOption', arguments);\n            this.resetRange();\n        },\n\n        /**\n         * @override\n         */\n        restoreData: function () {\n            AxisModel.superApply(this, 'restoreData', arguments);\n            this.resetRange();\n        },\n\n        /**\n         * @override\n         * @return {module:echarts/model/Component}\n         */\n        getCoordSysModel: function () {\n            return this.ecModel.queryComponents({\n                mainType: 'grid',\n                index: this.option.gridIndex,\n                id: this.option.gridId\n            })[0];\n        }\n\n    });\n\n    function getAxisType(axisDim, option) {\n        // Default axis with data is category axis\n        return option.type || (option.data ? 'category' : 'value');\n    }\n\n    zrUtil.merge(AxisModel.prototype, __webpack_require__(566));\n\n    var extraOption = {\n        // gridIndex: 0,\n        // gridId: '',\n\n        // Offset is for multiple axis on the same position\n        offset: 0\n    };\n\n    axisModelCreator('x', AxisModel, getAxisType, extraOption);\n    axisModelCreator('y', AxisModel, getAxisType, extraOption);\n\n    module.exports = AxisModel;\n\n\n/***/ }),\n/* 506 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/* WEBPACK VAR INJECTION */(function(global) {/**\n * List for data storage\n * @module echarts/data/List\n */\n\n\n    var UNDEFINED = 'undefined';\n    var globalObj = typeof window === 'undefined' ? global : window;\n    var Float64Array = typeof globalObj.Float64Array === UNDEFINED\n        ? Array : globalObj.Float64Array;\n    var Int32Array = typeof globalObj.Int32Array === UNDEFINED\n        ? Array : globalObj.Int32Array;\n\n    var dataCtors = {\n        'float': Float64Array,\n        'int': Int32Array,\n        // Ordinal data type can be string or int\n        'ordinal': Array,\n        'number': Array,\n        'time': Array\n    };\n\n    var Model = __webpack_require__(470);\n    var DataDiffer = __webpack_require__(573);\n\n    var zrUtil = __webpack_require__(460);\n    var modelUtil = __webpack_require__(469);\n    var isObject = zrUtil.isObject;\n\n    var TRANSFERABLE_PROPERTIES = [\n        'stackedOn', 'hasItemOption', '_nameList', '_idList', '_rawData'\n    ];\n\n    var transferProperties = function (a, b) {\n        zrUtil.each(TRANSFERABLE_PROPERTIES.concat(b.__wrappedMethods || []), function (propName) {\n            if (b.hasOwnProperty(propName)) {\n                a[propName] = b[propName];\n            }\n        });\n\n        a.__wrappedMethods = b.__wrappedMethods;\n    };\n\n    /**\n     * @constructor\n     * @alias module:echarts/data/List\n     *\n     * @param {Array.<string>} dimensions\n     *        Dimensions should be concrete names like x, y, z, lng, lat, angle, radius\n     * @param {module:echarts/model/Model} hostModel\n     */\n    var List = function (dimensions, hostModel) {\n\n        dimensions = dimensions || ['x', 'y'];\n\n        var dimensionInfos = {};\n        var dimensionNames = [];\n        for (var i = 0; i < dimensions.length; i++) {\n            var dimensionName;\n            var dimensionInfo = {};\n            if (typeof dimensions[i] === 'string') {\n                dimensionName = dimensions[i];\n                dimensionInfo = {\n                    name: dimensionName,\n                    stackable: false,\n                    // Type can be 'float', 'int', 'number'\n                    // Default is number, Precision of float may not enough\n                    type: 'number'\n                };\n            }\n            else {\n                dimensionInfo = dimensions[i];\n                dimensionName = dimensionInfo.name;\n                dimensionInfo.type = dimensionInfo.type || 'number';\n            }\n            dimensionNames.push(dimensionName);\n            dimensionInfos[dimensionName] = dimensionInfo;\n        }\n        /**\n         * @readOnly\n         * @type {Array.<string>}\n         */\n        this.dimensions = dimensionNames;\n\n        /**\n         * Infomation of each data dimension, like data type.\n         * @type {Object}\n         */\n        this._dimensionInfos = dimensionInfos;\n\n        /**\n         * @type {module:echarts/model/Model}\n         */\n        this.hostModel = hostModel;\n\n        /**\n         * @type {module:echarts/model/Model}\n         */\n        this.dataType;\n\n        /**\n         * Indices stores the indices of data subset after filtered.\n         * This data subset will be used in chart.\n         * @type {Array.<number>}\n         * @readOnly\n         */\n        this.indices = [];\n\n        /**\n         * Data storage\n         * @type {Object.<key, TypedArray|Array>}\n         * @private\n         */\n        this._storage = {};\n\n        /**\n         * @type {Array.<string>}\n         */\n        this._nameList = [];\n        /**\n         * @type {Array.<string>}\n         */\n        this._idList = [];\n        /**\n         * Models of data option is stored sparse for optimizing memory cost\n         * @type {Array.<module:echarts/model/Model>}\n         * @private\n         */\n        this._optionModels = [];\n\n        /**\n         * @param {module:echarts/data/List}\n         */\n        this.stackedOn = null;\n\n        /**\n         * Global visual properties after visual coding\n         * @type {Object}\n         * @private\n         */\n        this._visual = {};\n\n        /**\n         * Globel layout properties.\n         * @type {Object}\n         * @private\n         */\n        this._layout = {};\n\n        /**\n         * Item visual properties after visual coding\n         * @type {Array.<Object>}\n         * @private\n         */\n        this._itemVisuals = [];\n\n        /**\n         * Item layout properties after layout\n         * @type {Array.<Object>}\n         * @private\n         */\n        this._itemLayouts = [];\n\n        /**\n         * Graphic elemnents\n         * @type {Array.<module:zrender/Element>}\n         * @private\n         */\n        this._graphicEls = [];\n\n        /**\n         * @type {Array.<Array|Object>}\n         * @private\n         */\n        this._rawData;\n\n        /**\n         * @type {Object}\n         * @private\n         */\n        this._extent;\n    };\n\n    var listProto = List.prototype;\n\n    listProto.type = 'list';\n    /**\n     * If each data item has it's own option\n     * @type {boolean}\n     */\n    listProto.hasItemOption = true;\n\n    /**\n     * Get dimension name\n     * @param {string|number} dim\n     *        Dimension can be concrete names like x, y, z, lng, lat, angle, radius\n     *        Or a ordinal number. For example getDimensionInfo(0) will return 'x' or 'lng' or 'radius'\n     * @return {string} Concrete dim name.\n     */\n    listProto.getDimension = function (dim) {\n        if (!isNaN(dim)) {\n            dim = this.dimensions[dim] || dim;\n        }\n        return dim;\n    };\n    /**\n     * Get type and stackable info of particular dimension\n     * @param {string|number} dim\n     *        Dimension can be concrete names like x, y, z, lng, lat, angle, radius\n     *        Or a ordinal number. For example getDimensionInfo(0) will return 'x' or 'lng' or 'radius'\n     */\n    listProto.getDimensionInfo = function (dim) {\n        return zrUtil.clone(this._dimensionInfos[this.getDimension(dim)]);\n    };\n\n    /**\n     * Initialize from data\n     * @param {Array.<Object|number|Array>} data\n     * @param {Array.<string>} [nameList]\n     * @param {Function} [dimValueGetter] (dataItem, dimName, dataIndex, dimIndex) => number\n     */\n    listProto.initData = function (data, nameList, dimValueGetter) {\n        data = data || [];\n\n        if (__DEV__) {\n            if (!zrUtil.isArray(data)) {\n                throw new Error('Invalid data.');\n            }\n        }\n\n        this._rawData = data;\n\n        // Clear\n        var storage = this._storage = {};\n        var indices = this.indices = [];\n\n        var dimensions = this.dimensions;\n        var size = data.length;\n        var dimensionInfoMap = this._dimensionInfos;\n\n        var idList = [];\n        var nameRepeatCount = {};\n\n        nameList = nameList || [];\n\n        // Init storage\n        for (var i = 0; i < dimensions.length; i++) {\n            var dimInfo = dimensionInfoMap[dimensions[i]];\n            var DataCtor = dataCtors[dimInfo.type];\n            storage[dimensions[i]] = new DataCtor(size);\n        }\n\n        var self = this;\n        if (!dimValueGetter) {\n            self.hasItemOption = false;\n        }\n        // Default dim value getter\n        dimValueGetter = dimValueGetter || function (dataItem, dimName, dataIndex, dimIndex) {\n            var value = modelUtil.getDataItemValue(dataItem);\n            // If any dataItem is like { value: 10 }\n            if (modelUtil.isDataItemOption(dataItem)) {\n                self.hasItemOption = true;\n            }\n            return modelUtil.converDataValue(\n                (value instanceof Array)\n                    ? value[dimIndex]\n                    // If value is a single number or something else not array.\n                    : value,\n                dimensionInfoMap[dimName]\n            );\n        };\n\n        for (var idx = 0; idx < data.length; idx++) {\n            var dataItem = data[idx];\n            // Each data item is value\n            // [1, 2]\n            // 2\n            // Bar chart, line chart which uses category axis\n            // only gives the 'y' value. 'x' value is the indices of cateogry\n            // Use a tempValue to normalize the value to be a (x, y) value\n\n            // Store the data by dimensions\n            for (var k = 0; k < dimensions.length; k++) {\n                var dim = dimensions[k];\n                var dimStorage = storage[dim];\n                // PENDING NULL is empty or zero\n                dimStorage[idx] = dimValueGetter(dataItem, dim, idx, k);\n            }\n\n            indices.push(idx);\n        }\n\n        // Use the name in option and create id\n        for (var i = 0; i < data.length; i++) {\n            if (!nameList[i]) {\n                if (data[i] && data[i].name != null) {\n                    nameList[i] = data[i].name;\n                }\n            }\n            var name = nameList[i] || '';\n            // Try using the id in option\n            var id = data[i] && data[i].id;\n\n            if (!id && name) {\n                // Use name as id and add counter to avoid same name\n                nameRepeatCount[name] = nameRepeatCount[name] || 0;\n                id = name;\n                if (nameRepeatCount[name] > 0) {\n                    id += '__ec__' + nameRepeatCount[name];\n                }\n                nameRepeatCount[name]++;\n            }\n            id && (idList[i] = id);\n        }\n\n        this._nameList = nameList;\n        this._idList = idList;\n    };\n\n    /**\n     * @return {number}\n     */\n    listProto.count = function () {\n        return this.indices.length;\n    };\n\n    /**\n     * Get value. Return NaN if idx is out of range.\n     * @param {string} dim Dim must be concrete name.\n     * @param {number} idx\n     * @param {boolean} stack\n     * @return {number}\n     */\n    listProto.get = function (dim, idx, stack) {\n        var storage = this._storage;\n        var dataIndex = this.indices[idx];\n\n        // If value not exists\n        if (dataIndex == null) {\n            return NaN;\n        }\n\n        var value = storage[dim] && storage[dim][dataIndex];\n        // FIXME ordinal data type is not stackable\n        if (stack) {\n            var dimensionInfo = this._dimensionInfos[dim];\n            if (dimensionInfo && dimensionInfo.stackable) {\n                var stackedOn = this.stackedOn;\n                while (stackedOn) {\n                    // Get no stacked data of stacked on\n                    var stackedValue = stackedOn.get(dim, idx);\n                    // Considering positive stack, negative stack and empty data\n                    if ((value >= 0 && stackedValue > 0)  // Positive stack\n                        || (value <= 0 && stackedValue < 0) // Negative stack\n                    ) {\n                        value += stackedValue;\n                    }\n                    stackedOn = stackedOn.stackedOn;\n                }\n            }\n        }\n        return value;\n    };\n\n    /**\n     * Get value for multi dimensions.\n     * @param {Array.<string>} [dimensions] If ignored, using all dimensions.\n     * @param {number} idx\n     * @param {boolean} stack\n     * @return {number}\n     */\n    listProto.getValues = function (dimensions, idx, stack) {\n        var values = [];\n\n        if (!zrUtil.isArray(dimensions)) {\n            stack = idx;\n            idx = dimensions;\n            dimensions = this.dimensions;\n        }\n\n        for (var i = 0, len = dimensions.length; i < len; i++) {\n            values.push(this.get(dimensions[i], idx, stack));\n        }\n\n        return values;\n    };\n\n    /**\n     * If value is NaN. Inlcuding '-'\n     * @param {string} dim\n     * @param {number} idx\n     * @return {number}\n     */\n    listProto.hasValue = function (idx) {\n        var dimensions = this.dimensions;\n        var dimensionInfos = this._dimensionInfos;\n        for (var i = 0, len = dimensions.length; i < len; i++) {\n            if (\n                // Ordinal type can be string or number\n                dimensionInfos[dimensions[i]].type !== 'ordinal'\n                && isNaN(this.get(dimensions[i], idx))\n            ) {\n                return false;\n            }\n        }\n        return true;\n    };\n\n    /**\n     * Get extent of data in one dimension\n     * @param {string} dim\n     * @param {boolean} stack\n     * @param {Function} filter\n     */\n    listProto.getDataExtent = function (dim, stack, filter) {\n        dim = this.getDimension(dim);\n        var dimData = this._storage[dim];\n        var dimInfo = this.getDimensionInfo(dim);\n        stack = (dimInfo && dimInfo.stackable) && stack;\n        var dimExtent = (this._extent || (this._extent = {}))[dim + (!!stack)];\n        var value;\n        if (dimExtent) {\n            return dimExtent;\n        }\n        // var dimInfo = this._dimensionInfos[dim];\n        if (dimData) {\n            var min = Infinity;\n            var max = -Infinity;\n            // var isOrdinal = dimInfo.type === 'ordinal';\n            for (var i = 0, len = this.count(); i < len; i++) {\n                value = this.get(dim, i, stack);\n                // FIXME\n                // if (isOrdinal && typeof value === 'string') {\n                //     value = zrUtil.indexOf(dimData, value);\n                // }\n                if (!filter || filter(value, dim, i)) {\n                    value < min && (min = value);\n                    value > max && (max = value);\n                }\n            }\n            return (this._extent[dim + !!stack] = [min, max]);\n        }\n        else {\n            return [Infinity, -Infinity];\n        }\n    };\n\n    /**\n     * Get sum of data in one dimension\n     * @param {string} dim\n     * @param {boolean} stack\n     */\n    listProto.getSum = function (dim, stack) {\n        var dimData = this._storage[dim];\n        var sum = 0;\n        if (dimData) {\n            for (var i = 0, len = this.count(); i < len; i++) {\n                var value = this.get(dim, i, stack);\n                if (!isNaN(value)) {\n                    sum += value;\n                }\n            }\n        }\n        return sum;\n    };\n\n    /**\n     * Retreive the index with given value\n     * @param {number} idx\n     * @param {number} value\n     * @return {number}\n     */\n    // FIXME Precision of float value\n    listProto.indexOf = function (dim, value) {\n        var storage = this._storage;\n        var dimData = storage[dim];\n        var indices = this.indices;\n\n        if (dimData) {\n            for (var i = 0, len = indices.length; i < len; i++) {\n                var rawIndex = indices[i];\n                if (dimData[rawIndex] === value) {\n                    return i;\n                }\n            }\n        }\n        return -1;\n    };\n\n    /**\n     * Retreive the index with given name\n     * @param {number} idx\n     * @param {number} name\n     * @return {number}\n     */\n    listProto.indexOfName = function (name) {\n        var indices = this.indices;\n        var nameList = this._nameList;\n\n        for (var i = 0, len = indices.length; i < len; i++) {\n            var rawIndex = indices[i];\n            if (nameList[rawIndex] === name) {\n                return i;\n            }\n        }\n\n        return -1;\n    };\n\n    /**\n     * Retreive the index with given raw data index\n     * @param {number} idx\n     * @param {number} name\n     * @return {number}\n     */\n    listProto.indexOfRawIndex = function (rawIndex) {\n        // Indices are ascending\n        var indices = this.indices;\n\n        // If rawIndex === dataIndex\n        var rawDataIndex = indices[rawIndex];\n        if (rawDataIndex != null && rawDataIndex === rawIndex) {\n            return rawIndex;\n        }\n\n        var left = 0;\n        var right = indices.length - 1;\n        while (left <= right) {\n            var mid = (left + right) / 2 | 0;\n            if (indices[mid] < rawIndex) {\n                left = mid + 1;\n            }\n            else if (indices[mid] > rawIndex) {\n                right = mid - 1;\n            }\n            else {\n                return mid;\n            }\n        }\n        return -1;\n    };\n\n    /**\n     * Retreive the index of nearest value\n     * @param {string} dim\n     * @param {number} value\n     * @param {boolean} stack If given value is after stacked\n     * @param {number} [maxDistance=Infinity]\n     * @return {number}\n     */\n    listProto.indexOfNearest = function (dim, value, stack, maxDistance) {\n        var storage = this._storage;\n        var dimData = storage[dim];\n\n        if (maxDistance == null) {\n            maxDistance = Infinity;\n        }\n\n        var nearestIdx = -1;\n        if (dimData) {\n            var minDist = Number.MAX_VALUE;\n            for (var i = 0, len = this.count(); i < len; i++) {\n                var diff = value - this.get(dim, i, stack);\n                var dist = Math.abs(diff);\n                if (\n                    diff <= maxDistance\n                    && (dist < minDist\n                        // For the case of two data are same on xAxis, which has sequence data.\n                        // Show the nearest index\n                        // https://github.com/ecomfe/echarts/issues/2869\n                        || (dist === minDist && diff > 0)\n                    )\n                ) {\n                    minDist = dist;\n                    nearestIdx = i;\n                }\n            }\n        }\n        return nearestIdx;\n    };\n\n    /**\n     * Get raw data index\n     * @param {number} idx\n     * @return {number}\n     */\n    listProto.getRawIndex = function (idx) {\n        var rawIdx = this.indices[idx];\n        return rawIdx == null ? -1 : rawIdx;\n    };\n\n    /**\n     * Get raw data item\n     * @param {number} idx\n     * @return {number}\n     */\n    listProto.getRawDataItem = function (idx) {\n        return this._rawData[this.getRawIndex(idx)];\n    };\n\n    /**\n     * @param {number} idx\n     * @param {boolean} [notDefaultIdx=false]\n     * @return {string}\n     */\n    listProto.getName = function (idx) {\n        return this._nameList[this.indices[idx]] || '';\n    };\n\n    /**\n     * @param {number} idx\n     * @param {boolean} [notDefaultIdx=false]\n     * @return {string}\n     */\n    listProto.getId = function (idx) {\n        return this._idList[this.indices[idx]] || (this.getRawIndex(idx) + '');\n    };\n\n\n    function normalizeDimensions(dimensions) {\n        if (!zrUtil.isArray(dimensions)) {\n            dimensions = [dimensions];\n        }\n        return dimensions;\n    }\n\n    /**\n     * Data iteration\n     * @param {string|Array.<string>}\n     * @param {Function} cb\n     * @param {boolean} [stack=false]\n     * @param {*} [context=this]\n     *\n     * @example\n     *  list.each('x', function (x, idx) {});\n     *  list.each(['x', 'y'], function (x, y, idx) {});\n     *  list.each(function (idx) {})\n     */\n    listProto.each = function (dims, cb, stack, context) {\n        if (typeof dims === 'function') {\n            context = stack;\n            stack = cb;\n            cb = dims;\n            dims = [];\n        }\n\n        dims = zrUtil.map(normalizeDimensions(dims), this.getDimension, this);\n\n        var value = [];\n        var dimSize = dims.length;\n        var indices = this.indices;\n\n        context = context || this;\n\n        for (var i = 0; i < indices.length; i++) {\n            // Simple optimization\n            switch (dimSize) {\n                case 0:\n                    cb.call(context, i);\n                    break;\n                case 1:\n                    cb.call(context, this.get(dims[0], i, stack), i);\n                    break;\n                case 2:\n                    cb.call(context, this.get(dims[0], i, stack), this.get(dims[1], i, stack), i);\n                    break;\n                default:\n                    for (var k = 0; k < dimSize; k++) {\n                        value[k] = this.get(dims[k], i, stack);\n                    }\n                    // Index\n                    value[k] = i;\n                    cb.apply(context, value);\n            }\n        }\n    };\n\n    /**\n     * Data filter\n     * @param {string|Array.<string>}\n     * @param {Function} cb\n     * @param {boolean} [stack=false]\n     * @param {*} [context=this]\n     */\n    listProto.filterSelf = function (dimensions, cb, stack, context) {\n        if (typeof dimensions === 'function') {\n            context = stack;\n            stack = cb;\n            cb = dimensions;\n            dimensions = [];\n        }\n\n        dimensions = zrUtil.map(\n            normalizeDimensions(dimensions), this.getDimension, this\n        );\n\n        var newIndices = [];\n        var value = [];\n        var dimSize = dimensions.length;\n        var indices = this.indices;\n\n        context = context || this;\n\n        for (var i = 0; i < indices.length; i++) {\n            var keep;\n            // Simple optimization\n            if (dimSize === 1) {\n                keep = cb.call(\n                    context, this.get(dimensions[0], i, stack), i\n                );\n            }\n            else {\n                for (var k = 0; k < dimSize; k++) {\n                    value[k] = this.get(dimensions[k], i, stack);\n                }\n                value[k] = i;\n                keep = cb.apply(context, value);\n            }\n            if (keep) {\n                newIndices.push(indices[i]);\n            }\n        }\n\n        this.indices = newIndices;\n\n        // Reset data extent\n        this._extent = {};\n\n        return this;\n    };\n\n    /**\n     * Data mapping to a plain array\n     * @param {string|Array.<string>} [dimensions]\n     * @param {Function} cb\n     * @param {boolean} [stack=false]\n     * @param {*} [context=this]\n     * @return {Array}\n     */\n    listProto.mapArray = function (dimensions, cb, stack, context) {\n        if (typeof dimensions === 'function') {\n            context = stack;\n            stack = cb;\n            cb = dimensions;\n            dimensions = [];\n        }\n\n        var result = [];\n        this.each(dimensions, function () {\n            result.push(cb && cb.apply(this, arguments));\n        }, stack, context);\n        return result;\n    };\n\n    function cloneListForMapAndSample(original, excludeDimensions) {\n        var allDimensions = original.dimensions;\n        var list = new List(\n            zrUtil.map(allDimensions, original.getDimensionInfo, original),\n            original.hostModel\n        );\n        // FIXME If needs stackedOn, value may already been stacked\n        transferProperties(list, original);\n\n        var storage = list._storage = {};\n        var originalStorage = original._storage;\n        // Init storage\n        for (var i = 0; i < allDimensions.length; i++) {\n            var dim = allDimensions[i];\n            var dimStore = originalStorage[dim];\n            if (zrUtil.indexOf(excludeDimensions, dim) >= 0) {\n                storage[dim] = new dimStore.constructor(\n                    originalStorage[dim].length\n                );\n            }\n            else {\n                // Direct reference for other dimensions\n                storage[dim] = originalStorage[dim];\n            }\n        }\n        return list;\n    }\n\n    /**\n     * Data mapping to a new List with given dimensions\n     * @param {string|Array.<string>} dimensions\n     * @param {Function} cb\n     * @param {boolean} [stack=false]\n     * @param {*} [context=this]\n     * @return {Array}\n     */\n    listProto.map = function (dimensions, cb, stack, context) {\n        dimensions = zrUtil.map(\n            normalizeDimensions(dimensions), this.getDimension, this\n        );\n\n        var list = cloneListForMapAndSample(this, dimensions);\n        // Following properties are all immutable.\n        // So we can reference to the same value\n        var indices = list.indices = this.indices;\n\n        var storage = list._storage;\n\n        var tmpRetValue = [];\n        this.each(dimensions, function () {\n            var idx = arguments[arguments.length - 1];\n            var retValue = cb && cb.apply(this, arguments);\n            if (retValue != null) {\n                // a number\n                if (typeof retValue === 'number') {\n                    tmpRetValue[0] = retValue;\n                    retValue = tmpRetValue;\n                }\n                for (var i = 0; i < retValue.length; i++) {\n                    var dim = dimensions[i];\n                    var dimStore = storage[dim];\n                    var rawIdx = indices[idx];\n                    if (dimStore) {\n                        dimStore[rawIdx] = retValue[i];\n                    }\n                }\n            }\n        }, stack, context);\n\n        return list;\n    };\n\n    /**\n     * Large data down sampling on given dimension\n     * @param {string} dimension\n     * @param {number} rate\n     * @param {Function} sampleValue\n     * @param {Function} sampleIndex Sample index for name and id\n     */\n    listProto.downSample = function (dimension, rate, sampleValue, sampleIndex) {\n        var list = cloneListForMapAndSample(this, [dimension]);\n        var storage = this._storage;\n        var targetStorage = list._storage;\n\n        var originalIndices = this.indices;\n        var indices = list.indices = [];\n\n        var frameValues = [];\n        var frameIndices = [];\n        var frameSize = Math.floor(1 / rate);\n\n        var dimStore = targetStorage[dimension];\n        var len = this.count();\n        // Copy data from original data\n        for (var i = 0; i < storage[dimension].length; i++) {\n            targetStorage[dimension][i] = storage[dimension][i];\n        }\n        for (var i = 0; i < len; i += frameSize) {\n            // Last frame\n            if (frameSize > len - i) {\n                frameSize = len - i;\n                frameValues.length = frameSize;\n            }\n            for (var k = 0; k < frameSize; k++) {\n                var idx = originalIndices[i + k];\n                frameValues[k] = dimStore[idx];\n                frameIndices[k] = idx;\n            }\n            var value = sampleValue(frameValues);\n            var idx = frameIndices[sampleIndex(frameValues, value) || 0];\n            // Only write value on the filtered data\n            dimStore[idx] = value;\n            indices.push(idx);\n        }\n\n        return list;\n    };\n\n    /**\n     * Get model of one data item.\n     *\n     * @param {number} idx\n     */\n    // FIXME Model proxy ?\n    listProto.getItemModel = function (idx) {\n        var hostModel = this.hostModel;\n        idx = this.indices[idx];\n        return new Model(this._rawData[idx], hostModel, hostModel && hostModel.ecModel);\n    };\n\n    /**\n     * Create a data differ\n     * @param {module:echarts/data/List} otherList\n     * @return {module:echarts/data/DataDiffer}\n     */\n    listProto.diff = function (otherList) {\n        var idList = this._idList;\n        var otherIdList = otherList && otherList._idList;\n        var val;\n        // Use prefix to avoid index to be the same as otherIdList[idx],\n        // which will cause weird udpate animation.\n        var prefix = 'e\\0\\0';\n\n        return new DataDiffer(\n            otherList ? otherList.indices : [],\n            this.indices,\n            function (idx) {\n                return (val = otherIdList[idx]) != null ? val : prefix + idx;\n            },\n            function (idx) {\n                return (val = idList[idx]) != null ? val : prefix + idx;\n            }\n        );\n    };\n    /**\n     * Get visual property.\n     * @param {string} key\n     */\n    listProto.getVisual = function (key) {\n        var visual = this._visual;\n        return visual && visual[key];\n    };\n\n    /**\n     * Set visual property\n     * @param {string|Object} key\n     * @param {*} [value]\n     *\n     * @example\n     *  setVisual('color', color);\n     *  setVisual({\n     *      'color': color\n     *  });\n     */\n    listProto.setVisual = function (key, val) {\n        if (isObject(key)) {\n            for (var name in key) {\n                if (key.hasOwnProperty(name)) {\n                    this.setVisual(name, key[name]);\n                }\n            }\n            return;\n        }\n        this._visual = this._visual || {};\n        this._visual[key] = val;\n    };\n\n    /**\n     * Set layout property.\n     * @param {string} key\n     * @param {*} [val]\n     */\n    listProto.setLayout = function (key, val) {\n        if (isObject(key)) {\n            for (var name in key) {\n                if (key.hasOwnProperty(name)) {\n                    this.setLayout(name, key[name]);\n                }\n            }\n            return;\n        }\n        this._layout[key] = val;\n    };\n\n    /**\n     * Get layout property.\n     * @param  {string} key.\n     * @return {*}\n     */\n    listProto.getLayout = function (key) {\n        return this._layout[key];\n    };\n\n    /**\n     * Get layout of single data item\n     * @param {number} idx\n     */\n    listProto.getItemLayout = function (idx) {\n        return this._itemLayouts[idx];\n    };\n\n    /**\n     * Set layout of single data item\n     * @param {number} idx\n     * @param {Object} layout\n     * @param {boolean=} [merge=false]\n     */\n    listProto.setItemLayout = function (idx, layout, merge) {\n        this._itemLayouts[idx] = merge\n            ? zrUtil.extend(this._itemLayouts[idx] || {}, layout)\n            : layout;\n    };\n\n    /**\n     * Clear all layout of single data item\n     */\n    listProto.clearItemLayouts = function () {\n        this._itemLayouts.length = 0;\n    };\n\n    /**\n     * Get visual property of single data item\n     * @param {number} idx\n     * @param {string} key\n     * @param {boolean} ignoreParent\n     */\n    listProto.getItemVisual = function (idx, key, ignoreParent) {\n        var itemVisual = this._itemVisuals[idx];\n        var val = itemVisual && itemVisual[key];\n        if (val == null && !ignoreParent) {\n            // Use global visual property\n            return this.getVisual(key);\n        }\n        return val;\n    };\n\n    /**\n     * Set visual property of single data item\n     *\n     * @param {number} idx\n     * @param {string|Object} key\n     * @param {*} [value]\n     *\n     * @example\n     *  setItemVisual(0, 'color', color);\n     *  setItemVisual(0, {\n     *      'color': color\n     *  });\n     */\n    listProto.setItemVisual = function (idx, key, value) {\n        var itemVisual = this._itemVisuals[idx] || {};\n        this._itemVisuals[idx] = itemVisual;\n\n        if (isObject(key)) {\n            for (var name in key) {\n                if (key.hasOwnProperty(name)) {\n                    itemVisual[name] = key[name];\n                }\n            }\n            return;\n        }\n        itemVisual[key] = value;\n    };\n\n    /**\n     * Clear itemVisuals and list visual.\n     */\n    listProto.clearAllVisual = function () {\n        this._visual = {};\n        this._itemVisuals = [];\n    };\n\n    var setItemDataAndSeriesIndex = function (child) {\n        child.seriesIndex = this.seriesIndex;\n        child.dataIndex = this.dataIndex;\n        child.dataType = this.dataType;\n    };\n    /**\n     * Set graphic element relative to data. It can be set as null\n     * @param {number} idx\n     * @param {module:zrender/Element} [el]\n     */\n    listProto.setItemGraphicEl = function (idx, el) {\n        var hostModel = this.hostModel;\n\n        if (el) {\n            // Add data index and series index for indexing the data by element\n            // Useful in tooltip\n            el.dataIndex = idx;\n            el.dataType = this.dataType;\n            el.seriesIndex = hostModel && hostModel.seriesIndex;\n            if (el.type === 'group') {\n                el.traverse(setItemDataAndSeriesIndex, el);\n            }\n        }\n\n        this._graphicEls[idx] = el;\n    };\n\n    /**\n     * @param {number} idx\n     * @return {module:zrender/Element}\n     */\n    listProto.getItemGraphicEl = function (idx) {\n        return this._graphicEls[idx];\n    };\n\n    /**\n     * @param {Function} cb\n     * @param {*} context\n     */\n    listProto.eachItemGraphicEl = function (cb, context) {\n        zrUtil.each(this._graphicEls, function (el, idx) {\n            if (el) {\n                cb && cb.call(context, el, idx);\n            }\n        });\n    };\n\n    /**\n     * Shallow clone a new list except visual and layout properties, and graph elements.\n     * New list only change the indices.\n     */\n    listProto.cloneShallow = function () {\n        var dimensionInfoList = zrUtil.map(this.dimensions, this.getDimensionInfo, this);\n        var list = new List(dimensionInfoList, this.hostModel);\n\n        // FIXME\n        list._storage = this._storage;\n\n        transferProperties(list, this);\n\n\n        // Clone will not change the data extent and indices\n        list.indices = this.indices.slice();\n\n        if (this._extent) {\n            list._extent = zrUtil.extend({}, this._extent);\n        }\n\n        return list;\n    };\n\n    /**\n     * Wrap some method to add more feature\n     * @param {string} methodName\n     * @param {Function} injectFunction\n     */\n    listProto.wrapMethod = function (methodName, injectFunction) {\n        var originalMethod = this[methodName];\n        if (typeof originalMethod !== 'function') {\n            return;\n        }\n        this.__wrappedMethods = this.__wrappedMethods || [];\n        this.__wrappedMethods.push(methodName);\n        this[methodName] = function () {\n            var res = originalMethod.apply(this, arguments);\n            return injectFunction.apply(this, [res].concat(zrUtil.slice(arguments)));\n        };\n    };\n\n    // Methods that create a new list based on this list should be listed here.\n    // Notice that those method should `RETURN` the new list.\n    listProto.TRANSFERABLE_METHODS = ['cloneShallow', 'downSample', 'map'];\n    // Methods that change indices of this list should be listed here.\n    listProto.CHANGABLE_METHODS = ['filterSelf'];\n\n    module.exports = List;\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(52)))\n\n/***/ }),\n/* 507 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var classUtil = __webpack_require__(471);\n    var set = classUtil.set;\n    var get = classUtil.get;\n\n    module.exports = {\n        clearColorPalette: function () {\n            set(this, 'colorIdx', 0);\n            set(this, 'colorNameMap', {});\n        },\n\n        getColorFromPalette: function (name, scope) {\n            scope = scope || this;\n            var colorIdx = get(scope, 'colorIdx') || 0;\n            var colorNameMap = get(scope, 'colorNameMap') || set(scope, 'colorNameMap', {});\n            if (colorNameMap[name]) {\n                return colorNameMap[name];\n            }\n            var colorPalette = this.get('color', true) || [];\n            if (!colorPalette.length) {\n                return;\n            }\n\n            var color = colorPalette[colorIdx];\n            if (name) {\n                colorNameMap[name] = color;\n            }\n            set(scope, 'colorIdx', (colorIdx + 1) % colorPalette.length);\n\n            return color;\n        }\n    };\n\n\n/***/ }),\n/* 508 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n// Symbol factory\n\n\n    var graphic = __webpack_require__(464);\n    var BoundingRect = __webpack_require__(467);\n\n    /**\n     * Triangle shape\n     * @inner\n     */\n    var Triangle = graphic.extendShape({\n        type: 'triangle',\n        shape: {\n            cx: 0,\n            cy: 0,\n            width: 0,\n            height: 0\n        },\n        buildPath: function (path, shape) {\n            var cx = shape.cx;\n            var cy = shape.cy;\n            var width = shape.width / 2;\n            var height = shape.height / 2;\n            path.moveTo(cx, cy - height);\n            path.lineTo(cx + width, cy + height);\n            path.lineTo(cx - width, cy + height);\n            path.closePath();\n        }\n    });\n    /**\n     * Diamond shape\n     * @inner\n     */\n    var Diamond = graphic.extendShape({\n        type: 'diamond',\n        shape: {\n            cx: 0,\n            cy: 0,\n            width: 0,\n            height: 0\n        },\n        buildPath: function (path, shape) {\n            var cx = shape.cx;\n            var cy = shape.cy;\n            var width = shape.width / 2;\n            var height = shape.height / 2;\n            path.moveTo(cx, cy - height);\n            path.lineTo(cx + width, cy);\n            path.lineTo(cx, cy + height);\n            path.lineTo(cx - width, cy);\n            path.closePath();\n        }\n    });\n\n    /**\n     * Pin shape\n     * @inner\n     */\n    var Pin = graphic.extendShape({\n        type: 'pin',\n        shape: {\n            // x, y on the cusp\n            x: 0,\n            y: 0,\n            width: 0,\n            height: 0\n        },\n\n        buildPath: function (path, shape) {\n            var x = shape.x;\n            var y = shape.y;\n            var w = shape.width / 5 * 3;\n            // Height must be larger than width\n            var h = Math.max(w, shape.height);\n            var r = w / 2;\n\n            // Dist on y with tangent point and circle center\n            var dy = r * r / (h - r);\n            var cy = y - h + r + dy;\n            var angle = Math.asin(dy / r);\n            // Dist on x with tangent point and circle center\n            var dx = Math.cos(angle) * r;\n\n            var tanX = Math.sin(angle);\n            var tanY = Math.cos(angle);\n\n            path.arc(\n                x, cy, r,\n                Math.PI - angle,\n                Math.PI * 2 + angle\n            );\n\n            var cpLen = r * 0.6;\n            var cpLen2 = r * 0.7;\n            path.bezierCurveTo(\n                x + dx - tanX * cpLen, cy + dy + tanY * cpLen,\n                x, y - cpLen2,\n                x, y\n            );\n            path.bezierCurveTo(\n                x, y - cpLen2,\n                x - dx + tanX * cpLen, cy + dy + tanY * cpLen,\n                x - dx, cy + dy\n            );\n            path.closePath();\n        }\n    });\n\n    /**\n     * Arrow shape\n     * @inner\n     */\n    var Arrow = graphic.extendShape({\n\n        type: 'arrow',\n\n        shape: {\n            x: 0,\n            y: 0,\n            width: 0,\n            height: 0\n        },\n\n        buildPath: function (ctx, shape) {\n            var height = shape.height;\n            var width = shape.width;\n            var x = shape.x;\n            var y = shape.y;\n            var dx = width / 3 * 2;\n            ctx.moveTo(x, y);\n            ctx.lineTo(x + dx, y + height);\n            ctx.lineTo(x, y + height / 4 * 3);\n            ctx.lineTo(x - dx, y + height);\n            ctx.lineTo(x, y);\n            ctx.closePath();\n        }\n    });\n\n    /**\n     * Map of path contructors\n     * @type {Object.<string, module:zrender/graphic/Path>}\n     */\n    var symbolCtors = {\n        line: graphic.Line,\n\n        rect: graphic.Rect,\n\n        roundRect: graphic.Rect,\n\n        square: graphic.Rect,\n\n        circle: graphic.Circle,\n\n        diamond: Diamond,\n\n        pin: Pin,\n\n        arrow: Arrow,\n\n        triangle: Triangle\n    };\n\n    var symbolShapeMakers = {\n\n        line: function (x, y, w, h, shape) {\n            // FIXME\n            shape.x1 = x;\n            shape.y1 = y + h / 2;\n            shape.x2 = x + w;\n            shape.y2 = y + h / 2;\n        },\n\n        rect: function (x, y, w, h, shape) {\n            shape.x = x;\n            shape.y = y;\n            shape.width = w;\n            shape.height = h;\n        },\n\n        roundRect: function (x, y, w, h, shape) {\n            shape.x = x;\n            shape.y = y;\n            shape.width = w;\n            shape.height = h;\n            shape.r = Math.min(w, h) / 4;\n        },\n\n        square: function (x, y, w, h, shape) {\n            var size = Math.min(w, h);\n            shape.x = x;\n            shape.y = y;\n            shape.width = size;\n            shape.height = size;\n        },\n\n        circle: function (x, y, w, h, shape) {\n            // Put circle in the center of square\n            shape.cx = x + w / 2;\n            shape.cy = y + h / 2;\n            shape.r = Math.min(w, h) / 2;\n        },\n\n        diamond: function (x, y, w, h, shape) {\n            shape.cx = x + w / 2;\n            shape.cy = y + h / 2;\n            shape.width = w;\n            shape.height = h;\n        },\n\n        pin: function (x, y, w, h, shape) {\n            shape.x = x + w / 2;\n            shape.y = y + h / 2;\n            shape.width = w;\n            shape.height = h;\n        },\n\n        arrow: function (x, y, w, h, shape) {\n            shape.x = x + w / 2;\n            shape.y = y + h / 2;\n            shape.width = w;\n            shape.height = h;\n        },\n\n        triangle: function (x, y, w, h, shape) {\n            shape.cx = x + w / 2;\n            shape.cy = y + h / 2;\n            shape.width = w;\n            shape.height = h;\n        }\n    };\n\n    var symbolBuildProxies = {};\n    for (var name in symbolCtors) {\n        if (symbolCtors.hasOwnProperty(name)) {\n            symbolBuildProxies[name] = new symbolCtors[name]();\n        }\n    }\n\n    var Symbol = graphic.extendShape({\n\n        type: 'symbol',\n\n        shape: {\n            symbolType: '',\n            x: 0,\n            y: 0,\n            width: 0,\n            height: 0\n        },\n\n        beforeBrush: function () {\n            var style = this.style;\n            var shape = this.shape;\n            // FIXME\n            if (shape.symbolType === 'pin' && style.textPosition === 'inside') {\n                style.textPosition = ['50%', '40%'];\n                style.textAlign = 'center';\n                style.textVerticalAlign = 'middle';\n            }\n        },\n\n        buildPath: function (ctx, shape, inBundle) {\n            var symbolType = shape.symbolType;\n            var proxySymbol = symbolBuildProxies[symbolType];\n            if (shape.symbolType !== 'none') {\n                if (!proxySymbol) {\n                    // Default rect\n                    symbolType = 'rect';\n                    proxySymbol = symbolBuildProxies[symbolType];\n                }\n                symbolShapeMakers[symbolType](\n                    shape.x, shape.y, shape.width, shape.height, proxySymbol.shape\n                );\n                proxySymbol.buildPath(ctx, proxySymbol.shape, inBundle);\n            }\n        }\n    });\n\n    // Provide setColor helper method to avoid determine if set the fill or stroke outside\n    var symbolPathSetColor = function (color) {\n        if (this.type !== 'image') {\n            var symbolStyle = this.style;\n            var symbolShape = this.shape;\n            if (symbolShape && symbolShape.symbolType === 'line') {\n                symbolStyle.stroke = color;\n            }\n            else if (this.__isEmptyBrush) {\n                symbolStyle.stroke = color;\n                symbolStyle.fill = '#fff';\n            }\n            else {\n                // FIXME 判断图形默认是填充还是描边，使用 onlyStroke ?\n                symbolStyle.fill && (symbolStyle.fill = color);\n                symbolStyle.stroke && (symbolStyle.stroke = color);\n            }\n            this.dirty(false);\n        }\n    };\n\n    var symbolUtil = {\n        /**\n         * Create a symbol element with given symbol configuration: shape, x, y, width, height, color\n         * @param {string} symbolType\n         * @param {number} x\n         * @param {number} y\n         * @param {number} w\n         * @param {number} h\n         * @param {string} color\n         */\n        createSymbol: function (symbolType, x, y, w, h, color) {\n            var isEmpty = symbolType.indexOf('empty') === 0;\n            if (isEmpty) {\n                symbolType = symbolType.substr(5, 1).toLowerCase() + symbolType.substr(6);\n            }\n            var symbolPath;\n\n            if (symbolType.indexOf('image://') === 0) {\n                symbolPath = new graphic.Image({\n                    style: {\n                        image: symbolType.slice(8),\n                        x: x,\n                        y: y,\n                        width: w,\n                        height: h\n                    }\n                });\n            }\n            else if (symbolType.indexOf('path://') === 0) {\n                symbolPath = graphic.makePath(symbolType.slice(7), {}, new BoundingRect(x, y, w, h));\n            }\n            else {\n                symbolPath = new Symbol({\n                    shape: {\n                        symbolType: symbolType,\n                        x: x,\n                        y: y,\n                        width: w,\n                        height: h\n                    }\n                });\n            }\n\n            symbolPath.__isEmptyBrush = isEmpty;\n\n            symbolPath.setColor = symbolPathSetColor;\n\n            symbolPath.setColor(color);\n\n            return symbolPath;\n        }\n    };\n\n    module.exports = symbolUtil;\n\n\n/***/ }),\n/* 509 */\n/***/ (function(module, exports) {\n\n\n\n    var lib = {};\n\n    var ORIGIN_METHOD = '\\0__throttleOriginMethod';\n    var RATE = '\\0__throttleRate';\n    var THROTTLE_TYPE = '\\0__throttleType';\n\n    /**\n     * @public\n     * @param {(Function)} fn\n     * @param {number} [delay=0] Unit: ms.\n     * @param {boolean} [debounce=false]\n     *        true: If call interval less than `delay`, only the last call works.\n     *        false: If call interval less than `delay, call works on fixed rate.\n     * @return {(Function)} throttled fn.\n     */\n    lib.throttle = function (fn, delay, debounce) {\n\n        var currCall;\n        var lastCall = 0;\n        var lastExec = 0;\n        var timer = null;\n        var diff;\n        var scope;\n        var args;\n\n        delay = delay || 0;\n\n        function exec() {\n            lastExec = (new Date()).getTime();\n            timer = null;\n            fn.apply(scope, args || []);\n        }\n\n        var cb = function () {\n            currCall = (new Date()).getTime();\n            scope = this;\n            args = arguments;\n            diff = currCall - (debounce ? lastCall : lastExec) - delay;\n\n            clearTimeout(timer);\n\n            if (debounce) {\n                timer = setTimeout(exec, delay);\n            }\n            else {\n                if (diff >= 0) {\n                    exec();\n                }\n                else {\n                    timer = setTimeout(exec, -diff);\n                }\n            }\n\n            lastCall = currCall;\n        };\n\n        /**\n         * Clear throttle.\n         * @public\n         */\n        cb.clear = function () {\n            if (timer) {\n                clearTimeout(timer);\n                timer = null;\n            }\n        };\n\n        return cb;\n    };\n\n    /**\n     * Create throttle method or update throttle rate.\n     *\n     * @example\n     * ComponentView.prototype.render = function () {\n     *     ...\n     *     throttle.createOrUpdate(\n     *         this,\n     *         '_dispatchAction',\n     *         this.model.get('throttle'),\n     *         'fixRate'\n     *     );\n     * };\n     * ComponentView.prototype.remove = function () {\n     *     throttle.clear(this, '_dispatchAction');\n     * };\n     * ComponentView.prototype.dispose = function () {\n     *     throttle.clear(this, '_dispatchAction');\n     * };\n     *\n     * @public\n     * @param {Object} obj\n     * @param {string} fnAttr\n     * @param {number} [rate]\n     * @param {string} [throttleType='fixRate'] 'fixRate' or 'debounce'\n     * @return {Function} throttled function.\n     */\n    lib.createOrUpdate = function (obj, fnAttr, rate, throttleType) {\n        var fn = obj[fnAttr];\n\n        if (!fn) {\n            return;\n        }\n\n        var originFn = fn[ORIGIN_METHOD] || fn;\n        var lastThrottleType = fn[THROTTLE_TYPE];\n        var lastRate = fn[RATE];\n\n        if (lastRate !== rate || lastThrottleType !== throttleType) {\n            if (rate == null || !throttleType) {\n                return (obj[fnAttr] = originFn);\n            }\n\n            fn = obj[fnAttr] = lib.throttle(\n                originFn, rate, throttleType === 'debounce'\n            );\n            fn[ORIGIN_METHOD] = originFn;\n            fn[THROTTLE_TYPE] = throttleType;\n            fn[RATE] = rate;\n        }\n\n        return fn;\n    };\n\n    /**\n     * Clear throttle. Example see throttle.createOrUpdate.\n     *\n     * @public\n     * @param {Object} obj\n     * @param {string} fnAttr\n     */\n    lib.clear = function (obj, fnAttr) {\n        var fn = obj[fnAttr];\n        if (fn && fn[ORIGIN_METHOD]) {\n            obj[fnAttr] = fn[ORIGIN_METHOD];\n        }\n    };\n\n    module.exports = lib;\n\n\n\n/***/ }),\n/* 510 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var Group = __webpack_require__(483);\n    var componentUtil = __webpack_require__(496);\n    var clazzUtil = __webpack_require__(471);\n    var modelUtil = __webpack_require__(469);\n    var zrUtil = __webpack_require__(460);\n\n    function Chart() {\n\n        /**\n         * @type {module:zrender/container/Group}\n         * @readOnly\n         */\n        this.group = new Group();\n\n        /**\n         * @type {string}\n         * @readOnly\n         */\n        this.uid = componentUtil.getUID('viewChart');\n    }\n\n    Chart.prototype = {\n\n        type: 'chart',\n\n        /**\n         * Init the chart\n         * @param  {module:echarts/model/Global} ecModel\n         * @param  {module:echarts/ExtensionAPI} api\n         */\n        init: function (ecModel, api) {},\n\n        /**\n         * Render the chart\n         * @param  {module:echarts/model/Series} seriesModel\n         * @param  {module:echarts/model/Global} ecModel\n         * @param  {module:echarts/ExtensionAPI} api\n         * @param  {Object} payload\n         */\n        render: function (seriesModel, ecModel, api, payload) {},\n\n        /**\n         * Highlight series or specified data item\n         * @param  {module:echarts/model/Series} seriesModel\n         * @param  {module:echarts/model/Global} ecModel\n         * @param  {module:echarts/ExtensionAPI} api\n         * @param  {Object} payload\n         */\n        highlight: function (seriesModel, ecModel, api, payload) {\n            toggleHighlight(seriesModel.getData(), payload, 'emphasis');\n        },\n\n        /**\n         * Downplay series or specified data item\n         * @param  {module:echarts/model/Series} seriesModel\n         * @param  {module:echarts/model/Global} ecModel\n         * @param  {module:echarts/ExtensionAPI} api\n         * @param  {Object} payload\n         */\n        downplay: function (seriesModel, ecModel, api, payload) {\n            toggleHighlight(seriesModel.getData(), payload, 'normal');\n        },\n\n        /**\n         * Remove self\n         * @param  {module:echarts/model/Global} ecModel\n         * @param  {module:echarts/ExtensionAPI} api\n         */\n        remove: function (ecModel, api) {\n            this.group.removeAll();\n        },\n\n        /**\n         * Dispose self\n         * @param  {module:echarts/model/Global} ecModel\n         * @param  {module:echarts/ExtensionAPI} api\n         */\n        dispose: function () {}\n\n        /**\n         * The view contains the given point.\n         * @interface\n         * @param {Array.<number>} point\n         * @return {boolean}\n         */\n        // containPoint: function () {}\n\n    };\n\n    var chartProto = Chart.prototype;\n    chartProto.updateView\n        = chartProto.updateLayout\n        = chartProto.updateVisual\n        = function (seriesModel, ecModel, api, payload) {\n            this.render(seriesModel, ecModel, api, payload);\n        };\n\n    /**\n     * Set state of single element\n     * @param  {module:zrender/Element} el\n     * @param  {string} state\n     */\n    function elSetState(el, state) {\n        if (el) {\n            el.trigger(state);\n            if (el.type === 'group') {\n                for (var i = 0; i < el.childCount(); i++) {\n                    elSetState(el.childAt(i), state);\n                }\n            }\n        }\n    }\n    /**\n     * @param  {module:echarts/data/List} data\n     * @param  {Object} payload\n     * @param  {string} state 'normal'|'emphasis'\n     * @inner\n     */\n    function toggleHighlight(data, payload, state) {\n        var dataIndex = modelUtil.queryDataIndex(data, payload);\n\n        if (dataIndex != null) {\n            zrUtil.each(modelUtil.normalizeToArray(dataIndex), function (dataIdx) {\n                elSetState(data.getItemGraphicEl(dataIdx), state);\n            });\n        }\n        else {\n            data.eachItemGraphicEl(function (el) {\n                elSetState(el, state);\n            });\n        }\n    }\n\n    // Enable Chart.extend.\n    clazzUtil.enableClassExtend(Chart, ['dispose']);\n\n    // Add capability of registerClass, getClass, hasClass, registerSubTypeDefaulter and so on.\n    clazzUtil.enableClassManagement(Chart, {registerWhenExtend: true});\n\n    module.exports = Chart;\n\n\n/***/ }),\n/* 511 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar guid = __webpack_require__(516);\n\nvar Eventful = __webpack_require__(481);\n\nvar Transformable = __webpack_require__(624);\n\nvar Animatable = __webpack_require__(622);\n\nvar zrUtil = __webpack_require__(460);\n\n/**\n * @alias module:zrender/Element\n * @constructor\n * @extends {module:zrender/mixin/Animatable}\n * @extends {module:zrender/mixin/Transformable}\n * @extends {module:zrender/mixin/Eventful}\n */\nvar Element = function (opts) {\n  // jshint ignore:line\n  Transformable.call(this, opts);\n  Eventful.call(this, opts);\n  Animatable.call(this, opts);\n  /**\n   * 画布元素ID\n   * @type {string}\n   */\n\n  this.id = opts.id || guid();\n};\n\nElement.prototype = {\n  /**\n   * 元素类型\n   * Element type\n   * @type {string}\n   */\n  type: 'element',\n\n  /**\n   * 元素名字\n   * Element name\n   * @type {string}\n   */\n  name: '',\n\n  /**\n   * ZRender 实例对象，会在 element 添加到 zrender 实例中后自动赋值\n   * ZRender instance will be assigned when element is associated with zrender\n   * @name module:/zrender/Element#__zr\n   * @type {module:zrender/ZRender}\n   */\n  __zr: null,\n\n  /**\n   * 图形是否忽略，为true时忽略图形的绘制以及事件触发\n   * If ignore drawing and events of the element object\n   * @name module:/zrender/Element#ignore\n   * @type {boolean}\n   * @default false\n   */\n  ignore: false,\n\n  /**\n   * 用于裁剪的路径(shape)，所有 Group 内的路径在绘制时都会被这个路径裁剪\n   * 该路径会继承被裁减对象的变换\n   * @type {module:zrender/graphic/Path}\n   * @see http://www.w3.org/TR/2dcontext/#clipping-region\n   * @readOnly\n   */\n  clipPath: null,\n\n  /**\n   * Drift element\n   * @param  {number} dx dx on the global space\n   * @param  {number} dy dy on the global space\n   */\n  drift: function (dx, dy) {\n    switch (this.draggable) {\n      case 'horizontal':\n        dy = 0;\n        break;\n\n      case 'vertical':\n        dx = 0;\n        break;\n    }\n\n    var m = this.transform;\n\n    if (!m) {\n      m = this.transform = [1, 0, 0, 1, 0, 0];\n    }\n\n    m[4] += dx;\n    m[5] += dy;\n    this.decomposeTransform();\n    this.dirty(false);\n  },\n\n  /**\n   * Hook before update\n   */\n  beforeUpdate: function () {},\n\n  /**\n   * Hook after update\n   */\n  afterUpdate: function () {},\n\n  /**\n   * Update each frame\n   */\n  update: function () {\n    this.updateTransform();\n  },\n\n  /**\n   * @param  {Function} cb\n   * @param  {}   context\n   */\n  traverse: function (cb, context) {},\n\n  /**\n   * @protected\n   */\n  attrKV: function (key, value) {\n    if (key === 'position' || key === 'scale' || key === 'origin') {\n      // Copy the array\n      if (value) {\n        var target = this[key];\n\n        if (!target) {\n          target = this[key] = [];\n        }\n\n        target[0] = value[0];\n        target[1] = value[1];\n      }\n    } else {\n      this[key] = value;\n    }\n  },\n\n  /**\n   * Hide the element\n   */\n  hide: function () {\n    this.ignore = true;\n    this.__zr && this.__zr.refresh();\n  },\n\n  /**\n   * Show the element\n   */\n  show: function () {\n    this.ignore = false;\n    this.__zr && this.__zr.refresh();\n  },\n\n  /**\n   * @param {string|Object} key\n   * @param {*} value\n   */\n  attr: function (key, value) {\n    if (typeof key === 'string') {\n      this.attrKV(key, value);\n    } else if (zrUtil.isObject(key)) {\n      for (var name in key) {\n        if (key.hasOwnProperty(name)) {\n          this.attrKV(name, key[name]);\n        }\n      }\n    }\n\n    this.dirty(false);\n    return this;\n  },\n\n  /**\n   * @param {module:zrender/graphic/Path} clipPath\n   */\n  setClipPath: function (clipPath) {\n    var zr = this.__zr;\n\n    if (zr) {\n      clipPath.addSelfToZr(zr);\n    } // Remove previous clip path\n\n\n    if (this.clipPath && this.clipPath !== clipPath) {\n      this.removeClipPath();\n    }\n\n    this.clipPath = clipPath;\n    clipPath.__zr = zr;\n    clipPath.__clipTarget = this;\n    this.dirty(false);\n  },\n\n  /**\n   */\n  removeClipPath: function () {\n    var clipPath = this.clipPath;\n\n    if (clipPath) {\n      if (clipPath.__zr) {\n        clipPath.removeSelfFromZr(clipPath.__zr);\n      }\n\n      clipPath.__zr = null;\n      clipPath.__clipTarget = null;\n      this.clipPath = null;\n      this.dirty(false);\n    }\n  },\n\n  /**\n   * Add self from zrender instance.\n   * Not recursively because it will be invoked when element added to storage.\n   * @param {module:zrender/ZRender} zr\n   */\n  addSelfToZr: function (zr) {\n    this.__zr = zr; // 添加动画\n\n    var animators = this.animators;\n\n    if (animators) {\n      for (var i = 0; i < animators.length; i++) {\n        zr.animation.addAnimator(animators[i]);\n      }\n    }\n\n    if (this.clipPath) {\n      this.clipPath.addSelfToZr(zr);\n    }\n  },\n\n  /**\n   * Remove self from zrender instance.\n   * Not recursively because it will be invoked when element added to storage.\n   * @param {module:zrender/ZRender} zr\n   */\n  removeSelfFromZr: function (zr) {\n    this.__zr = null; // 移除动画\n\n    var animators = this.animators;\n\n    if (animators) {\n      for (var i = 0; i < animators.length; i++) {\n        zr.animation.removeAnimator(animators[i]);\n      }\n    }\n\n    if (this.clipPath) {\n      this.clipPath.removeSelfFromZr(zr);\n    }\n  }\n};\nzrUtil.mixin(Element, Animatable);\nzrUtil.mixin(Element, Transformable);\nzrUtil.mixin(Element, Eventful);\nvar _default = Element;\nmodule.exports = _default;\n\n/***/ }),\n/* 512 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Clip = __webpack_require__(599);\n\nvar color = __webpack_require__(474);\n\nvar _util = __webpack_require__(460);\n\nvar isArrayLike = _util.isArrayLike;\n\n/**\n * @module echarts/animation/Animator\n */\nvar arraySlice = Array.prototype.slice;\n\nfunction defaultGetter(target, key) {\n  return target[key];\n}\n\nfunction defaultSetter(target, key, value) {\n  target[key] = value;\n}\n/**\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} percent\n * @return {number}\n */\n\n\nfunction interpolateNumber(p0, p1, percent) {\n  return (p1 - p0) * percent + p0;\n}\n/**\n * @param  {string} p0\n * @param  {string} p1\n * @param  {number} percent\n * @return {string}\n */\n\n\nfunction interpolateString(p0, p1, percent) {\n  return percent > 0.5 ? p1 : p0;\n}\n/**\n * @param  {Array} p0\n * @param  {Array} p1\n * @param  {number} percent\n * @param  {Array} out\n * @param  {number} arrDim\n */\n\n\nfunction interpolateArray(p0, p1, percent, out, arrDim) {\n  var len = p0.length;\n\n  if (arrDim == 1) {\n    for (var i = 0; i < len; i++) {\n      out[i] = interpolateNumber(p0[i], p1[i], percent);\n    }\n  } else {\n    var len2 = len && p0[0].length;\n\n    for (var i = 0; i < len; i++) {\n      for (var j = 0; j < len2; j++) {\n        out[i][j] = interpolateNumber(p0[i][j], p1[i][j], percent);\n      }\n    }\n  }\n} // arr0 is source array, arr1 is target array.\n// Do some preprocess to avoid error happened when interpolating from arr0 to arr1\n\n\nfunction fillArr(arr0, arr1, arrDim) {\n  var arr0Len = arr0.length;\n  var arr1Len = arr1.length;\n\n  if (arr0Len !== arr1Len) {\n    // FIXME Not work for TypedArray\n    var isPreviousLarger = arr0Len > arr1Len;\n\n    if (isPreviousLarger) {\n      // Cut the previous\n      arr0.length = arr1Len;\n    } else {\n      // Fill the previous\n      for (var i = arr0Len; i < arr1Len; i++) {\n        arr0.push(arrDim === 1 ? arr1[i] : arraySlice.call(arr1[i]));\n      }\n    }\n  } // Handling NaN value\n\n\n  var len2 = arr0[0] && arr0[0].length;\n\n  for (var i = 0; i < arr0.length; i++) {\n    if (arrDim === 1) {\n      if (isNaN(arr0[i])) {\n        arr0[i] = arr1[i];\n      }\n    } else {\n      for (var j = 0; j < len2; j++) {\n        if (isNaN(arr0[i][j])) {\n          arr0[i][j] = arr1[i][j];\n        }\n      }\n    }\n  }\n}\n/**\n * @param  {Array} arr0\n * @param  {Array} arr1\n * @param  {number} arrDim\n * @return {boolean}\n */\n\n\nfunction isArraySame(arr0, arr1, arrDim) {\n  if (arr0 === arr1) {\n    return true;\n  }\n\n  var len = arr0.length;\n\n  if (len !== arr1.length) {\n    return false;\n  }\n\n  if (arrDim === 1) {\n    for (var i = 0; i < len; i++) {\n      if (arr0[i] !== arr1[i]) {\n        return false;\n      }\n    }\n  } else {\n    var len2 = arr0[0].length;\n\n    for (var i = 0; i < len; i++) {\n      for (var j = 0; j < len2; j++) {\n        if (arr0[i][j] !== arr1[i][j]) {\n          return false;\n        }\n      }\n    }\n  }\n\n  return true;\n}\n/**\n * Catmull Rom interpolate array\n * @param  {Array} p0\n * @param  {Array} p1\n * @param  {Array} p2\n * @param  {Array} p3\n * @param  {number} t\n * @param  {number} t2\n * @param  {number} t3\n * @param  {Array} out\n * @param  {number} arrDim\n */\n\n\nfunction catmullRomInterpolateArray(p0, p1, p2, p3, t, t2, t3, out, arrDim) {\n  var len = p0.length;\n\n  if (arrDim == 1) {\n    for (var i = 0; i < len; i++) {\n      out[i] = catmullRomInterpolate(p0[i], p1[i], p2[i], p3[i], t, t2, t3);\n    }\n  } else {\n    var len2 = p0[0].length;\n\n    for (var i = 0; i < len; i++) {\n      for (var j = 0; j < len2; j++) {\n        out[i][j] = catmullRomInterpolate(p0[i][j], p1[i][j], p2[i][j], p3[i][j], t, t2, t3);\n      }\n    }\n  }\n}\n/**\n * Catmull Rom interpolate number\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} p3\n * @param  {number} t\n * @param  {number} t2\n * @param  {number} t3\n * @return {number}\n */\n\n\nfunction catmullRomInterpolate(p0, p1, p2, p3, t, t2, t3) {\n  var v0 = (p2 - p0) * 0.5;\n  var v1 = (p3 - p1) * 0.5;\n  return (2 * (p1 - p2) + v0 + v1) * t3 + (-3 * (p1 - p2) - 2 * v0 - v1) * t2 + v0 * t + p1;\n}\n\nfunction cloneValue(value) {\n  if (isArrayLike(value)) {\n    var len = value.length;\n\n    if (isArrayLike(value[0])) {\n      var ret = [];\n\n      for (var i = 0; i < len; i++) {\n        ret.push(arraySlice.call(value[i]));\n      }\n\n      return ret;\n    }\n\n    return arraySlice.call(value);\n  }\n\n  return value;\n}\n\nfunction rgba2String(rgba) {\n  rgba[0] = Math.floor(rgba[0]);\n  rgba[1] = Math.floor(rgba[1]);\n  rgba[2] = Math.floor(rgba[2]);\n  return 'rgba(' + rgba.join(',') + ')';\n}\n\nfunction getArrayDim(keyframes) {\n  var lastValue = keyframes[keyframes.length - 1].value;\n  return isArrayLike(lastValue && lastValue[0]) ? 2 : 1;\n}\n\nfunction createTrackClip(animator, easing, oneTrackDone, keyframes, propName, forceAnimate) {\n  var getter = animator._getter;\n  var setter = animator._setter;\n  var useSpline = easing === 'spline';\n  var trackLen = keyframes.length;\n\n  if (!trackLen) {\n    return;\n  } // Guess data type\n\n\n  var firstVal = keyframes[0].value;\n  var isValueArray = isArrayLike(firstVal);\n  var isValueColor = false;\n  var isValueString = false; // For vertices morphing\n\n  var arrDim = isValueArray ? getArrayDim(keyframes) : 0;\n  var trackMaxTime; // Sort keyframe as ascending\n\n  keyframes.sort(function (a, b) {\n    return a.time - b.time;\n  });\n  trackMaxTime = keyframes[trackLen - 1].time; // Percents of each keyframe\n\n  var kfPercents = []; // Value of each keyframe\n\n  var kfValues = [];\n  var prevValue = keyframes[0].value;\n  var isAllValueEqual = true;\n\n  for (var i = 0; i < trackLen; i++) {\n    kfPercents.push(keyframes[i].time / trackMaxTime); // Assume value is a color when it is a string\n\n    var value = keyframes[i].value; // Check if value is equal, deep check if value is array\n\n    if (!(isValueArray && isArraySame(value, prevValue, arrDim) || !isValueArray && value === prevValue)) {\n      isAllValueEqual = false;\n    }\n\n    prevValue = value; // Try converting a string to a color array\n\n    if (typeof value == 'string') {\n      var colorArray = color.parse(value);\n\n      if (colorArray) {\n        value = colorArray;\n        isValueColor = true;\n      } else {\n        isValueString = true;\n      }\n    }\n\n    kfValues.push(value);\n  }\n\n  if (!forceAnimate && isAllValueEqual) {\n    return;\n  }\n\n  var lastValue = kfValues[trackLen - 1]; // Polyfill array and NaN value\n\n  for (var i = 0; i < trackLen - 1; i++) {\n    if (isValueArray) {\n      fillArr(kfValues[i], lastValue, arrDim);\n    } else {\n      if (isNaN(kfValues[i]) && !isNaN(lastValue) && !isValueString && !isValueColor) {\n        kfValues[i] = lastValue;\n      }\n    }\n  }\n\n  isValueArray && fillArr(getter(animator._target, propName), lastValue, arrDim); // Cache the key of last frame to speed up when\n  // animation playback is sequency\n\n  var lastFrame = 0;\n  var lastFramePercent = 0;\n  var start;\n  var w;\n  var p0;\n  var p1;\n  var p2;\n  var p3;\n\n  if (isValueColor) {\n    var rgba = [0, 0, 0, 0];\n  }\n\n  var onframe = function (target, percent) {\n    // Find the range keyframes\n    // kf1-----kf2---------current--------kf3\n    // find kf2 and kf3 and do interpolation\n    var frame; // In the easing function like elasticOut, percent may less than 0\n\n    if (percent < 0) {\n      frame = 0;\n    } else if (percent < lastFramePercent) {\n      // Start from next key\n      // PENDING start from lastFrame ?\n      start = Math.min(lastFrame + 1, trackLen - 1);\n\n      for (frame = start; frame >= 0; frame--) {\n        if (kfPercents[frame] <= percent) {\n          break;\n        }\n      } // PENDING really need to do this ?\n\n\n      frame = Math.min(frame, trackLen - 2);\n    } else {\n      for (frame = lastFrame; frame < trackLen; frame++) {\n        if (kfPercents[frame] > percent) {\n          break;\n        }\n      }\n\n      frame = Math.min(frame - 1, trackLen - 2);\n    }\n\n    lastFrame = frame;\n    lastFramePercent = percent;\n    var range = kfPercents[frame + 1] - kfPercents[frame];\n\n    if (range === 0) {\n      return;\n    } else {\n      w = (percent - kfPercents[frame]) / range;\n    }\n\n    if (useSpline) {\n      p1 = kfValues[frame];\n      p0 = kfValues[frame === 0 ? frame : frame - 1];\n      p2 = kfValues[frame > trackLen - 2 ? trackLen - 1 : frame + 1];\n      p3 = kfValues[frame > trackLen - 3 ? trackLen - 1 : frame + 2];\n\n      if (isValueArray) {\n        catmullRomInterpolateArray(p0, p1, p2, p3, w, w * w, w * w * w, getter(target, propName), arrDim);\n      } else {\n        var value;\n\n        if (isValueColor) {\n          value = catmullRomInterpolateArray(p0, p1, p2, p3, w, w * w, w * w * w, rgba, 1);\n          value = rgba2String(rgba);\n        } else if (isValueString) {\n          // String is step(0.5)\n          return interpolateString(p1, p2, w);\n        } else {\n          value = catmullRomInterpolate(p0, p1, p2, p3, w, w * w, w * w * w);\n        }\n\n        setter(target, propName, value);\n      }\n    } else {\n      if (isValueArray) {\n        interpolateArray(kfValues[frame], kfValues[frame + 1], w, getter(target, propName), arrDim);\n      } else {\n        var value;\n\n        if (isValueColor) {\n          interpolateArray(kfValues[frame], kfValues[frame + 1], w, rgba, 1);\n          value = rgba2String(rgba);\n        } else if (isValueString) {\n          // String is step(0.5)\n          return interpolateString(kfValues[frame], kfValues[frame + 1], w);\n        } else {\n          value = interpolateNumber(kfValues[frame], kfValues[frame + 1], w);\n        }\n\n        setter(target, propName, value);\n      }\n    }\n  };\n\n  var clip = new Clip({\n    target: animator._target,\n    life: trackMaxTime,\n    loop: animator._loop,\n    delay: animator._delay,\n    onframe: onframe,\n    ondestroy: oneTrackDone\n  });\n\n  if (easing && easing !== 'spline') {\n    clip.easing = easing;\n  }\n\n  return clip;\n}\n/**\n * @alias module:zrender/animation/Animator\n * @constructor\n * @param {Object} target\n * @param {boolean} loop\n * @param {Function} getter\n * @param {Function} setter\n */\n\n\nvar Animator = function (target, loop, getter, setter) {\n  this._tracks = {};\n  this._target = target;\n  this._loop = loop || false;\n  this._getter = getter || defaultGetter;\n  this._setter = setter || defaultSetter;\n  this._clipCount = 0;\n  this._delay = 0;\n  this._doneList = [];\n  this._onframeList = [];\n  this._clipList = [];\n};\n\nAnimator.prototype = {\n  /**\n   * 设置动画关键帧\n   * @param  {number} time 关键帧时间，单位是ms\n   * @param  {Object} props 关键帧的属性值，key-value表示\n   * @return {module:zrender/animation/Animator}\n   */\n  when: function (time\n  /* ms */\n  , props) {\n    var tracks = this._tracks;\n\n    for (var propName in props) {\n      if (!props.hasOwnProperty(propName)) {\n        continue;\n      }\n\n      if (!tracks[propName]) {\n        tracks[propName] = []; // Invalid value\n\n        var value = this._getter(this._target, propName);\n\n        if (value == null) {\n          // zrLog('Invalid property ' + propName);\n          continue;\n        } // If time is 0\n        //  Then props is given initialize value\n        // Else\n        //  Initialize value from current prop value\n\n\n        if (time !== 0) {\n          tracks[propName].push({\n            time: 0,\n            value: cloneValue(value)\n          });\n        }\n      }\n\n      tracks[propName].push({\n        time: time,\n        value: props[propName]\n      });\n    }\n\n    return this;\n  },\n\n  /**\n   * 添加动画每一帧的回调函数\n   * @param  {Function} callback\n   * @return {module:zrender/animation/Animator}\n   */\n  during: function (callback) {\n    this._onframeList.push(callback);\n\n    return this;\n  },\n  pause: function () {\n    for (var i = 0; i < this._clipList.length; i++) {\n      this._clipList[i].pause();\n    }\n\n    this._paused = true;\n  },\n  resume: function () {\n    for (var i = 0; i < this._clipList.length; i++) {\n      this._clipList[i].resume();\n    }\n\n    this._paused = false;\n  },\n  isPaused: function () {\n    return !!this._paused;\n  },\n  _doneCallback: function () {\n    // Clear all tracks\n    this._tracks = {}; // Clear all clips\n\n    this._clipList.length = 0;\n    var doneList = this._doneList;\n    var len = doneList.length;\n\n    for (var i = 0; i < len; i++) {\n      doneList[i].call(this);\n    }\n  },\n\n  /**\n   * 开始执行动画\n   * @param  {string|Function} [easing]\n   *         动画缓动函数，详见{@link module:zrender/animation/easing}\n   * @param  {boolean} forceAnimate\n   * @return {module:zrender/animation/Animator}\n   */\n  start: function (easing, forceAnimate) {\n    var self = this;\n    var clipCount = 0;\n\n    var oneTrackDone = function () {\n      clipCount--;\n\n      if (!clipCount) {\n        self._doneCallback();\n      }\n    };\n\n    var lastClip;\n\n    for (var propName in this._tracks) {\n      if (!this._tracks.hasOwnProperty(propName)) {\n        continue;\n      }\n\n      var clip = createTrackClip(this, easing, oneTrackDone, this._tracks[propName], propName, forceAnimate);\n\n      if (clip) {\n        this._clipList.push(clip);\n\n        clipCount++; // If start after added to animation\n\n        if (this.animation) {\n          this.animation.addClip(clip);\n        }\n\n        lastClip = clip;\n      }\n    } // Add during callback on the last clip\n\n\n    if (lastClip) {\n      var oldOnFrame = lastClip.onframe;\n\n      lastClip.onframe = function (target, percent) {\n        oldOnFrame(target, percent);\n\n        for (var i = 0; i < self._onframeList.length; i++) {\n          self._onframeList[i](target, percent);\n        }\n      };\n    } // This optimization will help the case that in the upper application\n    // the view may be refreshed frequently, where animation will be\n    // called repeatly but nothing changed.\n\n\n    if (!clipCount) {\n      this._doneCallback();\n    }\n\n    return this;\n  },\n\n  /**\n   * 停止动画\n   * @param {boolean} forwardToLast If move to last frame before stop\n   */\n  stop: function (forwardToLast) {\n    var clipList = this._clipList;\n    var animation = this.animation;\n\n    for (var i = 0; i < clipList.length; i++) {\n      var clip = clipList[i];\n\n      if (forwardToLast) {\n        // Move to last frame before stop\n        clip.onframe(this._target, 1);\n      }\n\n      animation && animation.removeClip(clip);\n    }\n\n    clipList.length = 0;\n  },\n\n  /**\n   * 设置动画延迟开始的时间\n   * @param  {number} time 单位ms\n   * @return {module:zrender/animation/Animator}\n   */\n  delay: function (time) {\n    this._delay = time;\n    return this;\n  },\n\n  /**\n   * 添加动画结束的回调\n   * @param  {Function} cb\n   * @return {module:zrender/animation/Animator}\n   */\n  done: function (cb) {\n    if (cb) {\n      this._doneList.push(cb);\n    }\n\n    return this;\n  },\n\n  /**\n   * @return {Array.<module:zrender/animation/Clip>}\n   */\n  getClips: function () {\n    return this._clipList;\n  }\n};\nvar _default = Animator;\nmodule.exports = _default;\n\n/***/ }),\n/* 513 */\n/***/ (function(module, exports) {\n\nvar _default = typeof window !== 'undefined' && (window.requestAnimationFrame && window.requestAnimationFrame.bind(window) || // https://github.com/ecomfe/zrender/issues/189#issuecomment-224919809\nwindow.msRequestAnimationFrame && window.msRequestAnimationFrame.bind(window) || window.mozRequestAnimationFrame || window.webkitRequestAnimationFrame) || function (func) {\n  setTimeout(func, 16);\n};\n\nmodule.exports = _default;\n\n/***/ }),\n/* 514 */\n/***/ (function(module, exports) {\n\nvar PI2 = Math.PI * 2;\n\nfunction normalizeRadian(angle) {\n  angle %= PI2;\n\n  if (angle < 0) {\n    angle += PI2;\n  }\n\n  return angle;\n}\n\nexports.normalizeRadian = normalizeRadian;\n\n/***/ }),\n/* 515 */\n/***/ (function(module, exports) {\n\n// Simple LRU cache use doubly linked list\n// @module zrender/core/LRU\n\n/**\n * Simple double linked list. Compared with array, it has O(1) remove operation.\n * @constructor\n */\nvar LinkedList = function () {\n  /**\n   * @type {module:zrender/core/LRU~Entry}\n   */\n  this.head = null;\n  /**\n   * @type {module:zrender/core/LRU~Entry}\n   */\n\n  this.tail = null;\n  this._len = 0;\n};\n\nvar linkedListProto = LinkedList.prototype;\n/**\n * Insert a new value at the tail\n * @param  {} val\n * @return {module:zrender/core/LRU~Entry}\n */\n\nlinkedListProto.insert = function (val) {\n  var entry = new Entry(val);\n  this.insertEntry(entry);\n  return entry;\n};\n/**\n * Insert an entry at the tail\n * @param  {module:zrender/core/LRU~Entry} entry\n */\n\n\nlinkedListProto.insertEntry = function (entry) {\n  if (!this.head) {\n    this.head = this.tail = entry;\n  } else {\n    this.tail.next = entry;\n    entry.prev = this.tail;\n    entry.next = null;\n    this.tail = entry;\n  }\n\n  this._len++;\n};\n/**\n * Remove entry.\n * @param  {module:zrender/core/LRU~Entry} entry\n */\n\n\nlinkedListProto.remove = function (entry) {\n  var prev = entry.prev;\n  var next = entry.next;\n\n  if (prev) {\n    prev.next = next;\n  } else {\n    // Is head\n    this.head = next;\n  }\n\n  if (next) {\n    next.prev = prev;\n  } else {\n    // Is tail\n    this.tail = prev;\n  }\n\n  entry.next = entry.prev = null;\n  this._len--;\n};\n/**\n * @return {number}\n */\n\n\nlinkedListProto.len = function () {\n  return this._len;\n};\n/**\n * Clear list\n */\n\n\nlinkedListProto.clear = function () {\n  this.head = this.tail = null;\n  this._len = 0;\n};\n/**\n * @constructor\n * @param {} val\n */\n\n\nvar Entry = function (val) {\n  /**\n   * @type {}\n   */\n  this.value = val;\n  /**\n   * @type {module:zrender/core/LRU~Entry}\n   */\n\n  this.next;\n  /**\n   * @type {module:zrender/core/LRU~Entry}\n   */\n\n  this.prev;\n};\n/**\n * LRU Cache\n * @constructor\n * @alias module:zrender/core/LRU\n */\n\n\nvar LRU = function (maxSize) {\n  this._list = new LinkedList();\n  this._map = {};\n  this._maxSize = maxSize || 10;\n  this._lastRemovedEntry = null;\n};\n\nvar LRUProto = LRU.prototype;\n/**\n * @param  {string} key\n * @param  {} value\n * @return {} Removed value\n */\n\nLRUProto.put = function (key, value) {\n  var list = this._list;\n  var map = this._map;\n  var removed = null;\n\n  if (map[key] == null) {\n    var len = list.len(); // Reuse last removed entry\n\n    var entry = this._lastRemovedEntry;\n\n    if (len >= this._maxSize && len > 0) {\n      // Remove the least recently used\n      var leastUsedEntry = list.head;\n      list.remove(leastUsedEntry);\n      delete map[leastUsedEntry.key];\n      removed = leastUsedEntry.value;\n      this._lastRemovedEntry = leastUsedEntry;\n    }\n\n    if (entry) {\n      entry.value = value;\n    } else {\n      entry = new Entry(value);\n    }\n\n    entry.key = key;\n    list.insertEntry(entry);\n    map[key] = entry;\n  }\n\n  return removed;\n};\n/**\n * @param  {string} key\n * @return {}\n */\n\n\nLRUProto.get = function (key) {\n  var entry = this._map[key];\n  var list = this._list;\n\n  if (entry != null) {\n    // Put the latest used entry in the tail\n    if (entry !== list.tail) {\n      list.remove(entry);\n      list.insertEntry(entry);\n    }\n\n    return entry.value;\n  }\n};\n/**\n * Clear the cache\n */\n\n\nLRUProto.clear = function () {\n  this._list.clear();\n\n  this._map = {};\n};\n\nvar _default = LRU;\nmodule.exports = _default;\n\n/***/ }),\n/* 516 */\n/***/ (function(module, exports) {\n\n/**\n * zrender: 生成唯一id\n *\n * @author errorrik (errorrik@gmail.com)\n */\nvar idStart = 0x0907;\n\nfunction _default() {\n  return idStart++;\n}\n\nmodule.exports = _default;\n\n/***/ }),\n/* 517 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Path = __webpack_require__(461);\n\n// CompoundPath to improve performance\nvar _default = Path.extend({\n  type: 'compound',\n  shape: {\n    paths: null\n  },\n  _updatePathDirty: function () {\n    var dirtyPath = this.__dirtyPath;\n    var paths = this.shape.paths;\n\n    for (var i = 0; i < paths.length; i++) {\n      // Mark as dirty if any subpath is dirty\n      dirtyPath = dirtyPath || paths[i].__dirtyPath;\n    }\n\n    this.__dirtyPath = dirtyPath;\n    this.__dirty = this.__dirty || dirtyPath;\n  },\n  beforeBrush: function () {\n    this._updatePathDirty();\n\n    var paths = this.shape.paths || [];\n    var scale = this.getGlobalScale(); // Update path scale\n\n    for (var i = 0; i < paths.length; i++) {\n      if (!paths[i].path) {\n        paths[i].createPathProxy();\n      }\n\n      paths[i].path.setScale(scale[0], scale[1]);\n    }\n  },\n  buildPath: function (ctx, shape) {\n    var paths = shape.paths || [];\n\n    for (var i = 0; i < paths.length; i++) {\n      paths[i].buildPath(ctx, paths[i].shape, true);\n    }\n  },\n  afterBrush: function () {\n    var paths = this.shape.paths || [];\n\n    for (var i = 0; i < paths.length; i++) {\n      paths[i].__dirtyPath = false;\n    }\n  },\n  getBoundingRect: function () {\n    this._updatePathDirty();\n\n    return Path.prototype.getBoundingRect.call(this);\n  }\n});\n\nmodule.exports = _default;\n\n/***/ }),\n/* 518 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(460);\n\nvar Gradient = __webpack_require__(490);\n\n/**\n * x, y, x2, y2 are all percent from 0 to 1\n * @param {number} [x=0]\n * @param {number} [y=0]\n * @param {number} [x2=1]\n * @param {number} [y2=0]\n * @param {Array.<Object>} colorStops\n * @param {boolean} [globalCoord=false]\n */\nvar LinearGradient = function (x, y, x2, y2, colorStops, globalCoord) {\n  // Should do nothing more in this constructor. Because gradient can be\n  // declard by `color: {type: 'linear', colorStops: ...}`, where\n  // this constructor will not be called.\n  this.x = x == null ? 0 : x;\n  this.y = y == null ? 0 : y;\n  this.x2 = x2 == null ? 1 : x2;\n  this.y2 = y2 == null ? 0 : y2; // Can be cloned\n\n  this.type = 'linear'; // If use global coord\n\n  this.global = globalCoord || false;\n  Gradient.call(this, colorStops);\n};\n\nLinearGradient.prototype = {\n  constructor: LinearGradient\n};\nzrUtil.inherits(LinearGradient, Gradient);\nvar _default = LinearGradient;\nmodule.exports = _default;\n\n/***/ }),\n/* 519 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(460);\n\nvar Gradient = __webpack_require__(490);\n\n/**\n * x, y, r are all percent from 0 to 1\n * @param {number} [x=0.5]\n * @param {number} [y=0.5]\n * @param {number} [r=0.5]\n * @param {Array.<Object>} [colorStops]\n * @param {boolean} [globalCoord=false]\n */\nvar RadialGradient = function (x, y, r, colorStops, globalCoord) {\n  // Should do nothing more in this constructor. Because gradient can be\n  // declard by `color: {type: 'radial', colorStops: ...}`, where\n  // this constructor will not be called.\n  this.x = x == null ? 0.5 : x;\n  this.y = y == null ? 0.5 : y;\n  this.r = r == null ? 0.5 : r; // Can be cloned\n\n  this.type = 'radial'; // If use global coord\n\n  this.global = globalCoord || false;\n  Gradient.call(this, colorStops);\n};\n\nRadialGradient.prototype = {\n  constructor: RadialGradient\n};\nzrUtil.inherits(RadialGradient, Gradient);\nvar _default = RadialGradient;\nmodule.exports = _default;\n\n/***/ }),\n/* 520 */\n/***/ (function(module, exports) {\n\nvar STYLE_COMMON_PROPS = [['shadowBlur', 0], ['shadowOffsetX', 0], ['shadowOffsetY', 0], ['shadowColor', '#000'], ['lineCap', 'butt'], ['lineJoin', 'miter'], ['miterLimit', 10]]; // var SHADOW_PROPS = STYLE_COMMON_PROPS.slice(0, 4);\n// var LINE_PROPS = STYLE_COMMON_PROPS.slice(4);\n\nvar Style = function (opts, host) {\n  this.extendFrom(opts, false);\n  this.host = host;\n};\n\nfunction createLinearGradient(ctx, obj, rect) {\n  var x = obj.x == null ? 0 : obj.x;\n  var x2 = obj.x2 == null ? 1 : obj.x2;\n  var y = obj.y == null ? 0 : obj.y;\n  var y2 = obj.y2 == null ? 0 : obj.y2;\n\n  if (!obj.global) {\n    x = x * rect.width + rect.x;\n    x2 = x2 * rect.width + rect.x;\n    y = y * rect.height + rect.y;\n    y2 = y2 * rect.height + rect.y;\n  }\n\n  var canvasGradient = ctx.createLinearGradient(x, y, x2, y2);\n  return canvasGradient;\n}\n\nfunction createRadialGradient(ctx, obj, rect) {\n  var width = rect.width;\n  var height = rect.height;\n  var min = Math.min(width, height);\n  var x = obj.x == null ? 0.5 : obj.x;\n  var y = obj.y == null ? 0.5 : obj.y;\n  var r = obj.r == null ? 0.5 : obj.r;\n\n  if (!obj.global) {\n    x = x * width + rect.x;\n    y = y * height + rect.y;\n    r = r * min;\n  }\n\n  var canvasGradient = ctx.createRadialGradient(x, y, 0, x, y, r);\n  return canvasGradient;\n}\n\nStyle.prototype = {\n  constructor: Style,\n\n  /**\n   * @type {module:zrender/graphic/Displayable}\n   */\n  host: null,\n\n  /**\n   * @type {string}\n   */\n  fill: '#000',\n\n  /**\n   * @type {string}\n   */\n  stroke: null,\n\n  /**\n   * @type {number}\n   */\n  opacity: 1,\n\n  /**\n   * @type {Array.<number>}\n   */\n  lineDash: null,\n\n  /**\n   * @type {number}\n   */\n  lineDashOffset: 0,\n\n  /**\n   * @type {number}\n   */\n  shadowBlur: 0,\n\n  /**\n   * @type {number}\n   */\n  shadowOffsetX: 0,\n\n  /**\n   * @type {number}\n   */\n  shadowOffsetY: 0,\n\n  /**\n   * @type {number}\n   */\n  lineWidth: 1,\n\n  /**\n   * If stroke ignore scale\n   * @type {Boolean}\n   */\n  strokeNoScale: false,\n  // Bounding rect text configuration\n  // Not affected by element transform\n\n  /**\n   * @type {string}\n   */\n  text: null,\n\n  /**\n   * If `fontSize` or `fontFamily` exists, `font` will be reset by\n   * `fontSize`, `fontStyle`, `fontWeight`, `fontFamily`.\n   * So do not visit it directly in upper application (like echarts),\n   * but use `contain/text#makeFont` instead.\n   * @type {string}\n   */\n  font: null,\n\n  /**\n   * The same as font. Use font please.\n   * @deprecated\n   * @type {string}\n   */\n  textFont: null,\n\n  /**\n   * It helps merging respectively, rather than parsing an entire font string.\n   * @type {string}\n   */\n  fontStyle: null,\n\n  /**\n   * It helps merging respectively, rather than parsing an entire font string.\n   * @type {string}\n   */\n  fontWeight: null,\n\n  /**\n   * It helps merging respectively, rather than parsing an entire font string.\n   * Should be 12 but not '12px'.\n   * @type {number}\n   */\n  fontSize: null,\n\n  /**\n   * It helps merging respectively, rather than parsing an entire font string.\n   * @type {string}\n   */\n  fontFamily: null,\n\n  /**\n   * Reserved for special functinality, like 'hr'.\n   * @type {string}\n   */\n  textTag: null,\n\n  /**\n   * @type {string}\n   */\n  textFill: '#000',\n\n  /**\n   * @type {string}\n   */\n  textStroke: null,\n\n  /**\n   * @type {number}\n   */\n  textWidth: null,\n\n  /**\n   * Only for textBackground.\n   * @type {number}\n   */\n  textHeight: null,\n\n  /**\n   * textStroke may be set as some color as a default\n   * value in upper applicaion, where the default value\n   * of textStrokeWidth should be 0 to make sure that\n   * user can choose to do not use text stroke.\n   * @type {number}\n   */\n  textStrokeWidth: 0,\n\n  /**\n   * @type {number}\n   */\n  textLineHeight: null,\n\n  /**\n   * 'inside', 'left', 'right', 'top', 'bottom'\n   * [x, y]\n   * Based on x, y of rect.\n   * @type {string|Array.<number>}\n   * @default 'inside'\n   */\n  textPosition: 'inside',\n\n  /**\n   * If not specified, use the boundingRect of a `displayable`.\n   * @type {Object}\n   */\n  textRect: null,\n\n  /**\n   * [x, y]\n   * @type {Array.<number>}\n   */\n  textOffset: null,\n\n  /**\n   * @type {string}\n   */\n  textAlign: null,\n\n  /**\n   * @type {string}\n   */\n  textVerticalAlign: null,\n\n  /**\n   * @type {number}\n   */\n  textDistance: 5,\n\n  /**\n   * @type {string}\n   */\n  textShadowColor: 'transparent',\n\n  /**\n   * @type {number}\n   */\n  textShadowBlur: 0,\n\n  /**\n   * @type {number}\n   */\n  textShadowOffsetX: 0,\n\n  /**\n   * @type {number}\n   */\n  textShadowOffsetY: 0,\n\n  /**\n   * @type {string}\n   */\n  textBoxShadowColor: 'transparent',\n\n  /**\n   * @type {number}\n   */\n  textBoxShadowBlur: 0,\n\n  /**\n   * @type {number}\n   */\n  textBoxShadowOffsetX: 0,\n\n  /**\n   * @type {number}\n   */\n  textBoxShadowOffsetY: 0,\n\n  /**\n   * Whether transform text.\n   * Only useful in Path and Image element\n   * @type {boolean}\n   */\n  transformText: false,\n\n  /**\n   * Text rotate around position of Path or Image\n   * Only useful in Path and Image element and transformText is false.\n   */\n  textRotation: 0,\n\n  /**\n   * Text origin of text rotation, like [10, 40].\n   * Based on x, y of rect.\n   * Useful in label rotation of circular symbol.\n   * By default, this origin is textPosition.\n   * Can be 'center'.\n   * @type {string|Array.<number>}\n   */\n  textOrigin: null,\n\n  /**\n   * @type {string}\n   */\n  textBackgroundColor: null,\n\n  /**\n   * @type {string}\n   */\n  textBorderColor: null,\n\n  /**\n   * @type {number}\n   */\n  textBorderWidth: 0,\n\n  /**\n   * @type {number}\n   */\n  textBorderRadius: 0,\n\n  /**\n   * Can be `2` or `[2, 4]` or `[2, 3, 4, 5]`\n   * @type {number|Array.<number>}\n   */\n  textPadding: null,\n\n  /**\n   * Text styles for rich text.\n   * @type {Object}\n   */\n  rich: null,\n\n  /**\n   * {outerWidth, outerHeight, ellipsis, placeholder}\n   * @type {Object}\n   */\n  truncate: null,\n\n  /**\n   * https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/globalCompositeOperation\n   * @type {string}\n   */\n  blend: null,\n\n  /**\n   * @param {CanvasRenderingContext2D} ctx\n   */\n  bind: function (ctx, el, prevEl) {\n    var style = this;\n    var prevStyle = prevEl && prevEl.style;\n    var firstDraw = !prevStyle;\n\n    for (var i = 0; i < STYLE_COMMON_PROPS.length; i++) {\n      var prop = STYLE_COMMON_PROPS[i];\n      var styleName = prop[0];\n\n      if (firstDraw || style[styleName] !== prevStyle[styleName]) {\n        // FIXME Invalid property value will cause style leak from previous element.\n        ctx[styleName] = style[styleName] || prop[1];\n      }\n    }\n\n    if (firstDraw || style.fill !== prevStyle.fill) {\n      ctx.fillStyle = style.fill;\n    }\n\n    if (firstDraw || style.stroke !== prevStyle.stroke) {\n      ctx.strokeStyle = style.stroke;\n    }\n\n    if (firstDraw || style.opacity !== prevStyle.opacity) {\n      ctx.globalAlpha = style.opacity == null ? 1 : style.opacity;\n    }\n\n    if (firstDraw || style.blend !== prevStyle.blend) {\n      ctx.globalCompositeOperation = style.blend || 'source-over';\n    }\n\n    if (this.hasStroke()) {\n      var lineWidth = style.lineWidth;\n      ctx.lineWidth = lineWidth / (this.strokeNoScale && el && el.getLineScale ? el.getLineScale() : 1);\n    }\n  },\n  hasFill: function () {\n    var fill = this.fill;\n    return fill != null && fill !== 'none';\n  },\n  hasStroke: function () {\n    var stroke = this.stroke;\n    return stroke != null && stroke !== 'none' && this.lineWidth > 0;\n  },\n\n  /**\n   * Extend from other style\n   * @param {zrender/graphic/Style} otherStyle\n   * @param {boolean} overwrite true: overwrirte any way.\n   *                            false: overwrite only when !target.hasOwnProperty\n   *                            others: overwrite when property is not null/undefined.\n   */\n  extendFrom: function (otherStyle, overwrite) {\n    if (otherStyle) {\n      for (var name in otherStyle) {\n        if (otherStyle.hasOwnProperty(name) && (overwrite === true || (overwrite === false ? !this.hasOwnProperty(name) : otherStyle[name] != null))) {\n          this[name] = otherStyle[name];\n        }\n      }\n    }\n  },\n\n  /**\n   * Batch setting style with a given object\n   * @param {Object|string} obj\n   * @param {*} [obj]\n   */\n  set: function (obj, value) {\n    if (typeof obj === 'string') {\n      this[obj] = value;\n    } else {\n      this.extendFrom(obj, true);\n    }\n  },\n\n  /**\n   * Clone\n   * @return {zrender/graphic/Style} [description]\n   */\n  clone: function () {\n    var newStyle = new this.constructor();\n    newStyle.extendFrom(this, true);\n    return newStyle;\n  },\n  getGradient: function (ctx, obj, rect) {\n    var method = obj.type === 'radial' ? createRadialGradient : createLinearGradient;\n    var canvasGradient = method(ctx, obj, rect);\n    var colorStops = obj.colorStops;\n\n    for (var i = 0; i < colorStops.length; i++) {\n      canvasGradient.addColorStop(colorStops[i].offset, colorStops[i].color);\n    }\n\n    return canvasGradient;\n  }\n};\nvar styleProto = Style.prototype;\n\nfor (var i = 0; i < STYLE_COMMON_PROPS.length; i++) {\n  var prop = STYLE_COMMON_PROPS[i];\n\n  if (!(prop[0] in styleProto)) {\n    styleProto[prop[0]] = prop[1];\n  }\n} // Provide for others\n\n\nStyle.getGradient = styleProto.getGradient;\nvar _default = Style;\nmodule.exports = _default;\n\n/***/ }),\n/* 521 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar smoothSpline = __webpack_require__(614);\n\nvar smoothBezier = __webpack_require__(613);\n\nfunction buildPath(ctx, shape, closePath) {\n  var points = shape.points;\n  var smooth = shape.smooth;\n\n  if (points && points.length >= 2) {\n    if (smooth && smooth !== 'spline') {\n      var controlPoints = smoothBezier(points, smooth, closePath, shape.smoothConstraint);\n      ctx.moveTo(points[0][0], points[0][1]);\n      var len = points.length;\n\n      for (var i = 0; i < (closePath ? len : len - 1); i++) {\n        var cp1 = controlPoints[i * 2];\n        var cp2 = controlPoints[i * 2 + 1];\n        var p = points[(i + 1) % len];\n        ctx.bezierCurveTo(cp1[0], cp1[1], cp2[0], cp2[1], p[0], p[1]);\n      }\n    } else {\n      if (smooth === 'spline') {\n        points = smoothSpline(points, closePath);\n      }\n\n      ctx.moveTo(points[0][0], points[0][1]);\n\n      for (var i = 1, l = points.length; i < l; i++) {\n        ctx.lineTo(points[i][0], points[i][1]);\n      }\n    }\n\n    closePath && ctx.closePath();\n  }\n}\n\nexports.buildPath = buildPath;\n\n/***/ }),\n/* 522 */\n/***/ (function(module, exports) {\n\nfunction buildPath(ctx, shape) {\n  var x = shape.x;\n  var y = shape.y;\n  var width = shape.width;\n  var height = shape.height;\n  var r = shape.r;\n  var r1;\n  var r2;\n  var r3;\n  var r4; // Convert width and height to positive for better borderRadius\n\n  if (width < 0) {\n    x = x + width;\n    width = -width;\n  }\n\n  if (height < 0) {\n    y = y + height;\n    height = -height;\n  }\n\n  if (typeof r === 'number') {\n    r1 = r2 = r3 = r4 = r;\n  } else if (r instanceof Array) {\n    if (r.length === 1) {\n      r1 = r2 = r3 = r4 = r[0];\n    } else if (r.length === 2) {\n      r1 = r3 = r[0];\n      r2 = r4 = r[1];\n    } else if (r.length === 3) {\n      r1 = r[0];\n      r2 = r4 = r[1];\n      r3 = r[2];\n    } else {\n      r1 = r[0];\n      r2 = r[1];\n      r3 = r[2];\n      r4 = r[3];\n    }\n  } else {\n    r1 = r2 = r3 = r4 = 0;\n  }\n\n  var total;\n\n  if (r1 + r2 > width) {\n    total = r1 + r2;\n    r1 *= width / total;\n    r2 *= width / total;\n  }\n\n  if (r3 + r4 > width) {\n    total = r3 + r4;\n    r3 *= width / total;\n    r4 *= width / total;\n  }\n\n  if (r2 + r3 > height) {\n    total = r2 + r3;\n    r2 *= height / total;\n    r3 *= height / total;\n  }\n\n  if (r1 + r4 > height) {\n    total = r1 + r4;\n    r1 *= height / total;\n    r4 *= height / total;\n  }\n\n  ctx.moveTo(x + r1, y);\n  ctx.lineTo(x + width - r2, y);\n  r2 !== 0 && ctx.quadraticCurveTo(x + width, y, x + width, y + r2);\n  ctx.lineTo(x + width, y + height - r3);\n  r3 !== 0 && ctx.quadraticCurveTo(x + width, y + height, x + width - r3, y + height);\n  ctx.lineTo(x + r4, y + height);\n  r4 !== 0 && ctx.quadraticCurveTo(x, y + height, x, y + height - r4);\n  ctx.lineTo(x, y + r1);\n  r1 !== 0 && ctx.quadraticCurveTo(x, y, x + r1, y);\n}\n\nexports.buildPath = buildPath;\n\n/***/ }),\n/* 523 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar textHelper = __webpack_require__(491);\n\nvar BoundingRect = __webpack_require__(467);\n\n/**\n * Mixin for drawing text in a element bounding rect\n * @module zrender/mixin/RectText\n */\nvar tmpRect = new BoundingRect();\n\nvar RectText = function () {};\n\nRectText.prototype = {\n  constructor: RectText,\n\n  /**\n   * Draw text in a rect with specified position.\n   * @param  {CanvasRenderingContext2D} ctx\n   * @param  {Object} rect Displayable rect\n   */\n  drawRectText: function (ctx, rect) {\n    var style = this.style;\n    rect = style.textRect || rect; // Optimize, avoid normalize every time.\n\n    this.__dirty && textHelper.normalizeTextStyle(style, true);\n    var text = style.text; // Convert to string\n\n    text != null && (text += '');\n\n    if (!textHelper.needDrawText(text, style)) {\n      return;\n    } // FIXME\n\n\n    ctx.save(); // Transform rect to view space\n\n    var transform = this.transform;\n\n    if (!style.transformText) {\n      if (transform) {\n        tmpRect.copy(rect);\n        tmpRect.applyTransform(transform);\n        rect = tmpRect;\n      }\n    } else {\n      this.setTransform(ctx);\n    } // transformText and textRotation can not be used at the same time.\n\n\n    textHelper.renderText(this, ctx, text, style, rect);\n    ctx.restore();\n  }\n};\nvar _default = RectText;\nmodule.exports = _default;\n\n/***/ }),\n/* 524 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Path = __webpack_require__(461);\n\n/**\n * 圆弧\n * @module zrender/graphic/shape/Arc\n */\nvar _default = Path.extend({\n  type: 'arc',\n  shape: {\n    cx: 0,\n    cy: 0,\n    r: 0,\n    startAngle: 0,\n    endAngle: Math.PI * 2,\n    clockwise: true\n  },\n  style: {\n    stroke: '#000',\n    fill: null\n  },\n  buildPath: function (ctx, shape) {\n    var x = shape.cx;\n    var y = shape.cy;\n    var r = Math.max(shape.r, 0);\n    var startAngle = shape.startAngle;\n    var endAngle = shape.endAngle;\n    var clockwise = shape.clockwise;\n    var unitX = Math.cos(startAngle);\n    var unitY = Math.sin(startAngle);\n    ctx.moveTo(unitX * r + x, unitY * r + y);\n    ctx.arc(x, y, r, startAngle, endAngle, !clockwise);\n  }\n});\n\nmodule.exports = _default;\n\n/***/ }),\n/* 525 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Path = __webpack_require__(461);\n\nvar vec2 = __webpack_require__(463);\n\nvar _curve = __webpack_require__(477);\n\nvar quadraticSubdivide = _curve.quadraticSubdivide;\nvar cubicSubdivide = _curve.cubicSubdivide;\nvar quadraticAt = _curve.quadraticAt;\nvar cubicAt = _curve.cubicAt;\nvar quadraticDerivativeAt = _curve.quadraticDerivativeAt;\nvar cubicDerivativeAt = _curve.cubicDerivativeAt;\n\n/**\n * 贝塞尔曲线\n * @module zrender/shape/BezierCurve\n */\nvar out = [];\n\nfunction someVectorAt(shape, t, isTangent) {\n  var cpx2 = shape.cpx2;\n  var cpy2 = shape.cpy2;\n\n  if (cpx2 === null || cpy2 === null) {\n    return [(isTangent ? cubicDerivativeAt : cubicAt)(shape.x1, shape.cpx1, shape.cpx2, shape.x2, t), (isTangent ? cubicDerivativeAt : cubicAt)(shape.y1, shape.cpy1, shape.cpy2, shape.y2, t)];\n  } else {\n    return [(isTangent ? quadraticDerivativeAt : quadraticAt)(shape.x1, shape.cpx1, shape.x2, t), (isTangent ? quadraticDerivativeAt : quadraticAt)(shape.y1, shape.cpy1, shape.y2, t)];\n  }\n}\n\nvar _default = Path.extend({\n  type: 'bezier-curve',\n  shape: {\n    x1: 0,\n    y1: 0,\n    x2: 0,\n    y2: 0,\n    cpx1: 0,\n    cpy1: 0,\n    // cpx2: 0,\n    // cpy2: 0\n    // Curve show percent, for animating\n    percent: 1\n  },\n  style: {\n    stroke: '#000',\n    fill: null\n  },\n  buildPath: function (ctx, shape) {\n    var x1 = shape.x1;\n    var y1 = shape.y1;\n    var x2 = shape.x2;\n    var y2 = shape.y2;\n    var cpx1 = shape.cpx1;\n    var cpy1 = shape.cpy1;\n    var cpx2 = shape.cpx2;\n    var cpy2 = shape.cpy2;\n    var percent = shape.percent;\n\n    if (percent === 0) {\n      return;\n    }\n\n    ctx.moveTo(x1, y1);\n\n    if (cpx2 == null || cpy2 == null) {\n      if (percent < 1) {\n        quadraticSubdivide(x1, cpx1, x2, percent, out);\n        cpx1 = out[1];\n        x2 = out[2];\n        quadraticSubdivide(y1, cpy1, y2, percent, out);\n        cpy1 = out[1];\n        y2 = out[2];\n      }\n\n      ctx.quadraticCurveTo(cpx1, cpy1, x2, y2);\n    } else {\n      if (percent < 1) {\n        cubicSubdivide(x1, cpx1, cpx2, x2, percent, out);\n        cpx1 = out[1];\n        cpx2 = out[2];\n        x2 = out[3];\n        cubicSubdivide(y1, cpy1, cpy2, y2, percent, out);\n        cpy1 = out[1];\n        cpy2 = out[2];\n        y2 = out[3];\n      }\n\n      ctx.bezierCurveTo(cpx1, cpy1, cpx2, cpy2, x2, y2);\n    }\n  },\n\n  /**\n   * Get point at percent\n   * @param  {number} t\n   * @return {Array.<number>}\n   */\n  pointAt: function (t) {\n    return someVectorAt(this.shape, t, false);\n  },\n\n  /**\n   * Get tangent at percent\n   * @param  {number} t\n   * @return {Array.<number>}\n   */\n  tangentAt: function (t) {\n    var p = someVectorAt(this.shape, t, true);\n    return vec2.normalize(p, p);\n  }\n});\n\nmodule.exports = _default;\n\n/***/ }),\n/* 526 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Path = __webpack_require__(461);\n\n/**\n * 圆形\n * @module zrender/shape/Circle\n */\nvar _default = Path.extend({\n  type: 'circle',\n  shape: {\n    cx: 0,\n    cy: 0,\n    r: 0\n  },\n  buildPath: function (ctx, shape, inBundle) {\n    // Better stroking in ShapeBundle\n    // Always do it may have performence issue ( fill may be 2x more cost)\n    if (inBundle) {\n      ctx.moveTo(shape.cx + shape.r, shape.cy);\n    } // else {\n    //     if (ctx.allocate && !ctx.data.length) {\n    //         ctx.allocate(ctx.CMD_MEM_SIZE.A);\n    //     }\n    // }\n    // Better stroking in ShapeBundle\n    // ctx.moveTo(shape.cx + shape.r, shape.cy);\n\n\n    ctx.arc(shape.cx, shape.cy, shape.r, 0, Math.PI * 2, true);\n  }\n});\n\nmodule.exports = _default;\n\n/***/ }),\n/* 527 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Path = __webpack_require__(461);\n\n/**\n * 直线\n * @module zrender/graphic/shape/Line\n */\nvar _default = Path.extend({\n  type: 'line',\n  shape: {\n    // Start point\n    x1: 0,\n    y1: 0,\n    // End point\n    x2: 0,\n    y2: 0,\n    percent: 1\n  },\n  style: {\n    stroke: '#000',\n    fill: null\n  },\n  buildPath: function (ctx, shape) {\n    var x1 = shape.x1;\n    var y1 = shape.y1;\n    var x2 = shape.x2;\n    var y2 = shape.y2;\n    var percent = shape.percent;\n\n    if (percent === 0) {\n      return;\n    }\n\n    ctx.moveTo(x1, y1);\n\n    if (percent < 1) {\n      x2 = x1 * (1 - percent) + x2 * percent;\n      y2 = y1 * (1 - percent) + y2 * percent;\n    }\n\n    ctx.lineTo(x2, y2);\n  },\n\n  /**\n   * Get point at percent\n   * @param  {number} percent\n   * @return {Array.<number>}\n   */\n  pointAt: function (p) {\n    var shape = this.shape;\n    return [shape.x1 * (1 - p) + shape.x2 * p, shape.y1 * (1 - p) + shape.y2 * p];\n  }\n});\n\nmodule.exports = _default;\n\n/***/ }),\n/* 528 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Path = __webpack_require__(461);\n\nvar polyHelper = __webpack_require__(521);\n\n/**\n * 多边形\n * @module zrender/shape/Polygon\n */\nvar _default = Path.extend({\n  type: 'polygon',\n  shape: {\n    points: null,\n    smooth: false,\n    smoothConstraint: null\n  },\n  buildPath: function (ctx, shape) {\n    polyHelper.buildPath(ctx, shape, true);\n  }\n});\n\nmodule.exports = _default;\n\n/***/ }),\n/* 529 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Path = __webpack_require__(461);\n\nvar polyHelper = __webpack_require__(521);\n\n/**\n * @module zrender/graphic/shape/Polyline\n */\nvar _default = Path.extend({\n  type: 'polyline',\n  shape: {\n    points: null,\n    smooth: false,\n    smoothConstraint: null\n  },\n  style: {\n    stroke: '#000',\n    fill: null\n  },\n  buildPath: function (ctx, shape) {\n    polyHelper.buildPath(ctx, shape, false);\n  }\n});\n\nmodule.exports = _default;\n\n/***/ }),\n/* 530 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Path = __webpack_require__(461);\n\nvar roundRectHelper = __webpack_require__(522);\n\n/**\n * 矩形\n * @module zrender/graphic/shape/Rect\n */\nvar _default = Path.extend({\n  type: 'rect',\n  shape: {\n    // 左上、右上、右下、左下角的半径依次为r1、r2、r3、r4\n    // r缩写为1         相当于 [1, 1, 1, 1]\n    // r缩写为[1]       相当于 [1, 1, 1, 1]\n    // r缩写为[1, 2]    相当于 [1, 2, 1, 2]\n    // r缩写为[1, 2, 3] 相当于 [1, 2, 3, 2]\n    r: 0,\n    x: 0,\n    y: 0,\n    width: 0,\n    height: 0\n  },\n  buildPath: function (ctx, shape) {\n    var x = shape.x;\n    var y = shape.y;\n    var width = shape.width;\n    var height = shape.height;\n\n    if (!shape.r) {\n      ctx.rect(x, y, width, height);\n    } else {\n      roundRectHelper.buildPath(ctx, shape);\n    }\n\n    ctx.closePath();\n    return;\n  }\n});\n\nmodule.exports = _default;\n\n/***/ }),\n/* 531 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Path = __webpack_require__(461);\n\n/**\n * 圆环\n * @module zrender/graphic/shape/Ring\n */\nvar _default = Path.extend({\n  type: 'ring',\n  shape: {\n    cx: 0,\n    cy: 0,\n    r: 0,\n    r0: 0\n  },\n  buildPath: function (ctx, shape) {\n    var x = shape.cx;\n    var y = shape.cy;\n    var PI2 = Math.PI * 2;\n    ctx.moveTo(x + shape.r, y);\n    ctx.arc(x, y, shape.r, 0, PI2, false);\n    ctx.moveTo(x + shape.r0, y);\n    ctx.arc(x, y, shape.r0, 0, PI2, true);\n  }\n});\n\nmodule.exports = _default;\n\n/***/ }),\n/* 532 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Path = __webpack_require__(461);\n\nvar fixClipWithShadow = __webpack_require__(612);\n\n/**\n * 扇形\n * @module zrender/graphic/shape/Sector\n */\nvar _default = Path.extend({\n  type: 'sector',\n  shape: {\n    cx: 0,\n    cy: 0,\n    r0: 0,\n    r: 0,\n    startAngle: 0,\n    endAngle: Math.PI * 2,\n    clockwise: true\n  },\n  brush: fixClipWithShadow(Path.prototype.brush),\n  buildPath: function (ctx, shape) {\n    var x = shape.cx;\n    var y = shape.cy;\n    var r0 = Math.max(shape.r0 || 0, 0);\n    var r = Math.max(shape.r, 0);\n    var startAngle = shape.startAngle;\n    var endAngle = shape.endAngle;\n    var clockwise = shape.clockwise;\n    var unitX = Math.cos(startAngle);\n    var unitY = Math.sin(startAngle);\n    ctx.moveTo(unitX * r0 + x, unitY * r0 + y);\n    ctx.lineTo(unitX * r + x, unitY * r + y);\n    ctx.arc(x, y, r, startAngle, endAngle, !clockwise);\n    ctx.lineTo(Math.cos(endAngle) * r0 + x, Math.sin(endAngle) * r0 + y);\n\n    if (r0 !== 0) {\n      ctx.arc(x, y, r0, endAngle, startAngle, clockwise);\n    }\n\n    ctx.closePath();\n  }\n});\n\nmodule.exports = _default;\n\n/***/ }),\n/* 533 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _core = __webpack_require__(500);\n\nvar createElement = _core.createElement;\n\nvar zrUtil = __webpack_require__(460);\n\nvar Path = __webpack_require__(461);\n\nvar ZImage = __webpack_require__(479);\n\nvar ZText = __webpack_require__(480);\n\nvar _graphic = __webpack_require__(501);\n\nvar svgPath = _graphic.path;\nvar svgImage = _graphic.image;\nvar svgText = _graphic.text;\n\n/**\n * @file Manages elements that can be defined in <defs> in SVG,\n *       e.g., gradients, clip path, etc.\n * @author Zhang Wenli\n */\nvar MARK_UNUSED = '0';\nvar MARK_USED = '1';\n/**\n * Manages elements that can be defined in <defs> in SVG,\n * e.g., gradients, clip path, etc.\n *\n * @class\n * @param {SVGElement}      svgRoot   root of SVG document\n * @param {string|string[]} tagNames  possible tag names\n * @param {string}          markLabel label name to make if the element\n *                                    is used\n */\n\nfunction Definable(svgRoot, tagNames, markLabel) {\n  this._svgRoot = svgRoot;\n  this._tagNames = typeof tagNames === 'string' ? [tagNames] : tagNames;\n  this._markLabel = markLabel;\n  this.nextId = 0;\n}\n\nDefinable.prototype.createElement = createElement;\n/**\n * Get the <defs> tag for svgRoot; optionally creates one if not exists.\n *\n * @param {boolean} isForceCreating if need to create when not exists\n * @return {SVGDefsElement} SVG <defs> element, null if it doesn't\n * exist and isForceCreating is false\n */\n\nDefinable.prototype.getDefs = function (isForceCreating) {\n  var svgRoot = this._svgRoot;\n\n  var defs = this._svgRoot.getElementsByTagName('defs');\n\n  if (defs.length === 0) {\n    // Not exist\n    if (isForceCreating) {\n      defs = svgRoot.insertBefore(this.createElement('defs'), // Create new tag\n      svgRoot.firstChild // Insert in the front of svg\n      );\n\n      if (!defs.contains) {\n        // IE doesn't support contains method\n        defs.contains = function (el) {\n          var children = defs.children;\n\n          if (!children) {\n            return false;\n          }\n\n          for (var i = children.length - 1; i >= 0; --i) {\n            if (children[i] === el) {\n              return true;\n            }\n          }\n\n          return false;\n        };\n      }\n\n      return defs;\n    } else {\n      return null;\n    }\n  } else {\n    return defs[0];\n  }\n};\n/**\n * Update DOM element if necessary.\n *\n * @param {Object|string} element style element. e.g., for gradient,\n *                                it may be '#ccc' or {type: 'linear', ...}\n * @param {Function|undefined} onUpdate update callback\n */\n\n\nDefinable.prototype.update = function (element, onUpdate) {\n  if (!element) {\n    return;\n  }\n\n  var defs = this.getDefs(false);\n\n  if (element._dom && defs.contains(element._dom)) {\n    // Update DOM\n    if (typeof onUpdate === 'function') {\n      onUpdate();\n    }\n  } else {\n    // No previous dom, create new\n    var dom = this.add(element);\n\n    if (dom) {\n      element._dom = dom;\n    }\n  }\n};\n/**\n * Add gradient dom to defs\n *\n * @param {SVGElement} dom DOM to be added to <defs>\n */\n\n\nDefinable.prototype.addDom = function (dom) {\n  var defs = this.getDefs(true);\n  defs.appendChild(dom);\n};\n/**\n * Remove DOM of a given element.\n *\n * @param {SVGElement} element element to remove dom\n */\n\n\nDefinable.prototype.removeDom = function (element) {\n  var defs = this.getDefs(false);\n  defs.removeChild(element._dom);\n};\n/**\n * Get DOMs of this element.\n *\n * @return {HTMLDomElement} doms of this defineable elements in <defs>\n */\n\n\nDefinable.prototype.getDoms = function () {\n  var defs = this.getDefs(false);\n\n  if (!defs) {\n    // No dom when defs is not defined\n    return [];\n  }\n\n  var doms = [];\n  zrUtil.each(this._tagNames, function (tagName) {\n    var tags = defs.getElementsByTagName(tagName); // Note that tags is HTMLCollection, which is array-like\n    // rather than real array.\n    // So `doms.concat(tags)` add tags as one object.\n\n    doms = doms.concat([].slice.call(tags));\n  });\n  return doms;\n};\n/**\n * Mark DOMs to be unused before painting, and clear unused ones at the end\n * of the painting.\n */\n\n\nDefinable.prototype.markAllUnused = function () {\n  var doms = this.getDoms();\n  var that = this;\n  zrUtil.each(doms, function (dom) {\n    dom[that._markLabel] = MARK_UNUSED;\n  });\n};\n/**\n * Mark a single DOM to be used.\n *\n * @param {SVGElement} dom DOM to mark\n */\n\n\nDefinable.prototype.markUsed = function (dom) {\n  if (dom) {\n    dom[this._markLabel] = MARK_USED;\n  }\n};\n/**\n * Remove unused DOMs defined in <defs>\n */\n\n\nDefinable.prototype.removeUnused = function () {\n  var defs = this.getDefs(false);\n\n  if (!defs) {\n    // Nothing to remove\n    return;\n  }\n\n  var doms = this.getDoms();\n  var that = this;\n  zrUtil.each(doms, function (dom) {\n    if (dom[that._markLabel] !== MARK_USED) {\n      // Remove gradient\n      defs.removeChild(dom);\n    }\n  });\n};\n/**\n * Get SVG proxy.\n *\n * @param {Displayable} displayable displayable element\n * @return {Path|Image|Text} svg proxy of given element\n */\n\n\nDefinable.prototype.getSvgProxy = function (displayable) {\n  if (displayable instanceof Path) {\n    return svgPath;\n  } else if (displayable instanceof ZImage) {\n    return svgImage;\n  } else if (displayable instanceof ZText) {\n    return svgText;\n  } else {\n    return svgPath;\n  }\n};\n/**\n * Get text SVG element.\n *\n * @param {Displayable} displayable displayable element\n * @return {SVGElement} SVG element of text\n */\n\n\nDefinable.prototype.getTextSvgElement = function (displayable) {\n  return displayable.__textSvgEl;\n};\n/**\n * Get SVG element.\n *\n * @param {Displayable} displayable displayable element\n * @return {SVGElement} SVG element\n */\n\n\nDefinable.prototype.getSvgElement = function (displayable) {\n  return displayable.__svgEl;\n};\n\nvar _default = Definable;\nmodule.exports = _default;\n\n/***/ }),\n/* 534 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Path = __webpack_require__(461);\n\nvar PathProxy = __webpack_require__(476);\n\nvar transformPath = __webpack_require__(629);\n\n// command chars\nvar cc = ['m', 'M', 'l', 'L', 'v', 'V', 'h', 'H', 'z', 'Z', 'c', 'C', 'q', 'Q', 't', 'T', 's', 'S', 'a', 'A'];\nvar mathSqrt = Math.sqrt;\nvar mathSin = Math.sin;\nvar mathCos = Math.cos;\nvar PI = Math.PI;\n\nvar vMag = function (v) {\n  return Math.sqrt(v[0] * v[0] + v[1] * v[1]);\n};\n\nvar vRatio = function (u, v) {\n  return (u[0] * v[0] + u[1] * v[1]) / (vMag(u) * vMag(v));\n};\n\nvar vAngle = function (u, v) {\n  return (u[0] * v[1] < u[1] * v[0] ? -1 : 1) * Math.acos(vRatio(u, v));\n};\n\nfunction processArc(x1, y1, x2, y2, fa, fs, rx, ry, psiDeg, cmd, path) {\n  var psi = psiDeg * (PI / 180.0);\n  var xp = mathCos(psi) * (x1 - x2) / 2.0 + mathSin(psi) * (y1 - y2) / 2.0;\n  var yp = -1 * mathSin(psi) * (x1 - x2) / 2.0 + mathCos(psi) * (y1 - y2) / 2.0;\n  var lambda = xp * xp / (rx * rx) + yp * yp / (ry * ry);\n\n  if (lambda > 1) {\n    rx *= mathSqrt(lambda);\n    ry *= mathSqrt(lambda);\n  }\n\n  var f = (fa === fs ? -1 : 1) * mathSqrt((rx * rx * (ry * ry) - rx * rx * (yp * yp) - ry * ry * (xp * xp)) / (rx * rx * (yp * yp) + ry * ry * (xp * xp))) || 0;\n  var cxp = f * rx * yp / ry;\n  var cyp = f * -ry * xp / rx;\n  var cx = (x1 + x2) / 2.0 + mathCos(psi) * cxp - mathSin(psi) * cyp;\n  var cy = (y1 + y2) / 2.0 + mathSin(psi) * cxp + mathCos(psi) * cyp;\n  var theta = vAngle([1, 0], [(xp - cxp) / rx, (yp - cyp) / ry]);\n  var u = [(xp - cxp) / rx, (yp - cyp) / ry];\n  var v = [(-1 * xp - cxp) / rx, (-1 * yp - cyp) / ry];\n  var dTheta = vAngle(u, v);\n\n  if (vRatio(u, v) <= -1) {\n    dTheta = PI;\n  }\n\n  if (vRatio(u, v) >= 1) {\n    dTheta = 0;\n  }\n\n  if (fs === 0 && dTheta > 0) {\n    dTheta = dTheta - 2 * PI;\n  }\n\n  if (fs === 1 && dTheta < 0) {\n    dTheta = dTheta + 2 * PI;\n  }\n\n  path.addData(cmd, cx, cy, rx, ry, theta, dTheta, psi, fs);\n}\n\nfunction createPathProxyFromString(data) {\n  if (!data) {\n    return [];\n  } // command string\n\n\n  var cs = data.replace(/-/g, ' -').replace(/  /g, ' ').replace(/ /g, ',').replace(/,,/g, ',');\n  var n; // create pipes so that we can split the data\n\n  for (n = 0; n < cc.length; n++) {\n    cs = cs.replace(new RegExp(cc[n], 'g'), '|' + cc[n]);\n  } // create array\n\n\n  var arr = cs.split('|'); // init context point\n\n  var cpx = 0;\n  var cpy = 0;\n  var path = new PathProxy();\n  var CMD = PathProxy.CMD;\n  var prevCmd;\n\n  for (n = 1; n < arr.length; n++) {\n    var str = arr[n];\n    var c = str.charAt(0);\n    var off = 0;\n    var p = str.slice(1).replace(/e,-/g, 'e-').split(',');\n    var cmd;\n\n    if (p.length > 0 && p[0] === '') {\n      p.shift();\n    }\n\n    for (var i = 0; i < p.length; i++) {\n      p[i] = parseFloat(p[i]);\n    }\n\n    while (off < p.length && !isNaN(p[off])) {\n      if (isNaN(p[0])) {\n        break;\n      }\n\n      var ctlPtx;\n      var ctlPty;\n      var rx;\n      var ry;\n      var psi;\n      var fa;\n      var fs;\n      var x1 = cpx;\n      var y1 = cpy; // convert l, H, h, V, and v to L\n\n      switch (c) {\n        case 'l':\n          cpx += p[off++];\n          cpy += p[off++];\n          cmd = CMD.L;\n          path.addData(cmd, cpx, cpy);\n          break;\n\n        case 'L':\n          cpx = p[off++];\n          cpy = p[off++];\n          cmd = CMD.L;\n          path.addData(cmd, cpx, cpy);\n          break;\n\n        case 'm':\n          cpx += p[off++];\n          cpy += p[off++];\n          cmd = CMD.M;\n          path.addData(cmd, cpx, cpy);\n          c = 'l';\n          break;\n\n        case 'M':\n          cpx = p[off++];\n          cpy = p[off++];\n          cmd = CMD.M;\n          path.addData(cmd, cpx, cpy);\n          c = 'L';\n          break;\n\n        case 'h':\n          cpx += p[off++];\n          cmd = CMD.L;\n          path.addData(cmd, cpx, cpy);\n          break;\n\n        case 'H':\n          cpx = p[off++];\n          cmd = CMD.L;\n          path.addData(cmd, cpx, cpy);\n          break;\n\n        case 'v':\n          cpy += p[off++];\n          cmd = CMD.L;\n          path.addData(cmd, cpx, cpy);\n          break;\n\n        case 'V':\n          cpy = p[off++];\n          cmd = CMD.L;\n          path.addData(cmd, cpx, cpy);\n          break;\n\n        case 'C':\n          cmd = CMD.C;\n          path.addData(cmd, p[off++], p[off++], p[off++], p[off++], p[off++], p[off++]);\n          cpx = p[off - 2];\n          cpy = p[off - 1];\n          break;\n\n        case 'c':\n          cmd = CMD.C;\n          path.addData(cmd, p[off++] + cpx, p[off++] + cpy, p[off++] + cpx, p[off++] + cpy, p[off++] + cpx, p[off++] + cpy);\n          cpx += p[off - 2];\n          cpy += p[off - 1];\n          break;\n\n        case 'S':\n          ctlPtx = cpx;\n          ctlPty = cpy;\n          var len = path.len();\n          var pathData = path.data;\n\n          if (prevCmd === CMD.C) {\n            ctlPtx += cpx - pathData[len - 4];\n            ctlPty += cpy - pathData[len - 3];\n          }\n\n          cmd = CMD.C;\n          x1 = p[off++];\n          y1 = p[off++];\n          cpx = p[off++];\n          cpy = p[off++];\n          path.addData(cmd, ctlPtx, ctlPty, x1, y1, cpx, cpy);\n          break;\n\n        case 's':\n          ctlPtx = cpx;\n          ctlPty = cpy;\n          var len = path.len();\n          var pathData = path.data;\n\n          if (prevCmd === CMD.C) {\n            ctlPtx += cpx - pathData[len - 4];\n            ctlPty += cpy - pathData[len - 3];\n          }\n\n          cmd = CMD.C;\n          x1 = cpx + p[off++];\n          y1 = cpy + p[off++];\n          cpx += p[off++];\n          cpy += p[off++];\n          path.addData(cmd, ctlPtx, ctlPty, x1, y1, cpx, cpy);\n          break;\n\n        case 'Q':\n          x1 = p[off++];\n          y1 = p[off++];\n          cpx = p[off++];\n          cpy = p[off++];\n          cmd = CMD.Q;\n          path.addData(cmd, x1, y1, cpx, cpy);\n          break;\n\n        case 'q':\n          x1 = p[off++] + cpx;\n          y1 = p[off++] + cpy;\n          cpx += p[off++];\n          cpy += p[off++];\n          cmd = CMD.Q;\n          path.addData(cmd, x1, y1, cpx, cpy);\n          break;\n\n        case 'T':\n          ctlPtx = cpx;\n          ctlPty = cpy;\n          var len = path.len();\n          var pathData = path.data;\n\n          if (prevCmd === CMD.Q) {\n            ctlPtx += cpx - pathData[len - 4];\n            ctlPty += cpy - pathData[len - 3];\n          }\n\n          cpx = p[off++];\n          cpy = p[off++];\n          cmd = CMD.Q;\n          path.addData(cmd, ctlPtx, ctlPty, cpx, cpy);\n          break;\n\n        case 't':\n          ctlPtx = cpx;\n          ctlPty = cpy;\n          var len = path.len();\n          var pathData = path.data;\n\n          if (prevCmd === CMD.Q) {\n            ctlPtx += cpx - pathData[len - 4];\n            ctlPty += cpy - pathData[len - 3];\n          }\n\n          cpx += p[off++];\n          cpy += p[off++];\n          cmd = CMD.Q;\n          path.addData(cmd, ctlPtx, ctlPty, cpx, cpy);\n          break;\n\n        case 'A':\n          rx = p[off++];\n          ry = p[off++];\n          psi = p[off++];\n          fa = p[off++];\n          fs = p[off++];\n          x1 = cpx, y1 = cpy;\n          cpx = p[off++];\n          cpy = p[off++];\n          cmd = CMD.A;\n          processArc(x1, y1, cpx, cpy, fa, fs, rx, ry, psi, cmd, path);\n          break;\n\n        case 'a':\n          rx = p[off++];\n          ry = p[off++];\n          psi = p[off++];\n          fa = p[off++];\n          fs = p[off++];\n          x1 = cpx, y1 = cpy;\n          cpx += p[off++];\n          cpy += p[off++];\n          cmd = CMD.A;\n          processArc(x1, y1, cpx, cpy, fa, fs, rx, ry, psi, cmd, path);\n          break;\n      }\n    }\n\n    if (c === 'z' || c === 'Z') {\n      cmd = CMD.Z;\n      path.addData(cmd);\n    }\n\n    prevCmd = cmd;\n  }\n\n  path.toStatic();\n  return path;\n} // TODO Optimize double memory cost problem\n\n\nfunction createPathOptions(str, opts) {\n  var pathProxy = createPathProxyFromString(str);\n  opts = opts || {};\n\n  opts.buildPath = function (path) {\n    if (path.setData) {\n      path.setData(pathProxy.data); // Svg and vml renderer don't have context\n\n      var ctx = path.getContext();\n\n      if (ctx) {\n        path.rebuildPath(ctx);\n      }\n    } else {\n      var ctx = path;\n      pathProxy.rebuildPath(ctx);\n    }\n  };\n\n  opts.applyTransform = function (m) {\n    transformPath(pathProxy, m);\n    this.dirty(true);\n  };\n\n  return opts;\n}\n/**\n * Create a Path object from path string data\n * http://www.w3.org/TR/SVG/paths.html#PathData\n * @param  {Object} opts Other options\n */\n\n\nfunction createFromString(str, opts) {\n  return new Path(createPathOptions(str, opts));\n}\n/**\n * Create a Path class from path string data\n * @param  {string} str\n * @param  {Object} opts Other options\n */\n\n\nfunction extendFromString(str, opts) {\n  return Path.extend(createPathOptions(str, opts));\n}\n/**\n * Merge multiple paths\n */\n// TODO Apply transform\n// TODO stroke dash\n// TODO Optimize double memory cost problem\n\n\nfunction mergePath(pathEls, opts) {\n  var pathList = [];\n  var len = pathEls.length;\n\n  for (var i = 0; i < len; i++) {\n    var pathEl = pathEls[i];\n\n    if (!pathEl.path) {\n      pathEl.createPathProxy();\n    }\n\n    if (pathEl.__dirtyPath) {\n      pathEl.buildPath(pathEl.path, pathEl.shape, true);\n    }\n\n    pathList.push(pathEl.path);\n  }\n\n  var pathBundle = new Path(opts); // Need path proxy.\n\n  pathBundle.createPathProxy();\n\n  pathBundle.buildPath = function (path) {\n    path.appendPath(pathList); // Svg and vml renderer don't have context\n\n    var ctx = path.getContext();\n\n    if (ctx) {\n      path.rebuildPath(ctx);\n    }\n  };\n\n  return pathBundle;\n}\n\nexports.createFromString = createFromString;\nexports.extendFromString = extendFromString;\nexports.mergePath = mergePath;\n\n/***/ }),\n/* 535 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar env = __webpack_require__(466);\n\nvar urn = 'urn:schemas-microsoft-com:vml';\nvar win = typeof window === 'undefined' ? null : window;\nvar vmlInited = false;\nvar doc = win && win.document;\n\nfunction createNode(tagName) {\n  return doCreateNode(tagName);\n} // Avoid assign to an exported variable, for transforming to cjs.\n\n\nvar doCreateNode;\n\nif (doc && !env.canvasSupported) {\n  try {\n    !doc.namespaces.zrvml && doc.namespaces.add('zrvml', urn);\n\n    doCreateNode = function (tagName) {\n      return doc.createElement('<zrvml:' + tagName + ' class=\"zrvml\">');\n    };\n  } catch (e) {\n    doCreateNode = function (tagName) {\n      return doc.createElement('<' + tagName + ' xmlns=\"' + urn + '\" class=\"zrvml\">');\n    };\n  }\n} // From raphael\n\n\nfunction initVML() {\n  if (vmlInited || !doc) {\n    return;\n  }\n\n  vmlInited = true;\n  var styleSheets = doc.styleSheets;\n\n  if (styleSheets.length < 31) {\n    doc.createStyleSheet().addRule('.zrvml', 'behavior:url(#default#VML)');\n  } else {\n    // http://msdn.microsoft.com/en-us/library/ms531194%28VS.85%29.aspx\n    styleSheets[0].addRule('.zrvml', 'behavior:url(#default#VML)');\n  }\n}\n\nexports.doc = doc;\nexports.createNode = createNode;\nexports.initVML = initVML;\n\n/***/ }),\n/* 536 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n\n    var List = __webpack_require__(506);\n    var completeDimensions = __webpack_require__(574);\n    var zrUtil = __webpack_require__(460);\n    var modelUtil = __webpack_require__(469);\n    var CoordinateSystem = __webpack_require__(493);\n    var getDataItemValue = modelUtil.getDataItemValue;\n    var converDataValue = modelUtil.converDataValue;\n\n    function firstDataNotNull(data) {\n        var i = 0;\n        while (i < data.length && data[i] == null) {\n            i++;\n        }\n        return data[i];\n    }\n    function ifNeedCompleteOrdinalData(data) {\n        var sampleItem = firstDataNotNull(data);\n        return sampleItem != null\n            && !zrUtil.isArray(getDataItemValue(sampleItem));\n    }\n\n    /**\n     * Helper function to create a list from option data\n     */\n    function createListFromArray(data, seriesModel, ecModel) {\n        // If data is undefined\n        data = data || [];\n\n        if (__DEV__) {\n            if (!zrUtil.isArray(data)) {\n                throw new Error('Invalid data.');\n            }\n        }\n\n        var coordSysName = seriesModel.get('coordinateSystem');\n        var creator = creators[coordSysName];\n        var registeredCoordSys = CoordinateSystem.get(coordSysName);\n        // FIXME\n        var axesInfo = creator && creator(data, seriesModel, ecModel);\n        var dimensions = axesInfo && axesInfo.dimensions;\n        if (!dimensions) {\n            // Get dimensions from registered coordinate system\n            dimensions = (registeredCoordSys && registeredCoordSys.dimensions) || ['x', 'y'];\n            dimensions = completeDimensions(dimensions, data, dimensions.concat(['value']));\n        }\n        var categoryIndex = axesInfo ? axesInfo.categoryIndex : -1;\n\n        var list = new List(dimensions, seriesModel);\n\n        var nameList = createNameList(axesInfo, data);\n\n        var categories = {};\n        var dimValueGetter = (categoryIndex >= 0 && ifNeedCompleteOrdinalData(data))\n            ? function (itemOpt, dimName, dataIndex, dimIndex) {\n                // If any dataItem is like { value: 10 }\n                if (modelUtil.isDataItemOption(itemOpt)) {\n                    list.hasItemOption = true;\n                }\n\n                // Use dataIndex as ordinal value in categoryAxis\n                return dimIndex === categoryIndex\n                    ? dataIndex\n                    : converDataValue(getDataItemValue(itemOpt), dimensions[dimIndex]);\n            }\n            : function (itemOpt, dimName, dataIndex, dimIndex) {\n                var value = getDataItemValue(itemOpt);\n                var val = converDataValue(value && value[dimIndex], dimensions[dimIndex]);\n                // If any dataItem is like { value: 10 }\n                if (modelUtil.isDataItemOption(itemOpt)) {\n                    list.hasItemOption = true;\n                }\n\n                var categoryAxesModels = axesInfo && axesInfo.categoryAxesModels;\n                if (categoryAxesModels && categoryAxesModels[dimName]) {\n                    // If given value is a category string\n                    if (typeof val === 'string') {\n                        // Lazy get categories\n                        categories[dimName] = categories[dimName]\n                            || categoryAxesModels[dimName].getCategories();\n                        val = zrUtil.indexOf(categories[dimName], val);\n                        if (val < 0 && !isNaN(val)) {\n                            // In case some one write '1', '2' istead of 1, 2\n                            val = +val;\n                        }\n                    }\n                }\n                return val;\n            };\n\n        list.hasItemOption = false;\n        list.initData(data, nameList, dimValueGetter);\n\n        return list;\n    }\n\n    function isStackable(axisType) {\n        return axisType !== 'category' && axisType !== 'time';\n    }\n\n    function getDimTypeByAxis(axisType) {\n        return axisType === 'category'\n            ? 'ordinal'\n            : axisType === 'time'\n            ? 'time'\n            : 'float';\n    }\n\n    /**\n     * Creaters for each coord system.\n     */\n    var creators = {\n\n        cartesian2d: function (data, seriesModel, ecModel) {\n\n            var axesModels = zrUtil.map(['xAxis', 'yAxis'], function (name) {\n                return ecModel.queryComponents({\n                    mainType: name,\n                    index: seriesModel.get(name + 'Index'),\n                    id: seriesModel.get(name + 'Id')\n                })[0];\n            });\n            var xAxisModel = axesModels[0];\n            var yAxisModel = axesModels[1];\n\n            if (__DEV__) {\n                if (!xAxisModel) {\n                    throw new Error('xAxis \"' + zrUtil.retrieve(\n                        seriesModel.get('xAxisIndex'),\n                        seriesModel.get('xAxisId'),\n                        0\n                    ) + '\" not found');\n                }\n                if (!yAxisModel) {\n                    throw new Error('yAxis \"' + zrUtil.retrieve(\n                        seriesModel.get('xAxisIndex'),\n                        seriesModel.get('yAxisId'),\n                        0\n                    ) + '\" not found');\n                }\n            }\n\n            var xAxisType = xAxisModel.get('type');\n            var yAxisType = yAxisModel.get('type');\n\n            var dimensions = [\n                {\n                    name: 'x',\n                    type: getDimTypeByAxis(xAxisType),\n                    stackable: isStackable(xAxisType)\n                },\n                {\n                    name: 'y',\n                    // If two category axes\n                    type: getDimTypeByAxis(yAxisType),\n                    stackable: isStackable(yAxisType)\n                }\n            ];\n\n            var isXAxisCateogry = xAxisType === 'category';\n            var isYAxisCategory = yAxisType === 'category';\n\n            completeDimensions(dimensions, data, ['x', 'y', 'z']);\n\n            var categoryAxesModels = {};\n            if (isXAxisCateogry) {\n                categoryAxesModels.x = xAxisModel;\n            }\n            if (isYAxisCategory) {\n                categoryAxesModels.y = yAxisModel;\n            }\n            return {\n                dimensions: dimensions,\n                categoryIndex: isXAxisCateogry ? 0 : (isYAxisCategory ? 1 : -1),\n                categoryAxesModels: categoryAxesModels\n            };\n        },\n\n        singleAxis: function (data, seriesModel, ecModel) {\n\n            var singleAxisModel = ecModel.queryComponents({\n                mainType: 'singleAxis',\n                index: seriesModel.get('singleAxisIndex'),\n                id: seriesModel.get('singleAxisId')\n            })[0];\n\n            if (__DEV__) {\n                if (!singleAxisModel) {\n                    throw new Error('singleAxis should be specified.');\n                }\n            }\n\n            var singleAxisType = singleAxisModel.get('type');\n            var isCategory = singleAxisType === 'category';\n\n            var dimensions = [{\n                name: 'single',\n                type: getDimTypeByAxis(singleAxisType),\n                stackable: isStackable(singleAxisType)\n            }];\n\n            completeDimensions(dimensions, data);\n\n            var categoryAxesModels = {};\n            if (isCategory) {\n                categoryAxesModels.single = singleAxisModel;\n            }\n\n            return {\n                dimensions: dimensions,\n                categoryIndex: isCategory ? 0 : -1,\n                categoryAxesModels: categoryAxesModels\n            };\n        },\n\n        polar: function (data, seriesModel, ecModel) {\n            var polarModel = ecModel.queryComponents({\n                mainType: 'polar',\n                index: seriesModel.get('polarIndex'),\n                id: seriesModel.get('polarId')\n            })[0];\n\n            var angleAxisModel = polarModel.findAxisModel('angleAxis');\n            var radiusAxisModel = polarModel.findAxisModel('radiusAxis');\n\n            if (__DEV__) {\n                if (!angleAxisModel) {\n                    throw new Error('angleAxis option not found');\n                }\n                if (!radiusAxisModel) {\n                    throw new Error('radiusAxis option not found');\n                }\n            }\n\n            var radiusAxisType = radiusAxisModel.get('type');\n            var angleAxisType = angleAxisModel.get('type');\n\n            var dimensions = [\n                {\n                    name: 'radius',\n                    type: getDimTypeByAxis(radiusAxisType),\n                    stackable: isStackable(radiusAxisType)\n                },\n                {\n                    name: 'angle',\n                    type: getDimTypeByAxis(angleAxisType),\n                    stackable: isStackable(angleAxisType)\n                }\n            ];\n            var isAngleAxisCateogry = angleAxisType === 'category';\n            var isRadiusAxisCateogry = radiusAxisType === 'category';\n\n            completeDimensions(dimensions, data, ['radius', 'angle', 'value']);\n\n            var categoryAxesModels = {};\n            if (isRadiusAxisCateogry) {\n                categoryAxesModels.radius = radiusAxisModel;\n            }\n            if (isAngleAxisCateogry) {\n                categoryAxesModels.angle = angleAxisModel;\n            }\n            return {\n                dimensions: dimensions,\n                categoryIndex: isAngleAxisCateogry ? 1 : (isRadiusAxisCateogry ? 0 : -1),\n                categoryAxesModels: categoryAxesModels\n            };\n        },\n\n        geo: function (data, seriesModel, ecModel) {\n            // TODO Region\n            // 多个散点图系列在同一个地区的时候\n            return {\n                dimensions: completeDimensions([\n                    {name: 'lng'},\n                    {name: 'lat'}\n                ], data, ['lng', 'lat', 'value'])\n            };\n        }\n    };\n\n    function createNameList(result, data) {\n        var nameList = [];\n\n        var categoryDim = result && result.dimensions[result.categoryIndex];\n        var categoryAxisModel;\n        if (categoryDim) {\n            categoryAxisModel = result.categoryAxesModels[categoryDim.name];\n        }\n\n        if (categoryAxisModel) {\n            // FIXME Two category axis\n            var categories = categoryAxisModel.getCategories();\n            if (categories) {\n                var dataLen = data.length;\n                // Ordered data is given explicitly like\n                // [[3, 0.2], [1, 0.3], [2, 0.15]]\n                // or given scatter data,\n                // pick the category\n                if (zrUtil.isArray(data[0]) && data[0].length > 1) {\n                    nameList = [];\n                    for (var i = 0; i < dataLen; i++) {\n                        nameList[i] = categories[data[i][result.categoryIndex || 0]];\n                    }\n                }\n                else {\n                    nameList = categories.slice(0);\n                }\n            }\n        }\n\n        return nameList;\n    }\n\n    module.exports = createListFromArray;\n\n\n\n/***/ }),\n/* 537 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n\n    var graphic = __webpack_require__(464);\n    var zrUtil = __webpack_require__(460);\n    var echarts = __webpack_require__(462);\n\n    __webpack_require__(538);\n\n    __webpack_require__(547);\n\n    // Grid view\n    echarts.extendComponentView({\n\n        type: 'grid',\n\n        render: function (gridModel, ecModel) {\n            this.group.removeAll();\n            if (gridModel.get('show')) {\n                this.group.add(new graphic.Rect({\n                    shape: gridModel.coordinateSystem.getRect(),\n                    style: zrUtil.defaults({\n                        fill: gridModel.get('backgroundColor')\n                    }, gridModel.getItemStyle()),\n                    silent: true,\n                    z2: -1\n                }));\n            }\n        }\n\n    });\n\n    echarts.registerPreprocessor(function (option) {\n        // Only create grid when need\n        if (option.xAxis && option.yAxis && !option.grid) {\n            option.grid = {};\n        }\n    });\n\n\n/***/ }),\n/* 538 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * Grid is a region which contains at most 4 cartesian systems\n *\n * TODO Default cartesian\n */\nvar factory = exports;\n\n    var layout = __webpack_require__(475);\n    var axisHelper = __webpack_require__(494);\n\n    var zrUtil = __webpack_require__(460);\n    var Cartesian2D = __webpack_require__(570);\n    var Axis2D = __webpack_require__(568);\n\n    var each = zrUtil.each;\n\n    var ifAxisCrossZero = axisHelper.ifAxisCrossZero;\n    var niceScaleExtent = axisHelper.niceScaleExtent;\n\n    // 依赖 GridModel, AxisModel 做预处理\n    __webpack_require__(571);\n\n    /**\n     * Check if the axis is used in the specified grid\n     * @inner\n     */\n    function isAxisUsedInTheGrid(axisModel, gridModel, ecModel) {\n        return axisModel.getCoordSysModel() === gridModel;\n    }\n\n    function getLabelUnionRect(axis) {\n        var axisModel = axis.model;\n        var labels = axisModel.getFormattedLabels();\n        var textStyleModel = axisModel.getModel('axisLabel.textStyle');\n        var rect;\n        var step = 1;\n        var labelCount = labels.length;\n        if (labelCount > 40) {\n            // Simple optimization for large amount of labels\n            step = Math.ceil(labelCount / 40);\n        }\n        for (var i = 0; i < labelCount; i += step) {\n            if (!axis.isLabelIgnored(i)) {\n                var singleRect = textStyleModel.getTextRect(labels[i]);\n                // FIXME consider label rotate\n                rect ? rect.union(singleRect) : (rect = singleRect);\n            }\n        }\n        return rect;\n    }\n\n    function Grid(gridModel, ecModel, api) {\n        /**\n         * @type {Object.<string, module:echarts/coord/cartesian/Cartesian2D>}\n         * @private\n         */\n        this._coordsMap = {};\n\n        /**\n         * @type {Array.<module:echarts/coord/cartesian/Cartesian>}\n         * @private\n         */\n        this._coordsList = [];\n\n        /**\n         * @type {Object.<string, module:echarts/coord/cartesian/Axis2D>}\n         * @private\n         */\n        this._axesMap = {};\n\n        /**\n         * @type {Array.<module:echarts/coord/cartesian/Axis2D>}\n         * @private\n         */\n        this._axesList = [];\n\n        this._initCartesian(gridModel, ecModel, api);\n\n        this._model = gridModel;\n    }\n\n    var gridProto = Grid.prototype;\n\n    gridProto.type = 'grid';\n\n    gridProto.getRect = function () {\n        return this._rect;\n    };\n\n    gridProto.update = function (ecModel, api) {\n\n        var axesMap = this._axesMap;\n\n        this._updateScale(ecModel, this._model);\n\n        function ifAxisCanNotOnZero(otherAxisDim) {\n            var axes = axesMap[otherAxisDim];\n            for (var idx in axes) {\n                if (axes.hasOwnProperty(idx)) {\n                    var axis = axes[idx];\n                    if (axis && (axis.type === 'category' || !ifAxisCrossZero(axis))) {\n                        return true;\n                    }\n                }\n            }\n            return false;\n        }\n\n        each(axesMap.x, function (xAxis) {\n            niceScaleExtent(xAxis, xAxis.model);\n        });\n        each(axesMap.y, function (yAxis) {\n            niceScaleExtent(yAxis, yAxis.model);\n        });\n        // Fix configuration\n        each(axesMap.x, function (xAxis) {\n            // onZero can not be enabled in these two situations\n            // 1. When any other axis is a category axis\n            // 2. When any other axis not across 0 point\n            if (ifAxisCanNotOnZero('y')) {\n                xAxis.onZero = false;\n            }\n        });\n        each(axesMap.y, function (yAxis) {\n            if (ifAxisCanNotOnZero('x')) {\n                yAxis.onZero = false;\n            }\n        });\n\n        // Resize again if containLabel is enabled\n        // FIXME It may cause getting wrong grid size in data processing stage\n        this.resize(this._model, api);\n    };\n\n    /**\n     * Resize the grid\n     * @param {module:echarts/coord/cartesian/GridModel} gridModel\n     * @param {module:echarts/ExtensionAPI} api\n     */\n    gridProto.resize = function (gridModel, api) {\n\n        var gridRect = layout.getLayoutRect(\n            gridModel.getBoxLayoutParams(), {\n                width: api.getWidth(),\n                height: api.getHeight()\n            });\n\n        this._rect = gridRect;\n\n        var axesList = this._axesList;\n\n        adjustAxes();\n\n        // Minus label size\n        if (gridModel.get('containLabel')) {\n            each(axesList, function (axis) {\n                if (!axis.model.get('axisLabel.inside')) {\n                    var labelUnionRect = getLabelUnionRect(axis);\n                    if (labelUnionRect) {\n                        var dim = axis.isHorizontal() ? 'height' : 'width';\n                        var margin = axis.model.get('axisLabel.margin');\n                        gridRect[dim] -= labelUnionRect[dim] + margin;\n                        if (axis.position === 'top') {\n                            gridRect.y += labelUnionRect.height + margin;\n                        }\n                        else if (axis.position === 'left')  {\n                            gridRect.x += labelUnionRect.width + margin;\n                        }\n                    }\n                }\n            });\n\n            adjustAxes();\n        }\n\n        function adjustAxes() {\n            each(axesList, function (axis) {\n                var isHorizontal = axis.isHorizontal();\n                var extent = isHorizontal ? [0, gridRect.width] : [0, gridRect.height];\n                var idx = axis.inverse ? 1 : 0;\n                axis.setExtent(extent[idx], extent[1 - idx]);\n                updateAxisTransfrom(axis, isHorizontal ? gridRect.x : gridRect.y);\n            });\n        }\n    };\n\n    /**\n     * @param {string} axisType\n     * @param {ndumber} [axisIndex]\n     */\n    gridProto.getAxis = function (axisType, axisIndex) {\n        var axesMapOnDim = this._axesMap[axisType];\n        if (axesMapOnDim != null) {\n            if (axisIndex == null) {\n                // Find first axis\n                for (var name in axesMapOnDim) {\n                    if (axesMapOnDim.hasOwnProperty(name)) {\n                        return axesMapOnDim[name];\n                    }\n                }\n            }\n            return axesMapOnDim[axisIndex];\n        }\n    };\n\n    gridProto.getCartesian = function (xAxisIndex, yAxisIndex) {\n        if (xAxisIndex != null && yAxisIndex != null) {\n            var key = 'x' + xAxisIndex + 'y' + yAxisIndex;\n            return this._coordsMap[key];\n        }\n        else {\n            // When only xAxisIndex or yAxisIndex given, find its first cartesian.\n            for (var i = 0, coordList = this._coordsList; i < coordList.length; i++) {\n                if (coordList[i].getAxis('x').index === xAxisIndex\n                    || coordList[i].getAxis('y').index === yAxisIndex\n                ) {\n                    return coordList[i];\n                }\n            }\n        }\n    };\n\n    /**\n     * @implements\n     * see {module:echarts/CoodinateSystem}\n     */\n    gridProto.convertToPixel = function (ecModel, finder, value) {\n        var target = this._findConvertTarget(ecModel, finder);\n\n        return target.cartesian\n            ? target.cartesian.dataToPoint(value)\n            : target.axis\n            ? target.axis.toGlobalCoord(target.axis.dataToCoord(value))\n            : null;\n    };\n\n    /**\n     * @implements\n     * see {module:echarts/CoodinateSystem}\n     */\n    gridProto.convertFromPixel = function (ecModel, finder, value) {\n        var target = this._findConvertTarget(ecModel, finder);\n\n        return target.cartesian\n            ? target.cartesian.pointToData(value)\n            : target.axis\n            ? target.axis.coordToData(target.axis.toLocalCoord(value))\n            : null;\n    };\n\n    /**\n     * @inner\n     */\n    gridProto._findConvertTarget = function (ecModel, finder) {\n        var seriesModel = finder.seriesModel;\n        var xAxisModel = finder.xAxisModel\n            || (seriesModel && seriesModel.getReferringComponents('xAxis')[0]);\n        var yAxisModel = finder.yAxisModel\n            || (seriesModel && seriesModel.getReferringComponents('yAxis')[0]);\n        var gridModel = finder.gridModel;\n        var coordsList = this._coordsList;\n        var cartesian;\n        var axis;\n\n        if (seriesModel) {\n            cartesian = seriesModel.coordinateSystem;\n            zrUtil.indexOf(coordsList, cartesian) < 0 && (cartesian = null);\n        }\n        else if (xAxisModel && yAxisModel) {\n            cartesian = this.getCartesian(xAxisModel.componentIndex, yAxisModel.componentIndex);\n        }\n        else if (xAxisModel) {\n            axis = this.getAxis('x', xAxisModel.componentIndex);\n        }\n        else if (yAxisModel) {\n            axis = this.getAxis('y', yAxisModel.componentIndex);\n        }\n        // Lowest priority.\n        else if (gridModel) {\n            var grid = gridModel.coordinateSystem;\n            if (grid === this) {\n                cartesian = this._coordsList[0];\n            }\n        }\n\n        return {cartesian: cartesian, axis: axis};\n    };\n\n    /**\n     * @implements\n     * see {module:echarts/CoodinateSystem}\n     */\n    gridProto.containPoint = function (point) {\n        var coord = this._coordsList[0];\n        if (coord) {\n            return coord.containPoint(point);\n        }\n    };\n\n    /**\n     * Initialize cartesian coordinate systems\n     * @private\n     */\n    gridProto._initCartesian = function (gridModel, ecModel, api) {\n        var axisPositionUsed = {\n            left: false,\n            right: false,\n            top: false,\n            bottom: false\n        };\n\n        var axesMap = {\n            x: {},\n            y: {}\n        };\n        var axesCount = {\n            x: 0,\n            y: 0\n        };\n\n        /// Create axis\n        ecModel.eachComponent('xAxis', createAxisCreator('x'), this);\n        ecModel.eachComponent('yAxis', createAxisCreator('y'), this);\n\n        if (!axesCount.x || !axesCount.y) {\n            // Roll back when there no either x or y axis\n            this._axesMap = {};\n            this._axesList = [];\n            return;\n        }\n\n        this._axesMap = axesMap;\n\n        /// Create cartesian2d\n        each(axesMap.x, function (xAxis, xAxisIndex) {\n            each(axesMap.y, function (yAxis, yAxisIndex) {\n                var key = 'x' + xAxisIndex + 'y' + yAxisIndex;\n                var cartesian = new Cartesian2D(key);\n\n                cartesian.grid = this;\n\n                this._coordsMap[key] = cartesian;\n                this._coordsList.push(cartesian);\n\n                cartesian.addAxis(xAxis);\n                cartesian.addAxis(yAxis);\n            }, this);\n        }, this);\n\n        function createAxisCreator(axisType) {\n            return function (axisModel, idx) {\n                if (!isAxisUsedInTheGrid(axisModel, gridModel, ecModel)) {\n                    return;\n                }\n\n                var axisPosition = axisModel.get('position');\n                if (axisType === 'x') {\n                    // Fix position\n                    if (axisPosition !== 'top' && axisPosition !== 'bottom') {\n                        // Default bottom of X\n                        axisPosition = 'bottom';\n                        if (axisPositionUsed[axisPosition]) {\n                            axisPosition = axisPosition === 'top' ? 'bottom' : 'top';\n                        }\n                    }\n                }\n                else {\n                    // Fix position\n                    if (axisPosition !== 'left' && axisPosition !== 'right') {\n                        // Default left of Y\n                        axisPosition = 'left';\n                        if (axisPositionUsed[axisPosition]) {\n                            axisPosition = axisPosition === 'left' ? 'right' : 'left';\n                        }\n                    }\n                }\n                axisPositionUsed[axisPosition] = true;\n\n                var axis = new Axis2D(\n                    axisType, axisHelper.createScaleByModel(axisModel),\n                    [0, 0],\n                    axisModel.get('type'),\n                    axisPosition\n                );\n\n                var isCategory = axis.type === 'category';\n                axis.onBand = isCategory && axisModel.get('boundaryGap');\n                axis.inverse = axisModel.get('inverse');\n\n                axis.onZero = axisModel.get('axisLine.onZero');\n\n                // Inject axis into axisModel\n                axisModel.axis = axis;\n\n                // Inject axisModel into axis\n                axis.model = axisModel;\n\n                // Inject grid info axis\n                axis.grid = this;\n\n                // Index of axis, can be used as key\n                axis.index = idx;\n\n                this._axesList.push(axis);\n\n                axesMap[axisType][idx] = axis;\n                axesCount[axisType]++;\n            };\n        }\n    };\n\n    /**\n     * Update cartesian properties from series\n     * @param  {module:echarts/model/Option} option\n     * @private\n     */\n    gridProto._updateScale = function (ecModel, gridModel) {\n        // Reset scale\n        zrUtil.each(this._axesList, function (axis) {\n            axis.scale.setExtent(Infinity, -Infinity);\n        });\n        ecModel.eachSeries(function (seriesModel) {\n            if (isCartesian2D(seriesModel)) {\n                var axesModels = findAxesModels(seriesModel, ecModel);\n                var xAxisModel = axesModels[0];\n                var yAxisModel = axesModels[1];\n\n                if (!isAxisUsedInTheGrid(xAxisModel, gridModel, ecModel)\n                    || !isAxisUsedInTheGrid(yAxisModel, gridModel, ecModel)\n                 ) {\n                    return;\n                }\n\n                var cartesian = this.getCartesian(\n                    xAxisModel.componentIndex, yAxisModel.componentIndex\n                );\n                var data = seriesModel.getData();\n                var xAxis = cartesian.getAxis('x');\n                var yAxis = cartesian.getAxis('y');\n\n                if (data.type === 'list') {\n                    unionExtent(data, xAxis, seriesModel);\n                    unionExtent(data, yAxis, seriesModel);\n                }\n            }\n        }, this);\n\n        function unionExtent(data, axis, seriesModel) {\n            each(seriesModel.coordDimToDataDim(axis.dim), function (dim) {\n                axis.scale.unionExtentFromData(data, dim);\n            });\n        }\n    };\n\n    /**\n     * @inner\n     */\n    function updateAxisTransfrom(axis, coordBase) {\n        var axisExtent = axis.getExtent();\n        var axisExtentSum = axisExtent[0] + axisExtent[1];\n\n        // Fast transform\n        axis.toGlobalCoord = axis.dim === 'x'\n            ? function (coord) {\n                return coord + coordBase;\n            }\n            : function (coord) {\n                return axisExtentSum - coord + coordBase;\n            };\n        axis.toLocalCoord = axis.dim === 'x'\n            ? function (coord) {\n                return coord - coordBase;\n            }\n            : function (coord) {\n                return axisExtentSum - coord + coordBase;\n            };\n    }\n\n    var axesTypes = ['xAxis', 'yAxis'];\n    /**\n     * @inner\n     */\n    function findAxesModels(seriesModel, ecModel) {\n        return zrUtil.map(axesTypes, function (axisType) {\n            var axisModel = seriesModel.getReferringComponents(axisType)[0];\n\n            if (__DEV__) {\n                if (!axisModel) {\n                    throw new Error(axisType + ' \"' + zrUtil.retrieve(\n                        seriesModel.get(axisType + 'Index'),\n                        seriesModel.get(axisType + 'Id'),\n                        0\n                    ) + '\" not found');\n                }\n            }\n            return axisModel;\n        });\n    }\n\n    /**\n     * @inner\n     */\n    function isCartesian2D(seriesModel) {\n        return seriesModel.get('coordinateSystem') === 'cartesian2d';\n    }\n\n    Grid.create = function (ecModel, api) {\n        var grids = [];\n        ecModel.eachComponent('grid', function (gridModel, idx) {\n            var grid = new Grid(gridModel, ecModel, api);\n            grid.name = 'grid_' + idx;\n            grid.resize(gridModel, api);\n\n            gridModel.coordinateSystem = grid;\n\n            grids.push(grid);\n        });\n\n        // Inject the coordinateSystems into seriesModel\n        ecModel.eachSeries(function (seriesModel) {\n            if (!isCartesian2D(seriesModel)) {\n                return;\n            }\n\n            var axesModels = findAxesModels(seriesModel, ecModel);\n            var xAxisModel = axesModels[0];\n            var yAxisModel = axesModels[1];\n\n            var gridModel = xAxisModel.getCoordSysModel();\n\n            if (__DEV__) {\n                if (!gridModel) {\n                    throw new Error(\n                        'Grid \"' + zrUtil.retrieve(\n                            xAxisModel.get('gridIndex'),\n                            xAxisModel.get('gridId'),\n                            0\n                        ) + '\" not found'\n                    );\n                }\n                if (xAxisModel.getCoordSysModel() !== yAxisModel.getCoordSysModel()) {\n                    throw new Error('xAxis and yAxis must use the same grid');\n                }\n            }\n\n            var grid = gridModel.coordinateSystem;\n\n            seriesModel.coordinateSystem = grid.getCartesian(\n                xAxisModel.componentIndex, yAxisModel.componentIndex\n            );\n        });\n\n        return grids;\n    };\n\n    // For deciding which dimensions to use when creating list data\n    Grid.dimensions = Cartesian2D.prototype.dimensions;\n\n    __webpack_require__(493).register('cartesian2d', Grid);\n\n    module.exports = Grid;\n\n\n/***/ }),\n/* 539 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var Group = __webpack_require__(483);\n    var componentUtil = __webpack_require__(496);\n    var clazzUtil = __webpack_require__(471);\n\n    var Component = function () {\n        /**\n         * @type {module:zrender/container/Group}\n         * @readOnly\n         */\n        this.group = new Group();\n\n        /**\n         * @type {string}\n         * @readOnly\n         */\n        this.uid = componentUtil.getUID('viewComponent');\n    };\n\n    Component.prototype = {\n\n        constructor: Component,\n\n        init: function (ecModel, api) {},\n\n        render: function (componentModel, ecModel, api, payload) {},\n\n        dispose: function () {}\n\n    };\n\n    var componentProto = Component.prototype;\n    componentProto.updateView\n        = componentProto.updateLayout\n        = componentProto.updateVisual\n        = function (seriesModel, ecModel, api, payload) {\n            // Do nothing;\n        };\n    // Enable Component.extend.\n    clazzUtil.enableClassExtend(Component);\n\n    // Enable capability of registerClass, getClass, hasClass, registerSubTypeDefaulter and so on.\n    clazzUtil.enableClassManagement(Component, {registerWhenExtend: true});\n\n    module.exports = Component;\n\n\n/***/ }),\n/* 540 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n\n    var zrUtil = __webpack_require__(460);\n\n    var echartsAPIList = [\n        'getDom', 'getZr', 'getWidth', 'getHeight', 'dispatchAction', 'isDisposed',\n        'on', 'off', 'getDataURL', 'getConnectedDataURL', 'getModel', 'getOption'\n    ];\n\n    function ExtensionAPI(chartInstance) {\n        zrUtil.each(echartsAPIList, function (name) {\n            this[name] = zrUtil.bind(chartInstance[name], chartInstance);\n        }, this);\n    }\n\n    module.exports = ExtensionAPI;\n\n\n/***/ }),\n/* 541 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * @module echarts/chart/helper/SymbolDraw\n */\n\n\n    var graphic = __webpack_require__(464);\n    var Symbol = __webpack_require__(504);\n\n    /**\n     * @constructor\n     * @alias module:echarts/chart/helper/SymbolDraw\n     * @param {module:zrender/graphic/Group} [symbolCtor]\n     */\n    function SymbolDraw(symbolCtor) {\n        this.group = new graphic.Group();\n\n        this._symbolCtor = symbolCtor || Symbol;\n    }\n\n    var symbolDrawProto = SymbolDraw.prototype;\n\n    function symbolNeedsDraw(data, idx, isIgnore) {\n        var point = data.getItemLayout(idx);\n        // Is an object\n        // if (point && point.hasOwnProperty('point')) {\n        //     point = point.point;\n        // }\n        return point && !isNaN(point[0]) && !isNaN(point[1]) && !(isIgnore && isIgnore(idx))\n                    && data.getItemVisual(idx, 'symbol') !== 'none';\n    }\n    /**\n     * Update symbols draw by new data\n     * @param {module:echarts/data/List} data\n     * @param {Array.<boolean>} [isIgnore]\n     */\n    symbolDrawProto.updateData = function (data, isIgnore) {\n        var group = this.group;\n        var seriesModel = data.hostModel;\n        var oldData = this._data;\n\n        var SymbolCtor = this._symbolCtor;\n\n        var seriesScope = {\n            itemStyle: seriesModel.getModel('itemStyle.normal').getItemStyle(['color']),\n            hoverItemStyle: seriesModel.getModel('itemStyle.emphasis').getItemStyle(),\n            symbolRotate: seriesModel.get('symbolRotate'),\n            symbolOffset: seriesModel.get('symbolOffset'),\n            hoverAnimation: seriesModel.get('hoverAnimation'),\n\n            labelModel: seriesModel.getModel('label.normal'),\n            hoverLabelModel: seriesModel.getModel('label.emphasis')\n        };\n\n        data.diff(oldData)\n            .add(function (newIdx) {\n                var point = data.getItemLayout(newIdx);\n                if (symbolNeedsDraw(data, newIdx, isIgnore)) {\n                    var symbolEl = new SymbolCtor(data, newIdx, seriesScope);\n                    symbolEl.attr('position', point);\n                    data.setItemGraphicEl(newIdx, symbolEl);\n                    group.add(symbolEl);\n                }\n            })\n            .update(function (newIdx, oldIdx) {\n                var symbolEl = oldData.getItemGraphicEl(oldIdx);\n                var point = data.getItemLayout(newIdx);\n                if (!symbolNeedsDraw(data, newIdx, isIgnore)) {\n                    group.remove(symbolEl);\n                    return;\n                }\n                if (!symbolEl) {\n                    symbolEl = new SymbolCtor(data, newIdx);\n                    symbolEl.attr('position', point);\n                }\n                else {\n                    symbolEl.updateData(data, newIdx, seriesScope);\n                    graphic.updateProps(symbolEl, {\n                        position: point\n                    }, seriesModel);\n                }\n\n                // Add back\n                group.add(symbolEl);\n\n                data.setItemGraphicEl(newIdx, symbolEl);\n            })\n            .remove(function (oldIdx) {\n                var el = oldData.getItemGraphicEl(oldIdx);\n                el && el.fadeOut(function () {\n                    group.remove(el);\n                });\n            })\n            .execute();\n\n        this._data = data;\n    };\n\n    symbolDrawProto.updateLayout = function () {\n        var data = this._data;\n        if (data) {\n            // Not use animation\n            data.eachItemGraphicEl(function (el, idx) {\n                var point = data.getItemLayout(idx);\n                el.attr('position', point);\n            });\n        }\n    };\n\n    symbolDrawProto.remove = function (enableAnimation) {\n        var group = this.group;\n        var data = this._data;\n        if (data) {\n            if (enableAnimation) {\n                data.eachItemGraphicEl(function (el) {\n                    el.fadeOut(function () {\n                        group.remove(el);\n                    });\n                });\n            }\n            else {\n                group.removeAll();\n            }\n        }\n    };\n\n    module.exports = SymbolDraw;\n\n\n/***/ }),\n/* 542 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var zrUtil = __webpack_require__(460);\n    var echarts = __webpack_require__(462);\n    var PRIORITY = echarts.PRIORITY;\n\n    __webpack_require__(543);\n    __webpack_require__(544);\n\n    echarts.registerVisual(zrUtil.curry(\n        __webpack_require__(592), 'line', 'circle', 'line'\n    ));\n    echarts.registerLayout(zrUtil.curry(\n        __webpack_require__(575), 'line'\n    ));\n\n    // Down sample after filter\n    echarts.registerProcessor(PRIORITY.PROCESSOR.STATISTIC, zrUtil.curry(\n        __webpack_require__(587), 'line'\n    ));\n\n    // In case developer forget to include grid component\n    __webpack_require__(537);\n\n\n/***/ }),\n/* 543 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n\n    var createListFromArray = __webpack_require__(536);\n    var SeriesModel = __webpack_require__(503);\n\n    module.exports = SeriesModel.extend({\n\n        type: 'series.line',\n\n        dependencies: ['grid', 'polar'],\n\n        getInitialData: function (option, ecModel) {\n            if (__DEV__) {\n                var coordSys = option.coordinateSystem;\n                if (coordSys !== 'polar' && coordSys !== 'cartesian2d') {\n                    throw new Error('Line not support coordinateSystem besides cartesian and polar');\n                }\n            }\n            return createListFromArray(option.data, this, ecModel);\n        },\n\n        defaultOption: {\n            zlevel: 0,                  // 一级层叠\n            z: 2,                       // 二级层叠\n            coordinateSystem: 'cartesian2d',\n            legendHoverLink: true,\n\n            hoverAnimation: true,\n            // stack: null\n            // xAxisIndex: 0,\n            // yAxisIndex: 0,\n\n            // polarIndex: 0,\n\n            // If clip the overflow value\n            clipOverflow: true,\n\n            label: {\n                normal: {\n                    position: 'top'\n                }\n            },\n            // itemStyle: {\n            //     normal: {},\n            //     emphasis: {}\n            // },\n            lineStyle: {\n                normal: {\n                    width: 2,\n                    type: 'solid'\n                }\n            },\n            // areaStyle: {},\n            // false, 'start', 'end', 'middle'\n            step: false,\n\n            // Disabled if step is true\n            smooth: false,\n            smoothMonotone: null,\n            // 拐点图形类型\n            symbol: 'emptyCircle',\n            // 拐点图形大小\n            symbolSize: 4,\n            // 拐点图形旋转控制\n            symbolRotate: null,\n\n            // 是否显示 symbol, 只有在 tooltip hover 的时候显示\n            showSymbol: true,\n            // 标志图形默认只有主轴显示（随主轴标签间隔隐藏策略）\n            showAllSymbol: false,\n\n            // 是否连接断点\n            connectNulls: false,\n\n            // 数据过滤，'average', 'max', 'min', 'sum'\n            sampling: 'none',\n\n            animationEasing: 'linear',\n\n            // Disable progressive\n            progressive: 0,\n            hoverLayerThreshold: Infinity\n        }\n    });\n\n\n/***/ }),\n/* 544 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n// FIXME step not support polar\n\n\n    var zrUtil = __webpack_require__(460);\n    var SymbolDraw = __webpack_require__(541);\n    var Symbol = __webpack_require__(504);\n    var lineAnimationDiff = __webpack_require__(545);\n    var graphic = __webpack_require__(464);\n    var modelUtil = __webpack_require__(469);\n    var polyHelper = __webpack_require__(546);\n    var ChartView = __webpack_require__(510);\n\n    function isPointsSame(points1, points2) {\n        if (points1.length !== points2.length) {\n            return;\n        }\n        for (var i = 0; i < points1.length; i++) {\n            var p1 = points1[i];\n            var p2 = points2[i];\n            if (p1[0] !== p2[0] || p1[1] !== p2[1]) {\n                return;\n            }\n        }\n        return true;\n    }\n\n    function getSmooth(smooth) {\n        return typeof (smooth) === 'number' ? smooth : (smooth ? 0.3 : 0);\n    }\n\n    function getAxisExtentWithGap(axis) {\n        var extent = axis.getGlobalExtent();\n        if (axis.onBand) {\n            // Remove extra 1px to avoid line miter in clipped edge\n            var halfBandWidth = axis.getBandWidth() / 2 - 1;\n            var dir = extent[1] > extent[0] ? 1 : -1;\n            extent[0] += dir * halfBandWidth;\n            extent[1] -= dir * halfBandWidth;\n        }\n        return extent;\n    }\n\n    function sign(val) {\n        return val >= 0 ? 1 : -1;\n    }\n    /**\n     * @param {module:echarts/coord/cartesian/Cartesian2D|module:echarts/coord/polar/Polar} coordSys\n     * @param {module:echarts/data/List} data\n     * @param {Array.<Array.<number>>} points\n     * @private\n     */\n    function getStackedOnPoints(coordSys, data) {\n        var baseAxis = coordSys.getBaseAxis();\n        var valueAxis = coordSys.getOtherAxis(baseAxis);\n        var valueStart = baseAxis.onZero\n            ? 0 : valueAxis.scale.getExtent()[0];\n\n        var valueDim = valueAxis.dim;\n\n        var baseDataOffset = valueDim === 'x' || valueDim === 'radius' ? 1 : 0;\n\n        return data.mapArray([valueDim], function (val, idx) {\n            var stackedOnSameSign;\n            var stackedOn = data.stackedOn;\n            // Find first stacked value with same sign\n            while (stackedOn &&\n                sign(stackedOn.get(valueDim, idx)) === sign(val)\n            ) {\n                stackedOnSameSign = stackedOn;\n                break;\n            }\n            var stackedData = [];\n            stackedData[baseDataOffset] = data.get(baseAxis.dim, idx);\n            stackedData[1 - baseDataOffset] = stackedOnSameSign\n                ? stackedOnSameSign.get(valueDim, idx, true) : valueStart;\n\n            return coordSys.dataToPoint(stackedData);\n        }, true);\n    }\n\n    function createGridClipShape(cartesian, hasAnimation, seriesModel) {\n        var xExtent = getAxisExtentWithGap(cartesian.getAxis('x'));\n        var yExtent = getAxisExtentWithGap(cartesian.getAxis('y'));\n        var isHorizontal = cartesian.getBaseAxis().isHorizontal();\n\n        var x = Math.min(xExtent[0], xExtent[1]);\n        var y = Math.min(yExtent[0], yExtent[1]);\n        var width = Math.max(xExtent[0], xExtent[1]) - x;\n        var height = Math.max(yExtent[0], yExtent[1]) - y;\n        var lineWidth = seriesModel.get('lineStyle.normal.width') || 2;\n        // Expand clip shape to avoid clipping when line value exceeds axis\n        var expandSize = seriesModel.get('clipOverflow') ? lineWidth / 2 : Math.max(width, height);\n        if (isHorizontal) {\n            y -= expandSize;\n            height += expandSize * 2;\n        }\n        else {\n            x -= expandSize;\n            width += expandSize * 2;\n        }\n\n        var clipPath = new graphic.Rect({\n            shape: {\n                x: x,\n                y: y,\n                width: width,\n                height: height\n            }\n        });\n\n        if (hasAnimation) {\n            clipPath.shape[isHorizontal ? 'width' : 'height'] = 0;\n            graphic.initProps(clipPath, {\n                shape: {\n                    width: width,\n                    height: height\n                }\n            }, seriesModel);\n        }\n\n        return clipPath;\n    }\n\n    function createPolarClipShape(polar, hasAnimation, seriesModel) {\n        var angleAxis = polar.getAngleAxis();\n        var radiusAxis = polar.getRadiusAxis();\n\n        var radiusExtent = radiusAxis.getExtent();\n        var angleExtent = angleAxis.getExtent();\n\n        var RADIAN = Math.PI / 180;\n\n        var clipPath = new graphic.Sector({\n            shape: {\n                cx: polar.cx,\n                cy: polar.cy,\n                r0: radiusExtent[0],\n                r: radiusExtent[1],\n                startAngle: -angleExtent[0] * RADIAN,\n                endAngle: -angleExtent[1] * RADIAN,\n                clockwise: angleAxis.inverse\n            }\n        });\n\n        if (hasAnimation) {\n            clipPath.shape.endAngle = -angleExtent[0] * RADIAN;\n            graphic.initProps(clipPath, {\n                shape: {\n                    endAngle: -angleExtent[1] * RADIAN\n                }\n            }, seriesModel);\n        }\n\n        return clipPath;\n    }\n\n    function createClipShape(coordSys, hasAnimation, seriesModel) {\n        return coordSys.type === 'polar'\n            ? createPolarClipShape(coordSys, hasAnimation, seriesModel)\n            : createGridClipShape(coordSys, hasAnimation, seriesModel);\n    }\n\n    function turnPointsIntoStep(points, coordSys, stepTurnAt) {\n        var baseAxis = coordSys.getBaseAxis();\n        var baseIndex = baseAxis.dim === 'x' || baseAxis.dim === 'radius' ? 0 : 1;\n\n        var stepPoints = [];\n        for (var i = 0; i < points.length - 1; i++) {\n            var nextPt = points[i + 1];\n            var pt = points[i];\n            stepPoints.push(pt);\n\n            var stepPt = [];\n            switch (stepTurnAt) {\n                case 'end':\n                    stepPt[baseIndex] = nextPt[baseIndex];\n                    stepPt[1 - baseIndex] = pt[1 - baseIndex];\n                    // default is start\n                    stepPoints.push(stepPt);\n                    break;\n                case 'middle':\n                    // default is start\n                    var middle = (pt[baseIndex] + nextPt[baseIndex]) / 2;\n                    var stepPt2 = [];\n                    stepPt[baseIndex] = stepPt2[baseIndex] = middle;\n                    stepPt[1 - baseIndex] = pt[1 - baseIndex];\n                    stepPt2[1 - baseIndex] = nextPt[1 - baseIndex];\n                    stepPoints.push(stepPt);\n                    stepPoints.push(stepPt2);\n                    break;\n                default:\n                    stepPt[baseIndex] = pt[baseIndex];\n                    stepPt[1 - baseIndex] = nextPt[1 - baseIndex];\n                    // default is start\n                    stepPoints.push(stepPt);\n            }\n        }\n        // Last points\n        points[i] && stepPoints.push(points[i]);\n        return stepPoints;\n    }\n\n    function getVisualGradient(data, coordSys) {\n        var visualMetaList = data.getVisual('visualMeta');\n        if (!visualMetaList || !visualMetaList.length || !data.count()) {\n            // When data.count() is 0, gradient range can not be calculated.\n            return;\n        }\n\n        var visualMeta;\n        for (var i = visualMetaList.length - 1; i >= 0; i--) {\n            // Can only be x or y\n            if (visualMetaList[i].dimension < 2) {\n                visualMeta = visualMetaList[i];\n                break;\n            }\n        }\n        if (!visualMeta || coordSys.type !== 'cartesian2d') {\n            if (__DEV__) {\n                console.warn('Visual map on line style only support x or y dimension.');\n            }\n            return;\n        }\n\n        // If the area to be rendered is bigger than area defined by LinearGradient,\n        // the canvas spec prescribes that the color of the first stop and the last\n        // stop should be used. But if two stops are added at offset 0, in effect\n        // browsers use the color of the second stop to render area outside\n        // LinearGradient. So we can only infinitesimally extend area defined in\n        // LinearGradient to render `outerColors`.\n\n        var dimension = visualMeta.dimension;\n        var dimName = data.dimensions[dimension];\n        var axis = coordSys.getAxis(dimName);\n\n        // dataToCoor mapping may not be linear, but must be monotonic.\n        var colorStops = zrUtil.map(visualMeta.stops, function (stop) {\n            return {\n                coord: axis.toGlobalCoord(axis.dataToCoord(stop.value)),\n                color: stop.color\n            };\n        });\n        var stopLen = colorStops.length;\n        var outerColors = visualMeta.outerColors.slice();\n\n        if (stopLen && colorStops[0].coord > colorStops[stopLen - 1].coord) {\n            colorStops.reverse();\n            outerColors.reverse();\n        }\n\n        var tinyExtent = 10; // Arbitrary value: 10px\n        var minCoord = colorStops[0].coord - tinyExtent;\n        var maxCoord = colorStops[stopLen - 1].coord + tinyExtent;\n        var coordSpan = maxCoord - minCoord;\n\n        if (coordSpan < 1e-3) {\n            return 'transparent';\n        }\n\n        zrUtil.each(colorStops, function (stop) {\n            stop.offset = (stop.coord - minCoord) / coordSpan;\n        });\n        colorStops.push({\n            offset: stopLen ? colorStops[stopLen - 1].offset : 0.5,\n            color: outerColors[1] || 'transparent'\n        });\n        colorStops.unshift({ // notice colorStops.length have been changed.\n            offset: stopLen ? colorStops[0].offset : 0.5,\n            color: outerColors[0] || 'transparent'\n        });\n\n        // zrUtil.each(colorStops, function (colorStop) {\n        //     // Make sure each offset has rounded px to avoid not sharp edge\n        //     colorStop.offset = (Math.round(colorStop.offset * (end - start) + start) - start) / (end - start);\n        // });\n\n        var gradient = new graphic.LinearGradient(0, 0, 0, 0, colorStops, true);\n        gradient[dimName] = minCoord;\n        gradient[dimName + '2'] = maxCoord;\n\n        return gradient;\n    }\n\n    module.exports = ChartView.extend({\n\n        type: 'line',\n\n        init: function () {\n            var lineGroup = new graphic.Group();\n\n            var symbolDraw = new SymbolDraw();\n            this.group.add(symbolDraw.group);\n\n            this._symbolDraw = symbolDraw;\n            this._lineGroup = lineGroup;\n        },\n\n        render: function (seriesModel, ecModel, api) {\n            var coordSys = seriesModel.coordinateSystem;\n            var group = this.group;\n            var data = seriesModel.getData();\n            var lineStyleModel = seriesModel.getModel('lineStyle.normal');\n            var areaStyleModel = seriesModel.getModel('areaStyle.normal');\n\n            var points = data.mapArray(data.getItemLayout, true);\n\n            var isCoordSysPolar = coordSys.type === 'polar';\n            var prevCoordSys = this._coordSys;\n\n            var symbolDraw = this._symbolDraw;\n            var polyline = this._polyline;\n            var polygon = this._polygon;\n\n            var lineGroup = this._lineGroup;\n\n            var hasAnimation = seriesModel.get('animation');\n\n            var isAreaChart = !areaStyleModel.isEmpty();\n            var stackedOnPoints = getStackedOnPoints(coordSys, data);\n\n            var showSymbol = seriesModel.get('showSymbol');\n\n            var isSymbolIgnore = showSymbol && !isCoordSysPolar && !seriesModel.get('showAllSymbol')\n                && this._getSymbolIgnoreFunc(data, coordSys);\n\n            // Remove temporary symbols\n            var oldData = this._data;\n            oldData && oldData.eachItemGraphicEl(function (el, idx) {\n                if (el.__temp) {\n                    group.remove(el);\n                    oldData.setItemGraphicEl(idx, null);\n                }\n            });\n\n            // Remove previous created symbols if showSymbol changed to false\n            if (!showSymbol) {\n                symbolDraw.remove();\n            }\n\n            group.add(lineGroup);\n\n            // FIXME step not support polar\n            var step = !isCoordSysPolar && seriesModel.get('step');\n            // Initialization animation or coordinate system changed\n            if (\n                !(polyline && prevCoordSys.type === coordSys.type && step === this._step)\n            ) {\n                showSymbol && symbolDraw.updateData(data, isSymbolIgnore);\n\n                if (step) {\n                    // TODO If stacked series is not step\n                    points = turnPointsIntoStep(points, coordSys, step);\n                    stackedOnPoints = turnPointsIntoStep(stackedOnPoints, coordSys, step);\n                }\n\n                polyline = this._newPolyline(points, coordSys, hasAnimation);\n                if (isAreaChart) {\n                    polygon = this._newPolygon(\n                        points, stackedOnPoints,\n                        coordSys, hasAnimation\n                    );\n                }\n                lineGroup.setClipPath(createClipShape(coordSys, true, seriesModel));\n            }\n            else {\n                if (isAreaChart && !polygon) {\n                    // If areaStyle is added\n                    polygon = this._newPolygon(\n                        points, stackedOnPoints,\n                        coordSys, hasAnimation\n                    );\n                }\n                else if (polygon && !isAreaChart) {\n                    // If areaStyle is removed\n                    lineGroup.remove(polygon);\n                    polygon = this._polygon = null;\n                }\n\n                // Update clipPath\n                lineGroup.setClipPath(createClipShape(coordSys, false, seriesModel));\n\n                // Always update, or it is wrong in the case turning on legend\n                // because points are not changed\n                showSymbol && symbolDraw.updateData(data, isSymbolIgnore);\n\n                // Stop symbol animation and sync with line points\n                // FIXME performance?\n                data.eachItemGraphicEl(function (el) {\n                    el.stopAnimation(true);\n                });\n\n                // In the case data zoom triggerred refreshing frequently\n                // Data may not change if line has a category axis. So it should animate nothing\n                if (!isPointsSame(this._stackedOnPoints, stackedOnPoints)\n                    || !isPointsSame(this._points, points)\n                ) {\n                    if (hasAnimation) {\n                        this._updateAnimation(\n                            data, stackedOnPoints, coordSys, api, step\n                        );\n                    }\n                    else {\n                        // Not do it in update with animation\n                        if (step) {\n                            // TODO If stacked series is not step\n                            points = turnPointsIntoStep(points, coordSys, step);\n                            stackedOnPoints = turnPointsIntoStep(stackedOnPoints, coordSys, step);\n                        }\n\n                        polyline.setShape({\n                            points: points\n                        });\n                        polygon && polygon.setShape({\n                            points: points,\n                            stackedOnPoints: stackedOnPoints\n                        });\n                    }\n                }\n            }\n\n            var visualColor = getVisualGradient(data, coordSys) || data.getVisual('color');\n\n            polyline.useStyle(zrUtil.defaults(\n                // Use color in lineStyle first\n                lineStyleModel.getLineStyle(),\n                {\n                    fill: 'none',\n                    stroke: visualColor,\n                    lineJoin: 'bevel'\n                }\n            ));\n\n            var smooth = seriesModel.get('smooth');\n            smooth = getSmooth(seriesModel.get('smooth'));\n            polyline.setShape({\n                smooth: smooth,\n                smoothMonotone: seriesModel.get('smoothMonotone'),\n                connectNulls: seriesModel.get('connectNulls')\n            });\n\n            if (polygon) {\n                var stackedOn = data.stackedOn;\n                var stackedOnSmooth = 0;\n\n                polygon.useStyle(zrUtil.defaults(\n                    areaStyleModel.getAreaStyle(),\n                    {\n                        fill: visualColor,\n                        opacity: 0.7,\n                        lineJoin: 'bevel'\n                    }\n                ));\n\n                if (stackedOn) {\n                    var stackedOnSeries = stackedOn.hostModel;\n                    stackedOnSmooth = getSmooth(stackedOnSeries.get('smooth'));\n                }\n\n                polygon.setShape({\n                    smooth: smooth,\n                    stackedOnSmooth: stackedOnSmooth,\n                    smoothMonotone: seriesModel.get('smoothMonotone'),\n                    connectNulls: seriesModel.get('connectNulls')\n                });\n            }\n\n            this._data = data;\n            // Save the coordinate system for transition animation when data changed\n            this._coordSys = coordSys;\n            this._stackedOnPoints = stackedOnPoints;\n            this._points = points;\n            this._step = step;\n        },\n\n        dispose: function () {},\n\n        highlight: function (seriesModel, ecModel, api, payload) {\n            var data = seriesModel.getData();\n            var dataIndex = modelUtil.queryDataIndex(data, payload);\n\n            if (!(dataIndex instanceof Array) && dataIndex != null && dataIndex >= 0) {\n                var symbol = data.getItemGraphicEl(dataIndex);\n                if (!symbol) {\n                    // Create a temporary symbol if it is not exists\n                    var pt = data.getItemLayout(dataIndex);\n                    if (!pt) {\n                        // Null data\n                        return;\n                    }\n                    symbol = new Symbol(data, dataIndex);\n                    symbol.position = pt;\n                    symbol.setZ(\n                        seriesModel.get('zlevel'),\n                        seriesModel.get('z')\n                    );\n                    symbol.ignore = isNaN(pt[0]) || isNaN(pt[1]);\n                    symbol.__temp = true;\n                    data.setItemGraphicEl(dataIndex, symbol);\n\n                    // Stop scale animation\n                    symbol.stopSymbolAnimation(true);\n\n                    this.group.add(symbol);\n                }\n                symbol.highlight();\n            }\n            else {\n                // Highlight whole series\n                ChartView.prototype.highlight.call(\n                    this, seriesModel, ecModel, api, payload\n                );\n            }\n        },\n\n        downplay: function (seriesModel, ecModel, api, payload) {\n            var data = seriesModel.getData();\n            var dataIndex = modelUtil.queryDataIndex(data, payload);\n            if (dataIndex != null && dataIndex >= 0) {\n                var symbol = data.getItemGraphicEl(dataIndex);\n                if (symbol) {\n                    if (symbol.__temp) {\n                        data.setItemGraphicEl(dataIndex, null);\n                        this.group.remove(symbol);\n                    }\n                    else {\n                        symbol.downplay();\n                    }\n                }\n            }\n            else {\n                // Downplay whole series\n                ChartView.prototype.downplay.call(\n                    this, seriesModel, ecModel, api, payload\n                );\n            }\n        },\n\n        /**\n         * @param {module:zrender/container/Group} group\n         * @param {Array.<Array.<number>>} points\n         * @private\n         */\n        _newPolyline: function (points) {\n            var polyline = this._polyline;\n            // Remove previous created polyline\n            if (polyline) {\n                this._lineGroup.remove(polyline);\n            }\n\n            polyline = new polyHelper.Polyline({\n                shape: {\n                    points: points\n                },\n                silent: true,\n                z2: 10\n            });\n\n            this._lineGroup.add(polyline);\n\n            this._polyline = polyline;\n\n            return polyline;\n        },\n\n        /**\n         * @param {module:zrender/container/Group} group\n         * @param {Array.<Array.<number>>} stackedOnPoints\n         * @param {Array.<Array.<number>>} points\n         * @private\n         */\n        _newPolygon: function (points, stackedOnPoints) {\n            var polygon = this._polygon;\n            // Remove previous created polygon\n            if (polygon) {\n                this._lineGroup.remove(polygon);\n            }\n\n            polygon = new polyHelper.Polygon({\n                shape: {\n                    points: points,\n                    stackedOnPoints: stackedOnPoints\n                },\n                silent: true\n            });\n\n            this._lineGroup.add(polygon);\n\n            this._polygon = polygon;\n            return polygon;\n        },\n        /**\n         * @private\n         */\n        _getSymbolIgnoreFunc: function (data, coordSys) {\n            var categoryAxis = coordSys.getAxesByScale('ordinal')[0];\n            // `getLabelInterval` is provided by echarts/component/axis\n            if (categoryAxis && categoryAxis.isLabelIgnored) {\n                return zrUtil.bind(categoryAxis.isLabelIgnored, categoryAxis);\n            }\n        },\n\n        /**\n         * @private\n         */\n        // FIXME Two value axis\n        _updateAnimation: function (data, stackedOnPoints, coordSys, api, step) {\n            var polyline = this._polyline;\n            var polygon = this._polygon;\n            var seriesModel = data.hostModel;\n\n            var diff = lineAnimationDiff(\n                this._data, data,\n                this._stackedOnPoints, stackedOnPoints,\n                this._coordSys, coordSys\n            );\n\n            var current = diff.current;\n            var stackedOnCurrent = diff.stackedOnCurrent;\n            var next = diff.next;\n            var stackedOnNext = diff.stackedOnNext;\n            if (step) {\n                // TODO If stacked series is not step\n                current = turnPointsIntoStep(diff.current, coordSys, step);\n                stackedOnCurrent = turnPointsIntoStep(diff.stackedOnCurrent, coordSys, step);\n                next = turnPointsIntoStep(diff.next, coordSys, step);\n                stackedOnNext = turnPointsIntoStep(diff.stackedOnNext, coordSys, step);\n            }\n            // `diff.current` is subset of `current` (which should be ensured by\n            // turnPointsIntoStep), so points in `__points` can be updated when\n            // points in `current` are update during animation.\n            polyline.shape.__points = diff.current;\n            polyline.shape.points = current;\n\n            graphic.updateProps(polyline, {\n                shape: {\n                    points: next\n                }\n            }, seriesModel);\n\n            if (polygon) {\n                polygon.setShape({\n                    points: current,\n                    stackedOnPoints: stackedOnCurrent\n                });\n                graphic.updateProps(polygon, {\n                    shape: {\n                        points: next,\n                        stackedOnPoints: stackedOnNext\n                    }\n                }, seriesModel);\n            }\n\n            var updatedDataInfo = [];\n            var diffStatus = diff.status;\n\n            for (var i = 0; i < diffStatus.length; i++) {\n                var cmd = diffStatus[i].cmd;\n                if (cmd === '=') {\n                    var el = data.getItemGraphicEl(diffStatus[i].idx1);\n                    if (el) {\n                        updatedDataInfo.push({\n                            el: el,\n                            ptIdx: i    // Index of points\n                        });\n                    }\n                }\n            }\n\n            if (polyline.animators && polyline.animators.length) {\n                polyline.animators[0].during(function () {\n                    for (var i = 0; i < updatedDataInfo.length; i++) {\n                        var el = updatedDataInfo[i].el;\n                        el.attr('position', polyline.shape.__points[updatedDataInfo[i].ptIdx]);\n                    }\n                });\n            }\n        },\n\n        remove: function (ecModel) {\n            var group = this.group;\n            var oldData = this._data;\n            this._lineGroup.removeAll();\n            this._symbolDraw.remove(true);\n            // Remove temporary created elements when highlighting\n            oldData && oldData.eachItemGraphicEl(function (el, idx) {\n                if (el.__temp) {\n                    group.remove(el);\n                    oldData.setItemGraphicEl(idx, null);\n                }\n            });\n\n            this._polyline =\n            this._polygon =\n            this._coordSys =\n            this._points =\n            this._stackedOnPoints =\n            this._data = null;\n        }\n    });\n\n\n/***/ }),\n/* 545 */\n/***/ (function(module, exports) {\n\n\n\n    // var arrayDiff = require('zrender/lib/core/arrayDiff');\n    // 'zrender/core/arrayDiff' has been used before, but it did\n    // not do well in performance when roam with fixed dataZoom window.\n\n    function sign(val) {\n        return val >= 0 ? 1 : -1;\n    }\n\n    function getStackedOnPoint(coordSys, data, idx) {\n        var baseAxis = coordSys.getBaseAxis();\n        var valueAxis = coordSys.getOtherAxis(baseAxis);\n        var valueStart = baseAxis.onZero\n            ? 0 : valueAxis.scale.getExtent()[0];\n\n        var valueDim = valueAxis.dim;\n        var baseDataOffset = valueDim === 'x' || valueDim === 'radius' ? 1 : 0;\n\n        var stackedOnSameSign;\n        var stackedOn = data.stackedOn;\n        var val = data.get(valueDim, idx);\n        // Find first stacked value with same sign\n        while (stackedOn &&\n            sign(stackedOn.get(valueDim, idx)) === sign(val)\n        ) {\n            stackedOnSameSign = stackedOn;\n            break;\n        }\n        var stackedData = [];\n        stackedData[baseDataOffset] = data.get(baseAxis.dim, idx);\n        stackedData[1 - baseDataOffset] = stackedOnSameSign\n            ? stackedOnSameSign.get(valueDim, idx, true) : valueStart;\n\n        return coordSys.dataToPoint(stackedData);\n    }\n\n    // function convertToIntId(newIdList, oldIdList) {\n    //     // Generate int id instead of string id.\n    //     // Compare string maybe slow in score function of arrDiff\n\n    //     // Assume id in idList are all unique\n    //     var idIndicesMap = {};\n    //     var idx = 0;\n    //     for (var i = 0; i < newIdList.length; i++) {\n    //         idIndicesMap[newIdList[i]] = idx;\n    //         newIdList[i] = idx++;\n    //     }\n    //     for (var i = 0; i < oldIdList.length; i++) {\n    //         var oldId = oldIdList[i];\n    //         // Same with newIdList\n    //         if (idIndicesMap[oldId]) {\n    //             oldIdList[i] = idIndicesMap[oldId];\n    //         }\n    //         else {\n    //             oldIdList[i] = idx++;\n    //         }\n    //     }\n    // }\n\n    function diffData(oldData, newData) {\n        var diffResult = [];\n\n        newData.diff(oldData)\n            .add(function (idx) {\n                diffResult.push({cmd: '+', idx: idx});\n            })\n            .update(function (newIdx, oldIdx) {\n                diffResult.push({cmd: '=', idx: oldIdx, idx1: newIdx});\n            })\n            .remove(function (idx) {\n                diffResult.push({cmd: '-', idx: idx});\n            })\n            .execute();\n\n        return diffResult;\n    }\n\n    module.exports = function (\n        oldData, newData,\n        oldStackedOnPoints, newStackedOnPoints,\n        oldCoordSys, newCoordSys\n    ) {\n        var diff = diffData(oldData, newData);\n\n        // var newIdList = newData.mapArray(newData.getId);\n        // var oldIdList = oldData.mapArray(oldData.getId);\n\n        // convertToIntId(newIdList, oldIdList);\n\n        // // FIXME One data ?\n        // diff = arrayDiff(oldIdList, newIdList);\n\n        var currPoints = [];\n        var nextPoints = [];\n        // Points for stacking base line\n        var currStackedPoints = [];\n        var nextStackedPoints = [];\n\n        var status = [];\n        var sortedIndices = [];\n        var rawIndices = [];\n        var dims = newCoordSys.dimensions;\n        for (var i = 0; i < diff.length; i++) {\n            var diffItem = diff[i];\n            var pointAdded = true;\n\n            // FIXME, animation is not so perfect when dataZoom window moves fast\n            // Which is in case remvoing or add more than one data in the tail or head\n            switch (diffItem.cmd) {\n                case '=':\n                    var currentPt = oldData.getItemLayout(diffItem.idx);\n                    var nextPt = newData.getItemLayout(diffItem.idx1);\n                    // If previous data is NaN, use next point directly\n                    if (isNaN(currentPt[0]) || isNaN(currentPt[1])) {\n                        currentPt = nextPt.slice();\n                    }\n                    currPoints.push(currentPt);\n                    nextPoints.push(nextPt);\n\n                    currStackedPoints.push(oldStackedOnPoints[diffItem.idx]);\n                    nextStackedPoints.push(newStackedOnPoints[diffItem.idx1]);\n\n                    rawIndices.push(newData.getRawIndex(diffItem.idx1));\n                    break;\n                case '+':\n                    var idx = diffItem.idx;\n                    currPoints.push(\n                        oldCoordSys.dataToPoint([\n                            newData.get(dims[0], idx, true), newData.get(dims[1], idx, true)\n                        ])\n                    );\n\n                    nextPoints.push(newData.getItemLayout(idx).slice());\n\n                    currStackedPoints.push(\n                        getStackedOnPoint(oldCoordSys, newData, idx)\n                    );\n                    nextStackedPoints.push(newStackedOnPoints[idx]);\n\n                    rawIndices.push(newData.getRawIndex(idx));\n                    break;\n                case '-':\n                    var idx = diffItem.idx;\n                    var rawIndex = oldData.getRawIndex(idx);\n                    // Data is replaced. In the case of dynamic data queue\n                    // FIXME FIXME FIXME\n                    if (rawIndex !== idx) {\n                        currPoints.push(oldData.getItemLayout(idx));\n                        nextPoints.push(newCoordSys.dataToPoint([\n                            oldData.get(dims[0], idx, true), oldData.get(dims[1], idx, true)\n                        ]));\n\n                        currStackedPoints.push(oldStackedOnPoints[idx]);\n                        nextStackedPoints.push(\n                            getStackedOnPoint(\n                                newCoordSys, oldData, idx\n                            )\n                        );\n\n                        rawIndices.push(rawIndex);\n                    }\n                    else {\n                        pointAdded = false;\n                    }\n            }\n\n            // Original indices\n            if (pointAdded) {\n                status.push(diffItem);\n                sortedIndices.push(sortedIndices.length);\n            }\n        }\n\n        // Diff result may be crossed if all items are changed\n        // Sort by data index\n        sortedIndices.sort(function (a, b) {\n            return rawIndices[a] - rawIndices[b];\n        });\n\n        var sortedCurrPoints = [];\n        var sortedNextPoints = [];\n\n        var sortedCurrStackedPoints = [];\n        var sortedNextStackedPoints = [];\n\n        var sortedStatus = [];\n        for (var i = 0; i < sortedIndices.length; i++) {\n            var idx = sortedIndices[i];\n            sortedCurrPoints[i] = currPoints[idx];\n            sortedNextPoints[i] = nextPoints[idx];\n\n            sortedCurrStackedPoints[i] = currStackedPoints[idx];\n            sortedNextStackedPoints[i] = nextStackedPoints[idx];\n\n            sortedStatus[i] = status[idx];\n        }\n\n        return {\n            current: sortedCurrPoints,\n            next: sortedNextPoints,\n\n            stackedOnCurrent: sortedCurrStackedPoints,\n            stackedOnNext: sortedNextStackedPoints,\n\n            status: sortedStatus\n        };\n    };\n\n\n/***/ }),\n/* 546 */\n/***/ (function(module, exports, __webpack_require__) {\n\n// Poly path support NaN point\n\n\n    var Path = __webpack_require__(461);\n    var vec2 = __webpack_require__(463);\n\n    var vec2Min = vec2.min;\n    var vec2Max = vec2.max;\n\n    var scaleAndAdd = vec2.scaleAndAdd;\n    var v2Copy = vec2.copy;\n\n    // Temporary variable\n    var v = [];\n    var cp0 = [];\n    var cp1 = [];\n\n    function isPointNull(p) {\n        return isNaN(p[0]) || isNaN(p[1]);\n    }\n\n    function drawSegment(\n        ctx, points, start, segLen, allLen,\n        dir, smoothMin, smoothMax, smooth, smoothMonotone, connectNulls\n    ) {\n        var prevIdx = 0;\n        var idx = start;\n        for (var k = 0; k < segLen; k++) {\n            var p = points[idx];\n            if (idx >= allLen || idx < 0) {\n                break;\n            }\n            if (isPointNull(p)) {\n                if (connectNulls) {\n                    idx += dir;\n                    continue;\n                }\n                break;\n            }\n\n            if (idx === start) {\n                ctx[dir > 0 ? 'moveTo' : 'lineTo'](p[0], p[1]);\n                v2Copy(cp0, p);\n            }\n            else {\n                if (smooth > 0) {\n                    var nextIdx = idx + dir;\n                    var nextP = points[nextIdx];\n                    if (connectNulls) {\n                        // Find next point not null\n                        while (nextP && isPointNull(points[nextIdx])) {\n                            nextIdx += dir;\n                            nextP = points[nextIdx];\n                        }\n                    }\n\n                    var ratioNextSeg = 0.5;\n                    var prevP = points[prevIdx];\n                    var nextP = points[nextIdx];\n                    // Last point\n                    if (!nextP || isPointNull(nextP)) {\n                        v2Copy(cp1, p);\n                    }\n                    else {\n                        // If next data is null in not connect case\n                        if (isPointNull(nextP) && !connectNulls) {\n                            nextP = p;\n                        }\n\n                        vec2.sub(v, nextP, prevP);\n\n                        var lenPrevSeg;\n                        var lenNextSeg;\n                        if (smoothMonotone === 'x' || smoothMonotone === 'y') {\n                            var dim = smoothMonotone === 'x' ? 0 : 1;\n                            lenPrevSeg = Math.abs(p[dim] - prevP[dim]);\n                            lenNextSeg = Math.abs(p[dim] - nextP[dim]);\n                        }\n                        else {\n                            lenPrevSeg = vec2.dist(p, prevP);\n                            lenNextSeg = vec2.dist(p, nextP);\n                        }\n\n                        // Use ratio of seg length\n                        ratioNextSeg = lenNextSeg / (lenNextSeg + lenPrevSeg);\n\n                        scaleAndAdd(cp1, p, v, -smooth * (1 - ratioNextSeg));\n                    }\n                    // Smooth constraint\n                    vec2Min(cp0, cp0, smoothMax);\n                    vec2Max(cp0, cp0, smoothMin);\n                    vec2Min(cp1, cp1, smoothMax);\n                    vec2Max(cp1, cp1, smoothMin);\n\n                    ctx.bezierCurveTo(\n                        cp0[0], cp0[1],\n                        cp1[0], cp1[1],\n                        p[0], p[1]\n                    );\n                    // cp0 of next segment\n                    scaleAndAdd(cp0, p, v, smooth * ratioNextSeg);\n                }\n                else {\n                    ctx.lineTo(p[0], p[1]);\n                }\n            }\n\n            prevIdx = idx;\n            idx += dir;\n        }\n\n        return k;\n    }\n\n    function getBoundingBox(points, smoothConstraint) {\n        var ptMin = [Infinity, Infinity];\n        var ptMax = [-Infinity, -Infinity];\n        if (smoothConstraint) {\n            for (var i = 0; i < points.length; i++) {\n                var pt = points[i];\n                if (pt[0] < ptMin[0]) { ptMin[0] = pt[0]; }\n                if (pt[1] < ptMin[1]) { ptMin[1] = pt[1]; }\n                if (pt[0] > ptMax[0]) { ptMax[0] = pt[0]; }\n                if (pt[1] > ptMax[1]) { ptMax[1] = pt[1]; }\n            }\n        }\n        return {\n            min: smoothConstraint ? ptMin : ptMax,\n            max: smoothConstraint ? ptMax : ptMin\n        };\n    }\n\n    module.exports = {\n\n        Polyline: Path.extend({\n\n            type: 'ec-polyline',\n\n            shape: {\n                points: [],\n\n                smooth: 0,\n\n                smoothConstraint: true,\n\n                smoothMonotone: null,\n\n                connectNulls: false\n            },\n\n            style: {\n                fill: null,\n\n                stroke: '#000'\n            },\n\n            buildPath: function (ctx, shape) {\n                var points = shape.points;\n\n                var i = 0;\n                var len = points.length;\n\n                var result = getBoundingBox(points, shape.smoothConstraint);\n\n                if (shape.connectNulls) {\n                    // Must remove first and last null values avoid draw error in polygon\n                    for (; len > 0; len--) {\n                        if (!isPointNull(points[len - 1])) {\n                            break;\n                        }\n                    }\n                    for (; i < len; i++) {\n                        if (!isPointNull(points[i])) {\n                            break;\n                        }\n                    }\n                }\n                while (i < len) {\n                    i += drawSegment(\n                        ctx, points, i, len, len,\n                        1, result.min, result.max, shape.smooth,\n                        shape.smoothMonotone, shape.connectNulls\n                    ) + 1;\n                }\n            }\n        }),\n\n        Polygon: Path.extend({\n\n            type: 'ec-polygon',\n\n            shape: {\n                points: [],\n\n                // Offset between stacked base points and points\n                stackedOnPoints: [],\n\n                smooth: 0,\n\n                stackedOnSmooth: 0,\n\n                smoothConstraint: true,\n\n                smoothMonotone: null,\n\n                connectNulls: false\n            },\n\n            buildPath: function (ctx, shape) {\n                var points = shape.points;\n                var stackedOnPoints = shape.stackedOnPoints;\n\n                var i = 0;\n                var len = points.length;\n                var smoothMonotone = shape.smoothMonotone;\n                var bbox = getBoundingBox(points, shape.smoothConstraint);\n                var stackedOnBBox = getBoundingBox(stackedOnPoints, shape.smoothConstraint);\n\n                if (shape.connectNulls) {\n                    // Must remove first and last null values avoid draw error in polygon\n                    for (; len > 0; len--) {\n                        if (!isPointNull(points[len - 1])) {\n                            break;\n                        }\n                    }\n                    for (; i < len; i++) {\n                        if (!isPointNull(points[i])) {\n                            break;\n                        }\n                    }\n                }\n                while (i < len) {\n                    var k = drawSegment(\n                        ctx, points, i, len, len,\n                        1, bbox.min, bbox.max, shape.smooth,\n                        smoothMonotone, shape.connectNulls\n                    );\n                    drawSegment(\n                        ctx, stackedOnPoints, i + k - 1, k, len,\n                        -1, stackedOnBBox.min, stackedOnBBox.max, shape.stackedOnSmooth,\n                        smoothMonotone, shape.connectNulls\n                    );\n                    i += k + 1;\n\n                    ctx.closePath();\n                }\n            }\n        })\n    };\n\n\n/***/ }),\n/* 547 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n// TODO boundaryGap\n\n\n    __webpack_require__(505);\n\n    __webpack_require__(549);\n\n\n/***/ }),\n/* 548 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var zrUtil = __webpack_require__(460);\n    var formatUtil = __webpack_require__(468);\n    var graphic = __webpack_require__(464);\n    var Model = __webpack_require__(470);\n    var numberUtil = __webpack_require__(465);\n    var remRadian = numberUtil.remRadian;\n    var isRadianAroundZero = numberUtil.isRadianAroundZero;\n    var vec2 = __webpack_require__(463);\n    var v2ApplyTransform = vec2.applyTransform;\n    var retrieve = zrUtil.retrieve;\n\n    var PI = Math.PI;\n\n    function makeAxisEventDataBase(axisModel) {\n        var eventData = {\n            componentType: axisModel.mainType\n        };\n        eventData[axisModel.mainType + 'Index'] = axisModel.componentIndex;\n        return eventData;\n    }\n\n    /**\n     * A final axis is translated and rotated from a \"standard axis\".\n     * So opt.position and opt.rotation is required.\n     *\n     * A standard axis is and axis from [0, 0] to [0, axisExtent[1]],\n     * for example: (0, 0) ------------> (0, 50)\n     *\n     * nameDirection or tickDirection or labelDirection is 1 means tick\n     * or label is below the standard axis, whereas is -1 means above\n     * the standard axis. labelOffset means offset between label and axis,\n     * which is useful when 'onZero', where axisLabel is in the grid and\n     * label in outside grid.\n     *\n     * Tips: like always,\n     * positive rotation represents anticlockwise, and negative rotation\n     * represents clockwise.\n     * The direction of position coordinate is the same as the direction\n     * of screen coordinate.\n     *\n     * Do not need to consider axis 'inverse', which is auto processed by\n     * axis extent.\n     *\n     * @param {module:zrender/container/Group} group\n     * @param {Object} axisModel\n     * @param {Object} opt Standard axis parameters.\n     * @param {Array.<number>} opt.position [x, y]\n     * @param {number} opt.rotation by radian\n     * @param {number} [opt.nameDirection=1] 1 or -1 Used when nameLocation is 'middle'.\n     * @param {number} [opt.tickDirection=1] 1 or -1\n     * @param {number} [opt.labelDirection=1] 1 or -1\n     * @param {number} [opt.labelOffset=0] Usefull when onZero.\n     * @param {string} [opt.axisLabelShow] default get from axisModel.\n     * @param {string} [opt.axisName] default get from axisModel.\n     * @param {number} [opt.axisNameAvailableWidth]\n     * @param {number} [opt.labelRotation] by degree, default get from axisModel.\n     * @param {number} [opt.labelInterval] Default label interval when label\n     *                                     interval from model is null or 'auto'.\n     * @param {number} [opt.strokeContainThreshold] Default label interval when label\n     */\n    var AxisBuilder = function (axisModel, opt) {\n\n        /**\n         * @readOnly\n         */\n        this.opt = opt;\n\n        /**\n         * @readOnly\n         */\n        this.axisModel = axisModel;\n\n        // Default value\n        zrUtil.defaults(\n            opt,\n            {\n                labelOffset: 0,\n                nameDirection: 1,\n                tickDirection: 1,\n                labelDirection: 1,\n                silent: true\n            }\n        );\n\n        /**\n         * @readOnly\n         */\n        this.group = new graphic.Group();\n\n        // FIXME Not use a seperate text group?\n        var dumbGroup = new graphic.Group({\n            position: opt.position.slice(),\n            rotation: opt.rotation\n        });\n\n        // this.group.add(dumbGroup);\n        // this._dumbGroup = dumbGroup;\n\n        dumbGroup.updateTransform();\n        this._transform = dumbGroup.transform;\n\n        this._dumbGroup = dumbGroup;\n    };\n\n    AxisBuilder.prototype = {\n\n        constructor: AxisBuilder,\n\n        hasBuilder: function (name) {\n            return !!builders[name];\n        },\n\n        add: function (name) {\n            builders[name].call(this);\n        },\n\n        getGroup: function () {\n            return this.group;\n        }\n\n    };\n\n    var builders = {\n\n        /**\n         * @private\n         */\n        axisLine: function () {\n            var opt = this.opt;\n            var axisModel = this.axisModel;\n\n            if (!axisModel.get('axisLine.show')) {\n                return;\n            }\n\n            var extent = this.axisModel.axis.getExtent();\n\n            var matrix = this._transform;\n            var pt1 = [extent[0], 0];\n            var pt2 = [extent[1], 0];\n            if (matrix) {\n                v2ApplyTransform(pt1, pt1, matrix);\n                v2ApplyTransform(pt2, pt2, matrix);\n            }\n\n            this.group.add(new graphic.Line(graphic.subPixelOptimizeLine({\n\n                // Id for animation\n                anid: 'line',\n\n                shape: {\n                    x1: pt1[0],\n                    y1: pt1[1],\n                    x2: pt2[0],\n                    y2: pt2[1]\n                },\n                style: zrUtil.extend(\n                    {lineCap: 'round'},\n                    axisModel.getModel('axisLine.lineStyle').getLineStyle()\n                ),\n                strokeContainThreshold: opt.strokeContainThreshold || 5,\n                silent: true,\n                z2: 1\n            })));\n        },\n\n        /**\n         * @private\n         */\n        axisTick: function () {\n            var axisModel = this.axisModel;\n            var axis = axisModel.axis;\n\n            if (!axisModel.get('axisTick.show') || axis.isBlank()) {\n                return;\n            }\n\n            var tickModel = axisModel.getModel('axisTick');\n            var opt = this.opt;\n\n            var lineStyleModel = tickModel.getModel('lineStyle');\n            var tickLen = tickModel.get('length');\n\n            var tickInterval = getInterval(tickModel, opt.labelInterval);\n            var ticksCoords = axis.getTicksCoords(tickModel.get('alignWithLabel'));\n            var ticks = axis.scale.getTicks();\n\n            var pt1 = [];\n            var pt2 = [];\n            var matrix = this._transform;\n\n            for (var i = 0; i < ticksCoords.length; i++) {\n                // Only ordinal scale support tick interval\n                if (ifIgnoreOnTick(axis, i, tickInterval)) {\n                     continue;\n                }\n\n                var tickCoord = ticksCoords[i];\n\n                pt1[0] = tickCoord;\n                pt1[1] = 0;\n                pt2[0] = tickCoord;\n                pt2[1] = opt.tickDirection * tickLen;\n\n                if (matrix) {\n                    v2ApplyTransform(pt1, pt1, matrix);\n                    v2ApplyTransform(pt2, pt2, matrix);\n                }\n                // Tick line, Not use group transform to have better line draw\n                this.group.add(new graphic.Line(graphic.subPixelOptimizeLine({\n\n                    // Id for animation\n                    anid: 'tick_' + ticks[i],\n\n                    shape: {\n                        x1: pt1[0],\n                        y1: pt1[1],\n                        x2: pt2[0],\n                        y2: pt2[1]\n                    },\n                    style: zrUtil.defaults(\n                        lineStyleModel.getLineStyle(),\n                        {\n                            stroke: axisModel.get('axisLine.lineStyle.color')\n                        }\n                    ),\n                    z2: 2,\n                    silent: true\n                })));\n            }\n        },\n\n        /**\n         * @param {module:echarts/coord/cartesian/AxisModel} axisModel\n         * @param {module:echarts/coord/cartesian/GridModel} gridModel\n         * @private\n         */\n        axisLabel: function () {\n            var opt = this.opt;\n            var axisModel = this.axisModel;\n            var axis = axisModel.axis;\n            var show = retrieve(opt.axisLabelShow, axisModel.get('axisLabel.show'));\n\n            if (!show || axis.isBlank()) {\n                return;\n            }\n\n            var labelModel = axisModel.getModel('axisLabel');\n            var textStyleModel = labelModel.getModel('textStyle');\n            var labelMargin = labelModel.get('margin');\n            var ticks = axis.scale.getTicks();\n            var labels = axisModel.getFormattedLabels();\n\n            // Special label rotate.\n            var labelRotation = retrieve(opt.labelRotation, labelModel.get('rotate')) || 0;\n            // To radian.\n            labelRotation = labelRotation * PI / 180;\n\n            var labelLayout = innerTextLayout(opt, labelRotation, opt.labelDirection);\n            var categoryData = axisModel.get('data');\n\n            var textEls = [];\n            var silent = isSilent(axisModel);\n            var triggerEvent = axisModel.get('triggerEvent');\n\n            zrUtil.each(ticks, function (tickVal, index) {\n                if (ifIgnoreOnTick(axis, index, opt.labelInterval)) {\n                     return;\n                }\n\n                var itemTextStyleModel = textStyleModel;\n                if (categoryData && categoryData[tickVal] && categoryData[tickVal].textStyle) {\n                    itemTextStyleModel = new Model(\n                        categoryData[tickVal].textStyle, textStyleModel, axisModel.ecModel\n                    );\n                }\n                var textColor = itemTextStyleModel.getTextColor()\n                    || axisModel.get('axisLine.lineStyle.color');\n\n                var tickCoord = axis.dataToCoord(tickVal);\n                var pos = [\n                    tickCoord,\n                    opt.labelOffset + opt.labelDirection * labelMargin\n                ];\n                var labelBeforeFormat = axis.scale.getLabel(tickVal);\n\n                var textEl = new graphic.Text({\n\n                    // Id for animation\n                    anid: 'label_' + tickVal,\n\n                    style: {\n                        text: labels[index],\n                        textAlign: itemTextStyleModel.get('align', true) || labelLayout.textAlign,\n                        textVerticalAlign: itemTextStyleModel.get('baseline', true) || labelLayout.verticalAlign,\n                        textFont: itemTextStyleModel.getFont(),\n                        fill: typeof textColor === 'function' ? textColor(labelBeforeFormat) : textColor\n                    },\n                    position: pos,\n                    rotation: labelLayout.rotation,\n                    silent: silent,\n                    z2: 10\n                });\n\n                // Pack data for mouse event\n                if (triggerEvent) {\n                    textEl.eventData = makeAxisEventDataBase(axisModel);\n                    textEl.eventData.targetType = 'axisLabel';\n                    textEl.eventData.value = labelBeforeFormat;\n                }\n\n                // FIXME\n                this._dumbGroup.add(textEl);\n                textEl.updateTransform();\n\n                textEls.push(textEl);\n                this.group.add(textEl);\n\n                textEl.decomposeTransform();\n\n            }, this);\n\n            function isTwoLabelOverlapped(current, next) {\n                var firstRect = current && current.getBoundingRect().clone();\n                var nextRect = next && next.getBoundingRect().clone();\n                if (firstRect && nextRect) {\n                    firstRect.applyTransform(current.getLocalTransform());\n                    nextRect.applyTransform(next.getLocalTransform());\n                    return firstRect.intersect(nextRect);\n                }\n            }\n\n            // If min or max are user set, we need to check\n            // If the tick on min(max) are overlap on their neighbour tick\n            // If they are overlapped, we need to hide the min(max) tick label\n            if (axisModel.getMin() != null) {\n                var firstLabel = textEls[0];\n                var nextLabel = textEls[1];\n                if (isTwoLabelOverlapped(firstLabel, nextLabel)) {\n                    firstLabel.ignore = true;\n                }\n            }\n            if (axisModel.getMax() != null) {\n                var lastLabel = textEls[textEls.length - 1];\n                var prevLabel = textEls[textEls.length - 2];\n                if (isTwoLabelOverlapped(prevLabel, lastLabel)) {\n                    lastLabel.ignore = true;\n                }\n            }\n        },\n\n        /**\n         * @private\n         */\n        axisName: function () {\n            var opt = this.opt;\n            var axisModel = this.axisModel;\n            var name = retrieve(opt.axisName, axisModel.get('name'));\n\n            if (!name) {\n                return;\n            }\n\n            var nameLocation = axisModel.get('nameLocation');\n            var nameDirection = opt.nameDirection;\n            var textStyleModel = axisModel.getModel('nameTextStyle');\n            var gap = axisModel.get('nameGap') || 0;\n\n            var extent = this.axisModel.axis.getExtent();\n            var gapSignal = extent[0] > extent[1] ? -1 : 1;\n            var pos = [\n                nameLocation === 'start'\n                    ? extent[0] - gapSignal * gap\n                    : nameLocation === 'end'\n                    ? extent[1] + gapSignal * gap\n                    : (extent[0] + extent[1]) / 2, // 'middle'\n                // Reuse labelOffset.\n                nameLocation === 'middle' ? opt.labelOffset + nameDirection * gap : 0\n            ];\n\n            var labelLayout;\n\n            var nameRotation = axisModel.get('nameRotate');\n            if (nameRotation != null) {\n                nameRotation = nameRotation * PI / 180; // To radian.\n            }\n\n            var axisNameAvailableWidth;\n\n            if (nameLocation === 'middle') {\n                labelLayout = innerTextLayout(\n                    opt,\n                    nameRotation != null ? nameRotation : opt.rotation, // Adapt to axis.\n                    nameDirection\n                );\n            }\n            else {\n                labelLayout = endTextLayout(\n                    opt, nameLocation, nameRotation || 0, extent\n                );\n\n                axisNameAvailableWidth = opt.axisNameAvailableWidth;\n                if (axisNameAvailableWidth != null) {\n                    axisNameAvailableWidth = Math.abs(\n                        axisNameAvailableWidth / Math.sin(labelLayout.rotation)\n                    );\n                    !isFinite(axisNameAvailableWidth) && (axisNameAvailableWidth = null);\n                }\n            }\n\n            var textFont = textStyleModel.getFont();\n\n            var truncateOpt = axisModel.get('nameTruncate', true) || {};\n            var ellipsis = truncateOpt.ellipsis;\n            var maxWidth = retrieve(truncateOpt.maxWidth, axisNameAvailableWidth);\n            var truncatedText = (ellipsis != null && maxWidth != null)\n                ? formatUtil.truncateText(\n                    name, maxWidth, textFont, ellipsis,\n                    {minChar: 2, placeholder: truncateOpt.placeholder}\n                )\n                : name;\n\n            var tooltipOpt = axisModel.get('tooltip', true);\n\n            var mainType = axisModel.mainType;\n            var formatterParams = {\n                componentType: mainType,\n                name: name,\n                $vars: ['name']\n            };\n            formatterParams[mainType + 'Index'] = axisModel.componentIndex;\n\n            var textEl = new graphic.Text({\n\n                // Id for animation\n                anid: 'name',\n\n                __fullText: name,\n                __truncatedText: truncatedText,\n\n                style: {\n                    text: truncatedText,\n                    textFont: textFont,\n                    fill: textStyleModel.getTextColor()\n                        || axisModel.get('axisLine.lineStyle.color'),\n                    textAlign: labelLayout.textAlign,\n                    textVerticalAlign: labelLayout.verticalAlign\n                },\n                position: pos,\n                rotation: labelLayout.rotation,\n                silent: isSilent(axisModel),\n                z2: 1,\n                tooltip: (tooltipOpt && tooltipOpt.show)\n                    ? zrUtil.extend({\n                        content: name,\n                        formatter: function () {\n                            return name;\n                        },\n                        formatterParams: formatterParams\n                    }, tooltipOpt)\n                    : null\n            });\n\n            if (axisModel.get('triggerEvent')) {\n                textEl.eventData = makeAxisEventDataBase(axisModel);\n                textEl.eventData.targetType = 'axisName';\n                textEl.eventData.name = name;\n            }\n\n            // FIXME\n            this._dumbGroup.add(textEl);\n            textEl.updateTransform();\n\n            this.group.add(textEl);\n\n            textEl.decomposeTransform();\n        }\n\n    };\n\n    /**\n     * @inner\n     */\n    function innerTextLayout(opt, textRotation, direction) {\n        var rotationDiff = remRadian(textRotation - opt.rotation);\n        var textAlign;\n        var verticalAlign;\n\n        if (isRadianAroundZero(rotationDiff)) { // Label is parallel with axis line.\n            verticalAlign = direction > 0 ? 'top' : 'bottom';\n            textAlign = 'center';\n        }\n        else if (isRadianAroundZero(rotationDiff - PI)) { // Label is inverse parallel with axis line.\n            verticalAlign = direction > 0 ? 'bottom' : 'top';\n            textAlign = 'center';\n        }\n        else {\n            verticalAlign = 'middle';\n\n            if (rotationDiff > 0 && rotationDiff < PI) {\n                textAlign = direction > 0 ? 'right' : 'left';\n            }\n            else {\n                textAlign = direction > 0 ? 'left' : 'right';\n            }\n        }\n\n        return {\n            rotation: rotationDiff,\n            textAlign: textAlign,\n            verticalAlign: verticalAlign\n        };\n    }\n\n    /**\n     * @inner\n     */\n    function endTextLayout(opt, textPosition, textRotate, extent) {\n        var rotationDiff = remRadian(textRotate - opt.rotation);\n        var textAlign;\n        var verticalAlign;\n        var inverse = extent[0] > extent[1];\n        var onLeft = (textPosition === 'start' && !inverse)\n            || (textPosition !== 'start' && inverse);\n\n        if (isRadianAroundZero(rotationDiff - PI / 2)) {\n            verticalAlign = onLeft ? 'bottom' : 'top';\n            textAlign = 'center';\n        }\n        else if (isRadianAroundZero(rotationDiff - PI * 1.5)) {\n            verticalAlign = onLeft ? 'top' : 'bottom';\n            textAlign = 'center';\n        }\n        else {\n            verticalAlign = 'middle';\n            if (rotationDiff < PI * 1.5 && rotationDiff > PI / 2) {\n                textAlign = onLeft ? 'left' : 'right';\n            }\n            else {\n                textAlign = onLeft ? 'right' : 'left';\n            }\n        }\n\n        return {\n            rotation: rotationDiff,\n            textAlign: textAlign,\n            verticalAlign: verticalAlign\n        };\n    }\n\n    /**\n     * @inner\n     */\n    function isSilent(axisModel) {\n        var tooltipOpt = axisModel.get('tooltip');\n        return axisModel.get('silent')\n            // Consider mouse cursor, add these restrictions.\n            || !(\n                axisModel.get('triggerEvent') || (tooltipOpt && tooltipOpt.show)\n            );\n    }\n\n    /**\n     * @static\n     */\n    var ifIgnoreOnTick = AxisBuilder.ifIgnoreOnTick = function (axis, i, interval) {\n        var rawTick;\n        var scale = axis.scale;\n        return scale.type === 'ordinal'\n            && (\n                typeof interval === 'function'\n                    ? (\n                        rawTick = scale.getTicks()[i],\n                        !interval(rawTick, scale.getLabel(rawTick))\n                    )\n                    : i % (interval + 1)\n            );\n    };\n\n    /**\n     * @static\n     */\n    var getInterval = AxisBuilder.getInterval = function (model, labelInterval) {\n        var interval = model.get('interval');\n        if (interval == null || interval == 'auto') {\n            interval = labelInterval;\n        }\n        return interval;\n    };\n\n    module.exports = AxisBuilder;\n\n\n\n/***/ }),\n/* 549 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var zrUtil = __webpack_require__(460);\n    var graphic = __webpack_require__(464);\n    var AxisBuilder = __webpack_require__(548);\n    var ifIgnoreOnTick = AxisBuilder.ifIgnoreOnTick;\n    var getInterval = AxisBuilder.getInterval;\n\n    var axisBuilderAttrs = [\n        'axisLine', 'axisLabel', 'axisTick', 'axisName'\n    ];\n    var selfBuilderAttrs = [\n        'splitArea', 'splitLine'\n    ];\n\n    // function getAlignWithLabel(model, axisModel) {\n    //     var alignWithLabel = model.get('alignWithLabel');\n    //     if (alignWithLabel === 'auto') {\n    //         alignWithLabel = axisModel.get('axisTick.alignWithLabel');\n    //     }\n    //     return alignWithLabel;\n    // }\n\n    var AxisView = __webpack_require__(462).extendComponentView({\n\n        type: 'axis',\n\n        render: function (axisModel, ecModel) {\n\n            this.group.removeAll();\n\n            var oldAxisGroup = this._axisGroup;\n            this._axisGroup = new graphic.Group();\n\n            this.group.add(this._axisGroup);\n\n            if (!axisModel.get('show')) {\n                return;\n            }\n\n            var gridModel = axisModel.getCoordSysModel();\n\n            var layout = layoutAxis(gridModel, axisModel);\n\n            var axisBuilder = new AxisBuilder(axisModel, layout);\n\n            zrUtil.each(axisBuilderAttrs, axisBuilder.add, axisBuilder);\n\n            this._axisGroup.add(axisBuilder.getGroup());\n\n            zrUtil.each(selfBuilderAttrs, function (name) {\n                if (axisModel.get(name + '.show')) {\n                    this['_' + name](axisModel, gridModel, layout.labelInterval);\n                }\n            }, this);\n\n            graphic.groupTransition(oldAxisGroup, this._axisGroup, axisModel);\n        },\n\n        /**\n         * @param {module:echarts/coord/cartesian/AxisModel} axisModel\n         * @param {module:echarts/coord/cartesian/GridModel} gridModel\n         * @param {number|Function} labelInterval\n         * @private\n         */\n        _splitLine: function (axisModel, gridModel, labelInterval) {\n            var axis = axisModel.axis;\n\n            if (axis.isBlank()) {\n                return;\n            }\n\n            var splitLineModel = axisModel.getModel('splitLine');\n            var lineStyleModel = splitLineModel.getModel('lineStyle');\n            var lineColors = lineStyleModel.get('color');\n\n            var lineInterval = getInterval(splitLineModel, labelInterval);\n\n            lineColors = zrUtil.isArray(lineColors) ? lineColors : [lineColors];\n\n            var gridRect = gridModel.coordinateSystem.getRect();\n            var isHorizontal = axis.isHorizontal();\n\n            var lineCount = 0;\n\n            var ticksCoords = axis.getTicksCoords(\n                // splitLineModel.get('alignWithLabel')\n            );\n            var ticks = axis.scale.getTicks();\n\n            var p1 = [];\n            var p2 = [];\n            // Simple optimization\n            // Batching the lines if color are the same\n            var lineStyle = lineStyleModel.getLineStyle();\n            for (var i = 0; i < ticksCoords.length; i++) {\n                if (ifIgnoreOnTick(axis, i, lineInterval)) {\n                    continue;\n                }\n\n                var tickCoord = axis.toGlobalCoord(ticksCoords[i]);\n\n                if (isHorizontal) {\n                    p1[0] = tickCoord;\n                    p1[1] = gridRect.y;\n                    p2[0] = tickCoord;\n                    p2[1] = gridRect.y + gridRect.height;\n                }\n                else {\n                    p1[0] = gridRect.x;\n                    p1[1] = tickCoord;\n                    p2[0] = gridRect.x + gridRect.width;\n                    p2[1] = tickCoord;\n                }\n\n                var colorIndex = (lineCount++) % lineColors.length;\n                this._axisGroup.add(new graphic.Line(graphic.subPixelOptimizeLine({\n                    anid: 'line_' + ticks[i],\n\n                    shape: {\n                        x1: p1[0],\n                        y1: p1[1],\n                        x2: p2[0],\n                        y2: p2[1]\n                    },\n                    style: zrUtil.defaults({\n                        stroke: lineColors[colorIndex]\n                    }, lineStyle),\n                    silent: true\n                })));\n            }\n        },\n\n        /**\n         * @param {module:echarts/coord/cartesian/AxisModel} axisModel\n         * @param {module:echarts/coord/cartesian/GridModel} gridModel\n         * @param {number|Function} labelInterval\n         * @private\n         */\n        _splitArea: function (axisModel, gridModel, labelInterval) {\n            var axis = axisModel.axis;\n\n            if (axis.isBlank()) {\n                return;\n            }\n\n            var splitAreaModel = axisModel.getModel('splitArea');\n            var areaStyleModel = splitAreaModel.getModel('areaStyle');\n            var areaColors = areaStyleModel.get('color');\n\n            var gridRect = gridModel.coordinateSystem.getRect();\n\n            var ticksCoords = axis.getTicksCoords(\n                // splitAreaModel.get('alignWithLabel')\n            );\n            var ticks = axis.scale.getTicks();\n\n            var prevX = axis.toGlobalCoord(ticksCoords[0]);\n            var prevY = axis.toGlobalCoord(ticksCoords[0]);\n\n            var count = 0;\n\n            var areaInterval = getInterval(splitAreaModel, labelInterval);\n\n            var areaStyle = areaStyleModel.getAreaStyle();\n            areaColors = zrUtil.isArray(areaColors) ? areaColors : [areaColors];\n\n            for (var i = 1; i < ticksCoords.length; i++) {\n                if (ifIgnoreOnTick(axis, i, areaInterval)) {\n                    continue;\n                }\n\n                var tickCoord = axis.toGlobalCoord(ticksCoords[i]);\n\n                var x;\n                var y;\n                var width;\n                var height;\n                if (axis.isHorizontal()) {\n                    x = prevX;\n                    y = gridRect.y;\n                    width = tickCoord - x;\n                    height = gridRect.height;\n                }\n                else {\n                    x = gridRect.x;\n                    y = prevY;\n                    width = gridRect.width;\n                    height = tickCoord - y;\n                }\n\n                var colorIndex = (count++) % areaColors.length;\n                this._axisGroup.add(new graphic.Rect({\n                    anid: 'area_' + ticks[i],\n\n                    shape: {\n                        x: x,\n                        y: y,\n                        width: width,\n                        height: height\n                    },\n                    style: zrUtil.defaults({\n                        fill: areaColors[colorIndex]\n                    }, areaStyle),\n                    silent: true\n                }));\n\n                prevX = x + width;\n                prevY = y + height;\n            }\n        }\n    });\n\n    AxisView.extend({\n        type: 'xAxis'\n    });\n    AxisView.extend({\n        type: 'yAxis'\n    });\n\n    /**\n     * @inner\n     */\n    function layoutAxis(gridModel, axisModel) {\n        var grid = gridModel.coordinateSystem;\n        var axis = axisModel.axis;\n        var layout = {};\n\n        var rawAxisPosition = axis.position;\n        var axisPosition = axis.onZero ? 'onZero' : rawAxisPosition;\n        var axisDim = axis.dim;\n\n        // [left, right, top, bottom]\n        var rect = grid.getRect();\n        var rectBound = [rect.x, rect.x + rect.width, rect.y, rect.y + rect.height];\n\n        var axisOffset = axisModel.get('offset') || 0;\n\n        var posMap = {\n            x: { top: rectBound[2] - axisOffset, bottom: rectBound[3] + axisOffset },\n            y: { left: rectBound[0] - axisOffset, right: rectBound[1] + axisOffset }\n        };\n\n        posMap.x.onZero = Math.max(Math.min(getZero('y'), posMap.x.bottom), posMap.x.top);\n        posMap.y.onZero = Math.max(Math.min(getZero('x'), posMap.y.right), posMap.y.left);\n\n        function getZero(dim, val) {\n            var theAxis = grid.getAxis(dim);\n            return theAxis.toGlobalCoord(theAxis.dataToCoord(0));\n        }\n\n        // Axis position\n        layout.position = [\n            axisDim === 'y' ? posMap.y[axisPosition] : rectBound[0],\n            axisDim === 'x' ? posMap.x[axisPosition] : rectBound[3]\n        ];\n\n        // Axis rotation\n        layout.rotation = Math.PI / 2 * (axisDim === 'x' ? 0 : 1);\n\n        // Tick and label direction, x y is axisDim\n        var dirMap = {top: -1, bottom: 1, left: -1, right: 1};\n\n        layout.labelDirection = layout.tickDirection = layout.nameDirection = dirMap[rawAxisPosition];\n        if (axis.onZero) {\n            layout.labelOffset = posMap[axisDim][rawAxisPosition] - posMap[axisDim].onZero;\n        }\n\n        if (axisModel.getModel('axisTick').get('inside')) {\n            layout.tickDirection = -layout.tickDirection;\n        }\n        if (axisModel.getModel('axisLabel').get('inside')) {\n            layout.labelDirection = -layout.labelDirection;\n        }\n\n        // Special label rotation\n        var labelRotation = axisModel.getModel('axisLabel').get('rotate');\n        layout.labelRotation = axisPosition === 'top' ? -labelRotation : labelRotation;\n\n        // label interval when auto mode.\n        layout.labelInterval = axis.getLabelInterval();\n\n        // Over splitLine and splitArea\n        layout.z2 = 1;\n\n        return layout;\n    }\n\n\n/***/ }),\n/* 550 */,\n/* 551 */,\n/* 552 */,\n/* 553 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n    // List layout\n    var layout = __webpack_require__(475);\n    var formatUtil = __webpack_require__(468);\n    var graphic = __webpack_require__(464);\n\n    function positionGroup(group, model, api) {\n        layout.positionElement(\n            group, model.getBoxLayoutParams(),\n            {\n                width: api.getWidth(),\n                height: api.getHeight()\n            },\n            model.get('padding')\n        );\n    }\n\n    module.exports = {\n        /**\n         * Layout list like component.\n         * It will box layout each items in group of component and then position the whole group in the viewport\n         * @param {module:zrender/group/Group} group\n         * @param {module:echarts/model/Component} componentModel\n         * @param {module:echarts/ExtensionAPI}\n         */\n        layout: function (group, componentModel, api) {\n            var rect = layout.getLayoutRect(componentModel.getBoxLayoutParams(), {\n                width: api.getWidth(),\n                height: api.getHeight()\n            }, componentModel.get('padding'));\n            layout.box(\n                componentModel.get('orient'),\n                group,\n                componentModel.get('itemGap'),\n                rect.width,\n                rect.height\n            );\n\n            positionGroup(group, componentModel, api);\n        },\n\n        addBackground: function (group, componentModel) {\n            var padding = formatUtil.normalizeCssArray(\n                componentModel.get('padding')\n            );\n            var boundingRect = group.getBoundingRect();\n            var style = componentModel.getItemStyle(['color', 'opacity']);\n            style.fill = componentModel.get('backgroundColor');\n            var rect = new graphic.Rect({\n                shape: {\n                    x: boundingRect.x - padding[3],\n                    y: boundingRect.y - padding[0],\n                    width: boundingRect.width + padding[1] + padding[3],\n                    height: boundingRect.height + padding[0] + padding[2]\n                },\n                style: style,\n                silent: true,\n                z2: -1\n            });\n            graphic.subPixelOptimizeRect(rect);\n\n            group.add(rect);\n        }\n    };\n\n\n/***/ }),\n/* 554 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * Legend component entry file8\n */\n\n\n    __webpack_require__(555);\n    __webpack_require__(557);\n    __webpack_require__(556);\n\n    var echarts = __webpack_require__(462);\n    // Series Filter\n    echarts.registerProcessor(__webpack_require__(558));\n\n\n/***/ }),\n/* 555 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n\n    var zrUtil = __webpack_require__(460);\n    var Model = __webpack_require__(470);\n\n    var LegendModel = __webpack_require__(462).extendComponentModel({\n\n        type: 'legend',\n\n        dependencies: ['series'],\n\n        layoutMode: {\n            type: 'box',\n            ignoreSize: true\n        },\n\n        init: function (option, parentModel, ecModel) {\n            this.mergeDefaultAndTheme(option, ecModel);\n\n            option.selected = option.selected || {};\n        },\n\n        mergeOption: function (option) {\n            LegendModel.superCall(this, 'mergeOption', option);\n        },\n\n        optionUpdated: function () {\n            this._updateData(this.ecModel);\n\n            var legendData = this._data;\n\n            // If selectedMode is single, try to select one\n            if (legendData[0] && this.get('selectedMode') === 'single') {\n                var hasSelected = false;\n                // If has any selected in option.selected\n                for (var i = 0; i < legendData.length; i++) {\n                    var name = legendData[i].get('name');\n                    if (this.isSelected(name)) {\n                        // Force to unselect others\n                        this.select(name);\n                        hasSelected = true;\n                        break;\n                    }\n                }\n                // Try select the first if selectedMode is single\n                !hasSelected && this.select(legendData[0].get('name'));\n            }\n        },\n\n        _updateData: function (ecModel) {\n            var legendData = zrUtil.map(this.get('data') || [], function (dataItem) {\n                // Can be string or number\n                if (typeof dataItem === 'string' || typeof dataItem === 'number') {\n                    dataItem = {\n                        name: dataItem\n                    };\n                }\n                return new Model(dataItem, this, this.ecModel);\n            }, this);\n            this._data = legendData;\n\n            var availableNames = zrUtil.map(ecModel.getSeries(), function (series) {\n                return series.name;\n            });\n            ecModel.eachSeries(function (seriesModel) {\n                if (seriesModel.legendDataProvider) {\n                    var data = seriesModel.legendDataProvider();\n                    availableNames = availableNames.concat(data.mapArray(data.getName));\n                }\n            });\n            /**\n             * @type {Array.<string>}\n             * @private\n             */\n            this._availableNames = availableNames;\n        },\n\n        /**\n         * @return {Array.<module:echarts/model/Model>}\n         */\n        getData: function () {\n            return this._data;\n        },\n\n        /**\n         * @param {string} name\n         */\n        select: function (name) {\n            var selected = this.option.selected;\n            var selectedMode = this.get('selectedMode');\n            if (selectedMode === 'single') {\n                var data = this._data;\n                zrUtil.each(data, function (dataItem) {\n                    selected[dataItem.get('name')] = false;\n                });\n            }\n            selected[name] = true;\n        },\n\n        /**\n         * @param {string} name\n         */\n        unSelect: function (name) {\n            if (this.get('selectedMode') !== 'single') {\n                this.option.selected[name] = false;\n            }\n        },\n\n        /**\n         * @param {string} name\n         */\n        toggleSelected: function (name) {\n            var selected = this.option.selected;\n            // Default is true\n            if (!selected.hasOwnProperty(name)) {\n                selected[name] = true;\n            }\n            this[selected[name] ? 'unSelect' : 'select'](name);\n        },\n\n        /**\n         * @param {string} name\n         */\n        isSelected: function (name) {\n            var selected = this.option.selected;\n            return !(selected.hasOwnProperty(name) && !selected[name])\n                && zrUtil.indexOf(this._availableNames, name) >= 0;\n        },\n\n        defaultOption: {\n            // 一级层叠\n            zlevel: 0,\n            // 二级层叠\n            z: 4,\n            show: true,\n\n            // 布局方式，默认为水平布局，可选为：\n            // 'horizontal' | 'vertical'\n            orient: 'horizontal',\n\n            left: 'center',\n            // right: 'center',\n\n            top: 'top',\n            // bottom: 'top',\n\n            // 水平对齐\n            // 'auto' | 'left' | 'right'\n            // 默认为 'auto', 根据 x 的位置判断是左对齐还是右对齐\n            align: 'auto',\n\n            backgroundColor: 'rgba(0,0,0,0)',\n            // 图例边框颜色\n            borderColor: '#ccc',\n            // 图例边框线宽，单位px，默认为0（无边框）\n            borderWidth: 0,\n            // 图例内边距，单位px，默认各方向内边距为5，\n            // 接受数组分别设定上右下左边距，同css\n            padding: 5,\n            // 各个item之间的间隔，单位px，默认为10，\n            // 横向布局时为水平间隔，纵向布局时为纵向间隔\n            itemGap: 10,\n            // 图例图形宽度\n            itemWidth: 25,\n            // 图例图形高度\n            itemHeight: 14,\n\n            // 图例关闭时候的颜色\n            inactiveColor: '#ccc',\n\n            textStyle: {\n                // 图例文字颜色\n                color: '#333'\n            },\n            // formatter: '',\n            // 选择模式，默认开启图例开关\n            selectedMode: true,\n            // 配置默认选中状态，可配合LEGEND.SELECTED事件做动态数据载入\n            // selected: null,\n            // 图例内容（详见legend.data，数组中每一项代表一个item\n            // data: [],\n\n            // Tooltip 相关配置\n            tooltip: {\n                show: false\n            }\n        }\n    });\n\n    module.exports = LegendModel;\n\n\n/***/ }),\n/* 556 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var zrUtil = __webpack_require__(460);\n    var symbolCreator = __webpack_require__(508);\n    var graphic = __webpack_require__(464);\n    var listComponentHelper = __webpack_require__(553);\n\n    var curry = zrUtil.curry;\n\n    function dispatchSelectAction(name, api) {\n        api.dispatchAction({\n            type: 'legendToggleSelect',\n            name: name\n        });\n    }\n\n    function dispatchHighlightAction(seriesModel, dataName, api) {\n        // If element hover will move to a hoverLayer.\n        var el = api.getZr().storage.getDisplayList()[0];\n        if (!(el && el.useHoverLayer)) {\n            seriesModel.get('legendHoverLink') && api.dispatchAction({\n                type: 'highlight',\n                seriesName: seriesModel.name,\n                name: dataName\n            });\n        }\n    }\n\n    function dispatchDownplayAction(seriesModel, dataName, api) {\n        // If element hover will move to a hoverLayer.\n        var el = api.getZr().storage.getDisplayList()[0];\n        if (!(el && el.useHoverLayer)) {\n            seriesModel.get('legendHoverLink') && api.dispatchAction({\n                type: 'downplay',\n                seriesName: seriesModel.name,\n                name: dataName\n            });\n        }\n    }\n\n    module.exports = __webpack_require__(462).extendComponentView({\n\n        type: 'legend',\n\n        init: function () {\n            this._symbolTypeStore = {};\n        },\n\n        render: function (legendModel, ecModel, api) {\n            var group = this.group;\n            group.removeAll();\n\n            if (!legendModel.get('show')) {\n                return;\n            }\n\n            var selectMode = legendModel.get('selectedMode');\n            var itemAlign = legendModel.get('align');\n\n            if (itemAlign === 'auto') {\n                itemAlign = (legendModel.get('left') === 'right'\n                    && legendModel.get('orient') === 'vertical')\n                    ? 'right' : 'left';\n            }\n\n            var legendDrawedMap = {};\n\n            zrUtil.each(legendModel.getData(), function (itemModel) {\n                var name = itemModel.get('name');\n\n                // Use empty string or \\n as a newline string\n                if (name === '' || name === '\\n') {\n                    group.add(new graphic.Group({\n                        newline: true\n                    }));\n                    return;\n                }\n\n                var seriesModel = ecModel.getSeriesByName(name)[0];\n\n                if (legendDrawedMap[name]) {\n                    // Have been drawed\n                    return;\n                }\n\n                // Series legend\n                if (seriesModel) {\n                    var data = seriesModel.getData();\n                    var color = data.getVisual('color');\n\n                    // If color is a callback function\n                    if (typeof color === 'function') {\n                        // Use the first data\n                        color = color(seriesModel.getDataParams(0));\n                    }\n\n                    // Using rect symbol defaultly\n                    var legendSymbolType = data.getVisual('legendSymbol') || 'roundRect';\n                    var symbolType = data.getVisual('symbol');\n\n                    var itemGroup = this._createItem(\n                        name, itemModel, legendModel,\n                        legendSymbolType, symbolType,\n                        itemAlign, color,\n                        selectMode\n                    );\n\n                    itemGroup.on('click', curry(dispatchSelectAction, name, api))\n                        .on('mouseover', curry(dispatchHighlightAction, seriesModel, null, api))\n                        .on('mouseout', curry(dispatchDownplayAction, seriesModel, null, api));\n\n                    legendDrawedMap[name] = true;\n                }\n                else {\n                    // Data legend of pie, funnel\n                    ecModel.eachRawSeries(function (seriesModel) {\n                        // In case multiple series has same data name\n                        if (legendDrawedMap[name]) {\n                            return;\n                        }\n                        if (seriesModel.legendDataProvider) {\n                            var data = seriesModel.legendDataProvider();\n                            var idx = data.indexOfName(name);\n                            if (idx < 0) {\n                                return;\n                            }\n\n                            var color = data.getItemVisual(idx, 'color');\n\n                            var legendSymbolType = 'roundRect';\n\n                            var itemGroup = this._createItem(\n                                name, itemModel, legendModel,\n                                legendSymbolType, null,\n                                itemAlign, color,\n                                selectMode\n                            );\n\n                            itemGroup.on('click', curry(dispatchSelectAction, name, api))\n                                // FIXME Should not specify the series name\n                                .on('mouseover', curry(dispatchHighlightAction, seriesModel, name, api))\n                                .on('mouseout', curry(dispatchDownplayAction, seriesModel, name, api));\n\n                            legendDrawedMap[name] = true;\n                        }\n                    }, this);\n                }\n\n                if (__DEV__) {\n                    if (!legendDrawedMap[name]) {\n                        console.warn(name + ' series not exists. Legend data should be same with series name or data name.');\n                    }\n                }\n            }, this);\n\n            listComponentHelper.layout(group, legendModel, api);\n            // Render background after group is layout\n            // FIXME\n            listComponentHelper.addBackground(group, legendModel);\n        },\n\n        _createItem: function (\n            name, itemModel, legendModel,\n            legendSymbolType, symbolType,\n            itemAlign, color, selectMode\n        ) {\n            var itemWidth = legendModel.get('itemWidth');\n            var itemHeight = legendModel.get('itemHeight');\n            var inactiveColor = legendModel.get('inactiveColor');\n\n            var isSelected = legendModel.isSelected(name);\n            var itemGroup = new graphic.Group();\n\n            var textStyleModel = itemModel.getModel('textStyle');\n\n            var itemIcon = itemModel.get('icon');\n\n            var tooltipModel = itemModel.getModel('tooltip');\n            var legendGlobalTooltipModel = tooltipModel.parentModel;\n\n            // Use user given icon first\n            legendSymbolType = itemIcon || legendSymbolType;\n            itemGroup.add(symbolCreator.createSymbol(\n                legendSymbolType, 0, 0, itemWidth, itemHeight, isSelected ? color : inactiveColor\n            ));\n\n            // Compose symbols\n            // PENDING\n            if (!itemIcon && symbolType\n                // At least show one symbol, can't be all none\n                && ((symbolType !== legendSymbolType) || symbolType == 'none')\n            ) {\n                var size = itemHeight * 0.8;\n                if (symbolType === 'none') {\n                    symbolType = 'circle';\n                }\n                // Put symbol in the center\n                itemGroup.add(symbolCreator.createSymbol(\n                    symbolType, (itemWidth - size) / 2, (itemHeight - size) / 2, size, size,\n                    isSelected ? color : inactiveColor\n                ));\n            }\n\n            // Text\n            var textX = itemAlign === 'left' ? itemWidth + 5 : -5;\n            var textAlign = itemAlign;\n\n            var formatter = legendModel.get('formatter');\n            var content = name;\n            if (typeof formatter === 'string' && formatter) {\n                content = formatter.replace('{name}', name != null ? name : '');\n            }\n            else if (typeof formatter === 'function') {\n                content = formatter(name);\n            }\n\n            var text = new graphic.Text({\n                style: {\n                    text: content,\n                    x: textX,\n                    y: itemHeight / 2,\n                    fill: isSelected ? textStyleModel.getTextColor() : inactiveColor,\n                    textFont: textStyleModel.getFont(),\n                    textAlign: textAlign,\n                    textVerticalAlign: 'middle'\n                }\n            });\n            itemGroup.add(text);\n\n            // Add a invisible rect to increase the area of mouse hover\n            var hitRect = new graphic.Rect({\n                shape: itemGroup.getBoundingRect(),\n                invisible: true,\n                tooltip: tooltipModel.get('show') ? zrUtil.extend({\n                    content: name,\n                    // Defaul formatter\n                    formatter: legendGlobalTooltipModel.get('formatter', true) || function () {\n                        return name;\n                    },\n                    formatterParams: {\n                        componentType: 'legend',\n                        legendIndex: legendModel.componentIndex,\n                        name: name,\n                        $vars: ['name']\n                    }\n                }, tooltipModel.option) : null\n            });\n            itemGroup.add(hitRect);\n\n            itemGroup.eachChild(function (child) {\n                child.silent = true;\n            });\n\n            hitRect.silent = !selectMode;\n\n\n\n            this.group.add(itemGroup);\n\n            graphic.setHoverStyle(itemGroup);\n\n            return itemGroup;\n        }\n    });\n\n\n/***/ }),\n/* 557 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * @file Legend action\n */\n\n\n    var echarts = __webpack_require__(462);\n    var zrUtil = __webpack_require__(460);\n\n    function legendSelectActionHandler(methodName, payload, ecModel) {\n        var selectedMap = {};\n        var isToggleSelect = methodName === 'toggleSelected';\n        var isSelected;\n        // Update all legend components\n        ecModel.eachComponent('legend', function (legendModel) {\n            if (isToggleSelect && isSelected != null) {\n                // Force other legend has same selected status\n                // Or the first is toggled to true and other are toggled to false\n                // In the case one legend has some item unSelected in option. And if other legend\n                // doesn't has the item, they will assume it is selected.\n                legendModel[isSelected ? 'select' : 'unSelect'](payload.name);\n            }\n            else {\n                legendModel[methodName](payload.name);\n                isSelected = legendModel.isSelected(payload.name);\n            }\n            var legendData = legendModel.getData();\n            zrUtil.each(legendData, function (model) {\n                var name = model.get('name');\n                // Wrap element\n                if (name === '\\n' || name === '') {\n                    return;\n                }\n                var isItemSelected = legendModel.isSelected(name);\n                if (name in selectedMap) {\n                    // Unselected if any legend is unselected\n                    selectedMap[name] = selectedMap[name] && isItemSelected;\n                }\n                else {\n                    selectedMap[name] = isItemSelected;\n                }\n            });\n        });\n        // Return the event explicitly\n        return {\n            name: payload.name,\n            selected: selectedMap\n        };\n    }\n    /**\n     * @event legendToggleSelect\n     * @type {Object}\n     * @property {string} type 'legendToggleSelect'\n     * @property {string} [from]\n     * @property {string} name Series name or data item name\n     */\n    echarts.registerAction(\n        'legendToggleSelect', 'legendselectchanged',\n        zrUtil.curry(legendSelectActionHandler, 'toggleSelected')\n    );\n\n    /**\n     * @event legendSelect\n     * @type {Object}\n     * @property {string} type 'legendSelect'\n     * @property {string} name Series name or data item name\n     */\n    echarts.registerAction(\n        'legendSelect', 'legendselected',\n        zrUtil.curry(legendSelectActionHandler, 'select')\n    );\n\n    /**\n     * @event legendUnSelect\n     * @type {Object}\n     * @property {string} type 'legendUnSelect'\n     * @property {string} name Series name or data item name\n     */\n    echarts.registerAction(\n        'legendUnSelect', 'legendunselected',\n        zrUtil.curry(legendSelectActionHandler, 'unSelect')\n    );\n\n\n/***/ }),\n/* 558 */\n/***/ (function(module, exports) {\n\n\n   module.exports = function (ecModel) {\n        var legendModels = ecModel.findComponents({\n            mainType: 'legend'\n        });\n        if (legendModels && legendModels.length) {\n            ecModel.filterSeries(function (series) {\n                // If in any legend component the status is not selected.\n                // Because in legend series is assumed selected when it is not in the legend data.\n                for (var i = 0; i < legendModels.length; i++) {\n                    if (!legendModels[i].isSelected(series.name)) {\n                        return false;\n                    }\n                }\n                return true;\n            });\n        }\n    };\n\n\n/***/ }),\n/* 559 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n\n    var echarts = __webpack_require__(462);\n    var graphic = __webpack_require__(464);\n    var layout = __webpack_require__(475);\n\n    // Model\n    echarts.extendComponentModel({\n\n        type: 'title',\n\n        layoutMode: {type: 'box', ignoreSize: true},\n\n        defaultOption: {\n            // 一级层叠\n            zlevel: 0,\n            // 二级层叠\n            z: 6,\n            show: true,\n\n            text: '',\n            // 超链接跳转\n            // link: null,\n            // 仅支持self | blank\n            target: 'blank',\n            subtext: '',\n\n            // 超链接跳转\n            // sublink: null,\n            // 仅支持self | blank\n            subtarget: 'blank',\n\n            // 'center' ¦ 'left' ¦ 'right'\n            // ¦ {number}（x坐标，单位px）\n            left: 0,\n            // 'top' ¦ 'bottom' ¦ 'center'\n            // ¦ {number}（y坐标，单位px）\n            top: 0,\n\n            // 水平对齐\n            // 'auto' | 'left' | 'right' | 'center'\n            // 默认根据 left 的位置判断是左对齐还是右对齐\n            // textAlign: null\n            //\n            // 垂直对齐\n            // 'auto' | 'top' | 'bottom' | 'middle'\n            // 默认根据 top 位置判断是上对齐还是下对齐\n            // textBaseline: null\n\n            backgroundColor: 'rgba(0,0,0,0)',\n\n            // 标题边框颜色\n            borderColor: '#ccc',\n\n            // 标题边框线宽，单位px，默认为0（无边框）\n            borderWidth: 0,\n\n            // 标题内边距，单位px，默认各方向内边距为5，\n            // 接受数组分别设定上右下左边距，同css\n            padding: 5,\n\n            // 主副标题纵向间隔，单位px，默认为10，\n            itemGap: 10,\n            textStyle: {\n                fontSize: 18,\n                fontWeight: 'bolder',\n                color: '#333'\n            },\n            subtextStyle: {\n                color: '#aaa'\n            }\n        }\n    });\n\n    // View\n    echarts.extendComponentView({\n\n        type: 'title',\n\n        render: function (titleModel, ecModel, api) {\n            this.group.removeAll();\n\n            if (!titleModel.get('show')) {\n                return;\n            }\n\n            var group = this.group;\n\n            var textStyleModel = titleModel.getModel('textStyle');\n            var subtextStyleModel = titleModel.getModel('subtextStyle');\n\n            var textAlign = titleModel.get('textAlign');\n            var textBaseline = titleModel.get('textBaseline');\n\n            var textEl = new graphic.Text({\n                style: {\n                    text: titleModel.get('text'),\n                    textFont: textStyleModel.getFont(),\n                    fill: textStyleModel.getTextColor()\n                },\n                z2: 10\n            });\n\n            var textRect = textEl.getBoundingRect();\n\n            var subText = titleModel.get('subtext');\n            var subTextEl = new graphic.Text({\n                style: {\n                    text: subText,\n                    textFont: subtextStyleModel.getFont(),\n                    fill: subtextStyleModel.getTextColor(),\n                    y: textRect.height + titleModel.get('itemGap'),\n                    textBaseline: 'top'\n                },\n                z2: 10\n            });\n\n            var link = titleModel.get('link');\n            var sublink = titleModel.get('sublink');\n\n            textEl.silent = !link;\n            subTextEl.silent = !sublink;\n\n            if (link) {\n                textEl.on('click', function () {\n                    window.open(link, '_' + titleModel.get('target'));\n                });\n            }\n            if (sublink) {\n                subTextEl.on('click', function () {\n                    window.open(sublink, '_' + titleModel.get('subtarget'));\n                });\n            }\n\n            group.add(textEl);\n            subText && group.add(subTextEl);\n            // If no subText, but add subTextEl, there will be an empty line.\n\n            var groupRect = group.getBoundingRect();\n            var layoutOption = titleModel.getBoxLayoutParams();\n            layoutOption.width = groupRect.width;\n            layoutOption.height = groupRect.height;\n            var layoutRect = layout.getLayoutRect(\n                layoutOption, {\n                    width: api.getWidth(),\n                    height: api.getHeight()\n                }, titleModel.get('padding')\n            );\n            // Adjust text align based on position\n            if (!textAlign) {\n                // Align left if title is on the left. center and right is same\n                textAlign = titleModel.get('left') || titleModel.get('right');\n                if (textAlign === 'middle') {\n                    textAlign = 'center';\n                }\n                // Adjust layout by text align\n                if (textAlign === 'right') {\n                    layoutRect.x += layoutRect.width;\n                }\n                else if (textAlign === 'center') {\n                    layoutRect.x += layoutRect.width / 2;\n                }\n            }\n            if (!textBaseline) {\n                textBaseline = titleModel.get('top') || titleModel.get('bottom');\n                if (textBaseline === 'center') {\n                    textBaseline = 'middle';\n                }\n                if (textBaseline === 'bottom') {\n                    layoutRect.y += layoutRect.height;\n                }\n                else if (textBaseline === 'middle') {\n                    layoutRect.y += layoutRect.height / 2;\n                }\n\n                textBaseline = textBaseline || 'top';\n            }\n\n            group.attr('position', [layoutRect.x, layoutRect.y]);\n            var alignStyle = {\n                textAlign: textAlign,\n                textVerticalAlign: textBaseline\n            };\n            textEl.setStyle(alignStyle);\n            subTextEl.setStyle(alignStyle);\n\n            // Render background\n            // Get groupRect again because textAlign has been changed\n            groupRect = group.getBoundingRect();\n            var padding = layoutRect.margin;\n            var style = titleModel.getItemStyle(['color', 'opacity']);\n            style.fill = titleModel.get('backgroundColor');\n            var rect = new graphic.Rect({\n                shape: {\n                    x: groupRect.x - padding[3],\n                    y: groupRect.y - padding[0],\n                    width: groupRect.width + padding[1] + padding[3],\n                    height: groupRect.height + padding[0] + padding[2]\n                },\n                style: style,\n                silent: true\n            });\n            graphic.subPixelOptimizeRect(rect);\n\n            group.add(rect);\n        }\n    });\n\n\n/***/ }),\n/* 560 */\n/***/ (function(module, exports, __webpack_require__) {\n\n// FIXME Better way to pack data in graphic element\n\n\n    __webpack_require__(562);\n\n    __webpack_require__(563);\n\n    // Show tip action\n    /**\n     * @action\n     * @property {string} type\n     * @property {number} seriesIndex\n     * @property {number} dataIndex\n     * @property {number} [x]\n     * @property {number} [y]\n     */\n    __webpack_require__(462).registerAction(\n        {\n            type: 'showTip',\n            event: 'showTip',\n            update: 'tooltip:manuallyShowTip'\n        },\n        // noop\n        function () {}\n    );\n    // Hide tip action\n    __webpack_require__(462).registerAction(\n        {\n            type: 'hideTip',\n            event: 'hideTip',\n            update: 'tooltip:manuallyHideTip'\n        },\n        // noop\n        function () {}\n    );\n\n\n/***/ }),\n/* 561 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * @module echarts/component/tooltip/TooltipContent\n */\n\n\n    var zrUtil = __webpack_require__(460);\n    var zrColor = __webpack_require__(474);\n    var eventUtil = __webpack_require__(485);\n    var formatUtil = __webpack_require__(468);\n    var each = zrUtil.each;\n    var toCamelCase = formatUtil.toCamelCase;\n    var env = __webpack_require__(466);\n\n    var vendors = ['', '-webkit-', '-moz-', '-o-'];\n\n    var gCssText = 'position:absolute;display:block;border-style:solid;white-space:nowrap;z-index:9999999;';\n\n    /**\n     * @param {number} duration\n     * @return {string}\n     * @inner\n     */\n    function assembleTransition(duration) {\n        var transitionCurve = 'cubic-bezier(0.23, 1, 0.32, 1)';\n        var transitionText = 'left ' + duration + 's ' + transitionCurve + ','\n                            + 'top ' + duration + 's ' + transitionCurve;\n        return zrUtil.map(vendors, function (vendorPrefix) {\n            return vendorPrefix + 'transition:' + transitionText;\n        }).join(';');\n    }\n\n    /**\n     * @param {Object} textStyle\n     * @return {string}\n     * @inner\n     */\n    function assembleFont(textStyleModel) {\n        var cssText = [];\n\n        var fontSize = textStyleModel.get('fontSize');\n        var color = textStyleModel.getTextColor();\n\n        color && cssText.push('color:' + color);\n\n        cssText.push('font:' + textStyleModel.getFont());\n\n        fontSize &&\n            cssText.push('line-height:' + Math.round(fontSize * 3 / 2) + 'px');\n\n        each(['decoration', 'align'], function (name) {\n            var val = textStyleModel.get(name);\n            val && cssText.push('text-' + name + ':' + val);\n        });\n\n        return cssText.join(';');\n    }\n\n    /**\n     * @param {Object} tooltipModel\n     * @return {string}\n     * @inner\n     */\n    function assembleCssText(tooltipModel) {\n\n        tooltipModel = tooltipModel;\n\n        var cssText = [];\n\n        var transitionDuration = tooltipModel.get('transitionDuration');\n        var backgroundColor = tooltipModel.get('backgroundColor');\n        var textStyleModel = tooltipModel.getModel('textStyle');\n        var padding = tooltipModel.get('padding');\n\n        // Animation transition\n        transitionDuration &&\n            cssText.push(assembleTransition(transitionDuration));\n\n        if (backgroundColor) {\n            if (env.canvasSupported) {\n                cssText.push('background-Color:' + backgroundColor);\n            }\n            else {\n                // for ie\n                cssText.push(\n                    'background-Color:#' + zrColor.toHex(backgroundColor)\n                );\n                cssText.push('filter:alpha(opacity=70)');\n            }\n        }\n\n        // Border style\n        each(['width', 'color', 'radius'], function (name) {\n            var borderName = 'border-' + name;\n            var camelCase = toCamelCase(borderName);\n            var val = tooltipModel.get(camelCase);\n            val != null &&\n                cssText.push(borderName + ':' + val + (name === 'color' ? '' : 'px'));\n        });\n\n        // Text style\n        cssText.push(assembleFont(textStyleModel));\n\n        // Padding\n        if (padding != null) {\n            cssText.push('padding:' + formatUtil.normalizeCssArray(padding).join('px ') + 'px');\n        }\n\n        return cssText.join(';') + ';';\n    }\n\n    /**\n     * @alias module:echarts/component/tooltip/TooltipContent\n     * @constructor\n     */\n    function TooltipContent(container, api) {\n        var el = document.createElement('div');\n        var zr = api.getZr();\n\n        this.el = el;\n\n        this._x = api.getWidth() / 2;\n        this._y = api.getHeight() / 2;\n\n        container.appendChild(el);\n\n        this._container = container;\n\n        this._show = false;\n\n        /**\n         * @private\n         */\n        this._hideTimeout;\n\n        var self = this;\n        el.onmouseenter = function () {\n            // clear the timeout in hideLater and keep showing tooltip\n            if (self.enterable) {\n                clearTimeout(self._hideTimeout);\n                self._show = true;\n            }\n            self._inContent = true;\n        };\n        el.onmousemove = function (e) {\n            e = e || window.event;\n            if (!self.enterable) {\n                // Try trigger zrender event to avoid mouse\n                // in and out shape too frequently\n                var handler = zr.handler;\n                eventUtil.normalizeEvent(container, e, true);\n                handler.dispatch('mousemove', e);\n            }\n        };\n        el.onmouseleave = function () {\n            if (self.enterable) {\n                if (self._show) {\n                    self.hideLater(self._hideDelay);\n                }\n            }\n            self._inContent = false;\n        };\n    }\n\n    TooltipContent.prototype = {\n\n        constructor: TooltipContent,\n\n        enterable: true,\n\n        /**\n         * Update when tooltip is rendered\n         */\n        update: function () {\n            var container = this._container;\n            var stl = container.currentStyle\n                || document.defaultView.getComputedStyle(container);\n            var domStyle = container.style;\n            if (domStyle.position !== 'absolute' && stl.position !== 'absolute') {\n                domStyle.position = 'relative';\n            }\n            // Hide the tooltip\n            // PENDING\n            // this.hide();\n        },\n\n        show: function (tooltipModel) {\n            clearTimeout(this._hideTimeout);\n            var el = this.el;\n\n            el.style.cssText = gCssText + assembleCssText(tooltipModel)\n                // http://stackoverflow.com/questions/21125587/css3-transition-not-working-in-chrome-anymore\n                + ';left:' + this._x + 'px;top:' + this._y + 'px;'\n                + (tooltipModel.get('extraCssText') || '');\n\n            el.style.display = el.innerHTML ?  'block' : 'none';\n\n            this._show = true;\n        },\n\n        setContent: function (content) {\n            var el = this.el;\n            el.innerHTML = content;\n            el.style.display = content ? 'block' : 'none';\n        },\n\n        moveTo: function (x, y) {\n            var style = this.el.style;\n            style.left = x + 'px';\n            style.top = y + 'px';\n\n            this._x = x;\n            this._y = y;\n        },\n\n        hide: function () {\n            this.el.style.display = 'none';\n            this._show = false;\n        },\n\n        // showLater: function ()\n\n        hideLater: function (time) {\n            if (this._show && !(this._inContent && this.enterable)) {\n                if (time) {\n                    this._hideDelay = time;\n                    // Set show false to avoid invoke hideLater mutiple times\n                    this._show = false;\n                    this._hideTimeout = setTimeout(zrUtil.bind(this.hide, this), time);\n                }\n                else {\n                    this.hide();\n                }\n            }\n        },\n\n        isShow: function () {\n            return this._show;\n        }\n    };\n\n    module.exports = TooltipContent;\n\n\n/***/ }),\n/* 562 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    __webpack_require__(462).extendComponentModel({\n\n        type: 'tooltip',\n\n        defaultOption: {\n            zlevel: 0,\n\n            z: 8,\n\n            show: true,\n\n            // tooltip主体内容\n            showContent: true,\n\n            // 触发类型，默认数据触发，见下图，可选为：'item' ¦ 'axis'\n            trigger: 'item',\n\n            // 触发条件，支持 'click' | 'mousemove' | 'none'\n            triggerOn: 'mousemove',\n\n            // 是否永远显示 content\n            alwaysShowContent: false,\n\n            // 位置 {Array} | {Function}\n            // position: null\n\n            // 是否约束 content 在 viewRect 中。默认 false 是为了兼容以前版本。\n            confine: false,\n\n            // 内容格式器：{string}（Template） ¦ {Function}\n            // formatter: null\n\n            showDelay: 0,\n\n            // 隐藏延迟，单位ms\n            hideDelay: 100,\n\n            // 动画变换时间，单位s\n            transitionDuration: 0.4,\n\n            enterable: false,\n\n            // 提示背景颜色，默认为透明度为0.7的黑色\n            backgroundColor: 'rgba(50,50,50,0.7)',\n\n            // 提示边框颜色\n            borderColor: '#333',\n\n            // 提示边框圆角，单位px，默认为4\n            borderRadius: 4,\n\n            // 提示边框线宽，单位px，默认为0（无边框）\n            borderWidth: 0,\n\n            // 提示内边距，单位px，默认各方向内边距为5，\n            // 接受数组分别设定上右下左边距，同css\n            padding: 5,\n\n            // Extra css text\n            extraCssText: '',\n\n            // 坐标轴指示器，坐标轴触发有效\n            axisPointer: {\n                // 默认为直线\n                // 可选为：'line' | 'shadow' | 'cross'\n                type: 'line',\n\n                // type 为 line 的时候有效，指定 tooltip line 所在的轴，可选\n                // 可选 'x' | 'y' | 'angle' | 'radius' | 'auto'\n                // 默认 'auto'，会选择类型为 cateogry 的轴，对于双数值轴，笛卡尔坐标系会默认选择 x 轴\n                // 极坐标系会默认选择 angle 轴\n                axis: 'auto',\n\n                animation: true,\n                animationDurationUpdate: 200,\n                animationEasingUpdate: 'exponentialOut',\n\n                // 直线指示器样式设置\n                lineStyle: {\n                    color: '#555',\n                    width: 1,\n                    type: 'solid'\n                },\n\n                crossStyle: {\n                    color: '#555',\n                    width: 1,\n                    type: 'dashed',\n\n                    // TODO formatter\n                    textStyle: {}\n                },\n\n                // 阴影指示器样式设置\n                shadowStyle: {\n                    color: 'rgba(150,150,150,0.3)'\n                }\n            },\n            textStyle: {\n                color: '#fff',\n                fontSize: 14\n            }\n        }\n    });\n\n\n/***/ }),\n/* 563 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var TooltipContent = __webpack_require__(561);\n    var graphic = __webpack_require__(464);\n    var zrUtil = __webpack_require__(460);\n    var formatUtil = __webpack_require__(468);\n    var numberUtil = __webpack_require__(465);\n    var modelUtil = __webpack_require__(469);\n    var parsePercent = numberUtil.parsePercent;\n    var env = __webpack_require__(466);\n    var Model = __webpack_require__(470);\n\n    function dataEqual(a, b) {\n        if (!a || !b) {\n            return false;\n        }\n        var round = numberUtil.round;\n        return round(a[0]) === round(b[0])\n            && round(a[1]) === round(b[1]);\n    }\n    /**\n     * @inner\n     */\n    function makeLineShape(x1, y1, x2, y2) {\n        return {\n            x1: x1,\n            y1: y1,\n            x2: x2,\n            y2: y2\n        };\n    }\n\n    /**\n     * @inner\n     */\n    function makeRectShape(x, y, width, height) {\n        return {\n            x: x,\n            y: y,\n            width: width,\n            height: height\n        };\n    }\n\n    /**\n     * @inner\n     */\n    function makeSectorShape(cx, cy, r0, r, startAngle, endAngle) {\n        return {\n            cx: cx,\n            cy: cy,\n            r0: r0,\n            r: r,\n            startAngle: startAngle,\n            endAngle: endAngle,\n            clockwise: true\n        };\n    }\n\n    function refixTooltipPosition(x, y, el, viewWidth, viewHeight) {\n        var width = el.clientWidth;\n        var height = el.clientHeight;\n        var gap = 20;\n\n        if (x + width + gap > viewWidth) {\n            x -= width + gap;\n        }\n        else {\n            x += gap;\n        }\n        if (y + height + gap > viewHeight) {\n            y -= height + gap;\n        }\n        else {\n            y += gap;\n        }\n        return [x, y];\n    }\n\n    function confineTooltipPosition(x, y, el, viewWidth, viewHeight) {\n        var width = el.clientWidth;\n        var height = el.clientHeight;\n\n        x = Math.min(x + width, viewWidth) - width;\n        y = Math.min(y + height, viewHeight) - height;\n        x = Math.max(x, 0);\n        y = Math.max(y, 0);\n\n        return [x, y];\n    }\n\n    function calcTooltipPosition(position, rect, dom) {\n        var domWidth = dom.clientWidth;\n        var domHeight = dom.clientHeight;\n        var gap = 5;\n        var x = 0;\n        var y = 0;\n        var rectWidth = rect.width;\n        var rectHeight = rect.height;\n        switch (position) {\n            case 'inside':\n                x = rect.x + rectWidth / 2 - domWidth / 2;\n                y = rect.y + rectHeight / 2 - domHeight / 2;\n                break;\n            case 'top':\n                x = rect.x + rectWidth / 2 - domWidth / 2;\n                y = rect.y - domHeight - gap;\n                break;\n            case 'bottom':\n                x = rect.x + rectWidth / 2 - domWidth / 2;\n                y = rect.y + rectHeight + gap;\n                break;\n            case 'left':\n                x = rect.x - domWidth - gap;\n                y = rect.y + rectHeight / 2 - domHeight / 2;\n                break;\n            case 'right':\n                x = rect.x + rectWidth + gap;\n                y = rect.y + rectHeight / 2 - domHeight / 2;\n        }\n        return [x, y];\n    }\n\n    /**\n     * @param  {string|Function|Array.<number>} positionExpr\n     * @param  {number} x Mouse x\n     * @param  {number} y Mouse y\n     * @param  {boolean} confine Whether confine tooltip content in view rect.\n     * @param  {module:echarts/component/tooltip/TooltipContent} content\n     * @param  {Object|<Array.<Object>} params\n     * @param  {module:zrender/Element} el target element\n     * @param  {module:echarts/ExtensionAPI} api\n     * @return {Array.<number>}\n     */\n    function updatePosition(positionExpr, x, y, confine, content, params, el, api) {\n        var viewWidth = api.getWidth();\n        var viewHeight = api.getHeight();\n\n        var rect = el && el.getBoundingRect().clone();\n        el && rect.applyTransform(el.transform);\n        if (typeof positionExpr === 'function') {\n            // Callback of position can be an array or a string specify the position\n            positionExpr = positionExpr([x, y], params, content.el, rect);\n        }\n\n        if (zrUtil.isArray(positionExpr)) {\n            x = parsePercent(positionExpr[0], viewWidth);\n            y = parsePercent(positionExpr[1], viewHeight);\n        }\n        // Specify tooltip position by string 'top' 'bottom' 'left' 'right' around graphic element\n        else if (typeof positionExpr === 'string' && el) {\n            var pos = calcTooltipPosition(\n                positionExpr, rect, content.el\n            );\n            x = pos[0];\n            y = pos[1];\n        }\n        else {\n            var pos = refixTooltipPosition(\n                x, y, content.el, viewWidth, viewHeight\n            );\n            x = pos[0];\n            y = pos[1];\n        }\n\n        if (confine) {\n            var pos = confineTooltipPosition(\n                x, y, content.el, viewWidth, viewHeight\n            );\n            x = pos[0];\n            y = pos[1];\n        }\n\n        content.moveTo(x, y);\n    }\n\n    function ifSeriesSupportAxisTrigger(seriesModel) {\n        var coordSys = seriesModel.coordinateSystem;\n        var trigger = seriesModel.get('tooltip.trigger', true);\n        // Ignore series use item tooltip trigger and series coordinate system is not cartesian or\n        return !(!coordSys\n            || (coordSys.type !== 'cartesian2d' && coordSys.type !== 'polar' && coordSys.type !== 'singleAxis')\n            || trigger === 'item');\n    }\n\n    __webpack_require__(462).extendComponentView({\n\n        type: 'tooltip',\n\n        _axisPointers: {},\n\n        init: function (ecModel, api) {\n            if (env.node) {\n                return;\n            }\n            var tooltipContent = new TooltipContent(api.getDom(), api);\n            this._tooltipContent = tooltipContent;\n        },\n\n        render: function (tooltipModel, ecModel, api) {\n            if (env.node) {\n                return;\n            }\n\n            // Reset\n            this.group.removeAll();\n\n            /**\n             * @type {Object}\n             * @private\n             */\n            this._axisPointers = {};\n\n            /**\n             * @private\n             * @type {module:echarts/component/tooltip/TooltipModel}\n             */\n            this._tooltipModel = tooltipModel;\n\n            /**\n             * @private\n             * @type {module:echarts/model/Global}\n             */\n            this._ecModel = ecModel;\n\n            /**\n             * @private\n             * @type {module:echarts/ExtensionAPI}\n             */\n            this._api = api;\n\n            /**\n             * @type {Object}\n             * @private\n             */\n            this._lastHover = {\n                // data\n                // payloadBatch\n            };\n\n            var tooltipContent = this._tooltipContent;\n            tooltipContent.update();\n            tooltipContent.enterable = tooltipModel.get('enterable');\n            this._alwaysShowContent = tooltipModel.get('alwaysShowContent');\n\n            /**\n             * @type {Object.<string, Array>}\n             */\n            this._seriesGroupByAxis = this._prepareAxisTriggerData(\n                tooltipModel, ecModel\n            );\n\n            var crossText = this._crossText;\n            if (crossText) {\n                this.group.add(crossText);\n            }\n\n            var triggerOn = tooltipModel.get('triggerOn');\n\n            // Try to keep the tooltip show when refreshing\n            if (this._lastX != null\n                && this._lastY != null\n                // When user is willing to control tooltip totally using API,\n                // self.manuallyShowTip({x, y}) might cause tooltip hide,\n                // which is not expected.\n                && triggerOn !== 'none'\n            ) {\n                var self = this;\n                clearTimeout(this._refreshUpdateTimeout);\n                this._refreshUpdateTimeout = setTimeout(function () {\n                    // Show tip next tick after other charts are rendered\n                    // In case highlight action has wrong result\n                    // FIXME\n                    self.manuallyShowTip(tooltipModel, ecModel, api, {\n                        x: self._lastX,\n                        y: self._lastY\n                    });\n                });\n            }\n\n            var zr = this._api.getZr();\n            zr.off('click', this._tryShow);\n            zr.off('mousemove', this._mousemove);\n            zr.off('mouseout', this._hide);\n            zr.off('globalout', this._hide);\n\n            if (triggerOn === 'click') {\n                zr.on('click', this._tryShow, this);\n            }\n            else if (triggerOn === 'mousemove') {\n                zr.on('mousemove', this._mousemove, this);\n                zr.on('mouseout', this._hide, this);\n                zr.on('globalout', this._hide, this);\n            }\n            // else triggerOn is 'none', which enable user\n            // to control tooltip totally using API.\n        },\n\n        _mousemove: function (e) {\n            var showDelay = this._tooltipModel.get('showDelay');\n            var self = this;\n            clearTimeout(this._showTimeout);\n            if (showDelay > 0) {\n                this._showTimeout = setTimeout(function () {\n                    self._tryShow(e);\n                }, showDelay);\n            }\n            else {\n                this._tryShow(e);\n            }\n        },\n\n        /**\n         * Show tip manually by\n         * dispatchAction({\n         *     type: 'showTip',\n         *     x: 10,\n         *     y: 10\n         * });\n         * Or\n         * dispatchAction({\n         *      type: 'showTip',\n         *      seriesIndex: 0,\n         *      dataIndex or dataIndexInside or name\n         * });\n         *\n         *  TODO Batch\n         */\n        manuallyShowTip: function (tooltipModel, ecModel, api, payload) {\n            // From self\n            if (payload.from === this.uid) {\n                return;\n            }\n\n            var ecModel = this._ecModel;\n            var seriesIndex = payload.seriesIndex;\n            var seriesModel = ecModel.getSeriesByIndex(seriesIndex);\n            var api = this._api;\n\n            var isTriggerAxis = this._tooltipModel.get('trigger') === 'axis';\n            function seriesHaveDataOnIndex(_series) {\n                var data = _series.getData();\n                var dataIndex = modelUtil.queryDataIndex(data, payload);\n                // Have single dataIndex\n                if (dataIndex != null && !zrUtil.isArray(dataIndex)\n                    && data.hasValue(dataIndex)\n                ) {\n                    return true;\n                }\n            }\n\n            if (payload.x == null || payload.y == null) {\n                if (isTriggerAxis) {\n                    // Find another series.\n                    if (seriesModel && !seriesHaveDataOnIndex(seriesModel)) {\n                        seriesModel = null;\n                    }\n                    if (!seriesModel) {\n                        // Find the first series can use axis trigger And data is not null\n                        ecModel.eachSeries(function (_series) {\n                            if (ifSeriesSupportAxisTrigger(_series) && !seriesModel) {\n                                if (seriesHaveDataOnIndex(_series)) {\n                                    seriesModel = _series;\n                                }\n                            }\n                        });\n                    }\n                }\n                else {\n                    // Use the first series by default.\n                    seriesModel = seriesModel || ecModel.getSeriesByIndex(0);\n                }\n                if (seriesModel) {\n                    var data = seriesModel.getData();\n                    var dataIndex = modelUtil.queryDataIndex(data, payload);\n\n                    if (dataIndex == null || zrUtil.isArray(dataIndex)) {\n                        return;\n                    }\n\n                    var el = data.getItemGraphicEl(dataIndex);\n                    var cx;\n                    var cy;\n                    // Try to get the point in coordinate system\n                    var coordSys = seriesModel.coordinateSystem;\n                    if (seriesModel.getTooltipPosition) {\n                        var point = seriesModel.getTooltipPosition(dataIndex) || [];\n                        cx = point[0];\n                        cy = point[1];\n                    }\n                    else if (coordSys && coordSys.dataToPoint) {\n                        var point = coordSys.dataToPoint(\n                            data.getValues(\n                                zrUtil.map(coordSys.dimensions, function (dim) {\n                                    return seriesModel.coordDimToDataDim(dim)[0];\n                                }), dataIndex, true\n                            )\n                        );\n                        cx = point && point[0];\n                        cy = point && point[1];\n                    }\n                    else if (el) {\n                        // Use graphic bounding rect\n                        var rect = el.getBoundingRect().clone();\n                        rect.applyTransform(el.transform);\n                        cx = rect.x + rect.width / 2;\n                        cy = rect.y + rect.height / 2;\n                    }\n\n                    if (cx != null && cy != null) {\n                        this._tryShow({\n                            offsetX: cx,\n                            offsetY: cy,\n                            position: payload.position,\n                            target: el,\n                            event: {}\n                        });\n                    }\n                }\n            }\n            else {\n                var el = api.getZr().handler.findHover(payload.x, payload.y);\n                this._tryShow({\n                    offsetX: payload.x,\n                    offsetY: payload.y,\n                    position: payload.position,\n                    target: el,\n                    event: {}\n                });\n            }\n        },\n\n        manuallyHideTip: function (tooltipModel, ecModel, api, payload) {\n            if (payload.from === this.uid) {\n                return;\n            }\n\n            this._hide();\n        },\n\n        _prepareAxisTriggerData: function (tooltipModel, ecModel) {\n            // Prepare data for axis trigger\n            var seriesGroupByAxis = {};\n            ecModel.eachSeries(function (seriesModel) {\n                if (ifSeriesSupportAxisTrigger(seriesModel)) {\n                    var coordSys = seriesModel.coordinateSystem;\n                    var baseAxis;\n                    var key;\n\n                    // Only cartesian2d, polar and single support axis trigger\n                    if (coordSys.type === 'cartesian2d') {\n                        // FIXME `axisPointer.axis` is not baseAxis\n                        baseAxis = coordSys.getBaseAxis();\n                        key = baseAxis.dim + baseAxis.index;\n                    }\n                    else if (coordSys.type === 'singleAxis') {\n                        baseAxis = coordSys.getAxis();\n                        key = baseAxis.dim + baseAxis.type;\n                    }\n                    else {\n                        baseAxis = coordSys.getBaseAxis();\n                        key = baseAxis.dim + coordSys.name;\n                    }\n\n                    seriesGroupByAxis[key] = seriesGroupByAxis[key] || {\n                        coordSys: [],\n                        series: []\n                    };\n                    seriesGroupByAxis[key].coordSys.push(coordSys);\n                    seriesGroupByAxis[key].series.push(seriesModel);\n                }\n            }, this);\n\n            return seriesGroupByAxis;\n        },\n\n        /**\n         * mousemove handler\n         * @param {Object} e\n         * @private\n         */\n        _tryShow: function (e) {\n            var el = e.target;\n            var tooltipModel = this._tooltipModel;\n            var globalTrigger = tooltipModel.get('trigger');\n            var ecModel = this._ecModel;\n            var api = this._api;\n\n            if (!tooltipModel) {\n                return;\n            }\n\n            // Save mouse x, mouse y. So we can try to keep showing the tip if chart is refreshed\n            this._lastX = e.offsetX;\n            this._lastY = e.offsetY;\n\n            // Always show item tooltip if mouse is on the element with dataIndex\n            if (el && el.dataIndex != null) {\n                // Use dataModel in element if possible\n                // Used when mouseover on a element like markPoint or edge\n                // In which case, the data is not main data in series.\n                var dataModel = el.dataModel || ecModel.getSeriesByIndex(el.seriesIndex);\n                var dataIndex = el.dataIndex;\n                var data = dataModel.getData();\n                var itemModel = data.getItemModel(dataIndex);\n                // Series or single data may use item trigger when global is axis trigger\n                if ((itemModel.get('tooltip.trigger') || globalTrigger) === 'axis') {\n                    this._showAxisTooltip(tooltipModel, ecModel, e);\n                }\n                else {\n                    // Reset ticket\n                    this._ticket = '';\n                    // If either single data or series use item trigger\n                    this._hideAxisPointer();\n                    // Reset last hover and dispatch downplay action\n                    this._resetLastHover();\n\n                    this._showItemTooltipContent(dataModel, dataIndex, el.dataType, e);\n                }\n\n                api.dispatchAction({\n                    type: 'showTip',\n                    from: this.uid,\n                    dataIndexInside: dataIndex,\n                    dataIndex: data.getRawIndex(dataIndex), // expose to user.\n                    seriesIndex: el.seriesIndex\n                });\n            }\n            // Tooltip provided directly. Like legend\n            else if (el && el.tooltip) {\n                var tooltipOpt = el.tooltip;\n                if (typeof tooltipOpt === 'string') {\n                    var content = tooltipOpt;\n                    tooltipOpt = {\n                        content: content,\n                        // Fixed formatter\n                        formatter: content\n                    };\n                }\n                var subTooltipModel = new Model(tooltipOpt, tooltipModel);\n                var defaultHtml = subTooltipModel.get('content');\n                var asyncTicket = Math.random();\n                this._showTooltipContent(\n                    // TODO params\n                    subTooltipModel, defaultHtml, subTooltipModel.get('formatterParams') || {},\n                    asyncTicket, e.offsetX, e.offsetY, e.position, el, api\n                );\n            }\n            else {\n                if (globalTrigger === 'item') {\n                    this._hide();\n                }\n                else {\n                    // Try show axis tooltip\n                    this._showAxisTooltip(tooltipModel, ecModel, e);\n                }\n\n                // Action of cross pointer\n                // other pointer types will trigger action in _dispatchAndShowSeriesTooltipContent method\n                if (tooltipModel.get('axisPointer.type') === 'cross') {\n                    api.dispatchAction({\n                        type: 'showTip',\n                        from: this.uid,\n                        x: e.offsetX,\n                        y: e.offsetY\n                    });\n                }\n            }\n        },\n\n        /**\n         * Show tooltip on axis\n         * @param {module:echarts/component/tooltip/TooltipModel} tooltipModel\n         * @param {module:echarts/model/Global} ecModel\n         * @param {Object} e\n         * @private\n         */\n        _showAxisTooltip: function (tooltipModel, ecModel, e) {\n            var axisPointerModel = tooltipModel.getModel('axisPointer');\n            var axisPointerType = axisPointerModel.get('type');\n\n            if (axisPointerType === 'cross') {\n                var el = e.target;\n                if (el && el.dataIndex != null) {\n                    var seriesModel = ecModel.getSeriesByIndex(el.seriesIndex);\n                    var dataIndex = el.dataIndex;\n                    this._showItemTooltipContent(seriesModel, dataIndex, el.dataType, e);\n                }\n            }\n\n            this._showAxisPointer();\n            var allNotShow = true;\n            zrUtil.each(this._seriesGroupByAxis, function (seriesCoordSysSameAxis) {\n                // Try show the axis pointer\n                var allCoordSys = seriesCoordSysSameAxis.coordSys;\n                var coordSys = allCoordSys[0];\n\n                // If mouse position is not in the grid or polar\n                var point = [e.offsetX, e.offsetY];\n\n                if (!coordSys.containPoint(point)) {\n                    // Hide axis pointer\n                    this._hideAxisPointer(coordSys.name);\n                    return;\n                }\n\n                allNotShow = false;\n                // Make sure point is discrete on cateogry axis\n                var dimensions = coordSys.dimensions;\n                var value = coordSys.pointToData(point, true);\n                point = coordSys.dataToPoint(value);\n\n                var baseAxis = coordSys.getBaseAxis();\n                var axisType = axisPointerModel.get('axis');\n                if (axisType === 'auto') {\n                    axisType = baseAxis.dim;\n                }\n\n                if (baseAxis.isBlank() || zrUtil.eqNaN(point[0]) || zrUtil.eqNaN(point[1])) {\n                    this._hideAxisPointer(coordSys.name);\n                    return;\n                }\n\n                var contentNotChange = false;\n                var lastHover = this._lastHover;\n                if (axisPointerType === 'cross') {\n                    // If hover data not changed\n                    // Possible when two axes are all category\n                    if (dataEqual(lastHover.data, value)) {\n                        contentNotChange = true;\n                    }\n                    lastHover.data = value;\n                }\n                else {\n                    var valIndex = zrUtil.indexOf(dimensions, axisType);\n\n                    // If hover data not changed on the axis dimension\n                    if (lastHover.data === value[valIndex]) {\n                        contentNotChange = true;\n                    }\n                    lastHover.data = value[valIndex];\n                }\n\n                var enableAnimation = tooltipModel.get('animation');\n\n                if (coordSys.type === 'cartesian2d' && !contentNotChange) {\n                    this._showCartesianPointer(\n                        axisPointerModel, coordSys, axisType, point, enableAnimation\n                    );\n                }\n                else if (coordSys.type === 'polar' && !contentNotChange) {\n                    this._showPolarPointer(\n                        axisPointerModel, coordSys, axisType, point, enableAnimation\n                    );\n                }\n                else if (coordSys.type === 'singleAxis' && !contentNotChange) {\n                    this._showSinglePointer(\n                        axisPointerModel, coordSys, axisType, point, enableAnimation\n                    );\n                }\n\n                if (axisPointerType !== 'cross') {\n                    this._dispatchAndShowSeriesTooltipContent(\n                        coordSys, seriesCoordSysSameAxis.series, point, value, contentNotChange, e.position\n                    );\n                }\n            }, this);\n\n            if (!this._tooltipModel.get('show')) {\n                this._hideAxisPointer();\n            }\n\n            if (allNotShow) {\n                this._hide();\n            }\n        },\n\n        /**\n         * Show tooltip on axis of cartesian coordinate\n         * @param {module:echarts/model/Model} axisPointerModel\n         * @param {module:echarts/coord/cartesian/Cartesian2D} cartesians\n         * @param {string} axisType\n         * @param {Array.<number>} point\n         * @private\n         */\n        _showCartesianPointer: function (axisPointerModel, cartesian, axisType, point, enableAnimation) {\n            var self = this;\n\n            var axisPointerType = axisPointerModel.get('type');\n            var baseAxis = cartesian.getBaseAxis();\n            var moveAnimation = enableAnimation\n                && axisPointerType !== 'cross'\n                && baseAxis.type === 'category'\n                && baseAxis.getBandWidth() > 20;\n\n            if (axisPointerType === 'cross') {\n                moveGridLine('x', point, cartesian.getAxis('y').getGlobalExtent());\n                moveGridLine('y', point, cartesian.getAxis('x').getGlobalExtent());\n\n                this._updateCrossText(cartesian, point, axisPointerModel);\n            }\n            else {\n                var otherAxis = cartesian.getAxis(axisType === 'x' ? 'y' : 'x');\n                var otherExtent = otherAxis.getGlobalExtent();\n\n                if (cartesian.type === 'cartesian2d') {\n                    (axisPointerType === 'line' ? moveGridLine : moveGridShadow)(\n                        axisType, point, otherExtent\n                    );\n                }\n            }\n\n            /**\n             * @inner\n             */\n            function moveGridLine(axisType, point, otherExtent) {\n                var targetShape = axisType === 'x'\n                    ? makeLineShape(point[0], otherExtent[0], point[0], otherExtent[1])\n                    : makeLineShape(otherExtent[0], point[1], otherExtent[1], point[1]);\n\n                var pointerEl = self._getPointerElement(\n                    cartesian, axisPointerModel, axisType, targetShape\n                );\n                graphic.subPixelOptimizeLine({\n                    shape: targetShape,\n                    style: pointerEl.style\n                });\n\n                moveAnimation\n                    ? graphic.updateProps(pointerEl, {\n                        shape: targetShape\n                    }, axisPointerModel)\n                    :  pointerEl.attr({\n                        shape: targetShape\n                    });\n            }\n\n            /**\n             * @inner\n             */\n            function moveGridShadow(axisType, point, otherExtent) {\n                var axis = cartesian.getAxis(axisType);\n                var bandWidth = axis.getBandWidth();\n                var span = otherExtent[1] - otherExtent[0];\n                var targetShape = axisType === 'x'\n                    ? makeRectShape(point[0] - bandWidth / 2, otherExtent[0], bandWidth, span)\n                    : makeRectShape(otherExtent[0], point[1] - bandWidth / 2, span, bandWidth);\n\n                var pointerEl = self._getPointerElement(\n                    cartesian, axisPointerModel, axisType, targetShape\n                );\n                moveAnimation\n                    ? graphic.updateProps(pointerEl, {\n                        shape: targetShape\n                    }, axisPointerModel)\n                    :  pointerEl.attr({\n                        shape: targetShape\n                    });\n            }\n        },\n\n        _showSinglePointer: function (axisPointerModel, single, axisType, point, enableAnimation) {\n            var self = this;\n            var axisPointerType = axisPointerModel.get('type');\n            var moveAnimation =\n                enableAnimation\n                && axisPointerType !== 'cross'\n                && single.getBaseAxis().type === 'category';\n            var rect = single.getRect();\n            var otherExtent = [rect.y, rect.y + rect.height];\n\n            moveSingleLine(axisType, point, otherExtent);\n\n            /**\n             * @inner\n             */\n            function moveSingleLine(axisType, point, otherExtent) {\n                var axis = single.getAxis();\n                var orient = axis.orient;\n\n                var targetShape = orient === 'horizontal'\n                    ? makeLineShape(point[0], otherExtent[0], point[0], otherExtent[1])\n                    : makeLineShape(otherExtent[0], point[1], otherExtent[1], point[1]);\n\n                var pointerEl = self._getPointerElement(\n                    single, axisPointerModel, axisType, targetShape\n                );\n                moveAnimation\n                    ? graphic.updateProps(pointerEl, {\n                        shape: targetShape\n                    }, axisPointerModel)\n                    :  pointerEl.attr({\n                        shape: targetShape\n                    });\n            }\n\n        },\n\n        /**\n         * Show tooltip on axis of polar coordinate\n         * @param {module:echarts/model/Model} axisPointerModel\n         * @param {Array.<module:echarts/coord/polar/Polar>} polar\n         * @param {string} axisType\n         * @param {Array.<number>} point\n         */\n        _showPolarPointer: function (axisPointerModel, polar, axisType, point, enableAnimation) {\n            var self = this;\n\n            var axisPointerType = axisPointerModel.get('type');\n\n            var angleAxis = polar.getAngleAxis();\n            var radiusAxis = polar.getRadiusAxis();\n\n            var moveAnimation = enableAnimation\n                && axisPointerType !== 'cross'\n                && polar.getBaseAxis().type === 'category';\n\n            if (axisPointerType === 'cross') {\n                movePolarLine('angle', point, radiusAxis.getExtent());\n                movePolarLine('radius', point, angleAxis.getExtent());\n\n                this._updateCrossText(polar, point, axisPointerModel);\n            }\n            else {\n                var otherAxis = polar.getAxis(axisType === 'radius' ? 'angle' : 'radius');\n                var otherExtent = otherAxis.getExtent();\n\n                (axisPointerType === 'line' ? movePolarLine : movePolarShadow)(\n                    axisType, point, otherExtent\n                );\n            }\n            /**\n             * @inner\n             */\n            function movePolarLine(axisType, point, otherExtent) {\n                var mouseCoord = polar.pointToCoord(point);\n\n                var targetShape;\n\n                if (axisType === 'angle') {\n                    var p1 = polar.coordToPoint([otherExtent[0], mouseCoord[1]]);\n                    var p2 = polar.coordToPoint([otherExtent[1], mouseCoord[1]]);\n                    targetShape = makeLineShape(p1[0], p1[1], p2[0], p2[1]);\n                }\n                else {\n                    targetShape = {\n                        cx: polar.cx,\n                        cy: polar.cy,\n                        r: mouseCoord[0]\n                    };\n                }\n\n                var pointerEl = self._getPointerElement(\n                    polar, axisPointerModel, axisType, targetShape\n                );\n\n                moveAnimation\n                    ? graphic.updateProps(pointerEl, {\n                        shape: targetShape\n                    }, axisPointerModel)\n                    :  pointerEl.attr({\n                        shape: targetShape\n                    });\n            }\n\n            /**\n             * @inner\n             */\n            function movePolarShadow(axisType, point, otherExtent) {\n                var axis = polar.getAxis(axisType);\n                var bandWidth = axis.getBandWidth();\n\n                var mouseCoord = polar.pointToCoord(point);\n\n                var targetShape;\n\n                var radian = Math.PI / 180;\n\n                if (axisType === 'angle') {\n                    targetShape = makeSectorShape(\n                        polar.cx, polar.cy,\n                        otherExtent[0], otherExtent[1],\n                        // In ECharts y is negative if angle is positive\n                        (-mouseCoord[1] - bandWidth / 2) * radian,\n                        (-mouseCoord[1] + bandWidth / 2) * radian\n                    );\n                }\n                else {\n                    targetShape = makeSectorShape(\n                        polar.cx, polar.cy,\n                        mouseCoord[0] - bandWidth / 2,\n                        mouseCoord[0] + bandWidth / 2,\n                        0, Math.PI * 2\n                    );\n                }\n\n                var pointerEl = self._getPointerElement(\n                    polar, axisPointerModel, axisType, targetShape\n                );\n                moveAnimation\n                    ? graphic.updateProps(pointerEl, {\n                        shape: targetShape\n                    }, axisPointerModel)\n                    :  pointerEl.attr({\n                        shape: targetShape\n                    });\n            }\n        },\n\n        _updateCrossText: function (coordSys, point, axisPointerModel) {\n            var crossStyleModel = axisPointerModel.getModel('crossStyle');\n            var textStyleModel = crossStyleModel.getModel('textStyle');\n\n            var tooltipModel = this._tooltipModel;\n\n            var text = this._crossText;\n            if (!text) {\n                text = this._crossText = new graphic.Text({\n                    style: {\n                        textAlign: 'left',\n                        textVerticalAlign: 'bottom'\n                    }\n                });\n                this.group.add(text);\n            }\n\n            var value = coordSys.pointToData(point);\n\n            var dims = coordSys.dimensions;\n            value = zrUtil.map(value, function (val, idx) {\n                var axis = coordSys.getAxis(dims[idx]);\n                if (axis.type === 'category' || axis.type === 'time') {\n                    val = axis.scale.getLabel(val);\n                }\n                else {\n                    val = formatUtil.addCommas(\n                        val.toFixed(axis.getPixelPrecision())\n                    );\n                }\n                return val;\n            });\n\n            text.setStyle({\n                fill: textStyleModel.getTextColor() || crossStyleModel.get('color'),\n                textFont: textStyleModel.getFont(),\n                text: value.join(', '),\n                x: point[0] + 5,\n                y: point[1] - 5\n            });\n            text.z = tooltipModel.get('z');\n            text.zlevel = tooltipModel.get('zlevel');\n        },\n\n        _getPointerElement: function (coordSys, pointerModel, axisType, initShape) {\n            var tooltipModel = this._tooltipModel;\n            var z = tooltipModel.get('z');\n            var zlevel = tooltipModel.get('zlevel');\n            var axisPointers = this._axisPointers;\n            var coordSysName = coordSys.name;\n            axisPointers[coordSysName] = axisPointers[coordSysName] || {};\n            if (axisPointers[coordSysName][axisType]) {\n                return axisPointers[coordSysName][axisType];\n            }\n\n            // Create if not exists\n            var pointerType = pointerModel.get('type');\n            var styleModel = pointerModel.getModel(pointerType + 'Style');\n            var isShadow = pointerType === 'shadow';\n            var style = styleModel[isShadow ? 'getAreaStyle' : 'getLineStyle']();\n\n            var elementType = coordSys.type === 'polar'\n                ? (isShadow ? 'Sector' : (axisType === 'radius' ? 'Circle' : 'Line'))\n                : (isShadow ? 'Rect' : 'Line');\n\n            isShadow ? (style.stroke = null) : (style.fill = null);\n\n            var el = axisPointers[coordSysName][axisType] = new graphic[elementType]({\n                style: style,\n                z: z,\n                zlevel: zlevel,\n                silent: true,\n                shape: initShape\n            });\n\n            this.group.add(el);\n            return el;\n        },\n\n        /**\n         * Dispatch actions and show tooltip on series\n         * @param {Array.<module:echarts/model/Series>} seriesList\n         * @param {Array.<number>} point\n         * @param {Array.<number>} value\n         * @param {boolean} contentNotChange\n         * @param {Array.<number>|string|Function} [positionExpr]\n         */\n        _dispatchAndShowSeriesTooltipContent: function (\n            coordSys, seriesList, point, value, contentNotChange, positionExpr\n        ) {\n\n            var rootTooltipModel = this._tooltipModel;\n\n            var baseAxis = coordSys.getBaseAxis();\n            var baseDimIndex = ({x: 1, radius: 1, single: 1})[baseAxis.dim] ? 0 : 1;\n\n            if (!seriesList.length) {\n                return;\n            }\n\n            var payloadBatch = zrUtil.map(seriesList, function (series) {\n                return {\n                    seriesIndex: series.seriesIndex,\n                    dataIndexInside: series.getAxisTooltipDataIndex\n                        ? series.getAxisTooltipDataIndex(series.coordDimToDataDim(baseAxis.dim), value, baseAxis)\n                        : series.getData().indexOfNearest(\n                            series.coordDimToDataDim(baseAxis.dim)[0],\n                            value[baseDimIndex],\n                            // Add a threshold to avoid find the wrong dataIndex when data length is not same\n                            false, baseAxis.type === 'category' ? 0.5 : null\n                        )\n                };\n            });\n            var sampleSeriesIndex;\n            zrUtil.each(payloadBatch, function (payload, idx) {\n                if (seriesList[idx].getData().hasValue(payload.dataIndexInside)) {\n                    sampleSeriesIndex = idx;\n                }\n            });\n            // Fallback to 0.\n            sampleSeriesIndex = sampleSeriesIndex || 0;\n\n            var lastHover = this._lastHover;\n            var api = this._api;\n            // Dispatch downplay action\n            if (lastHover.payloadBatch && !contentNotChange) {\n                api.dispatchAction({\n                    type: 'downplay',\n                    batch: lastHover.payloadBatch\n                });\n            }\n            // Dispatch highlight action\n            if (!contentNotChange) {\n                api.dispatchAction({\n                    type: 'highlight',\n                    batch: payloadBatch\n                });\n                lastHover.payloadBatch = payloadBatch;\n            }\n            // Dispatch showTip action\n            var dataIndex = payloadBatch[sampleSeriesIndex].dataIndexInside;\n            api.dispatchAction({\n                type: 'showTip',\n                dataIndexInside: dataIndex,\n                // expose to user.\n                dataIndex: seriesList[sampleSeriesIndex].getData().getRawIndex(dataIndex),\n                seriesIndex: payloadBatch[sampleSeriesIndex].seriesIndex,\n                from: this.uid\n            });\n\n            if (baseAxis && rootTooltipModel.get('showContent') && rootTooltipModel.get('show')) {\n                var paramsList = zrUtil.map(seriesList, function (series, index) {\n                    return series.getDataParams(payloadBatch[index].dataIndexInside);\n                });\n\n                if (!contentNotChange) {\n                    // Update html content\n                    var firstDataIndex = payloadBatch[sampleSeriesIndex].dataIndexInside;\n\n                    // Default tooltip content\n                    // FIXME\n                    // (1) shold be the first data which has name?\n                    // (2) themeRiver, firstDataIndex is array, and first line is unnecessary.\n                    var firstLine = baseAxis.type === 'time'\n                        ? baseAxis.scale.getLabel(value[baseDimIndex])\n                        : seriesList[sampleSeriesIndex].getData().getName(firstDataIndex);\n                    var defaultHtml = (firstLine ? formatUtil.encodeHTML(firstLine) + '<br />' : '')\n                        + zrUtil.map(seriesList, function (series, index) {\n                            return series.formatTooltip(payloadBatch[index].dataIndexInside, true);\n                        }).join('<br />');\n\n                    var asyncTicket = 'axis_' + coordSys.name + '_' + firstDataIndex;\n\n                    this._showTooltipContent(\n                        rootTooltipModel, defaultHtml, paramsList, asyncTicket,\n                        point[0], point[1], positionExpr, null, api\n                    );\n                }\n                else {\n                    updatePosition(\n                        positionExpr || rootTooltipModel.get('position'),\n                        point[0], point[1],\n                        rootTooltipModel.get('confine'),\n                        this._tooltipContent, paramsList, null, api\n                    );\n                }\n            }\n        },\n\n        /**\n         * Show tooltip on item\n         * @param {module:echarts/model/Series} seriesModel\n         * @param {number} dataIndex\n         * @param {string} dataType\n         * @param {Object} e\n         */\n        _showItemTooltipContent: function (seriesModel, dataIndex, dataType, e) {\n            // FIXME Graph data\n            var api = this._api;\n            var data = seriesModel.getData(dataType);\n            var itemModel = data.getItemModel(dataIndex);\n\n            var tooltipOpt = itemModel.get('tooltip', true);\n            if (typeof tooltipOpt === 'string') {\n                // In each data item tooltip can be simply write:\n                // {\n                //  value: 10,\n                //  tooltip: 'Something you need to know'\n                // }\n                var tooltipContent = tooltipOpt;\n                tooltipOpt = {\n                    formatter: tooltipContent\n                };\n            }\n            var rootTooltipModel = this._tooltipModel;\n            var seriesTooltipModel = seriesModel.getModel(\n                'tooltip', rootTooltipModel\n            );\n            var tooltipModel = new Model(tooltipOpt, seriesTooltipModel, seriesTooltipModel.ecModel);\n\n            var params = seriesModel.getDataParams(dataIndex, dataType);\n            var defaultHtml = seriesModel.formatTooltip(dataIndex, false, dataType);\n\n            var asyncTicket = 'item_' + seriesModel.name + '_' + dataIndex;\n\n            this._showTooltipContent(\n                tooltipModel, defaultHtml, params, asyncTicket,\n                e.offsetX, e.offsetY, e.position, e.target, api\n            );\n        },\n\n        _showTooltipContent: function (\n            tooltipModel, defaultHtml, params, asyncTicket, x, y, positionExpr, target, api\n        ) {\n            // Reset ticket\n            this._ticket = '';\n\n            if (tooltipModel.get('showContent') && tooltipModel.get('show')) {\n                var tooltipContent = this._tooltipContent;\n                var confine = tooltipModel.get('confine');\n\n                var formatter = tooltipModel.get('formatter');\n                positionExpr = positionExpr || tooltipModel.get('position');\n                var html = defaultHtml;\n\n                if (formatter) {\n                    if (typeof formatter === 'string') {\n                        html = formatUtil.formatTpl(formatter, params, true);\n                    }\n                    else if (typeof formatter === 'function') {\n                        var self = this;\n                        var ticket = asyncTicket;\n                        var callback = function (cbTicket, html) {\n                            if (cbTicket === self._ticket) {\n                                tooltipContent.setContent(html);\n\n                                updatePosition(\n                                    positionExpr, x, y, confine,\n                                    tooltipContent, params, target, api\n                                );\n                            }\n                        };\n                        self._ticket = ticket;\n                        html = formatter(params, ticket, callback);\n                    }\n                }\n\n                tooltipContent.show(tooltipModel);\n                tooltipContent.setContent(html);\n\n                updatePosition(\n                    positionExpr, x, y, confine,\n                    tooltipContent, params, target, api\n                );\n            }\n        },\n\n        /**\n         * Show axis pointer\n         * @param {string} [coordSysName]\n         */\n        _showAxisPointer: function (coordSysName) {\n            if (coordSysName) {\n                var axisPointers = this._axisPointers[coordSysName];\n                axisPointers && zrUtil.each(axisPointers, function (el) {\n                    el.show();\n                });\n            }\n            else {\n                this.group.eachChild(function (child) {\n                    child.show();\n                });\n                this.group.show();\n            }\n        },\n\n        _resetLastHover: function () {\n            var lastHover = this._lastHover;\n            if (lastHover.payloadBatch) {\n                this._api.dispatchAction({\n                    type: 'downplay',\n                    batch: lastHover.payloadBatch\n                });\n            }\n            // Reset lastHover\n            this._lastHover = {};\n        },\n        /**\n         * Hide axis pointer\n         * @param {string} [coordSysName]\n         */\n        _hideAxisPointer: function (coordSysName) {\n            if (coordSysName) {\n                var axisPointers = this._axisPointers[coordSysName];\n                axisPointers && zrUtil.each(axisPointers, function (el) {\n                    el.hide();\n                });\n            }\n            else {\n                if (this.group.children().length) {\n                    this.group.hide();\n                }\n            }\n        },\n\n        _hide: function () {\n            clearTimeout(this._showTimeout);\n\n            this._hideAxisPointer();\n            this._resetLastHover();\n            if (!this._alwaysShowContent) {\n                this._tooltipContent.hideLater(this._tooltipModel.get('hideDelay'));\n            }\n\n            this._api.dispatchAction({\n                type: 'hideTip',\n                from: this.uid\n            });\n\n            this._lastX = this._lastY = null;\n        },\n\n        dispose: function (ecModel, api) {\n            if (env.node) {\n                return;\n            }\n            var zr = api.getZr();\n            this._tooltipContent.hide();\n\n            zr.off('click', this._tryShow);\n            zr.off('mousemove', this._mousemove);\n            zr.off('mouseout', this._hide);\n            zr.off('globalout', this._hide);\n        }\n    });\n\n\n/***/ }),\n/* 564 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var numberUtil = __webpack_require__(465);\n    var linearMap = numberUtil.linearMap;\n    var zrUtil = __webpack_require__(460);\n\n    function fixExtentWithBands(extent, nTick) {\n        var size = extent[1] - extent[0];\n        var len = nTick;\n        var margin = size / len / 2;\n        extent[0] += margin;\n        extent[1] -= margin;\n    }\n\n    var normalizedExtent = [0, 1];\n    /**\n     * @name module:echarts/coord/CartesianAxis\n     * @constructor\n     */\n    var Axis = function (dim, scale, extent) {\n\n        /**\n         * Axis dimension. Such as 'x', 'y', 'z', 'angle', 'radius'\n         * @type {string}\n         */\n        this.dim = dim;\n\n        /**\n         * Axis scale\n         * @type {module:echarts/coord/scale/*}\n         */\n        this.scale = scale;\n\n        /**\n         * @type {Array.<number>}\n         * @private\n         */\n        this._extent = extent || [0, 0];\n\n        /**\n         * @type {boolean}\n         */\n        this.inverse = false;\n\n        /**\n         * Usually true when axis has a ordinal scale\n         * @type {boolean}\n         */\n        this.onBand = false;\n    };\n\n    Axis.prototype = {\n\n        constructor: Axis,\n\n        /**\n         * If axis extent contain given coord\n         * @param {number} coord\n         * @return {boolean}\n         */\n        contain: function (coord) {\n            var extent = this._extent;\n            var min = Math.min(extent[0], extent[1]);\n            var max = Math.max(extent[0], extent[1]);\n            return coord >= min && coord <= max;\n        },\n\n        /**\n         * If axis extent contain given data\n         * @param {number} data\n         * @return {boolean}\n         */\n        containData: function (data) {\n            return this.contain(this.dataToCoord(data));\n        },\n\n        /**\n         * Get coord extent.\n         * @return {Array.<number>}\n         */\n        getExtent: function () {\n            var ret = this._extent.slice();\n            return ret;\n        },\n\n        /**\n         * Get precision used for formatting\n         * @param {Array.<number>} [dataExtent]\n         * @return {number}\n         */\n        getPixelPrecision: function (dataExtent) {\n            return numberUtil.getPixelPrecision(\n                dataExtent || this.scale.getExtent(),\n                this._extent\n            );\n        },\n\n        /**\n         * Set coord extent\n         * @param {number} start\n         * @param {number} end\n         */\n        setExtent: function (start, end) {\n            var extent = this._extent;\n            extent[0] = start;\n            extent[1] = end;\n        },\n\n        /**\n         * Convert data to coord. Data is the rank if it has a ordinal scale\n         * @param {number} data\n         * @param  {boolean} clamp\n         * @return {number}\n         */\n        dataToCoord: function (data, clamp) {\n            var extent = this._extent;\n            var scale = this.scale;\n            data = scale.normalize(data);\n\n            if (this.onBand && scale.type === 'ordinal') {\n                extent = extent.slice();\n                fixExtentWithBands(extent, scale.count());\n            }\n\n            return linearMap(data, normalizedExtent, extent, clamp);\n        },\n\n        /**\n         * Convert coord to data. Data is the rank if it has a ordinal scale\n         * @param {number} coord\n         * @param  {boolean} clamp\n         * @return {number}\n         */\n        coordToData: function (coord, clamp) {\n            var extent = this._extent;\n            var scale = this.scale;\n\n            if (this.onBand && scale.type === 'ordinal') {\n                extent = extent.slice();\n                fixExtentWithBands(extent, scale.count());\n            }\n\n            var t = linearMap(coord, extent, normalizedExtent, clamp);\n\n            return this.scale.scale(t);\n        },\n        /**\n         * @return {Array.<number>}\n         */\n        getTicksCoords: function (alignWithLabel) {\n            if (this.onBand && !alignWithLabel) {\n                var bands = this.getBands();\n                var coords = [];\n                for (var i = 0; i < bands.length; i++) {\n                    coords.push(bands[i][0]);\n                }\n                if (bands[i - 1]) {\n                    coords.push(bands[i - 1][1]);\n                }\n                return coords;\n            }\n            else {\n                return zrUtil.map(this.scale.getTicks(), this.dataToCoord, this);\n            }\n        },\n\n        /**\n         * Coords of labels are on the ticks or on the middle of bands\n         * @return {Array.<number>}\n         */\n        getLabelsCoords: function () {\n            return zrUtil.map(this.scale.getTicks(), this.dataToCoord, this);\n        },\n\n        /**\n         * Get bands.\n         *\n         * If axis has labels [1, 2, 3, 4]. Bands on the axis are\n         * |---1---|---2---|---3---|---4---|.\n         *\n         * @return {Array}\n         */\n         // FIXME Situation when labels is on ticks\n        getBands: function () {\n            var extent = this.getExtent();\n            var bands = [];\n            var len = this.scale.count();\n            var start = extent[0];\n            var end = extent[1];\n            var span = end - start;\n\n            for (var i = 0; i < len; i++) {\n                bands.push([\n                    span * i / len + start,\n                    span * (i + 1) / len + start\n                ]);\n            }\n            return bands;\n        },\n\n        /**\n         * Get width of band\n         * @return {number}\n         */\n        getBandWidth: function () {\n            var axisExtent = this._extent;\n            var dataExtent = this.scale.getExtent();\n\n            var len = dataExtent[1] - dataExtent[0] + (this.onBand ? 1 : 0);\n            // Fix #2728, avoid NaN when only one data.\n            len === 0 && (len = 1);\n\n            var size = Math.abs(axisExtent[1] - axisExtent[0]);\n\n            return Math.abs(size) / len;\n        },\n\n        /**\n         * When axis extent depends on data and no data exists,\n         * axis ticks should not be drawn, which is named 'blank'.\n         */\n        isBlank: function () {\n            return this._isBlank;\n        },\n\n        /**\n         * When axis extent depends on data and no data exists,\n         * axis ticks should not be drawn, which is named 'blank'.\n         */\n        setBlank: function (isBlank) {\n            this._isBlank = isBlank;\n        }\n\n    };\n\n    module.exports = Axis;\n\n\n/***/ }),\n/* 565 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var zrUtil = __webpack_require__(460);\n\n    var defaultOption = {\n        show: true,\n        zlevel: 0,                  // 一级层叠\n        z: 0,                       // 二级层叠\n        // 反向坐标轴\n        inverse: false,\n\n        // 坐标轴名字，默认为空\n        name: '',\n        // 坐标轴名字位置，支持'start' | 'middle' | 'end'\n        nameLocation: 'end',\n        // 坐标轴名字旋转，degree。\n        nameRotate: null, // Adapt to axis rotate, when nameLocation is 'middle'.\n        nameTruncate: {\n            maxWidth: null,\n            ellipsis: '...',\n            placeholder: '.'\n        },\n        // 坐标轴文字样式，默认取全局样式\n        nameTextStyle: {},\n        // 文字与轴线距离\n        nameGap: 15,\n\n        silent: false, // Default false to support tooltip.\n        triggerEvent: false, // Default false to avoid legacy user event listener fail.\n\n        tooltip: {\n            show: false\n        },\n\n        // 坐标轴线\n        axisLine: {\n            // 默认显示，属性show控制显示与否\n            show: true,\n            onZero: true,\n            // 属性lineStyle控制线条样式\n            lineStyle: {\n                color: '#333',\n                width: 1,\n                type: 'solid'\n            }\n        },\n        // 坐标轴小标记\n        axisTick: {\n            // 属性show控制显示与否，默认显示\n            show: true,\n            // 控制小标记是否在grid里\n            inside: false,\n            // 属性length控制线长\n            length: 5,\n            // 属性lineStyle控制线条样式\n            lineStyle: {\n                width: 1\n            }\n        },\n        // 坐标轴文本标签，详见axis.axisLabel\n        axisLabel: {\n            show: true,\n            // 控制文本标签是否在grid里\n            inside: false,\n            rotate: 0,\n            margin: 8,\n            // formatter: null,\n            // 其余属性默认使用全局文本样式，详见TEXTSTYLE\n            textStyle: {\n                fontSize: 12\n            }\n        },\n        // 分隔线\n        splitLine: {\n            // 默认显示，属性show控制显示与否\n            show: true,\n            // 属性lineStyle（详见lineStyle）控制线条样式\n            lineStyle: {\n                color: ['#ccc'],\n                width: 1,\n                type: 'solid'\n            }\n        },\n        // 分隔区域\n        splitArea: {\n            // 默认不显示，属性show控制显示与否\n            show: false,\n            // 属性areaStyle（详见areaStyle）控制区域样式\n            areaStyle: {\n                color: ['rgba(250,250,250,0.3)','rgba(200,200,200,0.3)']\n            }\n        }\n    };\n\n    var categoryAxis = zrUtil.merge({\n        // 类目起始和结束两端空白策略\n        boundaryGap: true,\n        // splitArea: {\n            // show: false\n        // },\n        splitLine: {\n            show: false\n        },\n        // 坐标轴小标记\n        axisTick: {\n            // If tick is align with label when boundaryGap is true\n            // Default with axisTick\n            alignWithLabel: false,\n            interval: 'auto'\n        },\n        // 坐标轴文本标签，详见axis.axisLabel\n        axisLabel: {\n            interval: 'auto'\n        }\n    }, defaultOption);\n\n    var valueAxis = zrUtil.merge({\n        // 数值起始和结束两端空白策略\n        boundaryGap: [0, 0],\n        // 最小值, 设置成 'dataMin' 则从数据中计算最小值\n        // min: null,\n        // 最大值，设置成 'dataMax' 则从数据中计算最大值\n        // max: null,\n        // Readonly prop, specifies start value of the range when using data zoom.\n        // rangeStart: null\n        // Readonly prop, specifies end value of the range when using data zoom.\n        // rangeEnd: null\n        // 脱离0值比例，放大聚焦到最终_min，_max区间\n        // scale: false,\n        // 分割段数，默认为5\n        splitNumber: 5\n        // Minimum interval\n        // minInterval: null\n    }, defaultOption);\n\n    // FIXME\n    var timeAxis = zrUtil.defaults({\n        scale: true,\n        min: 'dataMin',\n        max: 'dataMax'\n    }, valueAxis);\n    var logAxis = zrUtil.defaults({\n        logBase: 10\n    }, valueAxis);\n    logAxis.scale = true;\n\n    module.exports = {\n        categoryAxis: categoryAxis,\n        valueAxis: valueAxis,\n        timeAxis: timeAxis,\n        logAxis: logAxis\n    };\n\n\n/***/ }),\n/* 566 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var zrUtil = __webpack_require__(460);\n    var axisHelper = __webpack_require__(494);\n\n    function getName(obj) {\n        if (zrUtil.isObject(obj) && obj.value != null) {\n            return obj.value;\n        }\n        else {\n            return obj;\n        }\n    }\n\n    module.exports = {\n\n        /**\n         * Format labels\n         * @return {Array.<string>}\n         */\n        getFormattedLabels: function () {\n            return axisHelper.getFormattedLabels(\n                this.axis,\n                this.get('axisLabel.formatter')\n            );\n        },\n\n        /**\n         * Get categories\n         */\n        getCategories: function () {\n            return this.get('type') === 'category'\n                && zrUtil.map(this.get('data'), getName);\n        },\n\n        /**\n         * @param {boolean} origin\n         * @return {number|string} min value or 'dataMin' or null/undefined (means auto) or NaN\n         */\n        getMin: function (origin) {\n            var option = this.option;\n            var min = (!origin && option.rangeStart != null)\n                ? option.rangeStart : option.min;\n\n            if (min != null && min !== 'dataMin' && !zrUtil.eqNaN(min)) {\n                min = this.axis.scale.parse(min);\n            }\n            return min;\n        },\n\n        /**\n         * @param {boolean} origin\n         * @return {number|string} max value or 'dataMax' or null/undefined (means auto) or NaN\n         */\n        getMax: function (origin) {\n            var option = this.option;\n            var max = (!origin && option.rangeEnd != null)\n                ? option.rangeEnd : option.max;\n\n            if (max != null && max !== 'dataMax' && !zrUtil.eqNaN(max)) {\n                max = this.axis.scale.parse(max);\n            }\n            return max;\n        },\n\n        /**\n         * @return {boolean}\n         */\n        getNeedCrossZero: function () {\n            var option = this.option;\n            return (option.rangeStart != null || option.rangeEnd != null)\n                ? false : !option.scale;\n        },\n\n        /**\n         * Should be implemented by each axis model if necessary.\n         * @return {module:echarts/model/Component} coordinate system model\n         */\n        getCoordSysModel: zrUtil.noop,\n\n        /**\n         * @param {number} rangeStart Can only be finite number or null/undefined or NaN.\n         * @param {number} rangeEnd Can only be finite number or null/undefined or NaN.\n         */\n        setRange: function (rangeStart, rangeEnd) {\n            this.option.rangeStart = rangeStart;\n            this.option.rangeEnd = rangeEnd;\n        },\n\n        /**\n         * Reset range\n         */\n        resetRange: function () {\n            // rangeStart and rangeEnd is readonly.\n            this.option.rangeStart = this.option.rangeEnd = null;\n        }\n    };\n\n\n/***/ }),\n/* 567 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var axisDefault = __webpack_require__(565);\n    var zrUtil = __webpack_require__(460);\n    var ComponentModel = __webpack_require__(472);\n    var layout = __webpack_require__(475);\n\n    // FIXME axisType is fixed ?\n    var AXIS_TYPES = ['value', 'category', 'time', 'log'];\n\n    /**\n     * Generate sub axis model class\n     * @param {string} axisName 'x' 'y' 'radius' 'angle' 'parallel'\n     * @param {module:echarts/model/Component} BaseAxisModelClass\n     * @param {Function} axisTypeDefaulter\n     * @param {Object} [extraDefaultOption]\n     */\n    module.exports = function (axisName, BaseAxisModelClass, axisTypeDefaulter, extraDefaultOption) {\n\n        zrUtil.each(AXIS_TYPES, function (axisType) {\n\n            BaseAxisModelClass.extend({\n\n                type: axisName + 'Axis.' + axisType,\n\n                mergeDefaultAndTheme: function (option, ecModel) {\n                    var layoutMode = this.layoutMode;\n                    var inputPositionParams = layoutMode\n                        ? layout.getLayoutParams(option) : {};\n\n                    var themeModel = ecModel.getTheme();\n                    zrUtil.merge(option, themeModel.get(axisType + 'Axis'));\n                    zrUtil.merge(option, this.getDefaultOption());\n\n                    option.type = axisTypeDefaulter(axisName, option);\n\n                    if (layoutMode) {\n                        layout.mergeLayoutParam(option, inputPositionParams, layoutMode);\n                    }\n                },\n\n                defaultOption: zrUtil.mergeAll(\n                    [\n                        {},\n                        axisDefault[axisType + 'Axis'],\n                        extraDefaultOption\n                    ],\n                    true\n                )\n            });\n        });\n\n        ComponentModel.registerSubTypeDefaulter(\n            axisName + 'Axis',\n            zrUtil.curry(axisTypeDefaulter, axisName)\n        );\n    };\n\n\n/***/ }),\n/* 568 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var zrUtil = __webpack_require__(460);\n    var Axis = __webpack_require__(564);\n    var axisLabelInterval = __webpack_require__(572);\n\n    /**\n     * Extend axis 2d\n     * @constructor module:echarts/coord/cartesian/Axis2D\n     * @extends {module:echarts/coord/cartesian/Axis}\n     * @param {string} dim\n     * @param {*} scale\n     * @param {Array.<number>} coordExtent\n     * @param {string} axisType\n     * @param {string} position\n     */\n    var Axis2D = function (dim, scale, coordExtent, axisType, position) {\n        Axis.call(this, dim, scale, coordExtent);\n        /**\n         * Axis type\n         *  - 'category'\n         *  - 'value'\n         *  - 'time'\n         *  - 'log'\n         * @type {string}\n         */\n        this.type = axisType || 'value';\n\n        /**\n         * Axis position\n         *  - 'top'\n         *  - 'bottom'\n         *  - 'left'\n         *  - 'right'\n         */\n        this.position = position || 'bottom';\n    };\n\n    Axis2D.prototype = {\n\n        constructor: Axis2D,\n\n        /**\n         * Index of axis, can be used as key\n         */\n        index: 0,\n        /**\n         * If axis is on the zero position of the other axis\n         * @type {boolean}\n         */\n        onZero: false,\n\n        /**\n         * Axis model\n         * @param {module:echarts/coord/cartesian/AxisModel}\n         */\n        model: null,\n\n        isHorizontal: function () {\n            var position = this.position;\n            return position === 'top' || position === 'bottom';\n        },\n\n        getGlobalExtent: function () {\n            var ret = this.getExtent();\n            ret[0] = this.toGlobalCoord(ret[0]);\n            ret[1] = this.toGlobalCoord(ret[1]);\n            return ret;\n        },\n\n        /**\n         * @return {number}\n         */\n        getLabelInterval: function () {\n            var labelInterval = this._labelInterval;\n            if (!labelInterval) {\n                labelInterval = this._labelInterval = axisLabelInterval(this);\n            }\n            return labelInterval;\n        },\n\n        /**\n         * If label is ignored.\n         * Automatically used when axis is category and label can not be all shown\n         * @param  {number}  idx\n         * @return {boolean}\n         */\n        isLabelIgnored: function (idx) {\n            if (this.type === 'category') {\n                var labelInterval = this.getLabelInterval();\n                return ((typeof labelInterval === 'function')\n                    && !labelInterval(idx, this.scale.getLabel(idx)))\n                    || idx % (labelInterval + 1);\n            }\n        },\n\n        /**\n         * Transform global coord to local coord,\n         * i.e. var localCoord = axis.toLocalCoord(80);\n         * designate by module:echarts/coord/cartesian/Grid.\n         * @type {Function}\n         */\n        toLocalCoord: null,\n\n        /**\n         * Transform global coord to local coord,\n         * i.e. var globalCoord = axis.toLocalCoord(40);\n         * designate by module:echarts/coord/cartesian/Grid.\n         * @type {Function}\n         */\n        toGlobalCoord: null\n\n    };\n    zrUtil.inherits(Axis2D, Axis);\n\n    module.exports = Axis2D;\n\n\n/***/ }),\n/* 569 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * Cartesian coordinate system\n * @module  echarts/coord/Cartesian\n *\n */\n\n\n    var zrUtil = __webpack_require__(460);\n\n    function dimAxisMapper(dim) {\n        return this._axes[dim];\n    }\n\n    /**\n     * @alias module:echarts/coord/Cartesian\n     * @constructor\n     */\n    var Cartesian = function (name) {\n        this._axes = {};\n\n        this._dimList = [];\n\n        /**\n         * @type {string}\n         */\n        this.name = name || '';\n    };\n\n    Cartesian.prototype = {\n\n        constructor: Cartesian,\n\n        type: 'cartesian',\n\n        /**\n         * Get axis\n         * @param  {number|string} dim\n         * @return {module:echarts/coord/Cartesian~Axis}\n         */\n        getAxis: function (dim) {\n            return this._axes[dim];\n        },\n\n        /**\n         * Get axes list\n         * @return {Array.<module:echarts/coord/Cartesian~Axis>}\n         */\n        getAxes: function () {\n            return zrUtil.map(this._dimList, dimAxisMapper, this);\n        },\n\n        /**\n         * Get axes list by given scale type\n         */\n        getAxesByScale: function (scaleType) {\n            scaleType = scaleType.toLowerCase();\n            return zrUtil.filter(\n                this.getAxes(),\n                function (axis) {\n                    return axis.scale.type === scaleType;\n                }\n            );\n        },\n\n        /**\n         * Add axis\n         * @param {module:echarts/coord/Cartesian.Axis}\n         */\n        addAxis: function (axis) {\n            var dim = axis.dim;\n\n            this._axes[dim] = axis;\n\n            this._dimList.push(dim);\n        },\n\n        /**\n         * Convert data to coord in nd space\n         * @param {Array.<number>|Object.<string, number>} val\n         * @return {Array.<number>|Object.<string, number>}\n         */\n        dataToCoord: function (val) {\n            return this._dataCoordConvert(val, 'dataToCoord');\n        },\n\n        /**\n         * Convert coord in nd space to data\n         * @param  {Array.<number>|Object.<string, number>} val\n         * @return {Array.<number>|Object.<string, number>}\n         */\n        coordToData: function (val) {\n            return this._dataCoordConvert(val, 'coordToData');\n        },\n\n        _dataCoordConvert: function (input, method) {\n            var dimList = this._dimList;\n\n            var output = input instanceof Array ? [] : {};\n\n            for (var i = 0; i < dimList.length; i++) {\n                var dim = dimList[i];\n                var axis = this._axes[dim];\n\n                output[dim] = axis[method](input[dim]);\n            }\n\n            return output;\n        }\n    };\n\n    module.exports = Cartesian;\n\n\n/***/ }),\n/* 570 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n\n    var zrUtil = __webpack_require__(460);\n    var Cartesian = __webpack_require__(569);\n\n    function Cartesian2D(name) {\n\n        Cartesian.call(this, name);\n    }\n\n    Cartesian2D.prototype = {\n\n        constructor: Cartesian2D,\n\n        type: 'cartesian2d',\n\n        /**\n         * @type {Array.<string>}\n         * @readOnly\n         */\n        dimensions: ['x', 'y'],\n\n        /**\n         * Base axis will be used on stacking.\n         *\n         * @return {module:echarts/coord/cartesian/Axis2D}\n         */\n        getBaseAxis: function () {\n            return this.getAxesByScale('ordinal')[0]\n                || this.getAxesByScale('time')[0]\n                || this.getAxis('x');\n        },\n\n        /**\n         * If contain point\n         * @param {Array.<number>} point\n         * @return {boolean}\n         */\n        containPoint: function (point) {\n            var axisX = this.getAxis('x');\n            var axisY = this.getAxis('y');\n            return axisX.contain(axisX.toLocalCoord(point[0]))\n                && axisY.contain(axisY.toLocalCoord(point[1]));\n        },\n\n        /**\n         * If contain data\n         * @param {Array.<number>} data\n         * @return {boolean}\n         */\n        containData: function (data) {\n            return this.getAxis('x').containData(data[0])\n                && this.getAxis('y').containData(data[1]);\n        },\n\n        /**\n         * Convert series data to an array of points\n         * @param {module:echarts/data/List} data\n         * @param {boolean} stack\n         * @return {Array}\n         *  Return array of points. For example:\n         *  `[[10, 10], [20, 20], [30, 30]]`\n         */\n        dataToPoints: function (data, stack) {\n            return data.mapArray(['x', 'y'], function (x, y) {\n                return this.dataToPoint([x, y]);\n            }, stack, this);\n        },\n\n        /**\n         * @param {Array.<number>} data\n         * @param {boolean} [clamp=false]\n         * @return {Array.<number>}\n         */\n        dataToPoint: function (data, clamp) {\n            var xAxis = this.getAxis('x');\n            var yAxis = this.getAxis('y');\n            return [\n                xAxis.toGlobalCoord(xAxis.dataToCoord(data[0], clamp)),\n                yAxis.toGlobalCoord(yAxis.dataToCoord(data[1], clamp))\n            ];\n        },\n\n        /**\n         * @param {Array.<number>} point\n         * @param {boolean} [clamp=false]\n         * @return {Array.<number>}\n         */\n        pointToData: function (point, clamp) {\n            var xAxis = this.getAxis('x');\n            var yAxis = this.getAxis('y');\n            return [\n                xAxis.coordToData(xAxis.toLocalCoord(point[0]), clamp),\n                yAxis.coordToData(yAxis.toLocalCoord(point[1]), clamp)\n            ];\n        },\n\n        /**\n         * Get other axis\n         * @param {module:echarts/coord/cartesian/Axis2D} axis\n         */\n        getOtherAxis: function (axis) {\n            return this.getAxis(axis.dim === 'x' ? 'y' : 'x');\n        }\n    };\n\n    zrUtil.inherits(Cartesian2D, Cartesian);\n\n    module.exports = Cartesian2D;\n\n\n/***/ }),\n/* 571 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n// Grid 是在有直角坐标系的时候必须要存在的\n// 所以这里也要被 Cartesian2D 依赖\n\n\n    __webpack_require__(505);\n    var ComponentModel = __webpack_require__(472);\n\n    module.exports = ComponentModel.extend({\n\n        type: 'grid',\n\n        dependencies: ['xAxis', 'yAxis'],\n\n        layoutMode: 'box',\n\n        /**\n         * @type {module:echarts/coord/cartesian/Grid}\n         */\n        coordinateSystem: null,\n\n        defaultOption: {\n            show: false,\n            zlevel: 0,\n            z: 0,\n            left: '10%',\n            top: 60,\n            right: '10%',\n            bottom: 60,\n            // If grid size contain label\n            containLabel: false,\n            // width: {totalWidth} - left - right,\n            // height: {totalHeight} - top - bottom,\n            backgroundColor: 'rgba(0,0,0,0)',\n            borderWidth: 1,\n            borderColor: '#ccc'\n        }\n    });\n\n\n/***/ }),\n/* 572 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * Helper function for axisLabelInterval calculation\n */\n\n\n\n    var zrUtil = __webpack_require__(460);\n    var axisHelper = __webpack_require__(494);\n\n    module.exports = function (axis) {\n        var axisModel = axis.model;\n        var labelModel = axisModel.getModel('axisLabel');\n        var labelInterval = labelModel.get('interval');\n        if (!(axis.type === 'category' && labelInterval === 'auto')) {\n            return labelInterval === 'auto' ? 0 : labelInterval;\n        }\n\n        return axisHelper.getAxisLabelInterval(\n            zrUtil.map(axis.scale.getTicks(), axis.dataToCoord, axis),\n            axisModel.getFormattedLabels(),\n            labelModel.getModel('textStyle').getFont(),\n            axis.isHorizontal()\n        );\n    };\n\n\n/***/ }),\n/* 573 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n\n    function defaultKeyGetter(item) {\n        return item;\n    }\n\n    function DataDiffer(oldArr, newArr, oldKeyGetter, newKeyGetter) {\n        this._old = oldArr;\n        this._new = newArr;\n\n        this._oldKeyGetter = oldKeyGetter || defaultKeyGetter;\n        this._newKeyGetter = newKeyGetter || defaultKeyGetter;\n    }\n\n    DataDiffer.prototype = {\n\n        constructor: DataDiffer,\n\n        /**\n         * Callback function when add a data\n         */\n        add: function (func) {\n            this._add = func;\n            return this;\n        },\n\n        /**\n         * Callback function when update a data\n         */\n        update: function (func) {\n            this._update = func;\n            return this;\n        },\n\n        /**\n         * Callback function when remove a data\n         */\n        remove: function (func) {\n            this._remove = func;\n            return this;\n        },\n\n        execute: function () {\n            var oldArr = this._old;\n            var newArr = this._new;\n            var oldKeyGetter = this._oldKeyGetter;\n            var newKeyGetter = this._newKeyGetter;\n\n            var oldDataIndexMap = {};\n            var newDataIndexMap = {};\n            var oldDataKeyArr = [];\n            var newDataKeyArr = [];\n            var i;\n\n            initIndexMap(oldArr, oldDataIndexMap, oldDataKeyArr, oldKeyGetter);\n            initIndexMap(newArr, newDataIndexMap, newDataKeyArr, newKeyGetter);\n\n            // Travel by inverted order to make sure order consistency\n            // when duplicate keys exists (consider newDataIndex.pop() below).\n            // For performance consideration, these code below do not look neat.\n            for (i = 0; i < oldArr.length; i++) {\n                var key = oldDataKeyArr[i];\n                var idx = newDataIndexMap[key];\n\n                // idx can never be empty array here. see 'set null' logic below.\n                if (idx != null) {\n                    // Consider there is duplicate key (for example, use dataItem.name as key).\n                    // We should make sure every item in newArr and oldArr can be visited.\n                    var len = idx.length;\n                    if (len) {\n                        len === 1 && (newDataIndexMap[key] = null);\n                        idx = idx.unshift();\n                    }\n                    else {\n                        newDataIndexMap[key] = null;\n                    }\n                    this._update && this._update(idx, i);\n                }\n                else {\n                    this._remove && this._remove(i);\n                }\n            }\n\n            for (var i = 0; i < newDataKeyArr.length; i++) {\n                var key = newDataKeyArr[i];\n                if (newDataIndexMap.hasOwnProperty(key)) {\n                    var idx = newDataIndexMap[key];\n                    if (idx == null) {\n                        continue;\n                    }\n                    // idx can never be empty array here. see 'set null' logic above.\n                    if (!idx.length) {\n                        this._add && this._add(idx);\n                    }\n                    else {\n                        for (var j = 0, len = idx.length; j < len; j++) {\n                            this._add && this._add(idx[j]);\n                        }\n                    }\n                }\n            }\n        }\n    };\n\n    function initIndexMap(arr, map, keyArr, keyGetter) {\n        for (var i = 0; i < arr.length; i++) {\n            var key = keyGetter(arr[i], i);\n            var existence = map[key];\n            if (existence == null) {\n                keyArr.push(key);\n                map[key] = i;\n            }\n            else {\n                if (!existence.length) {\n                    map[key] = existence = [existence];\n                }\n                existence.push(i);\n            }\n        }\n    }\n\n    module.exports = DataDiffer;\n\n\n/***/ }),\n/* 574 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * Complete dimensions by data (guess dimension).\n */\n\n\n    var zrUtil = __webpack_require__(460);\n\n    /**\n     * Complete the dimensions array guessed from the data structure.\n     * @param  {Array.<string>} dimensions      Necessary dimensions, like ['x', 'y']\n     * @param  {Array} data                     Data list. [[1, 2, 3], [2, 3, 4]]\n     * @param  {Array.<string>} [defaultNames]    Default names to fill not necessary dimensions, like ['value']\n     * @param  {string} [extraPrefix]             Prefix of name when filling the left dimensions.\n     * @return {Array.<string>}\n     */\n    function completeDimensions(dimensions, data, defaultNames, extraPrefix) {\n        if (!data) {\n            return dimensions;\n        }\n\n        var value0 = retrieveValue(data[0]);\n        var dimSize = zrUtil.isArray(value0) && value0.length || 1;\n\n        defaultNames = defaultNames || [];\n        extraPrefix = extraPrefix || 'extra';\n        for (var i = 0; i < dimSize; i++) {\n            if (!dimensions[i]) {\n                var name = defaultNames[i] || (extraPrefix + (i - defaultNames.length));\n                dimensions[i] = guessOrdinal(data, i)\n                    ? {type: 'ordinal', name: name}\n                    : name;\n            }\n        }\n\n        return dimensions;\n    }\n\n    // The rule should not be complex, otherwise user might not\n    // be able to known where the data is wrong.\n    var guessOrdinal = completeDimensions.guessOrdinal = function (data, dimIndex) {\n        for (var i = 0, len = data.length; i < len; i++) {\n            var value = retrieveValue(data[i]);\n\n            if (!zrUtil.isArray(value)) {\n                return false;\n            }\n\n            var value = value[dimIndex];\n            if (value != null && isFinite(value)) {\n                return false;\n            }\n            else if (zrUtil.isString(value) && value !== '-') {\n                return true;\n            }\n        }\n        return false;\n    };\n\n    function retrieveValue(o) {\n        return zrUtil.isArray(o) ? o : zrUtil.isObject(o) ? o.value: o;\n    }\n\n    module.exports = completeDimensions;\n\n\n\n/***/ }),\n/* 575 */\n/***/ (function(module, exports) {\n\n\n\n    module.exports = function (seriesType, ecModel) {\n        ecModel.eachSeriesByType(seriesType, function (seriesModel) {\n            var data = seriesModel.getData();\n            var coordSys = seriesModel.coordinateSystem;\n\n            if (coordSys) {\n                var dims = coordSys.dimensions;\n\n                if (coordSys.type === 'singleAxis') {\n                    data.each(dims[0], function (x, idx) {\n                        // Also {Array.<number>}, not undefined to avoid if...else... statement\n                        data.setItemLayout(idx, isNaN(x) ? [NaN, NaN] : coordSys.dataToPoint(x));\n                    });\n                }\n                else {\n                    data.each(dims, function (x, y, idx) {\n                        // Also {Array.<number>}, not undefined to avoid if...else... statement\n                        data.setItemLayout(\n                            idx, (isNaN(x) || isNaN(y)) ? [NaN, NaN] : coordSys.dataToPoint([x, y])\n                        );\n                    }, true);\n                }\n            }\n        });\n    };\n\n\n/***/ }),\n/* 576 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var graphic = __webpack_require__(464);\n    var zrUtil = __webpack_require__(460);\n    var PI = Math.PI;\n    /**\n     * @param {module:echarts/ExtensionAPI} api\n     * @param {Object} [opts]\n     * @param {string} [opts.text]\n     * @param {string} [opts.color]\n     * @param {string} [opts.textColor]\n     * @return {module:zrender/Element}\n     */\n    module.exports = function (api, opts) {\n        opts = opts || {};\n        zrUtil.defaults(opts, {\n            text: 'loading',\n            color: '#c23531',\n            textColor: '#000',\n            maskColor: 'rgba(255, 255, 255, 0.8)',\n            zlevel: 0\n        });\n        var mask = new graphic.Rect({\n            style: {\n                fill: opts.maskColor\n            },\n            zlevel: opts.zlevel,\n            z: 10000\n        });\n        var arc = new graphic.Arc({\n            shape: {\n                startAngle: -PI / 2,\n                endAngle: -PI / 2 + 0.1,\n                r: 10\n            },\n            style: {\n                stroke: opts.color,\n                lineCap: 'round',\n                lineWidth: 5\n            },\n            zlevel: opts.zlevel,\n            z: 10001\n        });\n        var labelRect = new graphic.Rect({\n            style: {\n                fill: 'none',\n                text: opts.text,\n                textPosition: 'right',\n                textDistance: 10,\n                textFill: opts.textColor\n            },\n            zlevel: opts.zlevel,\n            z: 10001\n        });\n\n        arc.animateShape(true)\n            .when(1000, {\n                endAngle: PI * 3 / 2\n            })\n            .start('circularInOut');\n        arc.animateShape(true)\n            .when(1000, {\n                startAngle: PI * 3 / 2\n            })\n            .delay(300)\n            .start('circularInOut');\n\n        var group = new graphic.Group();\n        group.add(arc);\n        group.add(labelRect);\n        group.add(mask);\n        // Inject resize\n        group.resize = function () {\n            var cx = api.getWidth() / 2;\n            var cy = api.getHeight() / 2;\n            arc.setShape({\n                cx: cx,\n                cy: cy\n            });\n            var r = arc.shape.r;\n            labelRect.setShape({\n                x: cx - r,\n                y: cy - r,\n                width: r * 2,\n                height: r * 2\n            });\n\n            mask.setShape({\n                x: 0,\n                y: 0,\n                width: api.getWidth(),\n                height: api.getHeight()\n            });\n        };\n        group.resize();\n        return group;\n    };\n\n\n/***/ }),\n/* 577 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * ECharts global model\n *\n * @module {echarts/model/Global}\n */\n\n\n\n    /**\n     * Caution: If the mechanism should be changed some day, these cases\n     * should be considered:\n     *\n     * (1) In `merge option` mode, if using the same option to call `setOption`\n     * many times, the result should be the same (try our best to ensure that).\n     * (2) In `merge option` mode, if a component has no id/name specified, it\n     * will be merged by index, and the result sequence of the components is\n     * consistent to the original sequence.\n     * (3) `reset` feature (in toolbox). Find detailed info in comments about\n     * `mergeOption` in module:echarts/model/OptionManager.\n     */\n\n    var zrUtil = __webpack_require__(460);\n    var modelUtil = __webpack_require__(469);\n    var Model = __webpack_require__(470);\n    var each = zrUtil.each;\n    var filter = zrUtil.filter;\n    var map = zrUtil.map;\n    var isArray = zrUtil.isArray;\n    var indexOf = zrUtil.indexOf;\n    var isObject = zrUtil.isObject;\n\n    var ComponentModel = __webpack_require__(472);\n\n    var globalDefault = __webpack_require__(579);\n\n    var OPTION_INNER_KEY = '\\0_ec_inner';\n\n    /**\n     * @alias module:echarts/model/Global\n     *\n     * @param {Object} option\n     * @param {module:echarts/model/Model} parentModel\n     * @param {Object} theme\n     */\n    var GlobalModel = Model.extend({\n\n        constructor: GlobalModel,\n\n        init: function (option, parentModel, theme, optionManager) {\n            theme = theme || {};\n\n            this.option = null; // Mark as not initialized.\n\n            /**\n             * @type {module:echarts/model/Model}\n             * @private\n             */\n            this._theme = new Model(theme);\n\n            /**\n             * @type {module:echarts/model/OptionManager}\n             */\n            this._optionManager = optionManager;\n        },\n\n        setOption: function (option, optionPreprocessorFuncs) {\n            zrUtil.assert(\n                !(OPTION_INNER_KEY in option),\n                'please use chart.getOption()'\n            );\n\n            this._optionManager.setOption(option, optionPreprocessorFuncs);\n\n            this.resetOption();\n        },\n\n        /**\n         * @param {string} type null/undefined: reset all.\n         *                      'recreate': force recreate all.\n         *                      'timeline': only reset timeline option\n         *                      'media': only reset media query option\n         * @return {boolean} Whether option changed.\n         */\n        resetOption: function (type) {\n            var optionChanged = false;\n            var optionManager = this._optionManager;\n\n            if (!type || type === 'recreate') {\n                var baseOption = optionManager.mountOption(type === 'recreate');\n\n                if (!this.option || type === 'recreate') {\n                    initBase.call(this, baseOption);\n                }\n                else {\n                    this.restoreData();\n                    this.mergeOption(baseOption);\n                }\n                optionChanged = true;\n            }\n\n            if (type === 'timeline' || type === 'media') {\n                this.restoreData();\n            }\n\n            if (!type || type === 'recreate' || type === 'timeline') {\n                var timelineOption = optionManager.getTimelineOption(this);\n                timelineOption && (this.mergeOption(timelineOption), optionChanged = true);\n            }\n\n            if (!type || type === 'recreate' || type === 'media') {\n                var mediaOptions = optionManager.getMediaOption(this, this._api);\n                if (mediaOptions.length) {\n                    each(mediaOptions, function (mediaOption) {\n                        this.mergeOption(mediaOption, optionChanged = true);\n                    }, this);\n                }\n            }\n\n            return optionChanged;\n        },\n\n        /**\n         * @protected\n         */\n        mergeOption: function (newOption) {\n            var option = this.option;\n            var componentsMap = this._componentsMap;\n            var newCptTypes = [];\n\n            // 如果不存在对应的 component model 则直接 merge\n            each(newOption, function (componentOption, mainType) {\n                if (componentOption == null) {\n                    return;\n                }\n\n                if (!ComponentModel.hasClass(mainType)) {\n                    option[mainType] = option[mainType] == null\n                        ? zrUtil.clone(componentOption)\n                        : zrUtil.merge(option[mainType], componentOption, true);\n                }\n                else {\n                    newCptTypes.push(mainType);\n                }\n            });\n\n            // FIXME OPTION 同步是否要改回原来的\n            ComponentModel.topologicalTravel(\n                newCptTypes, ComponentModel.getAllClassMainTypes(), visitComponent, this\n            );\n\n            this._seriesIndices = this._seriesIndices || [];\n\n            function visitComponent(mainType, dependencies) {\n                var newCptOptionList = modelUtil.normalizeToArray(newOption[mainType]);\n\n                var mapResult = modelUtil.mappingToExists(\n                    componentsMap[mainType], newCptOptionList\n                );\n\n                modelUtil.makeIdAndName(mapResult);\n\n                // Set mainType and complete subType.\n                each(mapResult, function (item, index) {\n                    var opt = item.option;\n                    if (isObject(opt)) {\n                        item.keyInfo.mainType = mainType;\n                        item.keyInfo.subType = determineSubType(mainType, opt, item.exist);\n                    }\n                });\n\n                var dependentModels = getComponentsByTypes(\n                    componentsMap, dependencies\n                );\n\n                option[mainType] = [];\n                componentsMap[mainType] = [];\n\n                each(mapResult, function (resultItem, index) {\n                    var componentModel = resultItem.exist;\n                    var newCptOption = resultItem.option;\n\n                    zrUtil.assert(\n                        isObject(newCptOption) || componentModel,\n                        'Empty component definition'\n                    );\n\n                    // Consider where is no new option and should be merged using {},\n                    // see removeEdgeAndAdd in topologicalTravel and\n                    // ComponentModel.getAllClassMainTypes.\n                    if (!newCptOption) {\n                        componentModel.mergeOption({}, this);\n                        componentModel.optionUpdated({}, false);\n                    }\n                    else {\n                        var ComponentModelClass = ComponentModel.getClass(\n                            mainType, resultItem.keyInfo.subType, true\n                        );\n\n                        if (componentModel && componentModel instanceof ComponentModelClass) {\n                            componentModel.name = resultItem.keyInfo.name;\n                            componentModel.mergeOption(newCptOption, this);\n                            componentModel.optionUpdated(newCptOption, false);\n                        }\n                        else {\n                            // PENDING Global as parent ?\n                            var extraOpt = zrUtil.extend(\n                                {\n                                    dependentModels: dependentModels,\n                                    componentIndex: index\n                                },\n                                resultItem.keyInfo\n                            );\n                            componentModel = new ComponentModelClass(\n                                newCptOption, this, this, extraOpt\n                            );\n                            zrUtil.extend(componentModel, extraOpt);\n                            componentModel.init(newCptOption, this, this, extraOpt);\n                            // Call optionUpdated after init.\n                            // newCptOption has been used as componentModel.option\n                            // and may be merged with theme and default, so pass null\n                            // to avoid confusion.\n                            componentModel.optionUpdated(null, true);\n                        }\n                    }\n\n                    componentsMap[mainType][index] = componentModel;\n                    option[mainType][index] = componentModel.option;\n                }, this);\n\n                // Backup series for filtering.\n                if (mainType === 'series') {\n                    this._seriesIndices = createSeriesIndices(componentsMap.series);\n                }\n            }\n        },\n\n        /**\n         * Get option for output (cloned option and inner info removed)\n         * @public\n         * @return {Object}\n         */\n        getOption: function () {\n            var option = zrUtil.clone(this.option);\n\n            each(option, function (opts, mainType) {\n                if (ComponentModel.hasClass(mainType)) {\n                    var opts = modelUtil.normalizeToArray(opts);\n                    for (var i = opts.length - 1; i >= 0; i--) {\n                        // Remove options with inner id.\n                        if (modelUtil.isIdInner(opts[i])) {\n                            opts.splice(i, 1);\n                        }\n                    }\n                    option[mainType] = opts;\n                }\n            });\n\n            delete option[OPTION_INNER_KEY];\n\n            return option;\n        },\n\n        /**\n         * @return {module:echarts/model/Model}\n         */\n        getTheme: function () {\n            return this._theme;\n        },\n\n        /**\n         * @param {string} mainType\n         * @param {number} [idx=0]\n         * @return {module:echarts/model/Component}\n         */\n        getComponent: function (mainType, idx) {\n            var list = this._componentsMap[mainType];\n            if (list) {\n                return list[idx || 0];\n            }\n        },\n\n        /**\n         * If none of index and id and name used, return all components with mainType.\n         * @param {Object} condition\n         * @param {string} condition.mainType\n         * @param {string} [condition.subType] If ignore, only query by mainType\n         * @param {number|Array.<number>} [condition.index] Either input index or id or name.\n         * @param {string|Array.<string>} [condition.id] Either input index or id or name.\n         * @param {string|Array.<string>} [condition.name] Either input index or id or name.\n         * @return {Array.<module:echarts/model/Component>}\n         */\n        queryComponents: function (condition) {\n            var mainType = condition.mainType;\n            if (!mainType) {\n                return [];\n            }\n\n            var index = condition.index;\n            var id = condition.id;\n            var name = condition.name;\n\n            var cpts = this._componentsMap[mainType];\n\n            if (!cpts || !cpts.length) {\n                return [];\n            }\n\n            var result;\n\n            if (index != null) {\n                if (!isArray(index)) {\n                    index = [index];\n                }\n                result = filter(map(index, function (idx) {\n                    return cpts[idx];\n                }), function (val) {\n                    return !!val;\n                });\n            }\n            else if (id != null) {\n                var isIdArray = isArray(id);\n                result = filter(cpts, function (cpt) {\n                    return (isIdArray && indexOf(id, cpt.id) >= 0)\n                        || (!isIdArray && cpt.id === id);\n                });\n            }\n            else if (name != null) {\n                var isNameArray = isArray(name);\n                result = filter(cpts, function (cpt) {\n                    return (isNameArray && indexOf(name, cpt.name) >= 0)\n                        || (!isNameArray && cpt.name === name);\n                });\n            }\n            else {\n                // Return all components with mainType\n                result = cpts;\n            }\n\n            return filterBySubType(result, condition);\n        },\n\n        /**\n         * The interface is different from queryComponents,\n         * which is convenient for inner usage.\n         *\n         * @usage\n         * var result = findComponents(\n         *     {mainType: 'dataZoom', query: {dataZoomId: 'abc'}}\n         * );\n         * var result = findComponents(\n         *     {mainType: 'series', subType: 'pie', query: {seriesName: 'uio'}}\n         * );\n         * var result = findComponents(\n         *     {mainType: 'series'},\n         *     function (model, index) {...}\n         * );\n         * // result like [component0, componnet1, ...]\n         *\n         * @param {Object} condition\n         * @param {string} condition.mainType Mandatory.\n         * @param {string} [condition.subType] Optional.\n         * @param {Object} [condition.query] like {xxxIndex, xxxId, xxxName},\n         *        where xxx is mainType.\n         *        If query attribute is null/undefined or has no index/id/name,\n         *        do not filtering by query conditions, which is convenient for\n         *        no-payload situations or when target of action is global.\n         * @param {Function} [condition.filter] parameter: component, return boolean.\n         * @return {Array.<module:echarts/model/Component>}\n         */\n        findComponents: function (condition) {\n            var query = condition.query;\n            var mainType = condition.mainType;\n\n            var queryCond = getQueryCond(query);\n            var result = queryCond\n                ? this.queryComponents(queryCond)\n                : this._componentsMap[mainType];\n\n            return doFilter(filterBySubType(result, condition));\n\n            function getQueryCond(q) {\n                var indexAttr = mainType + 'Index';\n                var idAttr = mainType + 'Id';\n                var nameAttr = mainType + 'Name';\n                return q && (\n                        q[indexAttr] != null\n                        || q[idAttr] != null\n                        || q[nameAttr] != null\n                    )\n                    ? {\n                        mainType: mainType,\n                        // subType will be filtered finally.\n                        index: q[indexAttr],\n                        id: q[idAttr],\n                        name: q[nameAttr]\n                    }\n                    : null;\n            }\n\n            function doFilter(res) {\n                return condition.filter\n                     ? filter(res, condition.filter)\n                     : res;\n            }\n        },\n\n        /**\n         * @usage\n         * eachComponent('legend', function (legendModel, index) {\n         *     ...\n         * });\n         * eachComponent(function (componentType, model, index) {\n         *     // componentType does not include subType\n         *     // (componentType is 'xxx' but not 'xxx.aa')\n         * });\n         * eachComponent(\n         *     {mainType: 'dataZoom', query: {dataZoomId: 'abc'}},\n         *     function (model, index) {...}\n         * );\n         * eachComponent(\n         *     {mainType: 'series', subType: 'pie', query: {seriesName: 'uio'}},\n         *     function (model, index) {...}\n         * );\n         *\n         * @param {string|Object=} mainType When mainType is object, the definition\n         *                                  is the same as the method 'findComponents'.\n         * @param {Function} cb\n         * @param {*} context\n         */\n        eachComponent: function (mainType, cb, context) {\n            var componentsMap = this._componentsMap;\n\n            if (typeof mainType === 'function') {\n                context = cb;\n                cb = mainType;\n                each(componentsMap, function (components, componentType) {\n                    each(components, function (component, index) {\n                        cb.call(context, componentType, component, index);\n                    });\n                });\n            }\n            else if (zrUtil.isString(mainType)) {\n                each(componentsMap[mainType], cb, context);\n            }\n            else if (isObject(mainType)) {\n                var queryResult = this.findComponents(mainType);\n                each(queryResult, cb, context);\n            }\n        },\n\n        /**\n         * @param {string} name\n         * @return {Array.<module:echarts/model/Series>}\n         */\n        getSeriesByName: function (name) {\n            var series = this._componentsMap.series;\n            return filter(series, function (oneSeries) {\n                return oneSeries.name === name;\n            });\n        },\n\n        /**\n         * @param {number} seriesIndex\n         * @return {module:echarts/model/Series}\n         */\n        getSeriesByIndex: function (seriesIndex) {\n            return this._componentsMap.series[seriesIndex];\n        },\n\n        /**\n         * @param {string} subType\n         * @return {Array.<module:echarts/model/Series>}\n         */\n        getSeriesByType: function (subType) {\n            var series = this._componentsMap.series;\n            return filter(series, function (oneSeries) {\n                return oneSeries.subType === subType;\n            });\n        },\n\n        /**\n         * @return {Array.<module:echarts/model/Series>}\n         */\n        getSeries: function () {\n            return this._componentsMap.series.slice();\n        },\n\n        /**\n         * After filtering, series may be different\n         * frome raw series.\n         *\n         * @param {Function} cb\n         * @param {*} context\n         */\n        eachSeries: function (cb, context) {\n            assertSeriesInitialized(this);\n            each(this._seriesIndices, function (rawSeriesIndex) {\n                var series = this._componentsMap.series[rawSeriesIndex];\n                cb.call(context, series, rawSeriesIndex);\n            }, this);\n        },\n\n        /**\n         * Iterate raw series before filtered.\n         *\n         * @param {Function} cb\n         * @param {*} context\n         */\n        eachRawSeries: function (cb, context) {\n            each(this._componentsMap.series, cb, context);\n        },\n\n        /**\n         * After filtering, series may be different.\n         * frome raw series.\n         *\n         * @parma {string} subType\n         * @param {Function} cb\n         * @param {*} context\n         */\n        eachSeriesByType: function (subType, cb, context) {\n            assertSeriesInitialized(this);\n            each(this._seriesIndices, function (rawSeriesIndex) {\n                var series = this._componentsMap.series[rawSeriesIndex];\n                if (series.subType === subType) {\n                    cb.call(context, series, rawSeriesIndex);\n                }\n            }, this);\n        },\n\n        /**\n         * Iterate raw series before filtered of given type.\n         *\n         * @parma {string} subType\n         * @param {Function} cb\n         * @param {*} context\n         */\n        eachRawSeriesByType: function (subType, cb, context) {\n            return each(this.getSeriesByType(subType), cb, context);\n        },\n\n        /**\n         * @param {module:echarts/model/Series} seriesModel\n         */\n        isSeriesFiltered: function (seriesModel) {\n            assertSeriesInitialized(this);\n            return zrUtil.indexOf(this._seriesIndices, seriesModel.componentIndex) < 0;\n        },\n\n        /**\n         * @param {Function} cb\n         * @param {*} context\n         */\n        filterSeries: function (cb, context) {\n            assertSeriesInitialized(this);\n            var filteredSeries = filter(\n                this._componentsMap.series, cb, context\n            );\n            this._seriesIndices = createSeriesIndices(filteredSeries);\n        },\n\n        restoreData: function () {\n            var componentsMap = this._componentsMap;\n\n            this._seriesIndices = createSeriesIndices(componentsMap.series);\n\n            var componentTypes = [];\n            each(componentsMap, function (components, componentType) {\n                componentTypes.push(componentType);\n            });\n\n            ComponentModel.topologicalTravel(\n                componentTypes,\n                ComponentModel.getAllClassMainTypes(),\n                function (componentType, dependencies) {\n                    each(componentsMap[componentType], function (component) {\n                        component.restoreData();\n                    });\n                }\n            );\n        }\n\n    });\n\n    /**\n     * @inner\n     */\n    function mergeTheme(option, theme) {\n        zrUtil.each(theme, function (themeItem, name) {\n            // 如果有 component model 则把具体的 merge 逻辑交给该 model 处理\n            if (!ComponentModel.hasClass(name)) {\n                if (typeof themeItem === 'object') {\n                    option[name] = !option[name]\n                        ? zrUtil.clone(themeItem)\n                        : zrUtil.merge(option[name], themeItem, false);\n                }\n                else {\n                    if (option[name] == null) {\n                        option[name] = themeItem;\n                    }\n                }\n            }\n        });\n    }\n\n    function initBase(baseOption) {\n        baseOption = baseOption;\n\n        // Using OPTION_INNER_KEY to mark that this option can not be used outside,\n        // i.e. `chart.setOption(chart.getModel().option);` is forbiden.\n        this.option = {};\n        this.option[OPTION_INNER_KEY] = 1;\n\n        /**\n         * @type {Object.<string, Array.<module:echarts/model/Model>>}\n         * @private\n         */\n        this._componentsMap = {};\n\n        /**\n         * Mapping between filtered series list and raw series list.\n         * key: filtered series indices, value: raw series indices.\n         * @type {Array.<nubmer>}\n         * @private\n         */\n        this._seriesIndices = null;\n\n        mergeTheme(baseOption, this._theme.option);\n\n        // TODO Needs clone when merging to the unexisted property\n        zrUtil.merge(baseOption, globalDefault, false);\n\n        this.mergeOption(baseOption);\n    }\n\n    /**\n     * @inner\n     * @param {Array.<string>|string} types model types\n     * @return {Object} key: {string} type, value: {Array.<Object>} models\n     */\n    function getComponentsByTypes(componentsMap, types) {\n        if (!zrUtil.isArray(types)) {\n            types = types ? [types] : [];\n        }\n\n        var ret = {};\n        each(types, function (type) {\n            ret[type] = (componentsMap[type] || []).slice();\n        });\n\n        return ret;\n    }\n\n    /**\n     * @inner\n     */\n    function determineSubType(mainType, newCptOption, existComponent) {\n        var subType = newCptOption.type\n            ? newCptOption.type\n            : existComponent\n            ? existComponent.subType\n            // Use determineSubType only when there is no existComponent.\n            : ComponentModel.determineSubType(mainType, newCptOption);\n\n        // tooltip, markline, markpoint may always has no subType\n        return subType;\n    }\n\n    /**\n     * @inner\n     */\n    function createSeriesIndices(seriesModels) {\n        return map(seriesModels, function (series) {\n            return series.componentIndex;\n        }) || [];\n    }\n\n    /**\n     * @inner\n     */\n    function filterBySubType(components, condition) {\n        // Using hasOwnProperty for restrict. Consider\n        // subType is undefined in user payload.\n        return condition.hasOwnProperty('subType')\n            ? filter(components, function (cpt) {\n                return cpt.subType === condition.subType;\n            })\n            : components;\n    }\n\n    /**\n     * @inner\n     */\n    function assertSeriesInitialized(ecModel) {\n        // Components that use _seriesIndices should depends on series component,\n        // which make sure that their initialization is after series.\n        if (__DEV__) {\n            if (!ecModel._seriesIndices) {\n                throw new Error('Series has not been initialized yet.');\n            }\n        }\n    }\n\n    zrUtil.mixin(GlobalModel, __webpack_require__(507));\n\n    module.exports = GlobalModel;\n\n\n/***/ }),\n/* 578 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * ECharts option manager\n *\n * @module {echarts/model/OptionManager}\n */\n\n\n\n    var zrUtil = __webpack_require__(460);\n    var modelUtil = __webpack_require__(469);\n    var ComponentModel = __webpack_require__(472);\n    var each = zrUtil.each;\n    var clone = zrUtil.clone;\n    var map = zrUtil.map;\n    var merge = zrUtil.merge;\n\n    var QUERY_REG = /^(min|max)?(.+)$/;\n\n    /**\n     * TERM EXPLANATIONS:\n     *\n     * [option]:\n     *\n     *     An object that contains definitions of components. For example:\n     *     var option = {\n     *         title: {...},\n     *         legend: {...},\n     *         visualMap: {...},\n     *         series: [\n     *             {data: [...]},\n     *             {data: [...]},\n     *             ...\n     *         ]\n     *     };\n     *\n     * [rawOption]:\n     *\n     *     An object input to echarts.setOption. 'rawOption' may be an\n     *     'option', or may be an object contains multi-options. For example:\n     *     var option = {\n     *         baseOption: {\n     *             title: {...},\n     *             legend: {...},\n     *             series: [\n     *                 {data: [...]},\n     *                 {data: [...]},\n     *                 ...\n     *             ]\n     *         },\n     *         timeline: {...},\n     *         options: [\n     *             {title: {...}, series: {data: [...]}},\n     *             {title: {...}, series: {data: [...]}},\n     *             ...\n     *         ],\n     *         media: [\n     *             {\n     *                 query: {maxWidth: 320},\n     *                 option: {series: {x: 20}, visualMap: {show: false}}\n     *             },\n     *             {\n     *                 query: {minWidth: 320, maxWidth: 720},\n     *                 option: {series: {x: 500}, visualMap: {show: true}}\n     *             },\n     *             {\n     *                 option: {series: {x: 1200}, visualMap: {show: true}}\n     *             }\n     *         ]\n     *     };\n     *\n     * @alias module:echarts/model/OptionManager\n     * @param {module:echarts/ExtensionAPI} api\n     */\n    function OptionManager(api) {\n\n        /**\n         * @private\n         * @type {module:echarts/ExtensionAPI}\n         */\n        this._api = api;\n\n        /**\n         * @private\n         * @type {Array.<number>}\n         */\n        this._timelineOptions = [];\n\n        /**\n         * @private\n         * @type {Array.<Object>}\n         */\n        this._mediaList = [];\n\n        /**\n         * @private\n         * @type {Object}\n         */\n        this._mediaDefault;\n\n        /**\n         * -1, means default.\n         * empty means no media.\n         * @private\n         * @type {Array.<number>}\n         */\n        this._currentMediaIndices = [];\n\n        /**\n         * @private\n         * @type {Object}\n         */\n        this._optionBackup;\n\n        /**\n         * @private\n         * @type {Object}\n         */\n        this._newBaseOption;\n    }\n\n    // timeline.notMerge is not supported in ec3. Firstly there is rearly\n    // case that notMerge is needed. Secondly supporting 'notMerge' requires\n    // rawOption cloned and backuped when timeline changed, which does no\n    // good to performance. What's more, that both timeline and setOption\n    // method supply 'notMerge' brings complex and some problems.\n    // Consider this case:\n    // (step1) chart.setOption({timeline: {notMerge: false}, ...}, false);\n    // (step2) chart.setOption({timeline: {notMerge: true}, ...}, false);\n\n    OptionManager.prototype = {\n\n        constructor: OptionManager,\n\n        /**\n         * @public\n         * @param {Object} rawOption Raw option.\n         * @param {module:echarts/model/Global} ecModel\n         * @param {Array.<Function>} optionPreprocessorFuncs\n         * @return {Object} Init option\n         */\n        setOption: function (rawOption, optionPreprocessorFuncs) {\n            rawOption = clone(rawOption, true);\n\n            // FIXME\n            // 如果 timeline options 或者 media 中设置了某个属性，而baseOption中没有设置，则进行警告。\n\n            var oldOptionBackup = this._optionBackup;\n            var newParsedOption = parseRawOption.call(\n                this, rawOption, optionPreprocessorFuncs, !oldOptionBackup\n            );\n            this._newBaseOption = newParsedOption.baseOption;\n\n            // For setOption at second time (using merge mode);\n            if (oldOptionBackup) {\n                // Only baseOption can be merged.\n                mergeOption(oldOptionBackup.baseOption, newParsedOption.baseOption);\n\n                // For simplicity, timeline options and media options do not support merge,\n                // that is, if you `setOption` twice and both has timeline options, the latter\n                // timeline opitons will not be merged to the formers, but just substitude them.\n                if (newParsedOption.timelineOptions.length) {\n                    oldOptionBackup.timelineOptions = newParsedOption.timelineOptions;\n                }\n                if (newParsedOption.mediaList.length) {\n                    oldOptionBackup.mediaList = newParsedOption.mediaList;\n                }\n                if (newParsedOption.mediaDefault) {\n                    oldOptionBackup.mediaDefault = newParsedOption.mediaDefault;\n                }\n            }\n            else {\n                this._optionBackup = newParsedOption;\n            }\n        },\n\n        /**\n         * @param {boolean} isRecreate\n         * @return {Object}\n         */\n        mountOption: function (isRecreate) {\n            var optionBackup = this._optionBackup;\n\n            // TODO\n            // 如果没有reset功能则不clone。\n\n            this._timelineOptions = map(optionBackup.timelineOptions, clone);\n            this._mediaList = map(optionBackup.mediaList, clone);\n            this._mediaDefault = clone(optionBackup.mediaDefault);\n            this._currentMediaIndices = [];\n\n            return clone(isRecreate\n                // this._optionBackup.baseOption, which is created at the first `setOption`\n                // called, and is merged into every new option by inner method `mergeOption`\n                // each time `setOption` called, can be only used in `isRecreate`, because\n                // its reliability is under suspicion. In other cases option merge is\n                // performed by `model.mergeOption`.\n                ? optionBackup.baseOption : this._newBaseOption\n            );\n        },\n\n        /**\n         * @param {module:echarts/model/Global} ecModel\n         * @return {Object}\n         */\n        getTimelineOption: function (ecModel) {\n            var option;\n            var timelineOptions = this._timelineOptions;\n\n            if (timelineOptions.length) {\n                // getTimelineOption can only be called after ecModel inited,\n                // so we can get currentIndex from timelineModel.\n                var timelineModel = ecModel.getComponent('timeline');\n                if (timelineModel) {\n                    option = clone(\n                        timelineOptions[timelineModel.getCurrentIndex()],\n                        true\n                    );\n                }\n            }\n\n            return option;\n        },\n\n        /**\n         * @param {module:echarts/model/Global} ecModel\n         * @return {Array.<Object>}\n         */\n        getMediaOption: function (ecModel) {\n            var ecWidth = this._api.getWidth();\n            var ecHeight = this._api.getHeight();\n            var mediaList = this._mediaList;\n            var mediaDefault = this._mediaDefault;\n            var indices = [];\n            var result = [];\n\n            // No media defined.\n            if (!mediaList.length && !mediaDefault) {\n                return result;\n            }\n\n            // Multi media may be applied, the latter defined media has higher priority.\n            for (var i = 0, len = mediaList.length; i < len; i++) {\n                if (applyMediaQuery(mediaList[i].query, ecWidth, ecHeight)) {\n                    indices.push(i);\n                }\n            }\n\n            // FIXME\n            // 是否mediaDefault应该强制用户设置，否则可能修改不能回归。\n            if (!indices.length && mediaDefault) {\n                indices = [-1];\n            }\n\n            if (indices.length && !indicesEquals(indices, this._currentMediaIndices)) {\n                result = map(indices, function (index) {\n                    return clone(\n                        index === -1 ? mediaDefault.option : mediaList[index].option\n                    );\n                });\n            }\n            // Otherwise return nothing.\n\n            this._currentMediaIndices = indices;\n\n            return result;\n        }\n    };\n\n    function parseRawOption(rawOption, optionPreprocessorFuncs, isNew) {\n        var timelineOptions = [];\n        var mediaList = [];\n        var mediaDefault;\n        var baseOption;\n\n        // Compatible with ec2.\n        var timelineOpt = rawOption.timeline;\n\n        if (rawOption.baseOption) {\n            baseOption = rawOption.baseOption;\n        }\n\n        // For timeline\n        if (timelineOpt || rawOption.options) {\n            baseOption = baseOption || {};\n            timelineOptions = (rawOption.options || []).slice();\n        }\n\n        // For media query\n        if (rawOption.media) {\n            baseOption = baseOption || {};\n            var media = rawOption.media;\n            each(media, function (singleMedia) {\n                if (singleMedia && singleMedia.option) {\n                    if (singleMedia.query) {\n                        mediaList.push(singleMedia);\n                    }\n                    else if (!mediaDefault) {\n                        // Use the first media default.\n                        mediaDefault = singleMedia;\n                    }\n                }\n            });\n        }\n\n        // For normal option\n        if (!baseOption) {\n            baseOption = rawOption;\n        }\n\n        // Set timelineOpt to baseOption in ec3,\n        // which is convenient for merge option.\n        if (!baseOption.timeline) {\n            baseOption.timeline = timelineOpt;\n        }\n\n        // Preprocess.\n        each([baseOption].concat(timelineOptions)\n            .concat(zrUtil.map(mediaList, function (media) {\n                return media.option;\n            })),\n            function (option) {\n                each(optionPreprocessorFuncs, function (preProcess) {\n                    preProcess(option, isNew);\n                });\n            }\n        );\n\n        return {\n            baseOption: baseOption,\n            timelineOptions: timelineOptions,\n            mediaDefault: mediaDefault,\n            mediaList: mediaList\n        };\n    }\n\n    /**\n     * @see <http://www.w3.org/TR/css3-mediaqueries/#media1>\n     * Support: width, height, aspectRatio\n     * Can use max or min as prefix.\n     */\n    function applyMediaQuery(query, ecWidth, ecHeight) {\n        var realMap = {\n            width: ecWidth,\n            height: ecHeight,\n            aspectratio: ecWidth / ecHeight // lowser case for convenientce.\n        };\n\n        var applicatable = true;\n\n        zrUtil.each(query, function (value, attr) {\n            var matched = attr.match(QUERY_REG);\n\n            if (!matched || !matched[1] || !matched[2]) {\n                return;\n            }\n\n            var operator = matched[1];\n            var realAttr = matched[2].toLowerCase();\n\n            if (!compare(realMap[realAttr], value, operator)) {\n                applicatable = false;\n            }\n        });\n\n        return applicatable;\n    }\n\n    function compare(real, expect, operator) {\n        if (operator === 'min') {\n            return real >= expect;\n        }\n        else if (operator === 'max') {\n            return real <= expect;\n        }\n        else { // Equals\n            return real === expect;\n        }\n    }\n\n    function indicesEquals(indices1, indices2) {\n        // indices is always order by asc and has only finite number.\n        return indices1.join(',') === indices2.join(',');\n    }\n\n    /**\n     * Consider case:\n     * `chart.setOption(opt1);`\n     * Then user do some interaction like dataZoom, dataView changing.\n     * `chart.setOption(opt2);`\n     * Then user press 'reset button' in toolbox.\n     *\n     * After doing that all of the interaction effects should be reset, the\n     * chart should be the same as the result of invoke\n     * `chart.setOption(opt1); chart.setOption(opt2);`.\n     *\n     * Although it is not able ensure that\n     * `chart.setOption(opt1); chart.setOption(opt2);` is equivalents to\n     * `chart.setOption(merge(opt1, opt2));` exactly,\n     * this might be the only simple way to implement that feature.\n     *\n     * MEMO: We've considered some other approaches:\n     * 1. Each model handle its self restoration but not uniform treatment.\n     *     (Too complex in logic and error-prone)\n     * 2. Use a shadow ecModel. (Performace expensive)\n     */\n    function mergeOption(oldOption, newOption) {\n        newOption = newOption || {};\n\n        each(newOption, function (newCptOpt, mainType) {\n            if (newCptOpt == null) {\n                return;\n            }\n\n            var oldCptOpt = oldOption[mainType];\n\n            if (!ComponentModel.hasClass(mainType)) {\n                oldOption[mainType] = merge(oldCptOpt, newCptOpt, true);\n            }\n            else {\n                newCptOpt = modelUtil.normalizeToArray(newCptOpt);\n                oldCptOpt = modelUtil.normalizeToArray(oldCptOpt);\n\n                var mapResult = modelUtil.mappingToExists(oldCptOpt, newCptOpt);\n\n                oldOption[mainType] = map(mapResult, function (item) {\n                    return (item.option && item.exist)\n                        ? merge(item.exist, item.option, true)\n                        : (item.exist || item.option);\n                });\n            }\n        });\n    }\n\n    module.exports = OptionManager;\n\n\n/***/ }),\n/* 579 */\n/***/ (function(module, exports) {\n\n\n    var platform = '';\n    // Navigator not exists in node\n    if (typeof navigator !== 'undefined') {\n        platform = navigator.platform || '';\n    }\n    module.exports = {\n        // 全图默认背景\n        // backgroundColor: 'rgba(0,0,0,0)',\n\n        // https://dribbble.com/shots/1065960-Infographic-Pie-chart-visualization\n        // color: ['#5793f3', '#d14a61', '#fd9c35', '#675bba', '#fec42c', '#dd4444', '#d4df5a', '#cd4870'],\n        // 浅色\n        // color: ['#bcd3bb', '#e88f70', '#edc1a5', '#9dc5c8', '#e1e8c8', '#7b7c68', '#e5b5b5', '#f0b489', '#928ea8', '#bda29a'],\n        // color: ['#cc5664', '#9bd6ec', '#ea946e', '#8acaaa', '#f1ec64', '#ee8686', '#a48dc1', '#5da6bc', '#b9dcae'],\n        // 深色\n        color: ['#c23531','#2f4554', '#61a0a8', '#d48265', '#91c7ae','#749f83',  '#ca8622', '#bda29a','#6e7074', '#546570', '#c4ccd3'],\n\n        // 默认需要 Grid 配置项\n        // grid: {},\n        // 主题，主题\n        textStyle: {\n            // color: '#000',\n            // decoration: 'none',\n            // PENDING\n            fontFamily: platform.match(/^Win/) ? 'Microsoft YaHei' : 'sans-serif',\n            // fontFamily: 'Arial, Verdana, sans-serif',\n            fontSize: 12,\n            fontStyle: 'normal',\n            fontWeight: 'normal'\n        },\n\n        // http://blogs.adobe.com/webplatform/2014/02/24/using-blend-modes-in-html-canvas/\n        // https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/globalCompositeOperation\n        // Default is source-over\n        blendMode: null,\n\n        animation: true,\n        animationDuration: 1000,\n        animationDurationUpdate: 300,\n        animationEasing: 'exponentialOut',\n        animationEasingUpdate: 'cubicOut',\n\n        animationThreshold: 2000,\n        // Configuration for progressive/incremental rendering\n        progressiveThreshold: 3000,\n        progressive: 400,\n\n        // Threshold of if use single hover layer to optimize.\n        // It is recommended that `hoverLayerThreshold` is equivalent to or less than\n        // `progressiveThreshold`, otherwise hover will cause restart of progressive,\n        // which is unexpected.\n        // see example <echarts/test/heatmap-large.html>.\n        hoverLayerThreshold: 3000\n    };\n\n\n/***/ }),\n/* 580 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n    module.exports = {\n        getAreaStyle: __webpack_require__(492)(\n            [\n                ['fill', 'color'],\n                ['shadowBlur'],\n                ['shadowOffsetX'],\n                ['shadowOffsetY'],\n                ['opacity'],\n                ['shadowColor']\n            ]\n        )\n    };\n\n\n/***/ }),\n/* 581 */\n/***/ (function(module, exports) {\n\n\n\n    module.exports = {\n        getBoxLayoutParams: function () {\n            return {\n                left: this.get('left'),\n                top: this.get('top'),\n                right: this.get('right'),\n                bottom: this.get('bottom'),\n                width: this.get('width'),\n                height: this.get('height')\n            };\n        }\n    };\n\n\n/***/ }),\n/* 582 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n    var getItemStyle = __webpack_require__(492)(\n        [\n            ['fill', 'color'],\n            ['stroke', 'borderColor'],\n            ['lineWidth', 'borderWidth'],\n            ['opacity'],\n            ['shadowBlur'],\n            ['shadowOffsetX'],\n            ['shadowOffsetY'],\n            ['shadowColor'],\n            ['textPosition'],\n            ['textAlign']\n        ]\n    );\n    module.exports = {\n        getItemStyle: function (excludes) {\n            var style = getItemStyle.call(this, excludes);\n            var lineDash = this.getBorderLineDash();\n            lineDash && (style.lineDash = lineDash);\n            return style;\n        },\n\n        getBorderLineDash: function () {\n            var lineType = this.get('borderType');\n            return (lineType === 'solid' || lineType == null) ? null\n                : (lineType === 'dashed' ? [5, 5] : [1, 1]);\n        }\n    };\n\n\n/***/ }),\n/* 583 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n    var getLineStyle = __webpack_require__(492)(\n        [\n            ['lineWidth', 'width'],\n            ['stroke', 'color'],\n            ['opacity'],\n            ['shadowBlur'],\n            ['shadowOffsetX'],\n            ['shadowOffsetY'],\n            ['shadowColor']\n        ]\n    );\n    module.exports = {\n        getLineStyle: function (excludes) {\n            var style = getLineStyle.call(this, excludes);\n            var lineDash = this.getLineDash(style.lineWidth);\n            lineDash && (style.lineDash = lineDash);\n            return style;\n        },\n\n        getLineDash: function (lineWidth) {\n            if (lineWidth == null) {\n                lineWidth = 1;\n            }\n            var lineType = this.get('type');\n            var dotSize = Math.max(lineWidth, 2);\n            var dashSize = lineWidth * 4;\n            return (lineType === 'solid' || lineType == null) ? null\n                : (lineType === 'dashed' ? [dashSize, dashSize] : [dotSize, dotSize]);\n        }\n    };\n\n\n/***/ }),\n/* 584 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var textContain = __webpack_require__(473);\n\n    function getShallow(model, path) {\n        return model && model.getShallow(path);\n    }\n\n    module.exports = {\n        /**\n         * Get color property or get color from option.textStyle.color\n         * @return {string}\n         */\n        getTextColor: function () {\n            var ecModel = this.ecModel;\n            return this.getShallow('color')\n                || (ecModel && ecModel.get('textStyle.color'));\n        },\n\n        /**\n         * Create font string from fontStyle, fontWeight, fontSize, fontFamily\n         * @return {string}\n         */\n        getFont: function () {\n            var ecModel = this.ecModel;\n            var gTextStyleModel = ecModel && ecModel.getModel('textStyle');\n            return [\n                // FIXME in node-canvas fontWeight is before fontStyle\n                this.getShallow('fontStyle') || getShallow(gTextStyleModel, 'fontStyle'),\n                this.getShallow('fontWeight') || getShallow(gTextStyleModel, 'fontWeight'),\n                (this.getShallow('fontSize') || getShallow(gTextStyleModel, 'fontSize') || 12) + 'px',\n                this.getShallow('fontFamily') || getShallow(gTextStyleModel, 'fontFamily') || 'sans-serif'\n            ].join(' ');\n        },\n\n        getTextRect: function (text) {\n            return textContain.getBoundingRect(\n                text,\n                this.getFont(),\n                this.getShallow('align'),\n                this.getShallow('baseline')\n            );\n        },\n\n        truncateText: function (text, containerWidth, ellipsis, options) {\n            return textContain.truncateText(\n                text, containerWidth, this.getFont(), ellipsis, options\n            );\n        }\n    };\n\n\n/***/ }),\n/* 585 */\n/***/ (function(module, exports, __webpack_require__) {\n\n// Compatitable with 2.0\n\n\n    var zrUtil = __webpack_require__(460);\n    var compatStyle = __webpack_require__(586);\n\n    function get(opt, path) {\n        path = path.split(',');\n        var obj = opt;\n        for (var i = 0; i < path.length; i++) {\n            obj = obj && obj[path[i]];\n            if (obj == null) {\n                break;\n            }\n        }\n        return obj;\n    }\n\n    function set(opt, path, val, overwrite) {\n        path = path.split(',');\n        var obj = opt;\n        var key;\n        for (var i = 0; i < path.length - 1; i++) {\n            key = path[i];\n            if (obj[key] == null) {\n                obj[key] = {};\n            }\n            obj = obj[key];\n        }\n        if (overwrite || obj[path[i]] == null) {\n            obj[path[i]] = val;\n        }\n    }\n\n    function compatLayoutProperties(option) {\n        each(LAYOUT_PROPERTIES, function (prop) {\n            if (prop[0] in option && !(prop[1] in option)) {\n                option[prop[1]] = option[prop[0]];\n            }\n        });\n    }\n\n    var LAYOUT_PROPERTIES = [\n        ['x', 'left'], ['y', 'top'], ['x2', 'right'], ['y2', 'bottom']\n    ];\n\n    var COMPATITABLE_COMPONENTS = [\n        'grid', 'geo', 'parallel', 'legend', 'toolbox', 'title', 'visualMap', 'dataZoom', 'timeline'\n    ];\n\n    var COMPATITABLE_SERIES = [\n        'bar', 'boxplot', 'candlestick', 'chord', 'effectScatter',\n        'funnel', 'gauge', 'lines', 'graph', 'heatmap', 'line', 'map', 'parallel',\n        'pie', 'radar', 'sankey', 'scatter', 'treemap'\n    ];\n\n    var each = zrUtil.each;\n\n    module.exports = function (option) {\n        each(option.series, function (seriesOpt) {\n            if (!zrUtil.isObject(seriesOpt)) {\n                return;\n            }\n\n            var seriesType = seriesOpt.type;\n\n            compatStyle(seriesOpt);\n\n            if (seriesType === 'pie' || seriesType === 'gauge') {\n                if (seriesOpt.clockWise != null) {\n                    seriesOpt.clockwise = seriesOpt.clockWise;\n                }\n            }\n            if (seriesType === 'gauge') {\n                var pointerColor = get(seriesOpt, 'pointer.color');\n                pointerColor != null\n                    && set(seriesOpt, 'itemStyle.normal.color', pointerColor);\n            }\n\n            for (var i = 0; i < COMPATITABLE_SERIES.length; i++) {\n                if (COMPATITABLE_SERIES[i] === seriesOpt.type) {\n                    compatLayoutProperties(seriesOpt);\n                    break;\n                }\n            }\n        });\n\n        // dataRange has changed to visualMap\n        if (option.dataRange) {\n            option.visualMap = option.dataRange;\n        }\n\n        each(COMPATITABLE_COMPONENTS, function (componentName) {\n            var options = option[componentName];\n            if (options) {\n                if (!zrUtil.isArray(options)) {\n                    options = [options];\n                }\n                each(options, function (option) {\n                    compatLayoutProperties(option);\n                });\n            }\n        });\n    };\n\n\n/***/ }),\n/* 586 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var zrUtil = __webpack_require__(460);\n\n    var POSSIBLE_STYLES = [\n        'areaStyle', 'lineStyle', 'nodeStyle', 'linkStyle',\n        'chordStyle', 'label', 'labelLine'\n    ];\n\n    function compatItemStyle(opt) {\n        var itemStyleOpt = opt && opt.itemStyle;\n        if (itemStyleOpt) {\n            zrUtil.each(POSSIBLE_STYLES, function (styleName) {\n                var normalItemStyleOpt = itemStyleOpt.normal;\n                var emphasisItemStyleOpt = itemStyleOpt.emphasis;\n                if (normalItemStyleOpt && normalItemStyleOpt[styleName]) {\n                    opt[styleName] = opt[styleName] || {};\n                    if (!opt[styleName].normal) {\n                        opt[styleName].normal = normalItemStyleOpt[styleName];\n                    }\n                    else {\n                        zrUtil.merge(opt[styleName].normal, normalItemStyleOpt[styleName]);\n                    }\n                    normalItemStyleOpt[styleName] = null;\n                }\n                if (emphasisItemStyleOpt && emphasisItemStyleOpt[styleName]) {\n                    opt[styleName] = opt[styleName] || {};\n                    if (!opt[styleName].emphasis) {\n                        opt[styleName].emphasis = emphasisItemStyleOpt[styleName];\n                    }\n                    else {\n                        zrUtil.merge(opt[styleName].emphasis, emphasisItemStyleOpt[styleName]);\n                    }\n                    emphasisItemStyleOpt[styleName] = null;\n                }\n            });\n        }\n    }\n\n    module.exports = function (seriesOpt) {\n        if (!seriesOpt) {\n            return;\n        }\n        compatItemStyle(seriesOpt);\n        compatItemStyle(seriesOpt.markPoint);\n        compatItemStyle(seriesOpt.markLine);\n        var data = seriesOpt.data;\n        if (data) {\n            for (var i = 0; i < data.length; i++) {\n                compatItemStyle(data[i]);\n            }\n            // mark point data\n            var markPoint = seriesOpt.markPoint;\n            if (markPoint && markPoint.data) {\n                var mpData = markPoint.data;\n                for (var i = 0; i < mpData.length; i++) {\n                    compatItemStyle(mpData[i]);\n                }\n            }\n            // mark line data\n            var markLine = seriesOpt.markLine;\n            if (markLine && markLine.data) {\n                var mlData = markLine.data;\n                for (var i = 0; i < mlData.length; i++) {\n                    if (zrUtil.isArray(mlData[i])) {\n                        compatItemStyle(mlData[i][0]);\n                        compatItemStyle(mlData[i][1]);\n                    }\n                    else {\n                        compatItemStyle(mlData[i]);\n                    }\n                }\n            }\n        }\n    };\n\n\n/***/ }),\n/* 587 */\n/***/ (function(module, exports) {\n\n\n    var samplers = {\n        average: function (frame) {\n            var sum = 0;\n            var count = 0;\n            for (var i = 0; i < frame.length; i++) {\n                if (!isNaN(frame[i])) {\n                    sum += frame[i];\n                    count++;\n                }\n            }\n            // Return NaN if count is 0\n            return count === 0 ? NaN : sum / count;\n        },\n        sum: function (frame) {\n            var sum = 0;\n            for (var i = 0; i < frame.length; i++) {\n                // Ignore NaN\n                sum += frame[i] || 0;\n            }\n            return sum;\n        },\n        max: function (frame) {\n            var max = -Infinity;\n            for (var i = 0; i < frame.length; i++) {\n                frame[i] > max && (max = frame[i]);\n            }\n            return max;\n        },\n        min: function (frame) {\n            var min = Infinity;\n            for (var i = 0; i < frame.length; i++) {\n                frame[i] < min && (min = frame[i]);\n            }\n            return min;\n        },\n        // TODO\n        // Median\n        nearest: function (frame) {\n            return frame[0];\n        }\n    };\n\n    var indexSampler = function (frame, value) {\n        return Math.round(frame.length / 2);\n    };\n    module.exports = function (seriesType, ecModel, api) {\n        ecModel.eachSeriesByType(seriesType, function (seriesModel) {\n            var data = seriesModel.getData();\n            var sampling = seriesModel.get('sampling');\n            var coordSys = seriesModel.coordinateSystem;\n            // Only cartesian2d support down sampling\n            if (coordSys.type === 'cartesian2d' && sampling) {\n                var baseAxis = coordSys.getBaseAxis();\n                var valueAxis = coordSys.getOtherAxis(baseAxis);\n                var extent = baseAxis.getExtent();\n                // Coordinste system has been resized\n                var size = extent[1] - extent[0];\n                var rate = Math.round(data.count() / size);\n                if (rate > 1) {\n                    var sampler;\n                    if (typeof sampling === 'string') {\n                        sampler = samplers[sampling];\n                    }\n                    else if (typeof sampling === 'function') {\n                        sampler = sampling;\n                    }\n                    if (sampler) {\n                        data = data.downSample(\n                            valueAxis.dim, 1 / rate, sampler, indexSampler\n                        );\n                        seriesModel.setData(data);\n                    }\n                }\n            }\n        }, this);\n    };\n\n\n/***/ }),\n/* 588 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * Log scale\n * @module echarts/scale/Log\n */\n\n\n    var zrUtil = __webpack_require__(460);\n    var Scale = __webpack_require__(487);\n    var numberUtil = __webpack_require__(465);\n\n    // Use some method of IntervalScale\n    var IntervalScale = __webpack_require__(495);\n\n    var scaleProto = Scale.prototype;\n    var intervalScaleProto = IntervalScale.prototype;\n\n    var getPrecisionSafe = numberUtil.getPrecisionSafe;\n    var roundingErrorFix = numberUtil.round;\n\n    var mathFloor = Math.floor;\n    var mathCeil = Math.ceil;\n    var mathPow = Math.pow;\n\n    var mathLog = Math.log;\n\n    var LogScale = Scale.extend({\n\n        type: 'log',\n\n        base: 10,\n\n        $constructor: function () {\n            Scale.apply(this, arguments);\n            this._originalScale = new IntervalScale();\n        },\n\n        /**\n         * @return {Array.<number>}\n         */\n        getTicks: function () {\n            var originalScale = this._originalScale;\n            var extent = this._extent;\n            var originalExtent = originalScale.getExtent();\n\n            return zrUtil.map(intervalScaleProto.getTicks.call(this), function (val) {\n                var powVal = numberUtil.round(mathPow(this.base, val));\n\n                // Fix #4158\n                powVal = (val === extent[0] && originalScale.__fixMin)\n                    ? fixRoundingError(powVal, originalExtent[0])\n                    : powVal;\n                powVal = (val === extent[1] && originalScale.__fixMax)\n                    ? fixRoundingError(powVal, originalExtent[1])\n                    : powVal;\n\n                return powVal;\n            }, this);\n        },\n\n        /**\n         * @param {number} val\n         * @return {string}\n         */\n        getLabel: intervalScaleProto.getLabel,\n\n        /**\n         * @param  {number} val\n         * @return {number}\n         */\n        scale: function (val) {\n            val = scaleProto.scale.call(this, val);\n            return mathPow(this.base, val);\n        },\n\n        /**\n         * @param {number} start\n         * @param {number} end\n         */\n        setExtent: function (start, end) {\n            var base = this.base;\n            start = mathLog(start) / mathLog(base);\n            end = mathLog(end) / mathLog(base);\n            intervalScaleProto.setExtent.call(this, start, end);\n        },\n\n        /**\n         * @return {number} end\n         */\n        getExtent: function () {\n            var base = this.base;\n            var extent = scaleProto.getExtent.call(this);\n            extent[0] = mathPow(base, extent[0]);\n            extent[1] = mathPow(base, extent[1]);\n\n            // Fix #4158\n            var originalScale = this._originalScale;\n            var originalExtent = originalScale.getExtent();\n            originalScale.__fixMin && (extent[0] = fixRoundingError(extent[0], originalExtent[0]));\n            originalScale.__fixMax && (extent[1] = fixRoundingError(extent[1], originalExtent[1]));\n\n            return extent;\n        },\n\n        /**\n         * @param  {Array.<number>} extent\n         */\n        unionExtent: function (extent) {\n            this._originalScale.unionExtent(extent);\n\n            var base = this.base;\n            extent[0] = mathLog(extent[0]) / mathLog(base);\n            extent[1] = mathLog(extent[1]) / mathLog(base);\n            scaleProto.unionExtent.call(this, extent);\n        },\n\n        /**\n         * @override\n         */\n        unionExtentFromData: function (data, dim) {\n            this.unionExtent(data.getDataExtent(dim, true, function (val) {\n                return val > 0;\n            }));\n        },\n\n        /**\n         * Update interval and extent of intervals for nice ticks\n         * @param  {number} [approxTickNum = 10] Given approx tick number\n         */\n        niceTicks: function (approxTickNum) {\n            approxTickNum = approxTickNum || 10;\n            var extent = this._extent;\n            var span = extent[1] - extent[0];\n            if (span === Infinity || span <= 0) {\n                return;\n            }\n\n            var interval = numberUtil.quantity(span);\n            var err = approxTickNum / span * interval;\n\n            // Filter ticks to get closer to the desired count.\n            if (err <= 0.5) {\n                interval *= 10;\n            }\n\n            // Interval should be integer\n            while (!isNaN(interval) && Math.abs(interval) < 1 && Math.abs(interval) > 0) {\n                interval *= 10;\n            }\n\n            var niceExtent = [\n                numberUtil.round(mathCeil(extent[0] / interval) * interval),\n                numberUtil.round(mathFloor(extent[1] / interval) * interval)\n            ];\n\n            this._interval = interval;\n            this._niceExtent = niceExtent;\n        },\n\n        /**\n         * Nice extent.\n         * @param {number} [approxTickNum = 10] Given approx tick number\n         * @param {boolean} [fixMin=false]\n         * @param {boolean} [fixMax=false]\n         */\n        niceExtent: function (splitNumber, fixMin, fixMax) {\n            intervalScaleProto.niceExtent.call(this, splitNumber, fixMin, fixMax);\n\n            var originalScale = this._originalScale;\n            originalScale.__fixMin = fixMin;\n            originalScale.__fixMax = fixMax;\n        }\n\n    });\n\n    zrUtil.each(['contain', 'normalize'], function (methodName) {\n        LogScale.prototype[methodName] = function (val) {\n            val = mathLog(val) / mathLog(this.base);\n            return scaleProto[methodName].call(this, val);\n        };\n    });\n\n    LogScale.create = function () {\n        return new LogScale();\n    };\n\n    function fixRoundingError(val, originalVal) {\n        return roundingErrorFix(val, getPrecisionSafe(originalVal));\n    }\n\n    module.exports = LogScale;\n\n\n/***/ }),\n/* 589 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * Linear continuous scale\n * @module echarts/coord/scale/Ordinal\n *\n * http://en.wikipedia.org/wiki/Level_of_measurement\n */\n\n// FIXME only one data\n\n\n    var zrUtil = __webpack_require__(460);\n    var Scale = __webpack_require__(487);\n\n    var scaleProto = Scale.prototype;\n\n    var OrdinalScale = Scale.extend({\n\n        type: 'ordinal',\n\n        init: function (data, extent) {\n            this._data = data;\n            this._extent = extent || [0, data.length - 1];\n        },\n\n        parse: function (val) {\n            return typeof val === 'string'\n                ? zrUtil.indexOf(this._data, val)\n                // val might be float.\n                : Math.round(val);\n        },\n\n        contain: function (rank) {\n            rank = this.parse(rank);\n            return scaleProto.contain.call(this, rank)\n                && this._data[rank] != null;\n        },\n\n        /**\n         * Normalize given rank or name to linear [0, 1]\n         * @param {number|string} [val]\n         * @return {number}\n         */\n        normalize: function (val) {\n            return scaleProto.normalize.call(this, this.parse(val));\n        },\n\n        scale: function (val) {\n            return Math.round(scaleProto.scale.call(this, val));\n        },\n\n        /**\n         * @return {Array}\n         */\n        getTicks: function () {\n            var ticks = [];\n            var extent = this._extent;\n            var rank = extent[0];\n\n            while (rank <= extent[1]) {\n                ticks.push(rank);\n                rank++;\n            }\n\n            return ticks;\n        },\n\n        /**\n         * Get item on rank n\n         * @param {number} n\n         * @return {string}\n         */\n        getLabel: function (n) {\n            return this._data[n];\n        },\n\n        /**\n         * @return {number}\n         */\n        count: function () {\n            return this._extent[1] - this._extent[0] + 1;\n        },\n\n        /**\n         * @override\n         */\n        unionExtentFromData: function (data, dim) {\n            this.unionExtent(data.getDataExtent(dim, false));\n        },\n\n        niceTicks: zrUtil.noop,\n        niceExtent: zrUtil.noop\n    });\n\n    /**\n     * @return {module:echarts/scale/Time}\n     */\n    OrdinalScale.create = function () {\n        return new OrdinalScale();\n    };\n\n    module.exports = OrdinalScale;\n\n\n/***/ }),\n/* 590 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * Interval scale\n * @module echarts/coord/scale/Time\n */\n\n\n\n    var zrUtil = __webpack_require__(460);\n    var numberUtil = __webpack_require__(465);\n    var formatUtil = __webpack_require__(468);\n\n    var IntervalScale = __webpack_require__(495);\n\n    var intervalScaleProto = IntervalScale.prototype;\n\n    var mathCeil = Math.ceil;\n    var mathFloor = Math.floor;\n    var ONE_SECOND = 1000;\n    var ONE_MINUTE = ONE_SECOND * 60;\n    var ONE_HOUR = ONE_MINUTE * 60;\n    var ONE_DAY = ONE_HOUR * 24;\n\n    // FIXME 公用？\n    var bisect = function (a, x, lo, hi) {\n        while (lo < hi) {\n            var mid = lo + hi >>> 1;\n            if (a[mid][2] < x) {\n                lo = mid + 1;\n            }\n            else {\n                hi  = mid;\n            }\n        }\n        return lo;\n    };\n\n    /**\n     * @alias module:echarts/coord/scale/Time\n     * @constructor\n     */\n    var TimeScale = IntervalScale.extend({\n        type: 'time',\n\n        // Overwrite\n        getLabel: function (val) {\n            var stepLvl = this._stepLvl;\n\n            var date = new Date(val);\n\n            return formatUtil.formatTime(stepLvl[0], date);\n        },\n\n        // Overwrite\n        niceExtent: function (approxTickNum, fixMin, fixMax) {\n            var extent = this._extent;\n            // If extent start and end are same, expand them\n            if (extent[0] === extent[1]) {\n                // Expand extent\n                extent[0] -= ONE_DAY;\n                extent[1] += ONE_DAY;\n            }\n            // If there are no data and extent are [Infinity, -Infinity]\n            if (extent[1] === -Infinity && extent[0] === Infinity) {\n                var d = new Date();\n                extent[1] = new Date(d.getFullYear(), d.getMonth(), d.getDate());\n                extent[0] = extent[1] - ONE_DAY;\n            }\n\n            this.niceTicks(approxTickNum);\n\n            // var extent = this._extent;\n            var interval = this._interval;\n\n            if (!fixMin) {\n                extent[0] = numberUtil.round(mathFloor(extent[0] / interval) * interval);\n            }\n            if (!fixMax) {\n                extent[1] = numberUtil.round(mathCeil(extent[1] / interval) * interval);\n            }\n        },\n\n        // Overwrite\n        niceTicks: function (approxTickNum) {\n            approxTickNum = approxTickNum || 10;\n\n            var extent = this._extent;\n            var span = extent[1] - extent[0];\n            var approxInterval = span / approxTickNum;\n            var scaleLevelsLen = scaleLevels.length;\n            var idx = bisect(scaleLevels, approxInterval, 0, scaleLevelsLen);\n\n            var level = scaleLevels[Math.min(idx, scaleLevelsLen - 1)];\n            var interval = level[2];\n            // Same with interval scale if span is much larger than 1 year\n            if (level[0] === 'year') {\n                var yearSpan = span / interval;\n\n                // From \"Nice Numbers for Graph Labels\" of Graphic Gems\n                // var niceYearSpan = numberUtil.nice(yearSpan, false);\n                var yearStep = numberUtil.nice(yearSpan / approxTickNum, true);\n\n                interval *= yearStep;\n            }\n\n            var niceExtent = [\n                mathCeil(extent[0] / interval) * interval,\n                mathFloor(extent[1] / interval) * interval\n            ];\n\n            this._stepLvl = level;\n            // Interval will be used in getTicks\n            this._interval = interval;\n            this._niceExtent = niceExtent;\n        },\n\n        parse: function (val) {\n            // val might be float.\n            return +numberUtil.parseDate(val);\n        }\n    });\n\n    zrUtil.each(['contain', 'normalize'], function (methodName) {\n        TimeScale.prototype[methodName] = function (val) {\n            return intervalScaleProto[methodName].call(this, this.parse(val));\n        };\n    });\n\n    // Steps from d3\n    var scaleLevels = [\n        // Format       step    interval\n        ['hh:mm:ss',    1,      ONE_SECOND],           // 1s\n        ['hh:mm:ss',    5,      ONE_SECOND * 5],       // 5s\n        ['hh:mm:ss',    10,     ONE_SECOND * 10],      // 10s\n        ['hh:mm:ss',    15,     ONE_SECOND * 15],      // 15s\n        ['hh:mm:ss',    30,     ONE_SECOND * 30],      // 30s\n        ['hh:mm\\nMM-dd',1,      ONE_MINUTE],          // 1m\n        ['hh:mm\\nMM-dd',5,      ONE_MINUTE * 5],      // 5m\n        ['hh:mm\\nMM-dd',10,     ONE_MINUTE * 10],     // 10m\n        ['hh:mm\\nMM-dd',15,     ONE_MINUTE * 15],     // 15m\n        ['hh:mm\\nMM-dd',30,     ONE_MINUTE * 30],     // 30m\n        ['hh:mm\\nMM-dd',1,      ONE_HOUR],        // 1h\n        ['hh:mm\\nMM-dd',2,      ONE_HOUR * 2],    // 2h\n        ['hh:mm\\nMM-dd',6,      ONE_HOUR * 6],    // 6h\n        ['hh:mm\\nMM-dd',12,     ONE_HOUR * 12],   // 12h\n        ['MM-dd\\nyyyy', 1,      ONE_DAY],   // 1d\n        ['week',        7,      ONE_DAY * 7],        // 7d\n        ['month',       1,      ONE_DAY * 31],       // 1M\n        ['quarter',     3,      ONE_DAY * 380 / 4],  // 3M\n        ['half-year',   6,      ONE_DAY * 380 / 2],  // 6M\n        ['year',        1,      ONE_DAY * 380]       // 1Y\n    ];\n\n    /**\n     * @return {module:echarts/scale/Time}\n     */\n    TimeScale.create = function () {\n        return new TimeScale();\n    };\n\n    module.exports = TimeScale;\n\n\n/***/ }),\n/* 591 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n    var Gradient = __webpack_require__(490);\n    module.exports = function (ecModel) {\n        function encodeColor(seriesModel) {\n            var colorAccessPath = (seriesModel.visualColorAccessPath || 'itemStyle.normal.color').split('.');\n            var data = seriesModel.getData();\n            var color = seriesModel.get(colorAccessPath) // Set in itemStyle\n                || seriesModel.getColorFromPalette(seriesModel.get('name'));  // Default color\n\n            // FIXME Set color function or use the platte color\n            data.setVisual('color', color);\n\n            // Only visible series has each data be visual encoded\n            if (!ecModel.isSeriesFiltered(seriesModel)) {\n                if (typeof color === 'function' && !(color instanceof Gradient)) {\n                    data.each(function (idx) {\n                        data.setItemVisual(\n                            idx, 'color', color(seriesModel.getDataParams(idx))\n                        );\n                    });\n                }\n\n                // itemStyle in each data item\n                data.each(function (idx) {\n                    var itemModel = data.getItemModel(idx);\n                    var color = itemModel.get(colorAccessPath, true);\n                    if (color != null) {\n                        data.setItemVisual(idx, 'color', color);\n                    }\n                });\n            }\n        }\n        ecModel.eachRawSeries(encodeColor);\n    };\n\n\n/***/ }),\n/* 592 */\n/***/ (function(module, exports) {\n\n\n\n    module.exports = function (seriesType, defaultSymbolType, legendSymbol, ecModel, api) {\n\n        // Encoding visual for all series include which is filtered for legend drawing\n        ecModel.eachRawSeriesByType(seriesType, function (seriesModel) {\n            var data = seriesModel.getData();\n\n            var symbolType = seriesModel.get('symbol') || defaultSymbolType;\n            var symbolSize = seriesModel.get('symbolSize');\n\n            data.setVisual({\n                legendSymbol: legendSymbol || symbolType,\n                symbol: symbolType,\n                symbolSize: symbolSize\n            });\n\n            // Only visible series has each data be visual encoded\n            if (!ecModel.isSeriesFiltered(seriesModel)) {\n                if (typeof symbolSize === 'function') {\n                    data.each(function (idx) {\n                        var rawValue = seriesModel.getRawValue(idx);\n                        // FIXME\n                        var params = seriesModel.getDataParams(idx);\n                        data.setItemVisual(idx, 'symbolSize', symbolSize(rawValue, params));\n                    });\n                }\n                data.each(function (idx) {\n                    var itemModel = data.getItemModel(idx);\n                    var itemSymbolType = itemModel.getShallow('symbol', true);\n                    var itemSymbolSize = itemModel.getShallow('symbolSize', true);\n                    // If has item symbol\n                    if (itemSymbolType != null) {\n                        data.setItemVisual(idx, 'symbol', itemSymbolType);\n                    }\n                    if (itemSymbolSize != null) {\n                        // PENDING Transform symbolSize ?\n                        data.setItemVisual(idx, 'symbolSize', itemSymbolSize);\n                    }\n                });\n            }\n        });\n    };\n\n\n/***/ }),\n/* 593 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _zrender = __webpack_require__(502);\n\n(function () {\n  for (var key in _zrender) {\n    if (_zrender == null || !_zrender.hasOwnProperty(key) || key === 'default' || key === '__esModule') return;\n    exports[key] = _zrender[key];\n  }\n})();\n\nvar _export = __webpack_require__(611);\n\n(function () {\n  for (var key in _export) {\n    if (_export == null || !_export.hasOwnProperty(key) || key === 'default' || key === '__esModule') return;\n    exports[key] = _export[key];\n  }\n})();\n\n__webpack_require__(628);\n\n__webpack_require__(632);\n\n/***/ }),\n/* 594 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar util = __webpack_require__(460);\n\nvar vec2 = __webpack_require__(463);\n\nvar Draggable = __webpack_require__(623);\n\nvar Eventful = __webpack_require__(481);\n\n/**\n * Handler\n * @module zrender/Handler\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *         errorrik (errorrik@gmail.com)\n *         pissang (shenyi.914@gmail.com)\n */\nvar SILENT = 'silent';\n\nfunction makeEventPacket(eveType, targetInfo, event) {\n  return {\n    type: eveType,\n    event: event,\n    // target can only be an element that is not silent.\n    target: targetInfo.target,\n    // topTarget can be a silent element.\n    topTarget: targetInfo.topTarget,\n    cancelBubble: false,\n    offsetX: event.zrX,\n    offsetY: event.zrY,\n    gestureEvent: event.gestureEvent,\n    pinchX: event.pinchX,\n    pinchY: event.pinchY,\n    pinchScale: event.pinchScale,\n    wheelDelta: event.zrDelta,\n    zrByTouch: event.zrByTouch,\n    which: event.which\n  };\n}\n\nfunction EmptyProxy() {}\n\nEmptyProxy.prototype.dispose = function () {};\n\nvar handlerNames = ['click', 'dblclick', 'mousewheel', 'mouseout', 'mouseup', 'mousedown', 'mousemove', 'contextmenu'];\n/**\n * @alias module:zrender/Handler\n * @constructor\n * @extends module:zrender/mixin/Eventful\n * @param {module:zrender/Storage} storage Storage instance.\n * @param {module:zrender/Painter} painter Painter instance.\n * @param {module:zrender/dom/HandlerProxy} proxy HandlerProxy instance.\n * @param {HTMLElement} painterRoot painter.root (not painter.getViewportRoot()).\n */\n\nvar Handler = function (storage, painter, proxy, painterRoot) {\n  Eventful.call(this);\n  this.storage = storage;\n  this.painter = painter;\n  this.painterRoot = painterRoot;\n  proxy = proxy || new EmptyProxy();\n  /**\n   * Proxy of event. can be Dom, WebGLSurface, etc.\n   */\n\n  this.proxy = proxy; // Attach handler\n\n  proxy.handler = this;\n  /**\n   * {target, topTarget, x, y}\n   * @private\n   * @type {Object}\n   */\n\n  this._hovered = {};\n  /**\n   * @private\n   * @type {Date}\n   */\n\n  this._lastTouchMoment;\n  /**\n   * @private\n   * @type {number}\n   */\n\n  this._lastX;\n  /**\n   * @private\n   * @type {number}\n   */\n\n  this._lastY;\n  Draggable.call(this);\n  util.each(handlerNames, function (name) {\n    proxy.on && proxy.on(name, this[name], this);\n  }, this);\n};\n\nHandler.prototype = {\n  constructor: Handler,\n  mousemove: function (event) {\n    var x = event.zrX;\n    var y = event.zrY;\n    var lastHovered = this._hovered;\n    var lastHoveredTarget = lastHovered.target; // If lastHoveredTarget is removed from zr (detected by '__zr') by some API call\n    // (like 'setOption' or 'dispatchAction') in event handlers, we should find\n    // lastHovered again here. Otherwise 'mouseout' can not be triggered normally.\n    // See #6198.\n\n    if (lastHoveredTarget && !lastHoveredTarget.__zr) {\n      lastHovered = this.findHover(lastHovered.x, lastHovered.y);\n      lastHoveredTarget = lastHovered.target;\n    }\n\n    var hovered = this._hovered = this.findHover(x, y);\n    var hoveredTarget = hovered.target;\n    var proxy = this.proxy;\n    proxy.setCursor && proxy.setCursor(hoveredTarget ? hoveredTarget.cursor : 'default'); // Mouse out on previous hovered element\n\n    if (lastHoveredTarget && hoveredTarget !== lastHoveredTarget) {\n      this.dispatchToElement(lastHovered, 'mouseout', event);\n    } // Mouse moving on one element\n\n\n    this.dispatchToElement(hovered, 'mousemove', event); // Mouse over on a new element\n\n    if (hoveredTarget && hoveredTarget !== lastHoveredTarget) {\n      this.dispatchToElement(hovered, 'mouseover', event);\n    }\n  },\n  mouseout: function (event) {\n    this.dispatchToElement(this._hovered, 'mouseout', event); // There might be some doms created by upper layer application\n    // at the same level of painter.getViewportRoot() (e.g., tooltip\n    // dom created by echarts), where 'globalout' event should not\n    // be triggered when mouse enters these doms. (But 'mouseout'\n    // should be triggered at the original hovered element as usual).\n\n    var element = event.toElement || event.relatedTarget;\n    var innerDom;\n\n    do {\n      element = element && element.parentNode;\n    } while (element && element.nodeType != 9 && !(innerDom = element === this.painterRoot));\n\n    !innerDom && this.trigger('globalout', {\n      event: event\n    });\n  },\n\n  /**\n   * Resize\n   */\n  resize: function (event) {\n    this._hovered = {};\n  },\n\n  /**\n   * Dispatch event\n   * @param {string} eventName\n   * @param {event=} eventArgs\n   */\n  dispatch: function (eventName, eventArgs) {\n    var handler = this[eventName];\n    handler && handler.call(this, eventArgs);\n  },\n\n  /**\n   * Dispose\n   */\n  dispose: function () {\n    this.proxy.dispose();\n    this.storage = this.proxy = this.painter = null;\n  },\n\n  /**\n   * 设置默认的cursor style\n   * @param {string} [cursorStyle='default'] 例如 crosshair\n   */\n  setCursorStyle: function (cursorStyle) {\n    var proxy = this.proxy;\n    proxy.setCursor && proxy.setCursor(cursorStyle);\n  },\n\n  /**\n   * 事件分发代理\n   *\n   * @private\n   * @param {Object} targetInfo {target, topTarget} 目标图形元素\n   * @param {string} eventName 事件名称\n   * @param {Object} event 事件对象\n   */\n  dispatchToElement: function (targetInfo, eventName, event) {\n    targetInfo = targetInfo || {};\n    var el = targetInfo.target;\n\n    if (el && el.silent) {\n      return;\n    }\n\n    var eventHandler = 'on' + eventName;\n    var eventPacket = makeEventPacket(eventName, targetInfo, event);\n\n    while (el) {\n      el[eventHandler] && (eventPacket.cancelBubble = el[eventHandler].call(el, eventPacket));\n      el.trigger(eventName, eventPacket);\n      el = el.parent;\n\n      if (eventPacket.cancelBubble) {\n        break;\n      }\n    }\n\n    if (!eventPacket.cancelBubble) {\n      // 冒泡到顶级 zrender 对象\n      this.trigger(eventName, eventPacket); // 分发事件到用户自定义层\n      // 用户有可能在全局 click 事件中 dispose，所以需要判断下 painter 是否存在\n\n      this.painter && this.painter.eachOtherLayer(function (layer) {\n        if (typeof layer[eventHandler] == 'function') {\n          layer[eventHandler].call(layer, eventPacket);\n        }\n\n        if (layer.trigger) {\n          layer.trigger(eventName, eventPacket);\n        }\n      });\n    }\n  },\n\n  /**\n   * @private\n   * @param {number} x\n   * @param {number} y\n   * @param {module:zrender/graphic/Displayable} exclude\n   * @return {model:zrender/Element}\n   * @method\n   */\n  findHover: function (x, y, exclude) {\n    var list = this.storage.getDisplayList();\n    var out = {\n      x: x,\n      y: y\n    };\n\n    for (var i = list.length - 1; i >= 0; i--) {\n      var hoverCheckResult;\n\n      if (list[i] !== exclude // getDisplayList may include ignored item in VML mode\n      && !list[i].ignore && (hoverCheckResult = isHover(list[i], x, y))) {\n        !out.topTarget && (out.topTarget = list[i]);\n\n        if (hoverCheckResult !== SILENT) {\n          out.target = list[i];\n          break;\n        }\n      }\n    }\n\n    return out;\n  }\n}; // Common handlers\n\nutil.each(['click', 'mousedown', 'mouseup', 'mousewheel', 'dblclick', 'contextmenu'], function (name) {\n  Handler.prototype[name] = function (event) {\n    // Find hover again to avoid click event is dispatched manually. Or click is triggered without mouseover\n    var hovered = this.findHover(event.zrX, event.zrY);\n    var hoveredTarget = hovered.target;\n\n    if (name === 'mousedown') {\n      this._downEl = hoveredTarget;\n      this._downPoint = [event.zrX, event.zrY]; // In case click triggered before mouseup\n\n      this._upEl = hoveredTarget;\n    } else if (name === 'mosueup') {\n      this._upEl = hoveredTarget;\n    } else if (name === 'click') {\n      if (this._downEl !== this._upEl // Original click event is triggered on the whole canvas element,\n      // including the case that `mousedown` - `mousemove` - `mouseup`,\n      // which should be filtered, otherwise it will bring trouble to\n      // pan and zoom.\n      || !this._downPoint // Arbitrary value\n      || vec2.dist(this._downPoint, [event.zrX, event.zrY]) > 4) {\n        return;\n      }\n\n      this._downPoint = null;\n    }\n\n    this.dispatchToElement(hovered, name, event);\n  };\n});\n\nfunction isHover(displayable, x, y) {\n  if (displayable[displayable.rectHover ? 'rectContain' : 'contain'](x, y)) {\n    var el = displayable;\n    var isSilent;\n\n    while (el) {\n      // If clipped by ancestor.\n      // FIXME: If clipPath has neither stroke nor fill,\n      // el.clipPath.contain(x, y) will always return false.\n      if (el.clipPath && !el.clipPath.contain(x, y)) {\n        return false;\n      }\n\n      if (el.silent) {\n        isSilent = true;\n      }\n\n      el = el.parent;\n    }\n\n    return isSilent ? SILENT : true;\n  }\n\n  return false;\n}\n\nutil.mixin(Handler, Eventful);\nutil.mixin(Handler, Draggable);\nvar _default = Handler;\nmodule.exports = _default;\n\n/***/ }),\n/* 595 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar util = __webpack_require__(460);\n\nvar _config = __webpack_require__(488);\n\nvar devicePixelRatio = _config.devicePixelRatio;\n\nvar Style = __webpack_require__(520);\n\nvar Pattern = __webpack_require__(498);\n\n/**\n * @module zrender/Layer\n * @author pissang(https://www.github.com/pissang)\n */\nfunction returnFalse() {\n  return false;\n}\n/**\n * 创建dom\n *\n * @inner\n * @param {string} id dom id 待用\n * @param {Painter} painter painter instance\n * @param {number} number\n */\n\n\nfunction createDom(id, painter, dpr) {\n  var newDom = util.createCanvas();\n  var width = painter.getWidth();\n  var height = painter.getHeight();\n  var newDomStyle = newDom.style; // 没append呢，请原谅我这样写，清晰~\n\n  newDomStyle.position = 'absolute';\n  newDomStyle.left = 0;\n  newDomStyle.top = 0;\n  newDomStyle.width = width + 'px';\n  newDomStyle.height = height + 'px';\n  newDom.width = width * dpr;\n  newDom.height = height * dpr; // id不作为索引用，避免可能造成的重名，定义为私有属性\n\n  newDom.setAttribute('data-zr-dom-id', id);\n  return newDom;\n}\n/**\n * @alias module:zrender/Layer\n * @constructor\n * @extends module:zrender/mixin/Transformable\n * @param {string} id\n * @param {module:zrender/Painter} painter\n * @param {number} [dpr]\n */\n\n\nvar Layer = function (id, painter, dpr) {\n  var dom;\n  dpr = dpr || devicePixelRatio;\n\n  if (typeof id === 'string') {\n    dom = createDom(id, painter, dpr);\n  } // Not using isDom because in node it will return false\n  else if (util.isObject(id)) {\n      dom = id;\n      id = dom.id;\n    }\n\n  this.id = id;\n  this.dom = dom;\n  var domStyle = dom.style;\n\n  if (domStyle) {\n    // Not in node\n    dom.onselectstart = returnFalse; // 避免页面选中的尴尬\n\n    domStyle['-webkit-user-select'] = 'none';\n    domStyle['user-select'] = 'none';\n    domStyle['-webkit-touch-callout'] = 'none';\n    domStyle['-webkit-tap-highlight-color'] = 'rgba(0,0,0,0)';\n    domStyle['padding'] = 0;\n    domStyle['margin'] = 0;\n    domStyle['border-width'] = 0;\n  }\n\n  this.domBack = null;\n  this.ctxBack = null;\n  this.painter = painter;\n  this.config = null; // Configs\n\n  /**\n   * 每次清空画布的颜色\n   * @type {string}\n   * @default 0\n   */\n\n  this.clearColor = 0;\n  /**\n   * 是否开启动态模糊\n   * @type {boolean}\n   * @default false\n   */\n\n  this.motionBlur = false;\n  /**\n   * 在开启动态模糊的时候使用，与上一帧混合的alpha值，值越大尾迹越明显\n   * @type {number}\n   * @default 0.7\n   */\n\n  this.lastFrameAlpha = 0.7;\n  /**\n   * Layer dpr\n   * @type {number}\n   */\n\n  this.dpr = dpr;\n};\n\nLayer.prototype = {\n  constructor: Layer,\n  elCount: 0,\n  __dirty: true,\n  initContext: function () {\n    this.ctx = this.dom.getContext('2d');\n    this.ctx.__currentValues = {};\n    this.ctx.dpr = this.dpr;\n  },\n  createBackBuffer: function () {\n    var dpr = this.dpr;\n    this.domBack = createDom('back-' + this.id, this.painter, dpr);\n    this.ctxBack = this.domBack.getContext('2d');\n    this.ctxBack.__currentValues = {};\n\n    if (dpr != 1) {\n      this.ctxBack.scale(dpr, dpr);\n    }\n  },\n\n  /**\n   * @param  {number} width\n   * @param  {number} height\n   */\n  resize: function (width, height) {\n    var dpr = this.dpr;\n    var dom = this.dom;\n    var domStyle = dom.style;\n    var domBack = this.domBack;\n    domStyle.width = width + 'px';\n    domStyle.height = height + 'px';\n    dom.width = width * dpr;\n    dom.height = height * dpr;\n\n    if (domBack) {\n      domBack.width = width * dpr;\n      domBack.height = height * dpr;\n\n      if (dpr != 1) {\n        this.ctxBack.scale(dpr, dpr);\n      }\n    }\n  },\n\n  /**\n   * 清空该层画布\n   * @param {boolean} clearAll Clear all with out motion blur\n   */\n  clear: function (clearAll) {\n    var dom = this.dom;\n    var ctx = this.ctx;\n    var width = dom.width;\n    var height = dom.height;\n    var clearColor = this.clearColor;\n    var haveMotionBLur = this.motionBlur && !clearAll;\n    var lastFrameAlpha = this.lastFrameAlpha;\n    var dpr = this.dpr;\n\n    if (haveMotionBLur) {\n      if (!this.domBack) {\n        this.createBackBuffer();\n      }\n\n      this.ctxBack.globalCompositeOperation = 'copy';\n      this.ctxBack.drawImage(dom, 0, 0, width / dpr, height / dpr);\n    }\n\n    ctx.clearRect(0, 0, width, height);\n\n    if (clearColor) {\n      var clearColorGradientOrPattern; // Gradient\n\n      if (clearColor.colorStops) {\n        // Cache canvas gradient\n        clearColorGradientOrPattern = clearColor.__canvasGradient || Style.getGradient(ctx, clearColor, {\n          x: 0,\n          y: 0,\n          width: width,\n          height: height\n        });\n        clearColor.__canvasGradient = clearColorGradientOrPattern;\n      } // Pattern\n      else if (clearColor.image) {\n          clearColorGradientOrPattern = Pattern.prototype.getCanvasPattern.call(clearColor, ctx);\n        }\n\n      ctx.save();\n      ctx.fillStyle = clearColorGradientOrPattern || clearColor;\n      ctx.fillRect(0, 0, width, height);\n      ctx.restore();\n    }\n\n    if (haveMotionBLur) {\n      var domBack = this.domBack;\n      ctx.save();\n      ctx.globalAlpha = lastFrameAlpha;\n      ctx.drawImage(domBack, 0, 0, width, height);\n      ctx.restore();\n    }\n  }\n};\nvar _default = Layer;\nmodule.exports = _default;\n\n/***/ }),\n/* 596 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _config = __webpack_require__(488);\n\nvar devicePixelRatio = _config.devicePixelRatio;\n\nvar util = __webpack_require__(460);\n\nvar log = __webpack_require__(484);\n\nvar BoundingRect = __webpack_require__(467);\n\nvar timsort = __webpack_require__(497);\n\nvar Layer = __webpack_require__(595);\n\nvar requestAnimationFrame = __webpack_require__(513);\n\nvar Image = __webpack_require__(479);\n\n/**\n * Default canvas painter\n * @module zrender/Painter\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *         errorrik (errorrik@gmail.com)\n *         pissang (https://www.github.com/pissang)\n */\n// PENDIGN\n// Layer exceeds MAX_PROGRESSIVE_LAYER_NUMBER may have some problem when flush directly second time.\n//\n// Maximum progressive layer. When exceeding this number. All elements will be drawed in the last layer.\nvar MAX_PROGRESSIVE_LAYER_NUMBER = 5;\n\nfunction parseInt10(val) {\n  return parseInt(val, 10);\n}\n\nfunction isLayerValid(layer) {\n  if (!layer) {\n    return false;\n  }\n\n  if (layer.__builtin__) {\n    return true;\n  }\n\n  if (typeof layer.resize !== 'function' || typeof layer.refresh !== 'function') {\n    return false;\n  }\n\n  return true;\n}\n\nfunction preProcessLayer(layer) {\n  layer.__unusedCount++;\n}\n\nfunction postProcessLayer(layer) {\n  if (layer.__unusedCount == 1) {\n    layer.clear();\n  }\n}\n\nvar tmpRect = new BoundingRect(0, 0, 0, 0);\nvar viewRect = new BoundingRect(0, 0, 0, 0);\n\nfunction isDisplayableCulled(el, width, height) {\n  tmpRect.copy(el.getBoundingRect());\n\n  if (el.transform) {\n    tmpRect.applyTransform(el.transform);\n  }\n\n  viewRect.width = width;\n  viewRect.height = height;\n  return !tmpRect.intersect(viewRect);\n}\n\nfunction isClipPathChanged(clipPaths, prevClipPaths) {\n  if (clipPaths == prevClipPaths) {\n    // Can both be null or undefined\n    return false;\n  }\n\n  if (!clipPaths || !prevClipPaths || clipPaths.length !== prevClipPaths.length) {\n    return true;\n  }\n\n  for (var i = 0; i < clipPaths.length; i++) {\n    if (clipPaths[i] !== prevClipPaths[i]) {\n      return true;\n    }\n  }\n}\n\nfunction doClip(clipPaths, ctx) {\n  for (var i = 0; i < clipPaths.length; i++) {\n    var clipPath = clipPaths[i];\n    clipPath.setTransform(ctx);\n    ctx.beginPath();\n    clipPath.buildPath(ctx, clipPath.shape);\n    ctx.clip(); // Transform back\n\n    clipPath.restoreTransform(ctx);\n  }\n}\n\nfunction createRoot(width, height) {\n  var domRoot = document.createElement('div'); // domRoot.onselectstart = returnFalse; // 避免页面选中的尴尬\n\n  domRoot.style.cssText = ['position:relative', 'overflow:hidden', 'width:' + width + 'px', 'height:' + height + 'px', 'padding:0', 'margin:0', 'border-width:0'].join(';') + ';';\n  return domRoot;\n}\n/**\n * @alias module:zrender/Painter\n * @constructor\n * @param {HTMLElement} root 绘图容器\n * @param {module:zrender/Storage} storage\n * @param {Object} opts\n */\n\n\nvar Painter = function (root, storage, opts) {\n  this.type = 'canvas'; // In node environment using node-canvas\n\n  var singleCanvas = !root.nodeName // In node ?\n  || root.nodeName.toUpperCase() === 'CANVAS';\n  this._opts = opts = util.extend({}, opts || {});\n  /**\n   * @type {number}\n   */\n\n  this.dpr = opts.devicePixelRatio || devicePixelRatio;\n  /**\n   * @type {boolean}\n   * @private\n   */\n\n  this._singleCanvas = singleCanvas;\n  /**\n   * 绘图容器\n   * @type {HTMLElement}\n   */\n\n  this.root = root;\n  var rootStyle = root.style;\n\n  if (rootStyle) {\n    rootStyle['-webkit-tap-highlight-color'] = 'transparent';\n    rootStyle['-webkit-user-select'] = rootStyle['user-select'] = rootStyle['-webkit-touch-callout'] = 'none';\n    root.innerHTML = '';\n  }\n  /**\n   * @type {module:zrender/Storage}\n   */\n\n\n  this.storage = storage;\n  /**\n   * @type {Array.<number>}\n   * @private\n   */\n\n  var zlevelList = this._zlevelList = [];\n  /**\n   * @type {Object.<string, module:zrender/Layer>}\n   * @private\n   */\n\n  var layers = this._layers = {};\n  /**\n   * @type {Object.<string, Object>}\n   * @type {private}\n   */\n\n  this._layerConfig = {};\n\n  if (!singleCanvas) {\n    this._width = this._getSize(0);\n    this._height = this._getSize(1);\n    var domRoot = this._domRoot = createRoot(this._width, this._height);\n    root.appendChild(domRoot);\n  } else {\n    if (opts.width != null) {\n      root.width = opts.width;\n    }\n\n    if (opts.height != null) {\n      root.height = opts.height;\n    } // Use canvas width and height directly\n\n\n    var width = root.width;\n    var height = root.height;\n    this._width = width;\n    this._height = height; // Create layer if only one given canvas\n    // Device pixel ratio is fixed to 1 because given canvas has its specified width and height\n\n    var mainLayer = new Layer(root, this, 1);\n    mainLayer.initContext(); // FIXME Use canvas width and height\n    // mainLayer.resize(width, height);\n\n    layers[0] = mainLayer;\n    zlevelList.push(0);\n    this._domRoot = root;\n  } // Layers for progressive rendering\n\n\n  this._progressiveLayers = [];\n  /**\n   * @type {module:zrender/Layer}\n   * @private\n   */\n\n  this._hoverlayer;\n  this._hoverElements = [];\n};\n\nPainter.prototype = {\n  constructor: Painter,\n  getType: function () {\n    return 'canvas';\n  },\n\n  /**\n   * If painter use a single canvas\n   * @return {boolean}\n   */\n  isSingleCanvas: function () {\n    return this._singleCanvas;\n  },\n\n  /**\n   * @return {HTMLDivElement}\n   */\n  getViewportRoot: function () {\n    return this._domRoot;\n  },\n  getViewportRootOffset: function () {\n    var viewportRoot = this.getViewportRoot();\n\n    if (viewportRoot) {\n      return {\n        offsetLeft: viewportRoot.offsetLeft || 0,\n        offsetTop: viewportRoot.offsetTop || 0\n      };\n    }\n  },\n\n  /**\n   * 刷新\n   * @param {boolean} [paintAll=false] 强制绘制所有displayable\n   */\n  refresh: function (paintAll) {\n    var list = this.storage.getDisplayList(true);\n    var zlevelList = this._zlevelList;\n\n    this._paintList(list, paintAll); // Paint custum layers\n\n\n    for (var i = 0; i < zlevelList.length; i++) {\n      var z = zlevelList[i];\n      var layer = this._layers[z];\n\n      if (!layer.__builtin__ && layer.refresh) {\n        layer.refresh();\n      }\n    }\n\n    this.refreshHover();\n\n    if (this._progressiveLayers.length) {\n      this._startProgessive();\n    }\n\n    return this;\n  },\n  addHover: function (el, hoverStyle) {\n    if (el.__hoverMir) {\n      return;\n    }\n\n    var elMirror = new el.constructor({\n      style: el.style,\n      shape: el.shape\n    });\n    elMirror.__from = el;\n    el.__hoverMir = elMirror;\n    elMirror.setStyle(hoverStyle);\n\n    this._hoverElements.push(elMirror);\n  },\n  removeHover: function (el) {\n    var elMirror = el.__hoverMir;\n    var hoverElements = this._hoverElements;\n    var idx = util.indexOf(hoverElements, elMirror);\n\n    if (idx >= 0) {\n      hoverElements.splice(idx, 1);\n    }\n\n    el.__hoverMir = null;\n  },\n  clearHover: function (el) {\n    var hoverElements = this._hoverElements;\n\n    for (var i = 0; i < hoverElements.length; i++) {\n      var from = hoverElements[i].__from;\n\n      if (from) {\n        from.__hoverMir = null;\n      }\n    }\n\n    hoverElements.length = 0;\n  },\n  refreshHover: function () {\n    var hoverElements = this._hoverElements;\n    var len = hoverElements.length;\n    var hoverLayer = this._hoverlayer;\n    hoverLayer && hoverLayer.clear();\n\n    if (!len) {\n      return;\n    }\n\n    timsort(hoverElements, this.storage.displayableSortFunc); // Use a extream large zlevel\n    // FIXME?\n\n    if (!hoverLayer) {\n      hoverLayer = this._hoverlayer = this.getLayer(1e5);\n    }\n\n    var scope = {};\n    hoverLayer.ctx.save();\n\n    for (var i = 0; i < len;) {\n      var el = hoverElements[i];\n      var originalEl = el.__from; // Original el is removed\n      // PENDING\n\n      if (!(originalEl && originalEl.__zr)) {\n        hoverElements.splice(i, 1);\n        originalEl.__hoverMir = null;\n        len--;\n        continue;\n      }\n\n      i++; // Use transform\n      // FIXME style and shape ?\n\n      if (!originalEl.invisible) {\n        el.transform = originalEl.transform;\n        el.invTransform = originalEl.invTransform;\n        el.__clipPaths = originalEl.__clipPaths; // el.\n\n        this._doPaintEl(el, hoverLayer, true, scope);\n      }\n    }\n\n    hoverLayer.ctx.restore();\n  },\n  _startProgessive: function () {\n    var self = this;\n\n    if (!self._furtherProgressive) {\n      return;\n    } // Use a token to stop progress steps triggered by\n    // previous zr.refresh calling.\n\n\n    var token = self._progressiveToken = +new Date();\n    self._progress++;\n    requestAnimationFrame(step);\n\n    function step() {\n      // In case refreshed or disposed\n      if (token === self._progressiveToken && self.storage) {\n        self._doPaintList(self.storage.getDisplayList());\n\n        if (self._furtherProgressive) {\n          self._progress++;\n          requestAnimationFrame(step);\n        } else {\n          self._progressiveToken = -1;\n        }\n      }\n    }\n  },\n  _clearProgressive: function () {\n    this._progressiveToken = -1;\n    this._progress = 0;\n    util.each(this._progressiveLayers, function (layer) {\n      layer.__dirty && layer.clear();\n    });\n  },\n  _paintList: function (list, paintAll) {\n    if (paintAll == null) {\n      paintAll = false;\n    }\n\n    this._updateLayerStatus(list);\n\n    this._clearProgressive();\n\n    this.eachBuiltinLayer(preProcessLayer);\n\n    this._doPaintList(list, paintAll);\n\n    this.eachBuiltinLayer(postProcessLayer);\n  },\n  _doPaintList: function (list, paintAll) {\n    var currentLayer;\n    var currentZLevel;\n    var ctx; // var invTransform = [];\n\n    var scope;\n    var progressiveLayerIdx = 0;\n    var currentProgressiveLayer;\n    var width = this._width;\n    var height = this._height;\n    var layerProgress;\n    var frame = this._progress;\n\n    function flushProgressiveLayer(layer) {\n      var dpr = ctx.dpr || 1;\n      ctx.save();\n      ctx.globalAlpha = 1;\n      ctx.shadowBlur = 0; // Avoid layer don't clear in next progressive frame\n\n      currentLayer.__dirty = true;\n      ctx.setTransform(1, 0, 0, 1, 0, 0);\n      ctx.drawImage(layer.dom, 0, 0, width * dpr, height * dpr);\n      ctx.restore();\n    }\n\n    for (var i = 0, l = list.length; i < l; i++) {\n      var el = list[i];\n      var elZLevel = this._singleCanvas ? 0 : el.zlevel;\n      var elFrame = el.__frame; // Flush at current context\n      // PENDING\n\n      if (elFrame < 0 && currentProgressiveLayer) {\n        flushProgressiveLayer(currentProgressiveLayer);\n        currentProgressiveLayer = null;\n      } // Change draw layer\n\n\n      if (currentZLevel !== elZLevel) {\n        if (ctx) {\n          ctx.restore();\n        } // Reset scope\n\n\n        scope = {}; // Only 0 zlevel if only has one canvas\n\n        currentZLevel = elZLevel;\n        currentLayer = this.getLayer(currentZLevel);\n\n        if (!currentLayer.__builtin__) {\n          log('ZLevel ' + currentZLevel + ' has been used by unkown layer ' + currentLayer.id);\n        }\n\n        ctx = currentLayer.ctx;\n        ctx.save(); // Reset the count\n\n        currentLayer.__unusedCount = 0;\n\n        if (currentLayer.__dirty || paintAll) {\n          currentLayer.clear();\n        }\n      }\n\n      if (!(currentLayer.__dirty || paintAll)) {\n        continue;\n      }\n\n      if (elFrame >= 0) {\n        // Progressive layer changed\n        if (!currentProgressiveLayer) {\n          currentProgressiveLayer = this._progressiveLayers[Math.min(progressiveLayerIdx++, MAX_PROGRESSIVE_LAYER_NUMBER - 1)];\n          currentProgressiveLayer.ctx.save();\n          currentProgressiveLayer.renderScope = {};\n\n          if (currentProgressiveLayer && currentProgressiveLayer.__progress > currentProgressiveLayer.__maxProgress) {\n            // flushProgressiveLayer(currentProgressiveLayer);\n            // Quick jump all progressive elements\n            // All progressive element are not dirty, jump over and flush directly\n            i = currentProgressiveLayer.__nextIdxNotProg - 1; // currentProgressiveLayer = null;\n\n            continue;\n          }\n\n          layerProgress = currentProgressiveLayer.__progress;\n\n          if (!currentProgressiveLayer.__dirty) {\n            // Keep rendering\n            frame = layerProgress;\n          }\n\n          currentProgressiveLayer.__progress = frame + 1;\n        }\n\n        if (elFrame === frame) {\n          this._doPaintEl(el, currentProgressiveLayer, true, currentProgressiveLayer.renderScope);\n        }\n      } else {\n        this._doPaintEl(el, currentLayer, paintAll, scope);\n      }\n\n      el.__dirty = false;\n    }\n\n    if (currentProgressiveLayer) {\n      flushProgressiveLayer(currentProgressiveLayer);\n    } // Restore the lastLayer ctx\n\n\n    ctx && ctx.restore(); // If still has clipping state\n    // if (scope.prevElClipPaths) {\n    //     ctx.restore();\n    // }\n\n    this._furtherProgressive = false;\n    util.each(this._progressiveLayers, function (layer) {\n      if (layer.__maxProgress >= layer.__progress) {\n        this._furtherProgressive = true;\n      }\n    }, this);\n  },\n  _doPaintEl: function (el, currentLayer, forcePaint, scope) {\n    var ctx = currentLayer.ctx;\n    var m = el.transform;\n\n    if ((currentLayer.__dirty || forcePaint) && // Ignore invisible element\n    !el.invisible // Ignore transparent element\n    && el.style.opacity !== 0 // Ignore scale 0 element, in some environment like node-canvas\n    // Draw a scale 0 element can cause all following draw wrong\n    // And setTransform with scale 0 will cause set back transform failed.\n    && !(m && !m[0] && !m[3]) // Ignore culled element\n    && !(el.culling && isDisplayableCulled(el, this._width, this._height))) {\n      var clipPaths = el.__clipPaths; // Optimize when clipping on group with several elements\n\n      if (scope.prevClipLayer !== currentLayer || isClipPathChanged(clipPaths, scope.prevElClipPaths)) {\n        // If has previous clipping state, restore from it\n        if (scope.prevElClipPaths) {\n          scope.prevClipLayer.ctx.restore();\n          scope.prevClipLayer = scope.prevElClipPaths = null; // Reset prevEl since context has been restored\n\n          scope.prevEl = null;\n        } // New clipping state\n\n\n        if (clipPaths) {\n          ctx.save();\n          doClip(clipPaths, ctx);\n          scope.prevClipLayer = currentLayer;\n          scope.prevElClipPaths = clipPaths;\n        }\n      }\n\n      el.beforeBrush && el.beforeBrush(ctx);\n      el.brush(ctx, scope.prevEl || null);\n      scope.prevEl = el;\n      el.afterBrush && el.afterBrush(ctx);\n    }\n  },\n\n  /**\n   * 获取 zlevel 所在层，如果不存在则会创建一个新的层\n   * @param {number} zlevel\n   * @return {module:zrender/Layer}\n   */\n  getLayer: function (zlevel) {\n    if (this._singleCanvas) {\n      return this._layers[0];\n    }\n\n    var layer = this._layers[zlevel];\n\n    if (!layer) {\n      // Create a new layer\n      layer = new Layer('zr_' + zlevel, this, this.dpr);\n      layer.__builtin__ = true;\n\n      if (this._layerConfig[zlevel]) {\n        util.merge(layer, this._layerConfig[zlevel], true);\n      }\n\n      this.insertLayer(zlevel, layer); // Context is created after dom inserted to document\n      // Or excanvas will get 0px clientWidth and clientHeight\n\n      layer.initContext();\n    }\n\n    return layer;\n  },\n  insertLayer: function (zlevel, layer) {\n    var layersMap = this._layers;\n    var zlevelList = this._zlevelList;\n    var len = zlevelList.length;\n    var prevLayer = null;\n    var i = -1;\n    var domRoot = this._domRoot;\n\n    if (layersMap[zlevel]) {\n      log('ZLevel ' + zlevel + ' has been used already');\n      return;\n    } // Check if is a valid layer\n\n\n    if (!isLayerValid(layer)) {\n      log('Layer of zlevel ' + zlevel + ' is not valid');\n      return;\n    }\n\n    if (len > 0 && zlevel > zlevelList[0]) {\n      for (i = 0; i < len - 1; i++) {\n        if (zlevelList[i] < zlevel && zlevelList[i + 1] > zlevel) {\n          break;\n        }\n      }\n\n      prevLayer = layersMap[zlevelList[i]];\n    }\n\n    zlevelList.splice(i + 1, 0, zlevel);\n    layersMap[zlevel] = layer; // Vitual layer will not directly show on the screen.\n    // (It can be a WebGL layer and assigned to a ZImage element)\n    // But it still under management of zrender.\n\n    if (!layer.virtual) {\n      if (prevLayer) {\n        var prevDom = prevLayer.dom;\n\n        if (prevDom.nextSibling) {\n          domRoot.insertBefore(layer.dom, prevDom.nextSibling);\n        } else {\n          domRoot.appendChild(layer.dom);\n        }\n      } else {\n        if (domRoot.firstChild) {\n          domRoot.insertBefore(layer.dom, domRoot.firstChild);\n        } else {\n          domRoot.appendChild(layer.dom);\n        }\n      }\n    }\n  },\n  // Iterate each layer\n  eachLayer: function (cb, context) {\n    var zlevelList = this._zlevelList;\n    var z;\n    var i;\n\n    for (i = 0; i < zlevelList.length; i++) {\n      z = zlevelList[i];\n      cb.call(context, this._layers[z], z);\n    }\n  },\n  // Iterate each buildin layer\n  eachBuiltinLayer: function (cb, context) {\n    var zlevelList = this._zlevelList;\n    var layer;\n    var z;\n    var i;\n\n    for (i = 0; i < zlevelList.length; i++) {\n      z = zlevelList[i];\n      layer = this._layers[z];\n\n      if (layer.__builtin__) {\n        cb.call(context, layer, z);\n      }\n    }\n  },\n  // Iterate each other layer except buildin layer\n  eachOtherLayer: function (cb, context) {\n    var zlevelList = this._zlevelList;\n    var layer;\n    var z;\n    var i;\n\n    for (i = 0; i < zlevelList.length; i++) {\n      z = zlevelList[i];\n      layer = this._layers[z];\n\n      if (!layer.__builtin__) {\n        cb.call(context, layer, z);\n      }\n    }\n  },\n\n  /**\n   * 获取所有已创建的层\n   * @param {Array.<module:zrender/Layer>} [prevLayer]\n   */\n  getLayers: function () {\n    return this._layers;\n  },\n  _updateLayerStatus: function (list) {\n    var layers = this._layers;\n    var progressiveLayers = this._progressiveLayers;\n    var elCountsLastFrame = {};\n    var progressiveElCountsLastFrame = {};\n    this.eachBuiltinLayer(function (layer, z) {\n      elCountsLastFrame[z] = layer.elCount;\n      layer.elCount = 0;\n      layer.__dirty = false;\n    });\n    util.each(progressiveLayers, function (layer, idx) {\n      progressiveElCountsLastFrame[idx] = layer.elCount;\n      layer.elCount = 0;\n      layer.__dirty = false;\n    });\n    var progressiveLayerCount = 0;\n    var currentProgressiveLayer;\n    var lastProgressiveKey;\n    var frameCount = 0;\n\n    for (var i = 0, l = list.length; i < l; i++) {\n      var el = list[i];\n      var zlevel = this._singleCanvas ? 0 : el.zlevel;\n      var layer = layers[zlevel];\n      var elProgress = el.progressive;\n\n      if (layer) {\n        layer.elCount++;\n        layer.__dirty = layer.__dirty || el.__dirty;\n      } /////// Update progressive\n\n\n      if (elProgress >= 0) {\n        // Fix wrong progressive sequence problem.\n        if (lastProgressiveKey !== elProgress) {\n          lastProgressiveKey = elProgress;\n          frameCount++;\n        }\n\n        var elFrame = el.__frame = frameCount - 1;\n\n        if (!currentProgressiveLayer) {\n          var idx = Math.min(progressiveLayerCount, MAX_PROGRESSIVE_LAYER_NUMBER - 1);\n          currentProgressiveLayer = progressiveLayers[idx];\n\n          if (!currentProgressiveLayer) {\n            currentProgressiveLayer = progressiveLayers[idx] = new Layer('progressive', this, this.dpr);\n            currentProgressiveLayer.initContext();\n          }\n\n          currentProgressiveLayer.__maxProgress = 0;\n        }\n\n        currentProgressiveLayer.__dirty = currentProgressiveLayer.__dirty || el.__dirty;\n        currentProgressiveLayer.elCount++;\n        currentProgressiveLayer.__maxProgress = Math.max(currentProgressiveLayer.__maxProgress, elFrame);\n\n        if (currentProgressiveLayer.__maxProgress >= currentProgressiveLayer.__progress) {\n          // Should keep rendering this  layer because progressive rendering is not finished yet\n          layer.__dirty = true;\n        }\n      } else {\n        el.__frame = -1;\n\n        if (currentProgressiveLayer) {\n          currentProgressiveLayer.__nextIdxNotProg = i;\n          progressiveLayerCount++;\n          currentProgressiveLayer = null;\n        }\n      }\n    }\n\n    if (currentProgressiveLayer) {\n      progressiveLayerCount++;\n      currentProgressiveLayer.__nextIdxNotProg = i;\n    } // 层中的元素数量有发生变化\n\n\n    this.eachBuiltinLayer(function (layer, z) {\n      if (elCountsLastFrame[z] !== layer.elCount) {\n        layer.__dirty = true;\n      }\n    });\n    progressiveLayers.length = Math.min(progressiveLayerCount, MAX_PROGRESSIVE_LAYER_NUMBER);\n    util.each(progressiveLayers, function (layer, idx) {\n      if (progressiveElCountsLastFrame[idx] !== layer.elCount) {\n        el.__dirty = true;\n      }\n\n      if (layer.__dirty) {\n        layer.__progress = 0;\n      }\n    });\n  },\n\n  /**\n   * 清除hover层外所有内容\n   */\n  clear: function () {\n    this.eachBuiltinLayer(this._clearLayer);\n    return this;\n  },\n  _clearLayer: function (layer) {\n    layer.clear();\n  },\n\n  /**\n   * 修改指定zlevel的绘制参数\n   *\n   * @param {string} zlevel\n   * @param {Object} config 配置对象\n   * @param {string} [config.clearColor=0] 每次清空画布的颜色\n   * @param {string} [config.motionBlur=false] 是否开启动态模糊\n   * @param {number} [config.lastFrameAlpha=0.7]\n   *                 在开启动态模糊的时候使用，与上一帧混合的alpha值，值越大尾迹越明显\n   */\n  configLayer: function (zlevel, config) {\n    if (config) {\n      var layerConfig = this._layerConfig;\n\n      if (!layerConfig[zlevel]) {\n        layerConfig[zlevel] = config;\n      } else {\n        util.merge(layerConfig[zlevel], config, true);\n      }\n\n      var layer = this._layers[zlevel];\n\n      if (layer) {\n        util.merge(layer, layerConfig[zlevel], true);\n      }\n    }\n  },\n\n  /**\n   * 删除指定层\n   * @param {number} zlevel 层所在的zlevel\n   */\n  delLayer: function (zlevel) {\n    var layers = this._layers;\n    var zlevelList = this._zlevelList;\n    var layer = layers[zlevel];\n\n    if (!layer) {\n      return;\n    }\n\n    layer.dom.parentNode.removeChild(layer.dom);\n    delete layers[zlevel];\n    zlevelList.splice(util.indexOf(zlevelList, zlevel), 1);\n  },\n\n  /**\n   * 区域大小变化后重绘\n   */\n  resize: function (width, height) {\n    var domRoot = this._domRoot; // FIXME Why ?\n\n    domRoot.style.display = 'none'; // Save input w/h\n\n    var opts = this._opts;\n    width != null && (opts.width = width);\n    height != null && (opts.height = height);\n    width = this._getSize(0);\n    height = this._getSize(1);\n    domRoot.style.display = ''; // 优化没有实际改变的resize\n\n    if (this._width != width || height != this._height) {\n      domRoot.style.width = width + 'px';\n      domRoot.style.height = height + 'px';\n\n      for (var id in this._layers) {\n        if (this._layers.hasOwnProperty(id)) {\n          this._layers[id].resize(width, height);\n        }\n      }\n\n      util.each(this._progressiveLayers, function (layer) {\n        layer.resize(width, height);\n      });\n      this.refresh(true);\n    }\n\n    this._width = width;\n    this._height = height;\n    return this;\n  },\n\n  /**\n   * 清除单独的一个层\n   * @param {number} zlevel\n   */\n  clearLayer: function (zlevel) {\n    var layer = this._layers[zlevel];\n\n    if (layer) {\n      layer.clear();\n    }\n  },\n\n  /**\n   * 释放\n   */\n  dispose: function () {\n    this.root.innerHTML = '';\n    this.root = this.storage = this._domRoot = this._layers = null;\n  },\n\n  /**\n   * Get canvas which has all thing rendered\n   * @param {Object} opts\n   * @param {string} [opts.backgroundColor]\n   * @param {number} [opts.pixelRatio]\n   */\n  getRenderedCanvas: function (opts) {\n    opts = opts || {};\n\n    if (this._singleCanvas) {\n      return this._layers[0].dom;\n    }\n\n    var imageLayer = new Layer('image', this, opts.pixelRatio || this.dpr);\n    imageLayer.initContext();\n    imageLayer.clearColor = opts.backgroundColor;\n    imageLayer.clear();\n    var displayList = this.storage.getDisplayList(true);\n    var scope = {};\n    var zlevel;\n    var self = this;\n\n    function findAndDrawOtherLayer(smaller, larger) {\n      var zlevelList = self._zlevelList;\n\n      if (smaller == null) {\n        smaller = -Infinity;\n      }\n\n      var intermediateLayer;\n\n      for (var i = 0; i < zlevelList.length; i++) {\n        var z = zlevelList[i];\n        var layer = self._layers[z];\n\n        if (!layer.__builtin__ && z > smaller && z < larger) {\n          intermediateLayer = layer;\n          break;\n        }\n      }\n\n      if (intermediateLayer && intermediateLayer.renderToCanvas) {\n        imageLayer.ctx.save();\n        intermediateLayer.renderToCanvas(imageLayer.ctx);\n        imageLayer.ctx.restore();\n      }\n    }\n\n    for (var i = 0; i < displayList.length; i++) {\n      var el = displayList[i];\n\n      if (el.zlevel !== zlevel) {\n        findAndDrawOtherLayer(zlevel, el.zlevel);\n        zlevel = el.zlevel;\n      }\n\n      this._doPaintEl(el, imageLayer, true, scope);\n    }\n\n    findAndDrawOtherLayer(zlevel, Infinity);\n    return imageLayer.dom;\n  },\n\n  /**\n   * 获取绘图区域宽度\n   */\n  getWidth: function () {\n    return this._width;\n  },\n\n  /**\n   * 获取绘图区域高度\n   */\n  getHeight: function () {\n    return this._height;\n  },\n  _getSize: function (whIdx) {\n    var opts = this._opts;\n    var wh = ['width', 'height'][whIdx];\n    var cwh = ['clientWidth', 'clientHeight'][whIdx];\n    var plt = ['paddingLeft', 'paddingTop'][whIdx];\n    var prb = ['paddingRight', 'paddingBottom'][whIdx];\n\n    if (opts[wh] != null && opts[wh] !== 'auto') {\n      return parseFloat(opts[wh]);\n    }\n\n    var root = this.root; // IE8 does not support getComputedStyle, but it use VML.\n\n    var stl = document.defaultView.getComputedStyle(root);\n    return (root[cwh] || parseInt10(stl[wh]) || parseInt10(root.style[wh])) - (parseInt10(stl[plt]) || 0) - (parseInt10(stl[prb]) || 0) | 0;\n  },\n  pathToImage: function (path, dpr) {\n    dpr = dpr || this.dpr;\n    var canvas = document.createElement('canvas');\n    var ctx = canvas.getContext('2d');\n    var rect = path.getBoundingRect();\n    var style = path.style;\n    var shadowBlurSize = style.shadowBlur;\n    var shadowOffsetX = style.shadowOffsetX;\n    var shadowOffsetY = style.shadowOffsetY;\n    var lineWidth = style.hasStroke() ? style.lineWidth : 0;\n    var leftMargin = Math.max(lineWidth / 2, -shadowOffsetX + shadowBlurSize);\n    var rightMargin = Math.max(lineWidth / 2, shadowOffsetX + shadowBlurSize);\n    var topMargin = Math.max(lineWidth / 2, -shadowOffsetY + shadowBlurSize);\n    var bottomMargin = Math.max(lineWidth / 2, shadowOffsetY + shadowBlurSize);\n    var width = rect.width + leftMargin + rightMargin;\n    var height = rect.height + topMargin + bottomMargin;\n    canvas.width = width * dpr;\n    canvas.height = height * dpr;\n    ctx.scale(dpr, dpr);\n    ctx.clearRect(0, 0, width, height);\n    ctx.dpr = dpr;\n    var pathTransform = {\n      position: path.position,\n      rotation: path.rotation,\n      scale: path.scale\n    };\n    path.position = [leftMargin - rect.x, topMargin - rect.y];\n    path.rotation = 0;\n    path.scale = [1, 1];\n    path.updateTransform();\n\n    if (path) {\n      path.brush(ctx);\n    }\n\n    var ImageShape = Image;\n    var imgShape = new ImageShape({\n      style: {\n        x: 0,\n        y: 0,\n        image: canvas\n      }\n    });\n\n    if (pathTransform.position != null) {\n      imgShape.position = path.position = pathTransform.position;\n    }\n\n    if (pathTransform.rotation != null) {\n      imgShape.rotation = path.rotation = pathTransform.rotation;\n    }\n\n    if (pathTransform.scale != null) {\n      imgShape.scale = path.scale = pathTransform.scale;\n    }\n\n    return imgShape;\n  }\n};\nvar _default = Painter;\nmodule.exports = _default;\n\n/***/ }),\n/* 597 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar util = __webpack_require__(460);\n\nvar env = __webpack_require__(466);\n\nvar Group = __webpack_require__(483);\n\nvar timsort = __webpack_require__(497);\n\n/**\n * Storage内容仓库模块\n * @module zrender/Storage\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n * @author errorrik (errorrik@gmail.com)\n * @author pissang (https://github.com/pissang/)\n */\n// Use timsort because in most case elements are partially sorted\n// https://jsfiddle.net/pissang/jr4x7mdm/8/\nfunction shapeCompareFunc(a, b) {\n  if (a.zlevel === b.zlevel) {\n    if (a.z === b.z) {\n      // if (a.z2 === b.z2) {\n      //     // FIXME Slow has renderidx compare\n      //     // http://stackoverflow.com/questions/20883421/sorting-in-javascript-should-every-compare-function-have-a-return-0-statement\n      //     // https://github.com/v8/v8/blob/47cce544a31ed5577ffe2963f67acb4144ee0232/src/js/array.js#L1012\n      //     return a.__renderidx - b.__renderidx;\n      // }\n      return a.z2 - b.z2;\n    }\n\n    return a.z - b.z;\n  }\n\n  return a.zlevel - b.zlevel;\n}\n/**\n * 内容仓库 (M)\n * @alias module:zrender/Storage\n * @constructor\n */\n\n\nvar Storage = function () {\n  // jshint ignore:line\n  this._roots = [];\n  this._displayList = [];\n  this._displayListLen = 0;\n};\n\nStorage.prototype = {\n  constructor: Storage,\n\n  /**\n   * @param  {Function} cb\n   *\n   */\n  traverse: function (cb, context) {\n    for (var i = 0; i < this._roots.length; i++) {\n      this._roots[i].traverse(cb, context);\n    }\n  },\n\n  /**\n   * 返回所有图形的绘制队列\n   * @param {boolean} [update=false] 是否在返回前更新该数组\n   * @param {boolean} [includeIgnore=false] 是否包含 ignore 的数组, 在 update 为 true 的时候有效\n   *\n   * 详见{@link module:zrender/graphic/Displayable.prototype.updateDisplayList}\n   * @return {Array.<module:zrender/graphic/Displayable>}\n   */\n  getDisplayList: function (update, includeIgnore) {\n    includeIgnore = includeIgnore || false;\n\n    if (update) {\n      this.updateDisplayList(includeIgnore);\n    }\n\n    return this._displayList;\n  },\n\n  /**\n   * 更新图形的绘制队列。\n   * 每次绘制前都会调用，该方法会先深度优先遍历整个树，更新所有Group和Shape的变换并且把所有可见的Shape保存到数组中，\n   * 最后根据绘制的优先级（zlevel > z > 插入顺序）排序得到绘制队列\n   * @param {boolean} [includeIgnore=false] 是否包含 ignore 的数组\n   */\n  updateDisplayList: function (includeIgnore) {\n    this._displayListLen = 0;\n    var roots = this._roots;\n    var displayList = this._displayList;\n\n    for (var i = 0, len = roots.length; i < len; i++) {\n      this._updateAndAddDisplayable(roots[i], null, includeIgnore);\n    }\n\n    displayList.length = this._displayListLen; // for (var i = 0, len = displayList.length; i < len; i++) {\n    //     displayList[i].__renderidx = i;\n    // }\n    // displayList.sort(shapeCompareFunc);\n\n    env.canvasSupported && timsort(displayList, shapeCompareFunc);\n  },\n  _updateAndAddDisplayable: function (el, clipPaths, includeIgnore) {\n    if (el.ignore && !includeIgnore) {\n      return;\n    }\n\n    el.beforeUpdate();\n\n    if (el.__dirty) {\n      el.update();\n    }\n\n    el.afterUpdate();\n    var userSetClipPath = el.clipPath;\n\n    if (userSetClipPath) {\n      // FIXME 效率影响\n      if (clipPaths) {\n        clipPaths = clipPaths.slice();\n      } else {\n        clipPaths = [];\n      }\n\n      var currentClipPath = userSetClipPath;\n      var parentClipPath = el; // Recursively add clip path\n\n      while (currentClipPath) {\n        // clipPath 的变换是基于使用这个 clipPath 的元素\n        currentClipPath.parent = parentClipPath;\n        currentClipPath.updateTransform();\n        clipPaths.push(currentClipPath);\n        parentClipPath = currentClipPath;\n        currentClipPath = currentClipPath.clipPath;\n      }\n    }\n\n    if (el.isGroup) {\n      var children = el._children;\n\n      for (var i = 0; i < children.length; i++) {\n        var child = children[i]; // Force to mark as dirty if group is dirty\n        // FIXME __dirtyPath ?\n\n        if (el.__dirty) {\n          child.__dirty = true;\n        }\n\n        this._updateAndAddDisplayable(child, clipPaths, includeIgnore);\n      } // Mark group clean here\n\n\n      el.__dirty = false;\n    } else {\n      el.__clipPaths = clipPaths;\n      this._displayList[this._displayListLen++] = el;\n    }\n  },\n\n  /**\n   * 添加图形(Shape)或者组(Group)到根节点\n   * @param {module:zrender/Element} el\n   */\n  addRoot: function (el) {\n    if (el.__storage === this) {\n      return;\n    }\n\n    if (el instanceof Group) {\n      el.addChildrenToStorage(this);\n    }\n\n    this.addToStorage(el);\n\n    this._roots.push(el);\n  },\n\n  /**\n   * 删除指定的图形(Shape)或者组(Group)\n   * @param {string|Array.<string>} [el] 如果为空清空整个Storage\n   */\n  delRoot: function (el) {\n    if (el == null) {\n      // 不指定el清空\n      for (var i = 0; i < this._roots.length; i++) {\n        var root = this._roots[i];\n\n        if (root instanceof Group) {\n          root.delChildrenFromStorage(this);\n        }\n      }\n\n      this._roots = [];\n      this._displayList = [];\n      this._displayListLen = 0;\n      return;\n    }\n\n    if (el instanceof Array) {\n      for (var i = 0, l = el.length; i < l; i++) {\n        this.delRoot(el[i]);\n      }\n\n      return;\n    }\n\n    var idx = util.indexOf(this._roots, el);\n\n    if (idx >= 0) {\n      this.delFromStorage(el);\n\n      this._roots.splice(idx, 1);\n\n      if (el instanceof Group) {\n        el.delChildrenFromStorage(this);\n      }\n    }\n  },\n  addToStorage: function (el) {\n    el.__storage = this;\n    el.dirty(false);\n    return this;\n  },\n  delFromStorage: function (el) {\n    if (el) {\n      el.__storage = null;\n    }\n\n    return this;\n  },\n\n  /**\n   * 清空并且释放Storage\n   */\n  dispose: function () {\n    this._renderList = this._roots = null;\n  },\n  displayableSortFunc: shapeCompareFunc\n};\nvar _default = Storage;\nmodule.exports = _default;\n\n/***/ }),\n/* 598 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar util = __webpack_require__(460);\n\nvar _event = __webpack_require__(485);\n\nvar Dispatcher = _event.Dispatcher;\n\nvar requestAnimationFrame = __webpack_require__(513);\n\nvar Animator = __webpack_require__(512);\n\n/**\n * 动画主类, 调度和管理所有动画控制器\n *\n * @module zrender/animation/Animation\n * @author pissang(https://github.com/pissang)\n */\n// TODO Additive animation\n// http://iosoteric.com/additive-animations-animatewithduration-in-ios-8/\n// https://developer.apple.com/videos/wwdc2014/#236\n\n/**\n * @typedef {Object} IZRenderStage\n * @property {Function} update\n */\n\n/**\n * @alias module:zrender/animation/Animation\n * @constructor\n * @param {Object} [options]\n * @param {Function} [options.onframe]\n * @param {IZRenderStage} [options.stage]\n * @example\n *     var animation = new Animation();\n *     var obj = {\n *         x: 100,\n *         y: 100\n *     };\n *     animation.animate(node.position)\n *         .when(1000, {\n *             x: 500,\n *             y: 500\n *         })\n *         .when(2000, {\n *             x: 100,\n *             y: 100\n *         })\n *         .start('spline');\n */\nvar Animation = function (options) {\n  options = options || {};\n  this.stage = options.stage || {};\n\n  this.onframe = options.onframe || function () {}; // private properties\n\n\n  this._clips = [];\n  this._running = false;\n  this._time;\n  this._pausedTime;\n  this._pauseStart;\n  this._paused = false;\n  Dispatcher.call(this);\n};\n\nAnimation.prototype = {\n  constructor: Animation,\n\n  /**\n   * 添加 clip\n   * @param {module:zrender/animation/Clip} clip\n   */\n  addClip: function (clip) {\n    this._clips.push(clip);\n  },\n\n  /**\n   * 添加 animator\n   * @param {module:zrender/animation/Animator} animator\n   */\n  addAnimator: function (animator) {\n    animator.animation = this;\n    var clips = animator.getClips();\n\n    for (var i = 0; i < clips.length; i++) {\n      this.addClip(clips[i]);\n    }\n  },\n\n  /**\n   * 删除动画片段\n   * @param {module:zrender/animation/Clip} clip\n   */\n  removeClip: function (clip) {\n    var idx = util.indexOf(this._clips, clip);\n\n    if (idx >= 0) {\n      this._clips.splice(idx, 1);\n    }\n  },\n\n  /**\n   * 删除动画片段\n   * @param {module:zrender/animation/Animator} animator\n   */\n  removeAnimator: function (animator) {\n    var clips = animator.getClips();\n\n    for (var i = 0; i < clips.length; i++) {\n      this.removeClip(clips[i]);\n    }\n\n    animator.animation = null;\n  },\n  _update: function () {\n    var time = new Date().getTime() - this._pausedTime;\n\n    var delta = time - this._time;\n    var clips = this._clips;\n    var len = clips.length;\n    var deferredEvents = [];\n    var deferredClips = [];\n\n    for (var i = 0; i < len; i++) {\n      var clip = clips[i];\n      var e = clip.step(time, delta); // Throw out the events need to be called after\n      // stage.update, like destroy\n\n      if (e) {\n        deferredEvents.push(e);\n        deferredClips.push(clip);\n      }\n    } // Remove the finished clip\n\n\n    for (var i = 0; i < len;) {\n      if (clips[i]._needsRemove) {\n        clips[i] = clips[len - 1];\n        clips.pop();\n        len--;\n      } else {\n        i++;\n      }\n    }\n\n    len = deferredEvents.length;\n\n    for (var i = 0; i < len; i++) {\n      deferredClips[i].fire(deferredEvents[i]);\n    }\n\n    this._time = time;\n    this.onframe(delta);\n    this.trigger('frame', delta);\n\n    if (this.stage.update) {\n      this.stage.update();\n    }\n  },\n  _startLoop: function () {\n    var self = this;\n    this._running = true;\n\n    function step() {\n      if (self._running) {\n        requestAnimationFrame(step);\n        !self._paused && self._update();\n      }\n    }\n\n    requestAnimationFrame(step);\n  },\n\n  /**\n   * 开始运行动画\n   */\n  start: function () {\n    this._time = new Date().getTime();\n    this._pausedTime = 0;\n\n    this._startLoop();\n  },\n\n  /**\n   * 停止运行动画\n   */\n  stop: function () {\n    this._running = false;\n  },\n\n  /**\n   * Pause\n   */\n  pause: function () {\n    if (!this._paused) {\n      this._pauseStart = new Date().getTime();\n      this._paused = true;\n    }\n  },\n\n  /**\n   * Resume\n   */\n  resume: function () {\n    if (this._paused) {\n      this._pausedTime += new Date().getTime() - this._pauseStart;\n      this._paused = false;\n    }\n  },\n\n  /**\n   * 清除所有动画片段\n   */\n  clear: function () {\n    this._clips = [];\n  },\n\n  /**\n   * 对一个目标创建一个animator对象，可以指定目标中的属性使用动画\n   * @param  {Object} target\n   * @param  {Object} options\n   * @param  {boolean} [options.loop=false] 是否循环播放动画\n   * @param  {Function} [options.getter=null]\n   *         如果指定getter函数，会通过getter函数取属性值\n   * @param  {Function} [options.setter=null]\n   *         如果指定setter函数，会通过setter函数设置属性值\n   * @return {module:zrender/animation/Animation~Animator}\n   */\n  // TODO Gap\n  animate: function (target, options) {\n    options = options || {};\n    var animator = new Animator(target, options.loop, options.getter, options.setter);\n    this.addAnimator(animator);\n    return animator;\n  }\n};\nutil.mixin(Animation, Dispatcher);\nvar _default = Animation;\nmodule.exports = _default;\n\n/***/ }),\n/* 599 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar easingFuncs = __webpack_require__(600);\n\n/**\n * 动画主控制器\n * @config target 动画对象，可以是数组，如果是数组的话会批量分发onframe等事件\n * @config life(1000) 动画时长\n * @config delay(0) 动画延迟时间\n * @config loop(true)\n * @config gap(0) 循环的间隔时间\n * @config onframe\n * @config easing(optional)\n * @config ondestroy(optional)\n * @config onrestart(optional)\n *\n * TODO pause\n */\nfunction Clip(options) {\n  this._target = options.target; // 生命周期\n\n  this._life = options.life || 1000; // 延时\n\n  this._delay = options.delay || 0; // 开始时间\n  // this._startTime = new Date().getTime() + this._delay;// 单位毫秒\n\n  this._initialized = false; // 是否循环\n\n  this.loop = options.loop == null ? false : options.loop;\n  this.gap = options.gap || 0;\n  this.easing = options.easing || 'Linear';\n  this.onframe = options.onframe;\n  this.ondestroy = options.ondestroy;\n  this.onrestart = options.onrestart;\n  this._pausedTime = 0;\n  this._paused = false;\n}\n\nClip.prototype = {\n  constructor: Clip,\n  step: function (globalTime, deltaTime) {\n    // Set startTime on first step, or _startTime may has milleseconds different between clips\n    // PENDING\n    if (!this._initialized) {\n      this._startTime = globalTime + this._delay;\n      this._initialized = true;\n    }\n\n    if (this._paused) {\n      this._pausedTime += deltaTime;\n      return;\n    }\n\n    var percent = (globalTime - this._startTime - this._pausedTime) / this._life; // 还没开始\n\n    if (percent < 0) {\n      return;\n    }\n\n    percent = Math.min(percent, 1);\n    var easing = this.easing;\n    var easingFunc = typeof easing == 'string' ? easingFuncs[easing] : easing;\n    var schedule = typeof easingFunc === 'function' ? easingFunc(percent) : percent;\n    this.fire('frame', schedule); // 结束\n\n    if (percent == 1) {\n      if (this.loop) {\n        this.restart(globalTime); // 重新开始周期\n        // 抛出而不是直接调用事件直到 stage.update 后再统一调用这些事件\n\n        return 'restart';\n      } // 动画完成将这个控制器标识为待删除\n      // 在Animation.update中进行批量删除\n\n\n      this._needsRemove = true;\n      return 'destroy';\n    }\n\n    return null;\n  },\n  restart: function (globalTime) {\n    var remainder = (globalTime - this._startTime - this._pausedTime) % this._life;\n    this._startTime = globalTime - remainder + this.gap;\n    this._pausedTime = 0;\n    this._needsRemove = false;\n  },\n  fire: function (eventType, arg) {\n    eventType = 'on' + eventType;\n\n    if (this[eventType]) {\n      this[eventType](this._target, arg);\n    }\n  },\n  pause: function () {\n    this._paused = true;\n  },\n  resume: function () {\n    this._paused = false;\n  }\n};\nvar _default = Clip;\nmodule.exports = _default;\n\n/***/ }),\n/* 600 */\n/***/ (function(module, exports) {\n\n/**\n * 缓动代码来自 https://github.com/sole/tween.js/blob/master/src/Tween.js\n * @see http://sole.github.io/tween.js/examples/03_graphs.html\n * @exports zrender/animation/easing\n */\nvar easing = {\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  linear: function (k) {\n    return k;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  quadraticIn: function (k) {\n    return k * k;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  quadraticOut: function (k) {\n    return k * (2 - k);\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  quadraticInOut: function (k) {\n    if ((k *= 2) < 1) {\n      return 0.5 * k * k;\n    }\n\n    return -0.5 * (--k * (k - 2) - 1);\n  },\n  // 三次方的缓动（t^3）\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  cubicIn: function (k) {\n    return k * k * k;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  cubicOut: function (k) {\n    return --k * k * k + 1;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  cubicInOut: function (k) {\n    if ((k *= 2) < 1) {\n      return 0.5 * k * k * k;\n    }\n\n    return 0.5 * ((k -= 2) * k * k + 2);\n  },\n  // 四次方的缓动（t^4）\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  quarticIn: function (k) {\n    return k * k * k * k;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  quarticOut: function (k) {\n    return 1 - --k * k * k * k;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  quarticInOut: function (k) {\n    if ((k *= 2) < 1) {\n      return 0.5 * k * k * k * k;\n    }\n\n    return -0.5 * ((k -= 2) * k * k * k - 2);\n  },\n  // 五次方的缓动（t^5）\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  quinticIn: function (k) {\n    return k * k * k * k * k;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  quinticOut: function (k) {\n    return --k * k * k * k * k + 1;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  quinticInOut: function (k) {\n    if ((k *= 2) < 1) {\n      return 0.5 * k * k * k * k * k;\n    }\n\n    return 0.5 * ((k -= 2) * k * k * k * k + 2);\n  },\n  // 正弦曲线的缓动（sin(t)）\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  sinusoidalIn: function (k) {\n    return 1 - Math.cos(k * Math.PI / 2);\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  sinusoidalOut: function (k) {\n    return Math.sin(k * Math.PI / 2);\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  sinusoidalInOut: function (k) {\n    return 0.5 * (1 - Math.cos(Math.PI * k));\n  },\n  // 指数曲线的缓动（2^t）\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  exponentialIn: function (k) {\n    return k === 0 ? 0 : Math.pow(1024, k - 1);\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  exponentialOut: function (k) {\n    return k === 1 ? 1 : 1 - Math.pow(2, -10 * k);\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  exponentialInOut: function (k) {\n    if (k === 0) {\n      return 0;\n    }\n\n    if (k === 1) {\n      return 1;\n    }\n\n    if ((k *= 2) < 1) {\n      return 0.5 * Math.pow(1024, k - 1);\n    }\n\n    return 0.5 * (-Math.pow(2, -10 * (k - 1)) + 2);\n  },\n  // 圆形曲线的缓动（sqrt(1-t^2)）\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  circularIn: function (k) {\n    return 1 - Math.sqrt(1 - k * k);\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  circularOut: function (k) {\n    return Math.sqrt(1 - --k * k);\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  circularInOut: function (k) {\n    if ((k *= 2) < 1) {\n      return -0.5 * (Math.sqrt(1 - k * k) - 1);\n    }\n\n    return 0.5 * (Math.sqrt(1 - (k -= 2) * k) + 1);\n  },\n  // 创建类似于弹簧在停止前来回振荡的动画\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  elasticIn: function (k) {\n    var s;\n    var a = 0.1;\n    var p = 0.4;\n\n    if (k === 0) {\n      return 0;\n    }\n\n    if (k === 1) {\n      return 1;\n    }\n\n    if (!a || a < 1) {\n      a = 1;\n      s = p / 4;\n    } else {\n      s = p * Math.asin(1 / a) / (2 * Math.PI);\n    }\n\n    return -(a * Math.pow(2, 10 * (k -= 1)) * Math.sin((k - s) * (2 * Math.PI) / p));\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  elasticOut: function (k) {\n    var s;\n    var a = 0.1;\n    var p = 0.4;\n\n    if (k === 0) {\n      return 0;\n    }\n\n    if (k === 1) {\n      return 1;\n    }\n\n    if (!a || a < 1) {\n      a = 1;\n      s = p / 4;\n    } else {\n      s = p * Math.asin(1 / a) / (2 * Math.PI);\n    }\n\n    return a * Math.pow(2, -10 * k) * Math.sin((k - s) * (2 * Math.PI) / p) + 1;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  elasticInOut: function (k) {\n    var s;\n    var a = 0.1;\n    var p = 0.4;\n\n    if (k === 0) {\n      return 0;\n    }\n\n    if (k === 1) {\n      return 1;\n    }\n\n    if (!a || a < 1) {\n      a = 1;\n      s = p / 4;\n    } else {\n      s = p * Math.asin(1 / a) / (2 * Math.PI);\n    }\n\n    if ((k *= 2) < 1) {\n      return -0.5 * (a * Math.pow(2, 10 * (k -= 1)) * Math.sin((k - s) * (2 * Math.PI) / p));\n    }\n\n    return a * Math.pow(2, -10 * (k -= 1)) * Math.sin((k - s) * (2 * Math.PI) / p) * 0.5 + 1;\n  },\n  // 在某一动画开始沿指示的路径进行动画处理前稍稍收回该动画的移动\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  backIn: function (k) {\n    var s = 1.70158;\n    return k * k * ((s + 1) * k - s);\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  backOut: function (k) {\n    var s = 1.70158;\n    return --k * k * ((s + 1) * k + s) + 1;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  backInOut: function (k) {\n    var s = 1.70158 * 1.525;\n\n    if ((k *= 2) < 1) {\n      return 0.5 * (k * k * ((s + 1) * k - s));\n    }\n\n    return 0.5 * ((k -= 2) * k * ((s + 1) * k + s) + 2);\n  },\n  // 创建弹跳效果\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  bounceIn: function (k) {\n    return 1 - easing.bounceOut(1 - k);\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  bounceOut: function (k) {\n    if (k < 1 / 2.75) {\n      return 7.5625 * k * k;\n    } else if (k < 2 / 2.75) {\n      return 7.5625 * (k -= 1.5 / 2.75) * k + 0.75;\n    } else if (k < 2.5 / 2.75) {\n      return 7.5625 * (k -= 2.25 / 2.75) * k + 0.9375;\n    } else {\n      return 7.5625 * (k -= 2.625 / 2.75) * k + 0.984375;\n    }\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  bounceInOut: function (k) {\n    if (k < 0.5) {\n      return easing.bounceIn(k * 2) * 0.5;\n    }\n\n    return easing.bounceOut(k * 2 - 1) * 0.5 + 0.5;\n  }\n};\nvar _default = easing;\nmodule.exports = _default;\n\n/***/ }),\n/* 601 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _util = __webpack_require__(514);\n\nvar normalizeRadian = _util.normalizeRadian;\nvar PI2 = Math.PI * 2;\n/**\n * 圆弧描边包含判断\n * @param  {number}  cx\n * @param  {number}  cy\n * @param  {number}  r\n * @param  {number}  startAngle\n * @param  {number}  endAngle\n * @param  {boolean}  anticlockwise\n * @param  {number} lineWidth\n * @param  {number}  x\n * @param  {number}  y\n * @return {Boolean}\n */\n\nfunction containStroke(cx, cy, r, startAngle, endAngle, anticlockwise, lineWidth, x, y) {\n  if (lineWidth === 0) {\n    return false;\n  }\n\n  var _l = lineWidth;\n  x -= cx;\n  y -= cy;\n  var d = Math.sqrt(x * x + y * y);\n\n  if (d - _l > r || d + _l < r) {\n    return false;\n  }\n\n  if (Math.abs(startAngle - endAngle) % PI2 < 1e-4) {\n    // Is a circle\n    return true;\n  }\n\n  if (anticlockwise) {\n    var tmp = startAngle;\n    startAngle = normalizeRadian(endAngle);\n    endAngle = normalizeRadian(tmp);\n  } else {\n    startAngle = normalizeRadian(startAngle);\n    endAngle = normalizeRadian(endAngle);\n  }\n\n  if (startAngle > endAngle) {\n    endAngle += PI2;\n  }\n\n  var angle = Math.atan2(y, x);\n\n  if (angle < 0) {\n    angle += PI2;\n  }\n\n  return angle >= startAngle && angle <= endAngle || angle + PI2 >= startAngle && angle + PI2 <= endAngle;\n}\n\nexports.containStroke = containStroke;\n\n/***/ }),\n/* 602 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar curve = __webpack_require__(477);\n\n/**\n * 三次贝塞尔曲线描边包含判断\n * @param  {number}  x0\n * @param  {number}  y0\n * @param  {number}  x1\n * @param  {number}  y1\n * @param  {number}  x2\n * @param  {number}  y2\n * @param  {number}  x3\n * @param  {number}  y3\n * @param  {number}  lineWidth\n * @param  {number}  x\n * @param  {number}  y\n * @return {boolean}\n */\nfunction containStroke(x0, y0, x1, y1, x2, y2, x3, y3, lineWidth, x, y) {\n  if (lineWidth === 0) {\n    return false;\n  }\n\n  var _l = lineWidth; // Quick reject\n\n  if (y > y0 + _l && y > y1 + _l && y > y2 + _l && y > y3 + _l || y < y0 - _l && y < y1 - _l && y < y2 - _l && y < y3 - _l || x > x0 + _l && x > x1 + _l && x > x2 + _l && x > x3 + _l || x < x0 - _l && x < x1 - _l && x < x2 - _l && x < x3 - _l) {\n    return false;\n  }\n\n  var d = curve.cubicProjectPoint(x0, y0, x1, y1, x2, y2, x3, y3, x, y, null);\n  return d <= _l / 2;\n}\n\nexports.containStroke = containStroke;\n\n/***/ }),\n/* 603 */\n/***/ (function(module, exports) {\n\n/**\n * 线段包含判断\n * @param  {number}  x0\n * @param  {number}  y0\n * @param  {number}  x1\n * @param  {number}  y1\n * @param  {number}  lineWidth\n * @param  {number}  x\n * @param  {number}  y\n * @return {boolean}\n */\nfunction containStroke(x0, y0, x1, y1, lineWidth, x, y) {\n  if (lineWidth === 0) {\n    return false;\n  }\n\n  var _l = lineWidth;\n  var _a = 0;\n  var _b = x0; // Quick reject\n\n  if (y > y0 + _l && y > y1 + _l || y < y0 - _l && y < y1 - _l || x > x0 + _l && x > x1 + _l || x < x0 - _l && x < x1 - _l) {\n    return false;\n  }\n\n  if (x0 !== x1) {\n    _a = (y0 - y1) / (x0 - x1);\n    _b = (x0 * y1 - x1 * y0) / (x0 - x1);\n  } else {\n    return Math.abs(x - x0) <= _l / 2;\n  }\n\n  var tmp = _a * x - y + _b;\n\n  var _s = tmp * tmp / (_a * _a + 1);\n\n  return _s <= _l / 2 * _l / 2;\n}\n\nexports.containStroke = containStroke;\n\n/***/ }),\n/* 604 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar PathProxy = __webpack_require__(476);\n\nvar line = __webpack_require__(603);\n\nvar cubic = __webpack_require__(602);\n\nvar quadratic = __webpack_require__(605);\n\nvar arc = __webpack_require__(601);\n\nvar _util = __webpack_require__(514);\n\nvar normalizeRadian = _util.normalizeRadian;\n\nvar curve = __webpack_require__(477);\n\nvar windingLine = __webpack_require__(606);\n\nvar CMD = PathProxy.CMD;\nvar PI2 = Math.PI * 2;\nvar EPSILON = 1e-4;\n\nfunction isAroundEqual(a, b) {\n  return Math.abs(a - b) < EPSILON;\n} // 临时数组\n\n\nvar roots = [-1, -1, -1];\nvar extrema = [-1, -1];\n\nfunction swapExtrema() {\n  var tmp = extrema[0];\n  extrema[0] = extrema[1];\n  extrema[1] = tmp;\n}\n\nfunction windingCubic(x0, y0, x1, y1, x2, y2, x3, y3, x, y) {\n  // Quick reject\n  if (y > y0 && y > y1 && y > y2 && y > y3 || y < y0 && y < y1 && y < y2 && y < y3) {\n    return 0;\n  }\n\n  var nRoots = curve.cubicRootAt(y0, y1, y2, y3, y, roots);\n\n  if (nRoots === 0) {\n    return 0;\n  } else {\n    var w = 0;\n    var nExtrema = -1;\n    var y0_, y1_;\n\n    for (var i = 0; i < nRoots; i++) {\n      var t = roots[i]; // Avoid winding error when intersection point is the connect point of two line of polygon\n\n      var unit = t === 0 || t === 1 ? 0.5 : 1;\n      var x_ = curve.cubicAt(x0, x1, x2, x3, t);\n\n      if (x_ < x) {\n        // Quick reject\n        continue;\n      }\n\n      if (nExtrema < 0) {\n        nExtrema = curve.cubicExtrema(y0, y1, y2, y3, extrema);\n\n        if (extrema[1] < extrema[0] && nExtrema > 1) {\n          swapExtrema();\n        }\n\n        y0_ = curve.cubicAt(y0, y1, y2, y3, extrema[0]);\n\n        if (nExtrema > 1) {\n          y1_ = curve.cubicAt(y0, y1, y2, y3, extrema[1]);\n        }\n      }\n\n      if (nExtrema == 2) {\n        // 分成三段单调函数\n        if (t < extrema[0]) {\n          w += y0_ < y0 ? unit : -unit;\n        } else if (t < extrema[1]) {\n          w += y1_ < y0_ ? unit : -unit;\n        } else {\n          w += y3 < y1_ ? unit : -unit;\n        }\n      } else {\n        // 分成两段单调函数\n        if (t < extrema[0]) {\n          w += y0_ < y0 ? unit : -unit;\n        } else {\n          w += y3 < y0_ ? unit : -unit;\n        }\n      }\n    }\n\n    return w;\n  }\n}\n\nfunction windingQuadratic(x0, y0, x1, y1, x2, y2, x, y) {\n  // Quick reject\n  if (y > y0 && y > y1 && y > y2 || y < y0 && y < y1 && y < y2) {\n    return 0;\n  }\n\n  var nRoots = curve.quadraticRootAt(y0, y1, y2, y, roots);\n\n  if (nRoots === 0) {\n    return 0;\n  } else {\n    var t = curve.quadraticExtremum(y0, y1, y2);\n\n    if (t >= 0 && t <= 1) {\n      var w = 0;\n      var y_ = curve.quadraticAt(y0, y1, y2, t);\n\n      for (var i = 0; i < nRoots; i++) {\n        // Remove one endpoint.\n        var unit = roots[i] === 0 || roots[i] === 1 ? 0.5 : 1;\n        var x_ = curve.quadraticAt(x0, x1, x2, roots[i]);\n\n        if (x_ < x) {\n          // Quick reject\n          continue;\n        }\n\n        if (roots[i] < t) {\n          w += y_ < y0 ? unit : -unit;\n        } else {\n          w += y2 < y_ ? unit : -unit;\n        }\n      }\n\n      return w;\n    } else {\n      // Remove one endpoint.\n      var unit = roots[0] === 0 || roots[0] === 1 ? 0.5 : 1;\n      var x_ = curve.quadraticAt(x0, x1, x2, roots[0]);\n\n      if (x_ < x) {\n        // Quick reject\n        return 0;\n      }\n\n      return y2 < y0 ? unit : -unit;\n    }\n  }\n} // TODO\n// Arc 旋转\n\n\nfunction windingArc(cx, cy, r, startAngle, endAngle, anticlockwise, x, y) {\n  y -= cy;\n\n  if (y > r || y < -r) {\n    return 0;\n  }\n\n  var tmp = Math.sqrt(r * r - y * y);\n  roots[0] = -tmp;\n  roots[1] = tmp;\n  var diff = Math.abs(startAngle - endAngle);\n\n  if (diff < 1e-4) {\n    return 0;\n  }\n\n  if (diff % PI2 < 1e-4) {\n    // Is a circle\n    startAngle = 0;\n    endAngle = PI2;\n    var dir = anticlockwise ? 1 : -1;\n\n    if (x >= roots[0] + cx && x <= roots[1] + cx) {\n      return dir;\n    } else {\n      return 0;\n    }\n  }\n\n  if (anticlockwise) {\n    var tmp = startAngle;\n    startAngle = normalizeRadian(endAngle);\n    endAngle = normalizeRadian(tmp);\n  } else {\n    startAngle = normalizeRadian(startAngle);\n    endAngle = normalizeRadian(endAngle);\n  }\n\n  if (startAngle > endAngle) {\n    endAngle += PI2;\n  }\n\n  var w = 0;\n\n  for (var i = 0; i < 2; i++) {\n    var x_ = roots[i];\n\n    if (x_ + cx > x) {\n      var angle = Math.atan2(y, x_);\n      var dir = anticlockwise ? 1 : -1;\n\n      if (angle < 0) {\n        angle = PI2 + angle;\n      }\n\n      if (angle >= startAngle && angle <= endAngle || angle + PI2 >= startAngle && angle + PI2 <= endAngle) {\n        if (angle > Math.PI / 2 && angle < Math.PI * 1.5) {\n          dir = -dir;\n        }\n\n        w += dir;\n      }\n    }\n  }\n\n  return w;\n}\n\nfunction containPath(data, lineWidth, isStroke, x, y) {\n  var w = 0;\n  var xi = 0;\n  var yi = 0;\n  var x0 = 0;\n  var y0 = 0;\n\n  for (var i = 0; i < data.length;) {\n    var cmd = data[i++]; // Begin a new subpath\n\n    if (cmd === CMD.M && i > 1) {\n      // Close previous subpath\n      if (!isStroke) {\n        w += windingLine(xi, yi, x0, y0, x, y);\n      } // 如果被任何一个 subpath 包含\n      // if (w !== 0) {\n      //     return true;\n      // }\n\n    }\n\n    if (i == 1) {\n      // 如果第一个命令是 L, C, Q\n      // 则 previous point 同绘制命令的第一个 point\n      //\n      // 第一个命令为 Arc 的情况下会在后面特殊处理\n      xi = data[i];\n      yi = data[i + 1];\n      x0 = xi;\n      y0 = yi;\n    }\n\n    switch (cmd) {\n      case CMD.M:\n        // moveTo 命令重新创建一个新的 subpath, 并且更新新的起点\n        // 在 closePath 的时候使用\n        x0 = data[i++];\n        y0 = data[i++];\n        xi = x0;\n        yi = y0;\n        break;\n\n      case CMD.L:\n        if (isStroke) {\n          if (line.containStroke(xi, yi, data[i], data[i + 1], lineWidth, x, y)) {\n            return true;\n          }\n        } else {\n          // NOTE 在第一个命令为 L, C, Q 的时候会计算出 NaN\n          w += windingLine(xi, yi, data[i], data[i + 1], x, y) || 0;\n        }\n\n        xi = data[i++];\n        yi = data[i++];\n        break;\n\n      case CMD.C:\n        if (isStroke) {\n          if (cubic.containStroke(xi, yi, data[i++], data[i++], data[i++], data[i++], data[i], data[i + 1], lineWidth, x, y)) {\n            return true;\n          }\n        } else {\n          w += windingCubic(xi, yi, data[i++], data[i++], data[i++], data[i++], data[i], data[i + 1], x, y) || 0;\n        }\n\n        xi = data[i++];\n        yi = data[i++];\n        break;\n\n      case CMD.Q:\n        if (isStroke) {\n          if (quadratic.containStroke(xi, yi, data[i++], data[i++], data[i], data[i + 1], lineWidth, x, y)) {\n            return true;\n          }\n        } else {\n          w += windingQuadratic(xi, yi, data[i++], data[i++], data[i], data[i + 1], x, y) || 0;\n        }\n\n        xi = data[i++];\n        yi = data[i++];\n        break;\n\n      case CMD.A:\n        // TODO Arc 判断的开销比较大\n        var cx = data[i++];\n        var cy = data[i++];\n        var rx = data[i++];\n        var ry = data[i++];\n        var theta = data[i++];\n        var dTheta = data[i++]; // TODO Arc 旋转\n\n        var psi = data[i++];\n        var anticlockwise = 1 - data[i++];\n        var x1 = Math.cos(theta) * rx + cx;\n        var y1 = Math.sin(theta) * ry + cy; // 不是直接使用 arc 命令\n\n        if (i > 1) {\n          w += windingLine(xi, yi, x1, y1, x, y);\n        } else {\n          // 第一个命令起点还未定义\n          x0 = x1;\n          y0 = y1;\n        } // zr 使用scale来模拟椭圆, 这里也对x做一定的缩放\n\n\n        var _x = (x - cx) * ry / rx + cx;\n\n        if (isStroke) {\n          if (arc.containStroke(cx, cy, ry, theta, theta + dTheta, anticlockwise, lineWidth, _x, y)) {\n            return true;\n          }\n        } else {\n          w += windingArc(cx, cy, ry, theta, theta + dTheta, anticlockwise, _x, y);\n        }\n\n        xi = Math.cos(theta + dTheta) * rx + cx;\n        yi = Math.sin(theta + dTheta) * ry + cy;\n        break;\n\n      case CMD.R:\n        x0 = xi = data[i++];\n        y0 = yi = data[i++];\n        var width = data[i++];\n        var height = data[i++];\n        var x1 = x0 + width;\n        var y1 = y0 + height;\n\n        if (isStroke) {\n          if (line.containStroke(x0, y0, x1, y0, lineWidth, x, y) || line.containStroke(x1, y0, x1, y1, lineWidth, x, y) || line.containStroke(x1, y1, x0, y1, lineWidth, x, y) || line.containStroke(x0, y1, x0, y0, lineWidth, x, y)) {\n            return true;\n          }\n        } else {\n          // FIXME Clockwise ?\n          w += windingLine(x1, y0, x1, y1, x, y);\n          w += windingLine(x0, y1, x0, y0, x, y);\n        }\n\n        break;\n\n      case CMD.Z:\n        if (isStroke) {\n          if (line.containStroke(xi, yi, x0, y0, lineWidth, x, y)) {\n            return true;\n          }\n        } else {\n          // Close a subpath\n          w += windingLine(xi, yi, x0, y0, x, y); // 如果被任何一个 subpath 包含\n          // FIXME subpaths may overlap\n          // if (w !== 0) {\n          //     return true;\n          // }\n        }\n\n        xi = x0;\n        yi = y0;\n        break;\n    }\n  }\n\n  if (!isStroke && !isAroundEqual(yi, y0)) {\n    w += windingLine(xi, yi, x0, y0, x, y) || 0;\n  }\n\n  return w !== 0;\n}\n\nfunction contain(pathData, x, y) {\n  return containPath(pathData, 0, false, x, y);\n}\n\nfunction containStroke(pathData, lineWidth, x, y) {\n  return containPath(pathData, lineWidth, true, x, y);\n}\n\nexports.contain = contain;\nexports.containStroke = containStroke;\n\n/***/ }),\n/* 605 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _curve = __webpack_require__(477);\n\nvar quadraticProjectPoint = _curve.quadraticProjectPoint;\n\n/**\n * 二次贝塞尔曲线描边包含判断\n * @param  {number}  x0\n * @param  {number}  y0\n * @param  {number}  x1\n * @param  {number}  y1\n * @param  {number}  x2\n * @param  {number}  y2\n * @param  {number}  lineWidth\n * @param  {number}  x\n * @param  {number}  y\n * @return {boolean}\n */\nfunction containStroke(x0, y0, x1, y1, x2, y2, lineWidth, x, y) {\n  if (lineWidth === 0) {\n    return false;\n  }\n\n  var _l = lineWidth; // Quick reject\n\n  if (y > y0 + _l && y > y1 + _l && y > y2 + _l || y < y0 - _l && y < y1 - _l && y < y2 - _l || x > x0 + _l && x > x1 + _l && x > x2 + _l || x < x0 - _l && x < x1 - _l && x < x2 - _l) {\n    return false;\n  }\n\n  var d = quadraticProjectPoint(x0, y0, x1, y1, x2, y2, x, y, null);\n  return d <= _l / 2;\n}\n\nexports.containStroke = containStroke;\n\n/***/ }),\n/* 606 */\n/***/ (function(module, exports) {\n\nfunction windingLine(x0, y0, x1, y1, x, y) {\n  if (y > y0 && y > y1 || y < y0 && y < y1) {\n    return 0;\n  } // Ignore horizontal line\n\n\n  if (y1 === y0) {\n    return 0;\n  }\n\n  var dir = y1 < y0 ? 1 : -1;\n  var t = (y - y0) / (y1 - y0); // Avoid winding error when intersection point is the connect point of two line of polygon\n\n  if (t === 1 || t === 0) {\n    dir = y1 < y0 ? 0.5 : -0.5;\n  }\n\n  var x_ = t * (x1 - x0) + x0;\n  return x_ > x ? dir : 0;\n}\n\nmodule.exports = windingLine;\n\n/***/ }),\n/* 607 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar eventUtil = __webpack_require__(485);\n\n/**\n * Only implements needed gestures for mobile.\n */\nvar GestureMgr = function () {\n  /**\n   * @private\n   * @type {Array.<Object>}\n   */\n  this._track = [];\n};\n\nGestureMgr.prototype = {\n  constructor: GestureMgr,\n  recognize: function (event, target, root) {\n    this._doTrack(event, target, root);\n\n    return this._recognize(event);\n  },\n  clear: function () {\n    this._track.length = 0;\n    return this;\n  },\n  _doTrack: function (event, target, root) {\n    var touches = event.touches;\n\n    if (!touches) {\n      return;\n    }\n\n    var trackItem = {\n      points: [],\n      touches: [],\n      target: target,\n      event: event\n    };\n\n    for (var i = 0, len = touches.length; i < len; i++) {\n      var touch = touches[i];\n      var pos = eventUtil.clientToLocal(root, touch, {});\n      trackItem.points.push([pos.zrX, pos.zrY]);\n      trackItem.touches.push(touch);\n    }\n\n    this._track.push(trackItem);\n  },\n  _recognize: function (event) {\n    for (var eventName in recognizers) {\n      if (recognizers.hasOwnProperty(eventName)) {\n        var gestureInfo = recognizers[eventName](this._track, event);\n\n        if (gestureInfo) {\n          return gestureInfo;\n        }\n      }\n    }\n  }\n};\n\nfunction dist(pointPair) {\n  var dx = pointPair[1][0] - pointPair[0][0];\n  var dy = pointPair[1][1] - pointPair[0][1];\n  return Math.sqrt(dx * dx + dy * dy);\n}\n\nfunction center(pointPair) {\n  return [(pointPair[0][0] + pointPair[1][0]) / 2, (pointPair[0][1] + pointPair[1][1]) / 2];\n}\n\nvar recognizers = {\n  pinch: function (track, event) {\n    var trackLen = track.length;\n\n    if (!trackLen) {\n      return;\n    }\n\n    var pinchEnd = (track[trackLen - 1] || {}).points;\n    var pinchPre = (track[trackLen - 2] || {}).points || pinchEnd;\n\n    if (pinchPre && pinchPre.length > 1 && pinchEnd && pinchEnd.length > 1) {\n      var pinchScale = dist(pinchEnd) / dist(pinchPre);\n      !isFinite(pinchScale) && (pinchScale = 1);\n      event.pinchScale = pinchScale;\n      var pinchCenter = center(pinchEnd);\n      event.pinchX = pinchCenter[0];\n      event.pinchY = pinchCenter[1];\n      return {\n        type: 'pinch',\n        target: track[0].target,\n        event: event\n      };\n    }\n  } // Only pinch currently.\n\n};\nvar _default = GestureMgr;\nmodule.exports = _default;\n\n/***/ }),\n/* 608 */\n/***/ (function(module, exports) {\n\n// Myers' Diff Algorithm\n// Modified from https://github.com/kpdecker/jsdiff/blob/master/src/diff/base.js\nfunction Diff() {}\n\nDiff.prototype = {\n  diff: function (oldArr, newArr, equals) {\n    if (!equals) {\n      equals = function (a, b) {\n        return a === b;\n      };\n    }\n\n    this.equals = equals;\n    var self = this;\n    oldArr = oldArr.slice();\n    newArr = newArr.slice(); // Allow subclasses to massage the input prior to running\n\n    var newLen = newArr.length;\n    var oldLen = oldArr.length;\n    var editLength = 1;\n    var maxEditLength = newLen + oldLen;\n    var bestPath = [{\n      newPos: -1,\n      components: []\n    }]; // Seed editLength = 0, i.e. the content starts with the same values\n\n    var oldPos = this.extractCommon(bestPath[0], newArr, oldArr, 0);\n\n    if (bestPath[0].newPos + 1 >= newLen && oldPos + 1 >= oldLen) {\n      var indices = [];\n\n      for (var i = 0; i < newArr.length; i++) {\n        indices.push(i);\n      } // Identity per the equality and tokenizer\n\n\n      return [{\n        indices: indices,\n        count: newArr.length\n      }];\n    } // Main worker method. checks all permutations of a given edit length for acceptance.\n\n\n    function execEditLength() {\n      for (var diagonalPath = -1 * editLength; diagonalPath <= editLength; diagonalPath += 2) {\n        var basePath;\n        var addPath = bestPath[diagonalPath - 1];\n        var removePath = bestPath[diagonalPath + 1];\n        var oldPos = (removePath ? removePath.newPos : 0) - diagonalPath;\n\n        if (addPath) {\n          // No one else is going to attempt to use this value, clear it\n          bestPath[diagonalPath - 1] = undefined;\n        }\n\n        var canAdd = addPath && addPath.newPos + 1 < newLen;\n        var canRemove = removePath && 0 <= oldPos && oldPos < oldLen;\n\n        if (!canAdd && !canRemove) {\n          // If this path is a terminal then prune\n          bestPath[diagonalPath] = undefined;\n          continue;\n        } // Select the diagonal that we want to branch from. We select the prior\n        // path whose position in the new string is the farthest from the origin\n        // and does not pass the bounds of the diff graph\n\n\n        if (!canAdd || canRemove && addPath.newPos < removePath.newPos) {\n          basePath = clonePath(removePath);\n          self.pushComponent(basePath.components, undefined, true);\n        } else {\n          basePath = addPath; // No need to clone, we've pulled it from the list\n\n          basePath.newPos++;\n          self.pushComponent(basePath.components, true, undefined);\n        }\n\n        oldPos = self.extractCommon(basePath, newArr, oldArr, diagonalPath); // If we have hit the end of both strings, then we are done\n\n        if (basePath.newPos + 1 >= newLen && oldPos + 1 >= oldLen) {\n          return buildValues(self, basePath.components, newArr, oldArr);\n        } else {\n          // Otherwise track this path as a potential candidate and continue.\n          bestPath[diagonalPath] = basePath;\n        }\n      }\n\n      editLength++;\n    }\n\n    while (editLength <= maxEditLength) {\n      var ret = execEditLength();\n\n      if (ret) {\n        return ret;\n      }\n    }\n  },\n  pushComponent: function (components, added, removed) {\n    var last = components[components.length - 1];\n\n    if (last && last.added === added && last.removed === removed) {\n      // We need to clone here as the component clone operation is just\n      // as shallow array clone\n      components[components.length - 1] = {\n        count: last.count + 1,\n        added: added,\n        removed: removed\n      };\n    } else {\n      components.push({\n        count: 1,\n        added: added,\n        removed: removed\n      });\n    }\n  },\n  extractCommon: function (basePath, newArr, oldArr, diagonalPath) {\n    var newLen = newArr.length;\n    var oldLen = oldArr.length;\n    var newPos = basePath.newPos;\n    var oldPos = newPos - diagonalPath;\n    var commonCount = 0;\n\n    while (newPos + 1 < newLen && oldPos + 1 < oldLen && this.equals(newArr[newPos + 1], oldArr[oldPos + 1])) {\n      newPos++;\n      oldPos++;\n      commonCount++;\n    }\n\n    if (commonCount) {\n      basePath.components.push({\n        count: commonCount\n      });\n    }\n\n    basePath.newPos = newPos;\n    return oldPos;\n  },\n  tokenize: function (value) {\n    return value.slice();\n  },\n  join: function (value) {\n    return value.slice();\n  }\n};\n\nfunction buildValues(diff, components, newArr, oldArr) {\n  var componentPos = 0;\n  var componentLen = components.length;\n  var newPos = 0;\n  var oldPos = 0;\n\n  for (; componentPos < componentLen; componentPos++) {\n    var component = components[componentPos];\n\n    if (!component.removed) {\n      var indices = [];\n\n      for (var i = newPos; i < newPos + component.count; i++) {\n        indices.push(i);\n      }\n\n      component.indices = indices;\n      newPos += component.count; // Common case\n\n      if (!component.added) {\n        oldPos += component.count;\n      }\n    } else {\n      var indices = [];\n\n      for (var i = oldPos; i < oldPos + component.count; i++) {\n        indices.push(i);\n      }\n\n      component.indices = indices;\n      oldPos += component.count;\n    }\n  }\n\n  return components;\n}\n\nfunction clonePath(path) {\n  return {\n    newPos: path.newPos,\n    components: path.components.slice(0)\n  };\n}\n\nvar arrayDiff = new Diff();\n\nfunction _default(oldArr, newArr, callback) {\n  return arrayDiff.diff(oldArr, newArr, callback);\n}\n\nmodule.exports = _default;\n\n/***/ }),\n/* 609 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar vec2 = __webpack_require__(463);\n\nvar curve = __webpack_require__(477);\n\n/**\n * @author Yi Shen(https://github.com/pissang)\n */\nvar mathMin = Math.min;\nvar mathMax = Math.max;\nvar mathSin = Math.sin;\nvar mathCos = Math.cos;\nvar PI2 = Math.PI * 2;\nvar start = vec2.create();\nvar end = vec2.create();\nvar extremity = vec2.create();\n/**\n * 从顶点数组中计算出最小包围盒，写入`min`和`max`中\n * @module zrender/core/bbox\n * @param {Array<Object>} points 顶点数组\n * @param {number} min\n * @param {number} max\n */\n\nfunction fromPoints(points, min, max) {\n  if (points.length === 0) {\n    return;\n  }\n\n  var p = points[0];\n  var left = p[0];\n  var right = p[0];\n  var top = p[1];\n  var bottom = p[1];\n  var i;\n\n  for (i = 1; i < points.length; i++) {\n    p = points[i];\n    left = mathMin(left, p[0]);\n    right = mathMax(right, p[0]);\n    top = mathMin(top, p[1]);\n    bottom = mathMax(bottom, p[1]);\n  }\n\n  min[0] = left;\n  min[1] = top;\n  max[0] = right;\n  max[1] = bottom;\n}\n/**\n * @memberOf module:zrender/core/bbox\n * @param {number} x0\n * @param {number} y0\n * @param {number} x1\n * @param {number} y1\n * @param {Array.<number>} min\n * @param {Array.<number>} max\n */\n\n\nfunction fromLine(x0, y0, x1, y1, min, max) {\n  min[0] = mathMin(x0, x1);\n  min[1] = mathMin(y0, y1);\n  max[0] = mathMax(x0, x1);\n  max[1] = mathMax(y0, y1);\n}\n\nvar xDim = [];\nvar yDim = [];\n/**\n * 从三阶贝塞尔曲线(p0, p1, p2, p3)中计算出最小包围盒，写入`min`和`max`中\n * @memberOf module:zrender/core/bbox\n * @param {number} x0\n * @param {number} y0\n * @param {number} x1\n * @param {number} y1\n * @param {number} x2\n * @param {number} y2\n * @param {number} x3\n * @param {number} y3\n * @param {Array.<number>} min\n * @param {Array.<number>} max\n */\n\nfunction fromCubic(x0, y0, x1, y1, x2, y2, x3, y3, min, max) {\n  var cubicExtrema = curve.cubicExtrema;\n  var cubicAt = curve.cubicAt;\n  var i;\n  var n = cubicExtrema(x0, x1, x2, x3, xDim);\n  min[0] = Infinity;\n  min[1] = Infinity;\n  max[0] = -Infinity;\n  max[1] = -Infinity;\n\n  for (i = 0; i < n; i++) {\n    var x = cubicAt(x0, x1, x2, x3, xDim[i]);\n    min[0] = mathMin(x, min[0]);\n    max[0] = mathMax(x, max[0]);\n  }\n\n  n = cubicExtrema(y0, y1, y2, y3, yDim);\n\n  for (i = 0; i < n; i++) {\n    var y = cubicAt(y0, y1, y2, y3, yDim[i]);\n    min[1] = mathMin(y, min[1]);\n    max[1] = mathMax(y, max[1]);\n  }\n\n  min[0] = mathMin(x0, min[0]);\n  max[0] = mathMax(x0, max[0]);\n  min[0] = mathMin(x3, min[0]);\n  max[0] = mathMax(x3, max[0]);\n  min[1] = mathMin(y0, min[1]);\n  max[1] = mathMax(y0, max[1]);\n  min[1] = mathMin(y3, min[1]);\n  max[1] = mathMax(y3, max[1]);\n}\n/**\n * 从二阶贝塞尔曲线(p0, p1, p2)中计算出最小包围盒，写入`min`和`max`中\n * @memberOf module:zrender/core/bbox\n * @param {number} x0\n * @param {number} y0\n * @param {number} x1\n * @param {number} y1\n * @param {number} x2\n * @param {number} y2\n * @param {Array.<number>} min\n * @param {Array.<number>} max\n */\n\n\nfunction fromQuadratic(x0, y0, x1, y1, x2, y2, min, max) {\n  var quadraticExtremum = curve.quadraticExtremum;\n  var quadraticAt = curve.quadraticAt; // Find extremities, where derivative in x dim or y dim is zero\n\n  var tx = mathMax(mathMin(quadraticExtremum(x0, x1, x2), 1), 0);\n  var ty = mathMax(mathMin(quadraticExtremum(y0, y1, y2), 1), 0);\n  var x = quadraticAt(x0, x1, x2, tx);\n  var y = quadraticAt(y0, y1, y2, ty);\n  min[0] = mathMin(x0, x2, x);\n  min[1] = mathMin(y0, y2, y);\n  max[0] = mathMax(x0, x2, x);\n  max[1] = mathMax(y0, y2, y);\n}\n/**\n * 从圆弧中计算出最小包围盒，写入`min`和`max`中\n * @method\n * @memberOf module:zrender/core/bbox\n * @param {number} x\n * @param {number} y\n * @param {number} rx\n * @param {number} ry\n * @param {number} startAngle\n * @param {number} endAngle\n * @param {number} anticlockwise\n * @param {Array.<number>} min\n * @param {Array.<number>} max\n */\n\n\nfunction fromArc(x, y, rx, ry, startAngle, endAngle, anticlockwise, min, max) {\n  var vec2Min = vec2.min;\n  var vec2Max = vec2.max;\n  var diff = Math.abs(startAngle - endAngle);\n\n  if (diff % PI2 < 1e-4 && diff > 1e-4) {\n    // Is a circle\n    min[0] = x - rx;\n    min[1] = y - ry;\n    max[0] = x + rx;\n    max[1] = y + ry;\n    return;\n  }\n\n  start[0] = mathCos(startAngle) * rx + x;\n  start[1] = mathSin(startAngle) * ry + y;\n  end[0] = mathCos(endAngle) * rx + x;\n  end[1] = mathSin(endAngle) * ry + y;\n  vec2Min(min, start, end);\n  vec2Max(max, start, end); // Thresh to [0, Math.PI * 2]\n\n  startAngle = startAngle % PI2;\n\n  if (startAngle < 0) {\n    startAngle = startAngle + PI2;\n  }\n\n  endAngle = endAngle % PI2;\n\n  if (endAngle < 0) {\n    endAngle = endAngle + PI2;\n  }\n\n  if (startAngle > endAngle && !anticlockwise) {\n    endAngle += PI2;\n  } else if (startAngle < endAngle && anticlockwise) {\n    startAngle += PI2;\n  }\n\n  if (anticlockwise) {\n    var tmp = endAngle;\n    endAngle = startAngle;\n    startAngle = tmp;\n  } // var number = 0;\n  // var step = (anticlockwise ? -Math.PI : Math.PI) / 2;\n\n\n  for (var angle = 0; angle < endAngle; angle += Math.PI / 2) {\n    if (angle > startAngle) {\n      extremity[0] = mathCos(angle) * rx + x;\n      extremity[1] = mathSin(angle) * ry + y;\n      vec2Min(min, extremity, min);\n      vec2Max(max, extremity, max);\n    }\n  }\n}\n\nexports.fromPoints = fromPoints;\nexports.fromLine = fromLine;\nexports.fromCubic = fromCubic;\nexports.fromQuadratic = fromQuadratic;\nexports.fromArc = fromArc;\n\n/***/ }),\n/* 610 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _event = __webpack_require__(485);\n\nvar addEventListener = _event.addEventListener;\nvar removeEventListener = _event.removeEventListener;\nvar normalizeEvent = _event.normalizeEvent;\n\nvar zrUtil = __webpack_require__(460);\n\nvar Eventful = __webpack_require__(481);\n\nvar env = __webpack_require__(466);\n\nvar GestureMgr = __webpack_require__(607);\n\nvar TOUCH_CLICK_DELAY = 300;\nvar mouseHandlerNames = ['click', 'dblclick', 'mousewheel', 'mouseout', 'mouseup', 'mousedown', 'mousemove', 'contextmenu'];\nvar touchHandlerNames = ['touchstart', 'touchend', 'touchmove'];\nvar pointerEventNames = {\n  pointerdown: 1,\n  pointerup: 1,\n  pointermove: 1,\n  pointerout: 1\n};\nvar pointerHandlerNames = zrUtil.map(mouseHandlerNames, function (name) {\n  var nm = name.replace('mouse', 'pointer');\n  return pointerEventNames[nm] ? nm : name;\n});\n\nfunction eventNameFix(name) {\n  return name === 'mousewheel' && env.browser.firefox ? 'DOMMouseScroll' : name;\n}\n\nfunction processGesture(proxy, event, stage) {\n  var gestureMgr = proxy._gestureMgr;\n  stage === 'start' && gestureMgr.clear();\n  var gestureInfo = gestureMgr.recognize(event, proxy.handler.findHover(event.zrX, event.zrY, null).target, proxy.dom);\n  stage === 'end' && gestureMgr.clear(); // Do not do any preventDefault here. Upper application do that if necessary.\n\n  if (gestureInfo) {\n    var type = gestureInfo.type;\n    event.gestureEvent = type;\n    proxy.handler.dispatchToElement({\n      target: gestureInfo.target\n    }, type, gestureInfo.event);\n  }\n} // function onMSGestureChange(proxy, event) {\n//     if (event.translationX || event.translationY) {\n//         // mousemove is carried by MSGesture to reduce the sensitivity.\n//         proxy.handler.dispatchToElement(event.target, 'mousemove', event);\n//     }\n//     if (event.scale !== 1) {\n//         event.pinchX = event.offsetX;\n//         event.pinchY = event.offsetY;\n//         event.pinchScale = event.scale;\n//         proxy.handler.dispatchToElement(event.target, 'pinch', event);\n//     }\n// }\n\n/**\n * Prevent mouse event from being dispatched after Touch Events action\n * @see <https://github.com/deltakosh/handjs/blob/master/src/hand.base.js>\n * 1. Mobile browsers dispatch mouse events 300ms after touchend.\n * 2. Chrome for Android dispatch mousedown for long-touch about 650ms\n * Result: Blocking Mouse Events for 700ms.\n */\n\n\nfunction setTouchTimer(instance) {\n  instance._touching = true;\n  clearTimeout(instance._touchTimer);\n  instance._touchTimer = setTimeout(function () {\n    instance._touching = false;\n  }, 700);\n}\n\nvar domHandlers = {\n  /**\n   * Mouse move handler\n   * @inner\n   * @param {Event} event\n   */\n  mousemove: function (event) {\n    event = normalizeEvent(this.dom, event);\n    this.trigger('mousemove', event);\n  },\n\n  /**\n   * Mouse out handler\n   * @inner\n   * @param {Event} event\n   */\n  mouseout: function (event) {\n    event = normalizeEvent(this.dom, event);\n    var element = event.toElement || event.relatedTarget;\n\n    if (element != this.dom) {\n      while (element && element.nodeType != 9) {\n        // 忽略包含在root中的dom引起的mouseOut\n        if (element === this.dom) {\n          return;\n        }\n\n        element = element.parentNode;\n      }\n    }\n\n    this.trigger('mouseout', event);\n  },\n\n  /**\n   * Touch开始响应函数\n   * @inner\n   * @param {Event} event\n   */\n  touchstart: function (event) {\n    // Default mouse behaviour should not be disabled here.\n    // For example, page may needs to be slided.\n    event = normalizeEvent(this.dom, event); // Mark touch, which is useful in distinguish touch and\n    // mouse event in upper applicatoin.\n\n    event.zrByTouch = true;\n    this._lastTouchMoment = new Date();\n    processGesture(this, event, 'start'); // In touch device, trigger `mousemove`(`mouseover`) should\n    // be triggered, and must before `mousedown` triggered.\n\n    domHandlers.mousemove.call(this, event);\n    domHandlers.mousedown.call(this, event);\n    setTouchTimer(this);\n  },\n\n  /**\n   * Touch移动响应函数\n   * @inner\n   * @param {Event} event\n   */\n  touchmove: function (event) {\n    event = normalizeEvent(this.dom, event); // Mark touch, which is useful in distinguish touch and\n    // mouse event in upper applicatoin.\n\n    event.zrByTouch = true;\n    processGesture(this, event, 'change'); // Mouse move should always be triggered no matter whether\n    // there is gestrue event, because mouse move and pinch may\n    // be used at the same time.\n\n    domHandlers.mousemove.call(this, event);\n    setTouchTimer(this);\n  },\n\n  /**\n   * Touch结束响应函数\n   * @inner\n   * @param {Event} event\n   */\n  touchend: function (event) {\n    event = normalizeEvent(this.dom, event); // Mark touch, which is useful in distinguish touch and\n    // mouse event in upper applicatoin.\n\n    event.zrByTouch = true;\n    processGesture(this, event, 'end');\n    domHandlers.mouseup.call(this, event); // Do not trigger `mouseout` here, in spite of `mousemove`(`mouseover`) is\n    // triggered in `touchstart`. This seems to be illogical, but by this mechanism,\n    // we can conveniently implement \"hover style\" in both PC and touch device just\n    // by listening to `mouseover` to add \"hover style\" and listening to `mouseout`\n    // to remove \"hover style\" on an element, without any additional code for\n    // compatibility. (`mouseout` will not be triggered in `touchend`, so \"hover\n    // style\" will remain for user view)\n    // click event should always be triggered no matter whether\n    // there is gestrue event. System click can not be prevented.\n\n    if (+new Date() - this._lastTouchMoment < TOUCH_CLICK_DELAY) {\n      domHandlers.click.call(this, event);\n    }\n\n    setTouchTimer(this);\n  },\n  pointerdown: function (event) {\n    domHandlers.mousedown.call(this, event); // if (useMSGuesture(this, event)) {\n    //     this._msGesture.addPointer(event.pointerId);\n    // }\n  },\n  pointermove: function (event) {\n    // FIXME\n    // pointermove is so sensitive that it always triggered when\n    // tap(click) on touch screen, which affect some judgement in\n    // upper application. So, we dont support mousemove on MS touch\n    // device yet.\n    if (!isPointerFromTouch(event)) {\n      domHandlers.mousemove.call(this, event);\n    }\n  },\n  pointerup: function (event) {\n    domHandlers.mouseup.call(this, event);\n  },\n  pointerout: function (event) {\n    // pointerout will be triggered when tap on touch screen\n    // (IE11+/Edge on MS Surface) after click event triggered,\n    // which is inconsistent with the mousout behavior we defined\n    // in touchend. So we unify them.\n    // (check domHandlers.touchend for detailed explanation)\n    if (!isPointerFromTouch(event)) {\n      domHandlers.mouseout.call(this, event);\n    }\n  }\n};\n\nfunction isPointerFromTouch(event) {\n  var pointerType = event.pointerType;\n  return pointerType === 'pen' || pointerType === 'touch';\n} // function useMSGuesture(handlerProxy, event) {\n//     return isPointerFromTouch(event) && !!handlerProxy._msGesture;\n// }\n// Common handlers\n\n\nzrUtil.each(['click', 'mousedown', 'mouseup', 'mousewheel', 'dblclick', 'contextmenu'], function (name) {\n  domHandlers[name] = function (event) {\n    event = normalizeEvent(this.dom, event);\n    this.trigger(name, event);\n  };\n});\n/**\n * 为控制类实例初始化dom 事件处理函数\n *\n * @inner\n * @param {module:zrender/Handler} instance 控制类实例\n */\n\nfunction initDomHandler(instance) {\n  zrUtil.each(touchHandlerNames, function (name) {\n    instance._handlers[name] = zrUtil.bind(domHandlers[name], instance);\n  });\n  zrUtil.each(pointerHandlerNames, function (name) {\n    instance._handlers[name] = zrUtil.bind(domHandlers[name], instance);\n  });\n  zrUtil.each(mouseHandlerNames, function (name) {\n    instance._handlers[name] = makeMouseHandler(domHandlers[name], instance);\n  });\n\n  function makeMouseHandler(fn, instance) {\n    return function () {\n      if (instance._touching) {\n        return;\n      }\n\n      return fn.apply(instance, arguments);\n    };\n  }\n}\n\nfunction HandlerDomProxy(dom) {\n  Eventful.call(this);\n  this.dom = dom;\n  /**\n   * @private\n   * @type {boolean}\n   */\n\n  this._touching = false;\n  /**\n   * @private\n   * @type {number}\n   */\n\n  this._touchTimer;\n  /**\n   * @private\n   * @type {module:zrender/core/GestureMgr}\n   */\n\n  this._gestureMgr = new GestureMgr();\n  this._handlers = {};\n  initDomHandler(this);\n\n  if (env.pointerEventsSupported) {\n    // Only IE11+/Edge\n    // 1. On devices that both enable touch and mouse (e.g., MS Surface and lenovo X240),\n    // IE11+/Edge do not trigger touch event, but trigger pointer event and mouse event\n    // at the same time.\n    // 2. On MS Surface, it probablely only trigger mousedown but no mouseup when tap on\n    // screen, which do not occurs in pointer event.\n    // So we use pointer event to both detect touch gesture and mouse behavior.\n    mountHandlers(pointerHandlerNames, this); // FIXME\n    // Note: MS Gesture require CSS touch-action set. But touch-action is not reliable,\n    // which does not prevent defuault behavior occasionally (which may cause view port\n    // zoomed in but use can not zoom it back). And event.preventDefault() does not work.\n    // So we have to not to use MSGesture and not to support touchmove and pinch on MS\n    // touch screen. And we only support click behavior on MS touch screen now.\n    // MS Gesture Event is only supported on IE11+/Edge and on Windows 8+.\n    // We dont support touch on IE on win7.\n    // See <https://msdn.microsoft.com/en-us/library/dn433243(v=vs.85).aspx>\n    // if (typeof MSGesture === 'function') {\n    //     (this._msGesture = new MSGesture()).target = dom; // jshint ignore:line\n    //     dom.addEventListener('MSGestureChange', onMSGestureChange);\n    // }\n  } else {\n    if (env.touchEventsSupported) {\n      mountHandlers(touchHandlerNames, this); // Handler of 'mouseout' event is needed in touch mode, which will be mounted below.\n      // addEventListener(root, 'mouseout', this._mouseoutHandler);\n    } // 1. Considering some devices that both enable touch and mouse event (like on MS Surface\n    // and lenovo X240, @see #2350), we make mouse event be always listened, otherwise\n    // mouse event can not be handle in those devices.\n    // 2. On MS Surface, Chrome will trigger both touch event and mouse event. How to prevent\n    // mouseevent after touch event triggered, see `setTouchTimer`.\n\n\n    mountHandlers(mouseHandlerNames, this);\n  }\n\n  function mountHandlers(handlerNames, instance) {\n    zrUtil.each(handlerNames, function (name) {\n      addEventListener(dom, eventNameFix(name), instance._handlers[name]);\n    }, instance);\n  }\n}\n\nvar handlerDomProxyProto = HandlerDomProxy.prototype;\n\nhandlerDomProxyProto.dispose = function () {\n  var handlerNames = mouseHandlerNames.concat(touchHandlerNames);\n\n  for (var i = 0; i < handlerNames.length; i++) {\n    var name = handlerNames[i];\n    removeEventListener(this.dom, eventNameFix(name), this._handlers[name]);\n  }\n};\n\nhandlerDomProxyProto.setCursor = function (cursorStyle) {\n  this.dom.style.cursor = cursorStyle || 'default';\n};\n\nzrUtil.mixin(HandlerDomProxy, Eventful);\nvar _default = HandlerDomProxy;\nmodule.exports = _default;\n\n/***/ }),\n/* 611 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(460);\n\nexports.util = zrUtil;\n\nvar matrix = __webpack_require__(478);\n\nexports.matrix = matrix;\n\nvar vector = __webpack_require__(463);\n\nexports.vector = vector;\n\nvar colorTool = __webpack_require__(474);\n\nexports.color = colorTool;\n\nvar pathTool = __webpack_require__(534);\n\nexports.path = pathTool;\n\nvar _Group = __webpack_require__(483);\n\nexports.Group = _Group;\n\nvar _Path = __webpack_require__(461);\n\nexports.Path = _Path;\n\nvar _Image = __webpack_require__(479);\n\nexports.Image = _Image;\n\nvar _CompoundPath = __webpack_require__(517);\n\nexports.CompoundPath = _CompoundPath;\n\nvar _Text = __webpack_require__(480);\n\nexports.Text = _Text;\n\nvar _Arc = __webpack_require__(524);\n\nexports.Arc = _Arc;\n\nvar _BezierCurve = __webpack_require__(525);\n\nexports.BezierCurve = _BezierCurve;\n\nvar _Circle = __webpack_require__(526);\n\nexports.Circle = _Circle;\n\nvar _Droplet = __webpack_require__(615);\n\nexports.Droplet = _Droplet;\n\nvar _Ellipse = __webpack_require__(616);\n\nexports.Ellipse = _Ellipse;\n\nvar _Heart = __webpack_require__(617);\n\nexports.Heart = _Heart;\n\nvar _Isogon = __webpack_require__(618);\n\nexports.Isogon = _Isogon;\n\nvar _Line = __webpack_require__(527);\n\nexports.Line = _Line;\n\nvar _Polygon = __webpack_require__(528);\n\nexports.Polygon = _Polygon;\n\nvar _Polyline = __webpack_require__(529);\n\nexports.Polyline = _Polyline;\n\nvar _Rect = __webpack_require__(530);\n\nexports.Rect = _Rect;\n\nvar _Ring = __webpack_require__(531);\n\nexports.Ring = _Ring;\n\nvar _Rose = __webpack_require__(619);\n\nexports.Rose = _Rose;\n\nvar _Sector = __webpack_require__(532);\n\nexports.Sector = _Sector;\n\nvar _Star = __webpack_require__(620);\n\nexports.Star = _Star;\n\nvar _Trochoid = __webpack_require__(621);\n\nexports.Trochoid = _Trochoid;\n\nvar _LinearGradient = __webpack_require__(518);\n\nexports.LinearGradient = _LinearGradient;\n\nvar _RadialGradient = __webpack_require__(519);\n\nexports.RadialGradient = _RadialGradient;\n\nvar _Pattern = __webpack_require__(498);\n\nexports.Pattern = _Pattern;\n\nvar _BoundingRect = __webpack_require__(467);\n\nexports.BoundingRect = _BoundingRect;\n\n/***/ }),\n/* 612 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar env = __webpack_require__(466);\n\n// Fix weird bug in some version of IE11 (like 11.0.9600.178**),\n// where exception \"unexpected call to method or property access\"\n// might be thrown when calling ctx.fill or ctx.stroke after a path\n// whose area size is zero is drawn and ctx.clip() is called and\n// shadowBlur is set. See #4572, #3112, #5777.\n// (e.g.,\n//  ctx.moveTo(10, 10);\n//  ctx.lineTo(20, 10);\n//  ctx.closePath();\n//  ctx.clip();\n//  ctx.shadowBlur = 10;\n//  ...\n//  ctx.fill();\n// )\nvar shadowTemp = [['shadowBlur', 0], ['shadowColor', '#000'], ['shadowOffsetX', 0], ['shadowOffsetY', 0]];\n\nfunction _default(orignalBrush) {\n  // version string can be: '11.0'\n  return env.browser.ie && env.browser.version >= 11 ? function () {\n    var clipPaths = this.__clipPaths;\n    var style = this.style;\n    var modified;\n\n    if (clipPaths) {\n      for (var i = 0; i < clipPaths.length; i++) {\n        var clipPath = clipPaths[i];\n        var shape = clipPath && clipPath.shape;\n        var type = clipPath && clipPath.type;\n\n        if (shape && (type === 'sector' && shape.startAngle === shape.endAngle || type === 'rect' && (!shape.width || !shape.height))) {\n          for (var j = 0; j < shadowTemp.length; j++) {\n            // It is save to put shadowTemp static, because shadowTemp\n            // will be all modified each item brush called.\n            shadowTemp[j][2] = style[shadowTemp[j][0]];\n            style[shadowTemp[j][0]] = shadowTemp[j][1];\n          }\n\n          modified = true;\n          break;\n        }\n      }\n    }\n\n    orignalBrush.apply(this, arguments);\n\n    if (modified) {\n      for (var j = 0; j < shadowTemp.length; j++) {\n        style[shadowTemp[j][0]] = shadowTemp[j][2];\n      }\n    }\n  } : orignalBrush;\n}\n\nmodule.exports = _default;\n\n/***/ }),\n/* 613 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _vector = __webpack_require__(463);\n\nvar v2Min = _vector.min;\nvar v2Max = _vector.max;\nvar v2Scale = _vector.scale;\nvar v2Distance = _vector.distance;\nvar v2Add = _vector.add;\nvar v2Clone = _vector.clone;\nvar v2Sub = _vector.sub;\n\n/**\n * 贝塞尔平滑曲线\n * @module zrender/shape/util/smoothBezier\n * @author pissang (https://www.github.com/pissang)\n *         Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *         errorrik (errorrik@gmail.com)\n */\n\n/**\n * 贝塞尔平滑曲线\n * @alias module:zrender/shape/util/smoothBezier\n * @param {Array} points 线段顶点数组\n * @param {number} smooth 平滑等级, 0-1\n * @param {boolean} isLoop\n * @param {Array} constraint 将计算出来的控制点约束在一个包围盒内\n *                           比如 [[0, 0], [100, 100]], 这个包围盒会与\n *                           整个折线的包围盒做一个并集用来约束控制点。\n * @param {Array} 计算出来的控制点数组\n */\nfunction _default(points, smooth, isLoop, constraint) {\n  var cps = [];\n  var v = [];\n  var v1 = [];\n  var v2 = [];\n  var prevPoint;\n  var nextPoint;\n  var min, max;\n\n  if (constraint) {\n    min = [Infinity, Infinity];\n    max = [-Infinity, -Infinity];\n\n    for (var i = 0, len = points.length; i < len; i++) {\n      v2Min(min, min, points[i]);\n      v2Max(max, max, points[i]);\n    } // 与指定的包围盒做并集\n\n\n    v2Min(min, min, constraint[0]);\n    v2Max(max, max, constraint[1]);\n  }\n\n  for (var i = 0, len = points.length; i < len; i++) {\n    var point = points[i];\n\n    if (isLoop) {\n      prevPoint = points[i ? i - 1 : len - 1];\n      nextPoint = points[(i + 1) % len];\n    } else {\n      if (i === 0 || i === len - 1) {\n        cps.push(v2Clone(points[i]));\n        continue;\n      } else {\n        prevPoint = points[i - 1];\n        nextPoint = points[i + 1];\n      }\n    }\n\n    v2Sub(v, nextPoint, prevPoint); // use degree to scale the handle length\n\n    v2Scale(v, v, smooth);\n    var d0 = v2Distance(point, prevPoint);\n    var d1 = v2Distance(point, nextPoint);\n    var sum = d0 + d1;\n\n    if (sum !== 0) {\n      d0 /= sum;\n      d1 /= sum;\n    }\n\n    v2Scale(v1, v, -d0);\n    v2Scale(v2, v, d1);\n    var cp0 = v2Add([], point, v1);\n    var cp1 = v2Add([], point, v2);\n\n    if (constraint) {\n      v2Max(cp0, cp0, min);\n      v2Min(cp0, cp0, max);\n      v2Max(cp1, cp1, min);\n      v2Min(cp1, cp1, max);\n    }\n\n    cps.push(cp0);\n    cps.push(cp1);\n  }\n\n  if (isLoop) {\n    cps.push(cps.shift());\n  }\n\n  return cps;\n}\n\nmodule.exports = _default;\n\n/***/ }),\n/* 614 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _vector = __webpack_require__(463);\n\nvar v2Distance = _vector.distance;\n\n/**\n * Catmull-Rom spline 插值折线\n * @module zrender/shape/util/smoothSpline\n * @author pissang (https://www.github.com/pissang)\n *         Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *         errorrik (errorrik@gmail.com)\n */\n\n/**\n * @inner\n */\nfunction interpolate(p0, p1, p2, p3, t, t2, t3) {\n  var v0 = (p2 - p0) * 0.5;\n  var v1 = (p3 - p1) * 0.5;\n  return (2 * (p1 - p2) + v0 + v1) * t3 + (-3 * (p1 - p2) - 2 * v0 - v1) * t2 + v0 * t + p1;\n}\n/**\n * @alias module:zrender/shape/util/smoothSpline\n * @param {Array} points 线段顶点数组\n * @param {boolean} isLoop\n * @return {Array}\n */\n\n\nfunction _default(points, isLoop) {\n  var len = points.length;\n  var ret = [];\n  var distance = 0;\n\n  for (var i = 1; i < len; i++) {\n    distance += v2Distance(points[i - 1], points[i]);\n  }\n\n  var segs = distance / 2;\n  segs = segs < len ? len : segs;\n\n  for (var i = 0; i < segs; i++) {\n    var pos = i / (segs - 1) * (isLoop ? len : len - 1);\n    var idx = Math.floor(pos);\n    var w = pos - idx;\n    var p0;\n    var p1 = points[idx % len];\n    var p2;\n    var p3;\n\n    if (!isLoop) {\n      p0 = points[idx === 0 ? idx : idx - 1];\n      p2 = points[idx > len - 2 ? len - 1 : idx + 1];\n      p3 = points[idx > len - 3 ? len - 1 : idx + 2];\n    } else {\n      p0 = points[(idx - 1 + len) % len];\n      p2 = points[(idx + 1) % len];\n      p3 = points[(idx + 2) % len];\n    }\n\n    var w2 = w * w;\n    var w3 = w * w2;\n    ret.push([interpolate(p0[0], p1[0], p2[0], p3[0], w, w2, w3), interpolate(p0[1], p1[1], p2[1], p3[1], w, w2, w3)]);\n  }\n\n  return ret;\n}\n\nmodule.exports = _default;\n\n/***/ }),\n/* 615 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Path = __webpack_require__(461);\n\n/**\n * 水滴形状\n * @module zrender/graphic/shape/Droplet\n */\nvar _default = Path.extend({\n  type: 'droplet',\n  shape: {\n    cx: 0,\n    cy: 0,\n    width: 0,\n    height: 0\n  },\n  buildPath: function (ctx, shape) {\n    var x = shape.cx;\n    var y = shape.cy;\n    var a = shape.width;\n    var b = shape.height;\n    ctx.moveTo(x, y + a);\n    ctx.bezierCurveTo(x + a, y + a, x + a * 3 / 2, y - a / 3, x, y - b);\n    ctx.bezierCurveTo(x - a * 3 / 2, y - a / 3, x - a, y + a, x, y + a);\n    ctx.closePath();\n  }\n});\n\nmodule.exports = _default;\n\n/***/ }),\n/* 616 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Path = __webpack_require__(461);\n\n/**\n * 椭圆形状\n * @module zrender/graphic/shape/Ellipse\n */\nvar _default = Path.extend({\n  type: 'ellipse',\n  shape: {\n    cx: 0,\n    cy: 0,\n    rx: 0,\n    ry: 0\n  },\n  buildPath: function (ctx, shape) {\n    var k = 0.5522848;\n    var x = shape.cx;\n    var y = shape.cy;\n    var a = shape.rx;\n    var b = shape.ry;\n    var ox = a * k; // 水平控制点偏移量\n\n    var oy = b * k; // 垂直控制点偏移量\n    // 从椭圆的左端点开始顺时针绘制四条三次贝塞尔曲线\n\n    ctx.moveTo(x - a, y);\n    ctx.bezierCurveTo(x - a, y - oy, x - ox, y - b, x, y - b);\n    ctx.bezierCurveTo(x + ox, y - b, x + a, y - oy, x + a, y);\n    ctx.bezierCurveTo(x + a, y + oy, x + ox, y + b, x, y + b);\n    ctx.bezierCurveTo(x - ox, y + b, x - a, y + oy, x - a, y);\n    ctx.closePath();\n  }\n});\n\nmodule.exports = _default;\n\n/***/ }),\n/* 617 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Path = __webpack_require__(461);\n\n/**\n * 心形\n * @module zrender/graphic/shape/Heart\n */\nvar _default = Path.extend({\n  type: 'heart',\n  shape: {\n    cx: 0,\n    cy: 0,\n    width: 0,\n    height: 0\n  },\n  buildPath: function (ctx, shape) {\n    var x = shape.cx;\n    var y = shape.cy;\n    var a = shape.width;\n    var b = shape.height;\n    ctx.moveTo(x, y);\n    ctx.bezierCurveTo(x + a / 2, y - b * 2 / 3, x + a * 2, y + b / 3, x, y + b);\n    ctx.bezierCurveTo(x - a * 2, y + b / 3, x - a / 2, y - b * 2 / 3, x, y);\n  }\n});\n\nmodule.exports = _default;\n\n/***/ }),\n/* 618 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Path = __webpack_require__(461);\n\n/**\n * 正多边形\n * @module zrender/shape/Isogon\n */\nvar PI = Math.PI;\nvar sin = Math.sin;\nvar cos = Math.cos;\n\nvar _default = Path.extend({\n  type: 'isogon',\n  shape: {\n    x: 0,\n    y: 0,\n    r: 0,\n    n: 0\n  },\n  buildPath: function (ctx, shape) {\n    var n = shape.n;\n\n    if (!n || n < 2) {\n      return;\n    }\n\n    var x = shape.x;\n    var y = shape.y;\n    var r = shape.r;\n    var dStep = 2 * PI / n;\n    var deg = -PI / 2;\n    ctx.moveTo(x + r * cos(deg), y + r * sin(deg));\n\n    for (var i = 0, end = n - 1; i < end; i++) {\n      deg += dStep;\n      ctx.lineTo(x + r * cos(deg), y + r * sin(deg));\n    }\n\n    ctx.closePath();\n    return;\n  }\n});\n\nmodule.exports = _default;\n\n/***/ }),\n/* 619 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Path = __webpack_require__(461);\n\n/**\n * 玫瑰线\n * @module zrender/graphic/shape/Rose\n */\nvar sin = Math.sin;\nvar cos = Math.cos;\nvar radian = Math.PI / 180;\n\nvar _default = Path.extend({\n  type: 'rose',\n  shape: {\n    cx: 0,\n    cy: 0,\n    r: [],\n    k: 0,\n    n: 1\n  },\n  style: {\n    stroke: '#000',\n    fill: null\n  },\n  buildPath: function (ctx, shape) {\n    var x;\n    var y;\n    var R = shape.r;\n    var r;\n    var k = shape.k;\n    var n = shape.n;\n    var x0 = shape.cx;\n    var y0 = shape.cy;\n    ctx.moveTo(x0, y0);\n\n    for (var i = 0, len = R.length; i < len; i++) {\n      r = R[i];\n\n      for (var j = 0; j <= 360 * n; j++) {\n        x = r * sin(k / n * j % 360 * radian) * cos(j * radian) + x0;\n        y = r * sin(k / n * j % 360 * radian) * sin(j * radian) + y0;\n        ctx.lineTo(x, y);\n      }\n    }\n  }\n});\n\nmodule.exports = _default;\n\n/***/ }),\n/* 620 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Path = __webpack_require__(461);\n\n/**\n * n角星（n>3）\n * @module zrender/graphic/shape/Star\n */\nvar PI = Math.PI;\nvar cos = Math.cos;\nvar sin = Math.sin;\n\nvar _default = Path.extend({\n  type: 'star',\n  shape: {\n    cx: 0,\n    cy: 0,\n    n: 3,\n    r0: null,\n    r: 0\n  },\n  buildPath: function (ctx, shape) {\n    var n = shape.n;\n\n    if (!n || n < 2) {\n      return;\n    }\n\n    var x = shape.cx;\n    var y = shape.cy;\n    var r = shape.r;\n    var r0 = shape.r0; // 如果未指定内部顶点外接圆半径，则自动计算\n\n    if (r0 == null) {\n      r0 = n > 4 // 相隔的外部顶点的连线的交点，\n      // 被取为内部交点，以此计算r0\n      ? r * cos(2 * PI / n) / cos(PI / n) // 二三四角星的特殊处理\n      : r / 3;\n    }\n\n    var dStep = PI / n;\n    var deg = -PI / 2;\n    var xStart = x + r * cos(deg);\n    var yStart = y + r * sin(deg);\n    deg += dStep; // 记录边界点，用于判断inside\n\n    ctx.moveTo(xStart, yStart);\n\n    for (var i = 0, end = n * 2 - 1, ri; i < end; i++) {\n      ri = i % 2 === 0 ? r0 : r;\n      ctx.lineTo(x + ri * cos(deg), y + ri * sin(deg));\n      deg += dStep;\n    }\n\n    ctx.closePath();\n  }\n});\n\nmodule.exports = _default;\n\n/***/ }),\n/* 621 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Path = __webpack_require__(461);\n\n/**\n * 内外旋轮曲线\n * @module zrender/graphic/shape/Trochold\n */\nvar cos = Math.cos;\nvar sin = Math.sin;\n\nvar _default = Path.extend({\n  type: 'trochoid',\n  shape: {\n    cx: 0,\n    cy: 0,\n    r: 0,\n    r0: 0,\n    d: 0,\n    location: 'out'\n  },\n  style: {\n    stroke: '#000',\n    fill: null\n  },\n  buildPath: function (ctx, shape) {\n    var x1;\n    var y1;\n    var x2;\n    var y2;\n    var R = shape.r;\n    var r = shape.r0;\n    var d = shape.d;\n    var offsetX = shape.cx;\n    var offsetY = shape.cy;\n    var delta = shape.location == 'out' ? 1 : -1;\n\n    if (shape.location && R <= r) {\n      return;\n    }\n\n    var num = 0;\n    var i = 1;\n    var theta;\n    x1 = (R + delta * r) * cos(0) - delta * d * cos(0) + offsetX;\n    y1 = (R + delta * r) * sin(0) - d * sin(0) + offsetY;\n    ctx.moveTo(x1, y1); // 计算结束时的i\n\n    do {\n      num++;\n    } while (r * num % (R + delta * r) !== 0);\n\n    do {\n      theta = Math.PI / 180 * i;\n      x2 = (R + delta * r) * cos(theta) - delta * d * cos((R / r + delta) * theta) + offsetX;\n      y2 = (R + delta * r) * sin(theta) - d * sin((R / r + delta) * theta) + offsetY;\n      ctx.lineTo(x2, y2);\n      i++;\n    } while (i <= r * num / (R + delta * r) * 360);\n  }\n});\n\nmodule.exports = _default;\n\n/***/ }),\n/* 622 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Animator = __webpack_require__(512);\n\nvar log = __webpack_require__(484);\n\nvar _util = __webpack_require__(460);\n\nvar isString = _util.isString;\nvar isFunction = _util.isFunction;\nvar isObject = _util.isObject;\nvar isArrayLike = _util.isArrayLike;\nvar indexOf = _util.indexOf;\n\n/**\n * @alias modue:zrender/mixin/Animatable\n * @constructor\n */\nvar Animatable = function () {\n  /**\n   * @type {Array.<module:zrender/animation/Animator>}\n   * @readOnly\n   */\n  this.animators = [];\n};\n\nAnimatable.prototype = {\n  constructor: Animatable,\n\n  /**\n   * 动画\n   *\n   * @param {string} path The path to fetch value from object, like 'a.b.c'.\n   * @param {boolean} [loop] Whether to loop animation.\n   * @return {module:zrender/animation/Animator}\n   * @example:\n   *     el.animate('style', false)\n   *         .when(1000, {x: 10} )\n   *         .done(function(){ // Animation done })\n   *         .start()\n   */\n  animate: function (path, loop) {\n    var target;\n    var animatingShape = false;\n    var el = this;\n    var zr = this.__zr;\n\n    if (path) {\n      var pathSplitted = path.split('.');\n      var prop = el; // If animating shape\n\n      animatingShape = pathSplitted[0] === 'shape';\n\n      for (var i = 0, l = pathSplitted.length; i < l; i++) {\n        if (!prop) {\n          continue;\n        }\n\n        prop = prop[pathSplitted[i]];\n      }\n\n      if (prop) {\n        target = prop;\n      }\n    } else {\n      target = el;\n    }\n\n    if (!target) {\n      log('Property \"' + path + '\" is not existed in element ' + el.id);\n      return;\n    }\n\n    var animators = el.animators;\n    var animator = new Animator(target, loop);\n    animator.during(function (target) {\n      el.dirty(animatingShape);\n    }).done(function () {\n      // FIXME Animator will not be removed if use `Animator#stop` to stop animation\n      animators.splice(indexOf(animators, animator), 1);\n    });\n    animators.push(animator); // If animate after added to the zrender\n\n    if (zr) {\n      zr.animation.addAnimator(animator);\n    }\n\n    return animator;\n  },\n\n  /**\n   * 停止动画\n   * @param {boolean} forwardToLast If move to last frame before stop\n   */\n  stopAnimation: function (forwardToLast) {\n    var animators = this.animators;\n    var len = animators.length;\n\n    for (var i = 0; i < len; i++) {\n      animators[i].stop(forwardToLast);\n    }\n\n    animators.length = 0;\n    return this;\n  },\n\n  /**\n   * Caution: this method will stop previous animation.\n   * So do not use this method to one element twice before\n   * animation starts, unless you know what you are doing.\n   * @param {Object} target\n   * @param {number} [time=500] Time in ms\n   * @param {string} [easing='linear']\n   * @param {number} [delay=0]\n   * @param {Function} [callback]\n   * @param {Function} [forceAnimate] Prevent stop animation and callback\n   *        immediently when target values are the same as current values.\n   *\n   * @example\n   *  // Animate position\n   *  el.animateTo({\n   *      position: [10, 10]\n   *  }, function () { // done })\n   *\n   *  // Animate shape, style and position in 100ms, delayed 100ms, with cubicOut easing\n   *  el.animateTo({\n   *      shape: {\n   *          width: 500\n   *      },\n   *      style: {\n   *          fill: 'red'\n   *      }\n   *      position: [10, 10]\n   *  }, 100, 100, 'cubicOut', function () { // done })\n   */\n  // TODO Return animation key\n  animateTo: function (target, time, delay, easing, callback, forceAnimate) {\n    // animateTo(target, time, easing, callback);\n    if (isString(delay)) {\n      callback = easing;\n      easing = delay;\n      delay = 0;\n    } // animateTo(target, time, delay, callback);\n    else if (isFunction(easing)) {\n        callback = easing;\n        easing = 'linear';\n        delay = 0;\n      } // animateTo(target, time, callback);\n      else if (isFunction(delay)) {\n          callback = delay;\n          delay = 0;\n        } // animateTo(target, callback)\n        else if (isFunction(time)) {\n            callback = time;\n            time = 500;\n          } // animateTo(target)\n          else if (!time) {\n              time = 500;\n            } // Stop all previous animations\n\n\n    this.stopAnimation();\n\n    this._animateToShallow('', this, target, time, delay); // Animators may be removed immediately after start\n    // if there is nothing to animate\n\n\n    var animators = this.animators.slice();\n    var count = animators.length;\n\n    function done() {\n      count--;\n\n      if (!count) {\n        callback && callback();\n      }\n    } // No animators. This should be checked before animators[i].start(),\n    // because 'done' may be executed immediately if no need to animate.\n\n\n    if (!count) {\n      callback && callback();\n    } // Start after all animators created\n    // Incase any animator is done immediately when all animation properties are not changed\n\n\n    for (var i = 0; i < animators.length; i++) {\n      animators[i].done(done).start(easing, forceAnimate);\n    }\n  },\n\n  /**\n   * @private\n   * @param {string} path=''\n   * @param {Object} source=this\n   * @param {Object} target\n   * @param {number} [time=500]\n   * @param {number} [delay=0]\n   *\n   * @example\n   *  // Animate position\n   *  el._animateToShallow({\n   *      position: [10, 10]\n   *  })\n   *\n   *  // Animate shape, style and position in 100ms, delayed 100ms\n   *  el._animateToShallow({\n   *      shape: {\n   *          width: 500\n   *      },\n   *      style: {\n   *          fill: 'red'\n   *      }\n   *      position: [10, 10]\n   *  }, 100, 100)\n   */\n  _animateToShallow: function (path, source, target, time, delay) {\n    var objShallow = {};\n    var propertyCount = 0;\n\n    for (var name in target) {\n      if (!target.hasOwnProperty(name)) {\n        continue;\n      }\n\n      if (source[name] != null) {\n        if (isObject(target[name]) && !isArrayLike(target[name])) {\n          this._animateToShallow(path ? path + '.' + name : name, source[name], target[name], time, delay);\n        } else {\n          objShallow[name] = target[name];\n          propertyCount++;\n        }\n      } else if (target[name] != null) {\n        // Attr directly if not has property\n        // FIXME, if some property not needed for element ?\n        if (!path) {\n          this.attr(name, target[name]);\n        } else {\n          // Shape or style\n          var props = {};\n          props[path] = {};\n          props[path][name] = target[name];\n          this.attr(props);\n        }\n      }\n    }\n\n    if (propertyCount > 0) {\n      this.animate(path, false).when(time == null ? 500 : time, objShallow).delay(delay || 0);\n    }\n\n    return this;\n  }\n};\nvar _default = Animatable;\nmodule.exports = _default;\n\n/***/ }),\n/* 623 */\n/***/ (function(module, exports) {\n\n// TODO Draggable for group\n// FIXME Draggable on element which has parent rotation or scale\nfunction Draggable() {\n  this.on('mousedown', this._dragStart, this);\n  this.on('mousemove', this._drag, this);\n  this.on('mouseup', this._dragEnd, this);\n  this.on('globalout', this._dragEnd, this); // this._dropTarget = null;\n  // this._draggingTarget = null;\n  // this._x = 0;\n  // this._y = 0;\n}\n\nDraggable.prototype = {\n  constructor: Draggable,\n  _dragStart: function (e) {\n    var draggingTarget = e.target;\n\n    if (draggingTarget && draggingTarget.draggable) {\n      this._draggingTarget = draggingTarget;\n      draggingTarget.dragging = true;\n      this._x = e.offsetX;\n      this._y = e.offsetY;\n      this.dispatchToElement(param(draggingTarget, e), 'dragstart', e.event);\n    }\n  },\n  _drag: function (e) {\n    var draggingTarget = this._draggingTarget;\n\n    if (draggingTarget) {\n      var x = e.offsetX;\n      var y = e.offsetY;\n      var dx = x - this._x;\n      var dy = y - this._y;\n      this._x = x;\n      this._y = y;\n      draggingTarget.drift(dx, dy, e);\n      this.dispatchToElement(param(draggingTarget, e), 'drag', e.event);\n      var dropTarget = this.findHover(x, y, draggingTarget).target;\n      var lastDropTarget = this._dropTarget;\n      this._dropTarget = dropTarget;\n\n      if (draggingTarget !== dropTarget) {\n        if (lastDropTarget && dropTarget !== lastDropTarget) {\n          this.dispatchToElement(param(lastDropTarget, e), 'dragleave', e.event);\n        }\n\n        if (dropTarget && dropTarget !== lastDropTarget) {\n          this.dispatchToElement(param(dropTarget, e), 'dragenter', e.event);\n        }\n      }\n    }\n  },\n  _dragEnd: function (e) {\n    var draggingTarget = this._draggingTarget;\n\n    if (draggingTarget) {\n      draggingTarget.dragging = false;\n    }\n\n    this.dispatchToElement(param(draggingTarget, e), 'dragend', e.event);\n\n    if (this._dropTarget) {\n      this.dispatchToElement(param(this._dropTarget, e), 'drop', e.event);\n    }\n\n    this._draggingTarget = null;\n    this._dropTarget = null;\n  }\n};\n\nfunction param(target, e) {\n  return {\n    target: target,\n    topTarget: e && e.topTarget\n  };\n}\n\nvar _default = Draggable;\nmodule.exports = _default;\n\n/***/ }),\n/* 624 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar matrix = __webpack_require__(478);\n\nvar vector = __webpack_require__(463);\n\n/**\n * 提供变换扩展\n * @module zrender/mixin/Transformable\n * @author pissang (https://www.github.com/pissang)\n */\nvar mIdentity = matrix.identity;\nvar EPSILON = 5e-5;\n\nfunction isNotAroundZero(val) {\n  return val > EPSILON || val < -EPSILON;\n}\n/**\n * @alias module:zrender/mixin/Transformable\n * @constructor\n */\n\n\nvar Transformable = function (opts) {\n  opts = opts || {}; // If there are no given position, rotation, scale\n\n  if (!opts.position) {\n    /**\n     * 平移\n     * @type {Array.<number>}\n     * @default [0, 0]\n     */\n    this.position = [0, 0];\n  }\n\n  if (opts.rotation == null) {\n    /**\n     * 旋转\n     * @type {Array.<number>}\n     * @default 0\n     */\n    this.rotation = 0;\n  }\n\n  if (!opts.scale) {\n    /**\n     * 缩放\n     * @type {Array.<number>}\n     * @default [1, 1]\n     */\n    this.scale = [1, 1];\n  }\n  /**\n   * 旋转和缩放的原点\n   * @type {Array.<number>}\n   * @default null\n   */\n\n\n  this.origin = this.origin || null;\n};\n\nvar transformableProto = Transformable.prototype;\ntransformableProto.transform = null;\n/**\n * 判断是否需要有坐标变换\n * 如果有坐标变换, 则从position, rotation, scale以及父节点的transform计算出自身的transform矩阵\n */\n\ntransformableProto.needLocalTransform = function () {\n  return isNotAroundZero(this.rotation) || isNotAroundZero(this.position[0]) || isNotAroundZero(this.position[1]) || isNotAroundZero(this.scale[0] - 1) || isNotAroundZero(this.scale[1] - 1);\n};\n\ntransformableProto.updateTransform = function () {\n  var parent = this.parent;\n  var parentHasTransform = parent && parent.transform;\n  var needLocalTransform = this.needLocalTransform();\n  var m = this.transform;\n\n  if (!(needLocalTransform || parentHasTransform)) {\n    m && mIdentity(m);\n    return;\n  }\n\n  m = m || matrix.create();\n\n  if (needLocalTransform) {\n    this.getLocalTransform(m);\n  } else {\n    mIdentity(m);\n  } // 应用父节点变换\n\n\n  if (parentHasTransform) {\n    if (needLocalTransform) {\n      matrix.mul(m, parent.transform, m);\n    } else {\n      matrix.copy(m, parent.transform);\n    }\n  } // 保存这个变换矩阵\n\n\n  this.transform = m;\n  this.invTransform = this.invTransform || matrix.create();\n  matrix.invert(this.invTransform, m);\n};\n\ntransformableProto.getLocalTransform = function (m) {\n  return Transformable.getLocalTransform(this, m);\n};\n/**\n * 将自己的transform应用到context上\n * @param {CanvasRenderingContext2D} ctx\n */\n\n\ntransformableProto.setTransform = function (ctx) {\n  var m = this.transform;\n  var dpr = ctx.dpr || 1;\n\n  if (m) {\n    ctx.setTransform(dpr * m[0], dpr * m[1], dpr * m[2], dpr * m[3], dpr * m[4], dpr * m[5]);\n  } else {\n    ctx.setTransform(dpr, 0, 0, dpr, 0, 0);\n  }\n};\n\ntransformableProto.restoreTransform = function (ctx) {\n  var dpr = ctx.dpr || 1;\n  ctx.setTransform(dpr, 0, 0, dpr, 0, 0);\n};\n\nvar tmpTransform = [];\n/**\n * 分解`transform`矩阵到`position`, `rotation`, `scale`\n */\n\ntransformableProto.decomposeTransform = function () {\n  if (!this.transform) {\n    return;\n  }\n\n  var parent = this.parent;\n  var m = this.transform;\n\n  if (parent && parent.transform) {\n    // Get local transform and decompose them to position, scale, rotation\n    matrix.mul(tmpTransform, parent.invTransform, m);\n    m = tmpTransform;\n  }\n\n  var sx = m[0] * m[0] + m[1] * m[1];\n  var sy = m[2] * m[2] + m[3] * m[3];\n  var position = this.position;\n  var scale = this.scale;\n\n  if (isNotAroundZero(sx - 1)) {\n    sx = Math.sqrt(sx);\n  }\n\n  if (isNotAroundZero(sy - 1)) {\n    sy = Math.sqrt(sy);\n  }\n\n  if (m[0] < 0) {\n    sx = -sx;\n  }\n\n  if (m[3] < 0) {\n    sy = -sy;\n  }\n\n  position[0] = m[4];\n  position[1] = m[5];\n  scale[0] = sx;\n  scale[1] = sy;\n  this.rotation = Math.atan2(-m[1] / sy, m[0] / sx);\n};\n/**\n * Get global scale\n * @return {Array.<number>}\n */\n\n\ntransformableProto.getGlobalScale = function () {\n  var m = this.transform;\n\n  if (!m) {\n    return [1, 1];\n  }\n\n  var sx = Math.sqrt(m[0] * m[0] + m[1] * m[1]);\n  var sy = Math.sqrt(m[2] * m[2] + m[3] * m[3]);\n\n  if (m[0] < 0) {\n    sx = -sx;\n  }\n\n  if (m[3] < 0) {\n    sy = -sy;\n  }\n\n  return [sx, sy];\n};\n/**\n * 变换坐标位置到 shape 的局部坐标空间\n * @method\n * @param {number} x\n * @param {number} y\n * @return {Array.<number>}\n */\n\n\ntransformableProto.transformCoordToLocal = function (x, y) {\n  var v2 = [x, y];\n  var invTransform = this.invTransform;\n\n  if (invTransform) {\n    vector.applyTransform(v2, v2, invTransform);\n  }\n\n  return v2;\n};\n/**\n * 变换局部坐标位置到全局坐标空间\n * @method\n * @param {number} x\n * @param {number} y\n * @return {Array.<number>}\n */\n\n\ntransformableProto.transformCoordToGlobal = function (x, y) {\n  var v2 = [x, y];\n  var transform = this.transform;\n\n  if (transform) {\n    vector.applyTransform(v2, v2, transform);\n  }\n\n  return v2;\n};\n/**\n * @static\n * @param {Object} target\n * @param {Array.<number>} target.origin\n * @param {number} target.rotation\n * @param {Array.<number>} target.position\n * @param {Array.<number>} [m]\n */\n\n\nTransformable.getLocalTransform = function (target, m) {\n  m = m || [];\n  mIdentity(m);\n  var origin = target.origin;\n  var scale = target.scale || [1, 1];\n  var rotation = target.rotation || 0;\n  var position = target.position || [0, 0];\n\n  if (origin) {\n    // Translate to origin\n    m[4] -= origin[0];\n    m[5] -= origin[1];\n  }\n\n  matrix.scale(m, m, scale);\n\n  if (rotation) {\n    matrix.rotate(m, m, rotation);\n  }\n\n  if (origin) {\n    // Translate back from origin\n    m[4] += origin[0];\n    m[5] += origin[1];\n  }\n\n  m[4] += position[0];\n  m[5] += position[1];\n  return m;\n};\n\nvar _default = Transformable;\nmodule.exports = _default;\n\n/***/ }),\n/* 625 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _core = __webpack_require__(500);\n\nvar createElement = _core.createElement;\n\nvar util = __webpack_require__(460);\n\nvar each = util.each;\n\nvar zrLog = __webpack_require__(484);\n\nvar Path = __webpack_require__(461);\n\nvar ZImage = __webpack_require__(479);\n\nvar ZText = __webpack_require__(480);\n\nvar arrayDiff = __webpack_require__(608);\n\nvar GradientManager = __webpack_require__(627);\n\nvar ClippathManager = __webpack_require__(626);\n\nvar _graphic = __webpack_require__(501);\n\nvar svgPath = _graphic.path;\nvar svgImage = _graphic.image;\nvar svgText = _graphic.text;\n\n/**\n * SVG Painter\n * @module zrender/svg/Painter\n */\nfunction parseInt10(val) {\n  return parseInt(val, 10);\n}\n\nfunction getSvgProxy(el) {\n  if (el instanceof Path) {\n    return svgPath;\n  } else if (el instanceof ZImage) {\n    return svgImage;\n  } else if (el instanceof ZText) {\n    return svgText;\n  } else {\n    return svgPath;\n  }\n}\n\nfunction checkParentAvailable(parent, child) {\n  return child && parent && child.parentNode !== parent;\n}\n\nfunction insertAfter(parent, child, prevSibling) {\n  if (checkParentAvailable(parent, child) && prevSibling) {\n    var nextSibling = prevSibling.nextSibling;\n    nextSibling ? parent.insertBefore(child, nextSibling) : parent.appendChild(child);\n  }\n}\n\nfunction prepend(parent, child) {\n  if (checkParentAvailable(parent, child)) {\n    var firstChild = parent.firstChild;\n    firstChild ? parent.insertBefore(child, firstChild) : parent.appendChild(child);\n  }\n}\n\nfunction append(parent, child) {\n  if (checkParentAvailable(parent, child)) {\n    parent.appendChild(child);\n  }\n}\n\nfunction remove(parent, child) {\n  if (child && parent && child.parentNode === parent) {\n    parent.removeChild(child);\n  }\n}\n\nfunction getTextSvgElement(displayable) {\n  return displayable.__textSvgEl;\n}\n\nfunction getSvgElement(displayable) {\n  return displayable.__svgEl;\n}\n/**\n * @alias module:zrender/svg/Painter\n * @constructor\n * @param {HTMLElement} root 绘图容器\n * @param {module:zrender/Storage} storage\n * @param {Object} opts\n */\n\n\nvar SVGPainter = function (root, storage, opts) {\n  this.root = root;\n  this.storage = storage;\n  this._opts = opts = util.extend({}, opts || {});\n  var svgRoot = createElement('svg');\n  svgRoot.setAttribute('xmlns', 'http://www.w3.org/2000/svg');\n  svgRoot.setAttribute('version', '1.1');\n  svgRoot.setAttribute('baseProfile', 'full');\n  svgRoot.style['user-select'] = 'none';\n  svgRoot.style.cssText = 'position:absolute;left:0;top:0;';\n  this.gradientManager = new GradientManager(svgRoot);\n  this.clipPathManager = new ClippathManager(svgRoot);\n  var viewport = document.createElement('div');\n  viewport.style.cssText = 'overflow:hidden;position:relative';\n  this._svgRoot = svgRoot;\n  this._viewport = viewport;\n  root.appendChild(viewport);\n  viewport.appendChild(svgRoot);\n  this.resize(opts.width, opts.height);\n  this._visibleList = [];\n};\n\nSVGPainter.prototype = {\n  constructor: SVGPainter,\n  getType: function () {\n    return 'svg';\n  },\n  getViewportRoot: function () {\n    return this._viewport;\n  },\n  getViewportRootOffset: function () {\n    var viewportRoot = this.getViewportRoot();\n\n    if (viewportRoot) {\n      return {\n        offsetLeft: viewportRoot.offsetLeft || 0,\n        offsetTop: viewportRoot.offsetTop || 0\n      };\n    }\n  },\n  refresh: function () {\n    var list = this.storage.getDisplayList(true);\n\n    this._paintList(list);\n  },\n  _paintList: function (list) {\n    this.gradientManager.markAllUnused();\n    this.clipPathManager.markAllUnused();\n    var svgRoot = this._svgRoot;\n    var visibleList = this._visibleList;\n    var listLen = list.length;\n    var newVisibleList = [];\n    var i;\n\n    for (i = 0; i < listLen; i++) {\n      var displayable = list[i];\n      var svgProxy = getSvgProxy(displayable);\n\n      if (!displayable.invisible) {\n        if (displayable.__dirty) {\n          svgProxy && svgProxy.brush(displayable); // Update clipPath\n\n          this.clipPathManager.update(displayable); // Update gradient\n\n          if (displayable.style) {\n            this.gradientManager.update(displayable.style.fill);\n            this.gradientManager.update(displayable.style.stroke);\n          }\n\n          displayable.__dirty = false;\n        }\n\n        newVisibleList.push(displayable);\n      }\n    }\n\n    var diff = arrayDiff(visibleList, newVisibleList);\n    var prevSvgElement; // First do remove, in case element moved to the head and do remove\n    // after add\n\n    for (i = 0; i < diff.length; i++) {\n      var item = diff[i];\n\n      if (item.removed) {\n        for (var k = 0; k < item.count; k++) {\n          var displayable = visibleList[item.indices[k]];\n          var svgElement = getSvgElement(displayable);\n          var textSvgElement = getTextSvgElement(displayable);\n          remove(svgRoot, svgElement);\n          remove(svgRoot, textSvgElement);\n        }\n      }\n    }\n\n    for (i = 0; i < diff.length; i++) {\n      var item = diff[i];\n\n      if (item.added) {\n        for (var k = 0; k < item.count; k++) {\n          var displayable = newVisibleList[item.indices[k]];\n          var svgElement = getSvgElement(displayable);\n          var textSvgElement = getTextSvgElement(displayable);\n          prevSvgElement ? insertAfter(svgRoot, svgElement, prevSvgElement) : prepend(svgRoot, svgElement);\n\n          if (svgElement) {\n            insertAfter(svgRoot, textSvgElement, svgElement);\n          } else if (prevSvgElement) {\n            insertAfter(svgRoot, textSvgElement, prevSvgElement);\n          } else {\n            prepend(svgRoot, textSvgElement);\n          } // Insert text\n\n\n          insertAfter(svgRoot, textSvgElement, svgElement);\n          prevSvgElement = textSvgElement || svgElement || prevSvgElement;\n          this.gradientManager.addWithoutUpdate(svgElement, displayable);\n          this.clipPathManager.markUsed(displayable);\n        }\n      } else if (!item.removed) {\n        for (var k = 0; k < item.count; k++) {\n          var displayable = newVisibleList[item.indices[k]];\n          prevSvgElement = svgElement = getTextSvgElement(displayable) || getSvgElement(displayable) || prevSvgElement;\n          this.gradientManager.markUsed(displayable);\n          this.gradientManager.addWithoutUpdate(svgElement, displayable);\n          this.clipPathManager.markUsed(displayable);\n        }\n      }\n    }\n\n    this.gradientManager.removeUnused();\n    this.clipPathManager.removeUnused();\n    this._visibleList = newVisibleList;\n  },\n  _getDefs: function (isForceCreating) {\n    var svgRoot = this._svgRoot;\n\n    var defs = this._svgRoot.getElementsByTagName('defs');\n\n    if (defs.length === 0) {\n      // Not exist\n      if (isForceCreating) {\n        var defs = svgRoot.insertBefore(createElement('defs'), // Create new tag\n        svgRoot.firstChild // Insert in the front of svg\n        );\n\n        if (!defs.contains) {\n          // IE doesn't support contains method\n          defs.contains = function (el) {\n            var children = defs.children;\n\n            if (!children) {\n              return false;\n            }\n\n            for (var i = children.length - 1; i >= 0; --i) {\n              if (children[i] === el) {\n                return true;\n              }\n            }\n\n            return false;\n          };\n        }\n\n        return defs;\n      } else {\n        return null;\n      }\n    } else {\n      return defs[0];\n    }\n  },\n  resize: function (width, height) {\n    var viewport = this._viewport; // FIXME Why ?\n\n    viewport.style.display = 'none'; // Save input w/h\n\n    var opts = this._opts;\n    width != null && (opts.width = width);\n    height != null && (opts.height = height);\n    width = this._getSize(0);\n    height = this._getSize(1);\n    viewport.style.display = '';\n\n    if (this._width !== width && this._height !== height) {\n      this._width = width;\n      this._height = height;\n      var viewportStyle = viewport.style;\n      viewportStyle.width = width + 'px';\n      viewportStyle.height = height + 'px';\n      var svgRoot = this._svgRoot; // Set width by 'svgRoot.width = width' is invalid\n\n      svgRoot.setAttribute('width', width);\n      svgRoot.setAttribute('height', height);\n    }\n  },\n\n  /**\n   * 获取绘图区域宽度\n   */\n  getWidth: function () {\n    return this._width;\n  },\n\n  /**\n   * 获取绘图区域高度\n   */\n  getHeight: function () {\n    return this._height;\n  },\n  _getSize: function (whIdx) {\n    var opts = this._opts;\n    var wh = ['width', 'height'][whIdx];\n    var cwh = ['clientWidth', 'clientHeight'][whIdx];\n    var plt = ['paddingLeft', 'paddingTop'][whIdx];\n    var prb = ['paddingRight', 'paddingBottom'][whIdx];\n\n    if (opts[wh] != null && opts[wh] !== 'auto') {\n      return parseFloat(opts[wh]);\n    }\n\n    var root = this.root; // IE8 does not support getComputedStyle, but it use VML.\n\n    var stl = document.defaultView.getComputedStyle(root);\n    return (root[cwh] || parseInt10(stl[wh]) || parseInt10(root.style[wh])) - (parseInt10(stl[plt]) || 0) - (parseInt10(stl[prb]) || 0) | 0;\n  },\n  dispose: function () {\n    this.root.innerHTML = '';\n    this._svgRoot = this._viewport = this.storage = null;\n  },\n  clear: function () {\n    if (this._viewport) {\n      this.root.removeChild(this._viewport);\n    }\n  },\n  pathToSvg: function () {\n    this.refresh();\n    var html = this._svgRoot.outerHTML;\n    return 'data:img/svg+xml;utf-8,' + unescape(html);\n  }\n}; // Not supported methods\n\nfunction createMethodNotSupport(method) {\n  return function () {\n    zrLog('In SVG mode painter not support method \"' + method + '\"');\n  };\n} // Unsuppoted methods\n\n\neach(['getLayer', 'insertLayer', 'eachLayer', 'eachBuiltinLayer', 'eachOtherLayer', 'getLayers', 'modLayer', 'delLayer', 'clearLayer', 'toDataURL', 'pathToImage'], function (name) {\n  SVGPainter.prototype[name] = createMethodNotSupport(name);\n});\nvar _default = SVGPainter;\nmodule.exports = _default;\n\n/***/ }),\n/* 626 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Definable = __webpack_require__(533);\n\nvar zrUtil = __webpack_require__(460);\n\nvar matrix = __webpack_require__(478);\n\n/**\n * @file Manages SVG clipPath elements.\n * @author Zhang Wenli\n */\n\n/**\n * Manages SVG clipPath elements.\n *\n * @class\n * @extends Definable\n * @param   {SVGElement} svgRoot root of SVG document\n */\nfunction ClippathManager(svgRoot) {\n  Definable.call(this, svgRoot, 'clipPath', '__clippath_in_use__');\n}\n\nzrUtil.inherits(ClippathManager, Definable);\n/**\n * Update clipPath.\n *\n * @param {Displayable} displayable displayable element\n */\n\nClippathManager.prototype.update = function (displayable) {\n  var svgEl = this.getSvgElement(displayable);\n\n  if (svgEl) {\n    this.updateDom(svgEl, displayable.__clipPaths, false);\n  }\n\n  var textEl = this.getTextSvgElement(displayable);\n\n  if (textEl) {\n    // Make another clipPath for text, since it's transform\n    // matrix is not the same with svgElement\n    this.updateDom(textEl, displayable.__clipPaths, true);\n  }\n\n  this.markUsed(displayable);\n};\n/**\n * Create an SVGElement of displayable and create a <clipPath> of its\n * clipPath\n *\n * @param {Displayable} parentEl  parent element\n * @param {ClipPath[]}  clipPaths clipPaths of parent element\n * @param {boolean}     isText    if parent element is Text\n */\n\n\nClippathManager.prototype.updateDom = function (parentEl, clipPaths, isText) {\n  if (clipPaths && clipPaths.length > 0) {\n    // Has clipPath, create <clipPath> with the first clipPath\n    var defs = this.getDefs(true);\n    var clipPath = clipPaths[0];\n    var clipPathEl;\n    var id;\n    var dom = isText ? '_textDom' : '_dom';\n\n    if (clipPath[dom]) {\n      // Use a dom that is already in <defs>\n      id = clipPath[dom].getAttribute('id');\n      clipPathEl = clipPath[dom]; // Use a dom that is already in <defs>\n\n      if (!defs.contains(clipPathEl)) {\n        // This happens when set old clipPath that has\n        // been previously removed\n        defs.appendChild(clipPathEl);\n      }\n    } else {\n      // New <clipPath>\n      id = 'zr-clip-' + this.nextId;\n      ++this.nextId;\n      clipPathEl = this.createElement('clipPath');\n      clipPathEl.setAttribute('id', id);\n      defs.appendChild(clipPathEl);\n      clipPath[dom] = clipPathEl;\n    } // Build path and add to <clipPath>\n\n\n    var svgProxy = this.getSvgProxy(clipPath);\n\n    if (clipPath.transform && clipPath.parent.invTransform && !isText) {\n      /**\n       * If a clipPath has a parent with transform, the transform\n       * of parent should not be considered when setting transform\n       * of clipPath. So we need to transform back from parent's\n       * transform, which is done by multiplying parent's inverse\n       * transform.\n       */\n      // Store old transform\n      var transform = Array.prototype.slice.call(clipPath.transform); // Transform back from parent, and brush path\n\n      matrix.mul(clipPath.transform, clipPath.parent.invTransform, clipPath.transform);\n      svgProxy.brush(clipPath); // Set back transform of clipPath\n\n      clipPath.transform = transform;\n    } else {\n      svgProxy.brush(clipPath);\n    }\n\n    var pathEl = this.getSvgElement(clipPath);\n    /**\n     * Use `cloneNode()` here to appendChild to multiple parents,\n     * which may happend when Text and other shapes are using the same\n     * clipPath. Since Text will create an extra clipPath DOM due to\n     * different transform rules.\n     */\n\n    clipPathEl.appendChild(pathEl.cloneNode());\n    parentEl.setAttribute('clip-path', 'url(#' + id + ')');\n\n    if (clipPaths.length > 1) {\n      // Make the other clipPaths recursively\n      this.updateDom(clipPathEl, clipPaths.slice(1), isText);\n    }\n  } else {\n    // No clipPath\n    if (parentEl) {\n      parentEl.setAttribute('clip-path', 'none');\n    }\n  }\n};\n/**\n * Mark a single clipPath to be used\n *\n * @param {Displayable} displayable displayable element\n */\n\n\nClippathManager.prototype.markUsed = function (displayable) {\n  var that = this;\n\n  if (displayable.__clipPaths && displayable.__clipPaths.length > 0) {\n    zrUtil.each(displayable.__clipPaths, function (clipPath) {\n      if (clipPath._dom) {\n        Definable.prototype.markUsed.call(that, clipPath._dom);\n      }\n\n      if (clipPath._textDom) {\n        Definable.prototype.markUsed.call(that, clipPath._textDom);\n      }\n    });\n  }\n};\n\nvar _default = ClippathManager;\nmodule.exports = _default;\n\n/***/ }),\n/* 627 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Definable = __webpack_require__(533);\n\nvar zrUtil = __webpack_require__(460);\n\nvar zrLog = __webpack_require__(484);\n\n/**\n * @file Manages SVG gradient elements.\n * @author Zhang Wenli\n */\n\n/**\n * Manages SVG gradient elements.\n *\n * @class\n * @extends Definable\n * @param   {SVGElement} svgRoot root of SVG document\n */\nfunction GradientManager(svgRoot) {\n  Definable.call(this, svgRoot, ['linearGradient', 'radialGradient'], '__gradient_in_use__');\n}\n\nzrUtil.inherits(GradientManager, Definable);\n/**\n * Create new gradient DOM for fill or stroke if not exist,\n * but will not update gradient if exists.\n *\n * @param {SvgElement}  svgElement   SVG element to paint\n * @param {Displayable} displayable  zrender displayable element\n */\n\nGradientManager.prototype.addWithoutUpdate = function (svgElement, displayable) {\n  if (displayable && displayable.style) {\n    var that = this;\n    zrUtil.each(['fill', 'stroke'], function (fillOrStroke) {\n      if (displayable.style[fillOrStroke] && (displayable.style[fillOrStroke].type === 'linear' || displayable.style[fillOrStroke].type === 'radial')) {\n        var gradient = displayable.style[fillOrStroke];\n        var defs = that.getDefs(true); // Create dom in <defs> if not exists\n\n        var dom;\n\n        if (gradient._dom) {\n          // Gradient exists\n          dom = gradient._dom;\n\n          if (!defs.contains(gradient._dom)) {\n            // _dom is no longer in defs, recreate\n            that.addDom(dom);\n          }\n        } else {\n          // New dom\n          dom = that.add(gradient);\n        }\n\n        that.markUsed(displayable);\n        var id = dom.getAttribute('id');\n        svgElement.setAttribute(fillOrStroke, 'url(#' + id + ')');\n      }\n    });\n  }\n};\n/**\n * Add a new gradient tag in <defs>\n *\n * @param   {Gradient} gradient zr gradient instance\n * @return {SVGLinearGradientElement | SVGRadialGradientElement}\n *                            created DOM\n */\n\n\nGradientManager.prototype.add = function (gradient) {\n  var dom;\n\n  if (gradient.type === 'linear') {\n    dom = this.createElement('linearGradient');\n  } else if (gradient.type === 'radial') {\n    dom = this.createElement('radialGradient');\n  } else {\n    zrLog('Illegal gradient type.');\n    return null;\n  } // Set dom id with gradient id, since each gradient instance\n  // will have no more than one dom element.\n  // id may exists before for those dirty elements, in which case\n  // id should remain the same, and other attributes should be\n  // updated.\n\n\n  gradient.id = gradient.id || this.nextId++;\n  dom.setAttribute('id', 'zr-gradient-' + gradient.id);\n  this.updateDom(gradient, dom);\n  this.addDom(dom);\n  return dom;\n};\n/**\n * Update gradient.\n *\n * @param {Gradient} gradient zr gradient instance\n */\n\n\nGradientManager.prototype.update = function (gradient) {\n  var that = this;\n  Definable.prototype.update.call(this, gradient, function () {\n    var type = gradient.type;\n    var tagName = gradient._dom.tagName;\n\n    if (type === 'linear' && tagName === 'linearGradient' || type === 'radial' && tagName === 'radialGradient') {\n      // Gradient type is not changed, update gradient\n      that.updateDom(gradient, gradient._dom);\n    } else {\n      // Remove and re-create if type is changed\n      that.removeDom(gradient);\n      that.add(gradient);\n    }\n  });\n};\n/**\n * Update gradient dom\n *\n * @param {Gradient} gradient zr gradient instance\n * @param {SVGLinearGradientElement | SVGRadialGradientElement} dom\n *                            DOM to update\n */\n\n\nGradientManager.prototype.updateDom = function (gradient, dom) {\n  if (gradient.type === 'linear') {\n    dom.setAttribute('x1', gradient.x);\n    dom.setAttribute('y1', gradient.y);\n    dom.setAttribute('x2', gradient.x2);\n    dom.setAttribute('y2', gradient.y2);\n  } else if (gradient.type === 'radial') {\n    dom.setAttribute('cx', gradient.x);\n    dom.setAttribute('cy', gradient.y);\n    dom.setAttribute('r', gradient.r);\n  } else {\n    zrLog('Illegal gradient type.');\n    return;\n  }\n\n  if (gradient.global) {\n    // x1, x2, y1, y2 in range of 0 to canvas width or height\n    dom.setAttribute('gradientUnits', 'userSpaceOnUse');\n  } else {\n    // x1, x2, y1, y2 in range of 0 to 1\n    dom.setAttribute('gradientUnits', 'objectBoundingBox');\n  } // Remove color stops if exists\n\n\n  dom.innerHTML = ''; // Add color stops\n\n  var colors = gradient.colorStops;\n\n  for (var i = 0, len = colors.length; i < len; ++i) {\n    var stop = this.createElement('stop');\n    stop.setAttribute('offset', colors[i].offset * 100 + '%');\n    stop.setAttribute('stop-color', colors[i].color);\n    dom.appendChild(stop);\n  } // Store dom element in gradient, to avoid creating multiple\n  // dom instances for the same gradient element\n\n\n  gradient._dom = dom;\n};\n/**\n * Mark a single gradient to be used\n *\n * @param {Displayable} displayable displayable element\n */\n\n\nGradientManager.prototype.markUsed = function (displayable) {\n  if (displayable.style) {\n    var gradient = displayable.style.fill;\n\n    if (gradient && gradient._dom) {\n      Definable.prototype.markUsed.call(this, gradient._dom);\n    }\n\n    gradient = displayable.style.stroke;\n\n    if (gradient && gradient._dom) {\n      Definable.prototype.markUsed.call(this, gradient._dom);\n    }\n  }\n};\n\nvar _default = GradientManager;\nmodule.exports = _default;\n\n/***/ }),\n/* 628 */\n/***/ (function(module, exports, __webpack_require__) {\n\n__webpack_require__(501);\n\nvar _zrender = __webpack_require__(502);\n\nvar registerPainter = _zrender.registerPainter;\n\nvar Painter = __webpack_require__(625);\n\nregisterPainter('svg', Painter);\n\n/***/ }),\n/* 629 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar PathProxy = __webpack_require__(476);\n\nvar _vector = __webpack_require__(463);\n\nvar v2ApplyTransform = _vector.applyTransform;\nvar CMD = PathProxy.CMD;\nvar points = [[], [], []];\nvar mathSqrt = Math.sqrt;\nvar mathAtan2 = Math.atan2;\n\nfunction _default(path, m) {\n  var data = path.data;\n  var cmd;\n  var nPoint;\n  var i;\n  var j;\n  var k;\n  var p;\n  var M = CMD.M;\n  var C = CMD.C;\n  var L = CMD.L;\n  var R = CMD.R;\n  var A = CMD.A;\n  var Q = CMD.Q;\n\n  for (i = 0, j = 0; i < data.length;) {\n    cmd = data[i++];\n    j = i;\n    nPoint = 0;\n\n    switch (cmd) {\n      case M:\n        nPoint = 1;\n        break;\n\n      case L:\n        nPoint = 1;\n        break;\n\n      case C:\n        nPoint = 3;\n        break;\n\n      case Q:\n        nPoint = 2;\n        break;\n\n      case A:\n        var x = m[4];\n        var y = m[5];\n        var sx = mathSqrt(m[0] * m[0] + m[1] * m[1]);\n        var sy = mathSqrt(m[2] * m[2] + m[3] * m[3]);\n        var angle = mathAtan2(-m[1] / sy, m[0] / sx); // cx\n\n        data[i] *= sx;\n        data[i++] += x; // cy\n\n        data[i] *= sy;\n        data[i++] += y; // Scale rx and ry\n        // FIXME Assume psi is 0 here\n\n        data[i++] *= sx;\n        data[i++] *= sy; // Start angle\n\n        data[i++] += angle; // end angle\n\n        data[i++] += angle; // FIXME psi\n\n        i += 2;\n        j = i;\n        break;\n\n      case R:\n        // x0, y0\n        p[0] = data[i++];\n        p[1] = data[i++];\n        v2ApplyTransform(p, p, m);\n        data[j++] = p[0];\n        data[j++] = p[1]; // x1, y1\n\n        p[0] += data[i++];\n        p[1] += data[i++];\n        v2ApplyTransform(p, p, m);\n        data[j++] = p[0];\n        data[j++] = p[1];\n    }\n\n    for (k = 0; k < nPoint; k++) {\n      var p = points[k];\n      p[0] = data[i++];\n      p[1] = data[i++];\n      v2ApplyTransform(p, p, m); // Write back\n\n      data[j++] = p[0];\n      data[j++] = p[1];\n    }\n  }\n}\n\nmodule.exports = _default;\n\n/***/ }),\n/* 630 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrLog = __webpack_require__(484);\n\nvar vmlCore = __webpack_require__(535);\n\nvar _util = __webpack_require__(460);\n\nvar each = _util.each;\n\n/**\n * VML Painter.\n *\n * @module zrender/vml/Painter\n */\nfunction parseInt10(val) {\n  return parseInt(val, 10);\n}\n/**\n * @alias module:zrender/vml/Painter\n */\n\n\nfunction VMLPainter(root, storage) {\n  vmlCore.initVML();\n  this.root = root;\n  this.storage = storage;\n  var vmlViewport = document.createElement('div');\n  var vmlRoot = document.createElement('div');\n  vmlViewport.style.cssText = 'display:inline-block;overflow:hidden;position:relative;width:300px;height:150px;';\n  vmlRoot.style.cssText = 'position:absolute;left:0;top:0;';\n  root.appendChild(vmlViewport);\n  this._vmlRoot = vmlRoot;\n  this._vmlViewport = vmlViewport;\n  this.resize(); // Modify storage\n\n  var oldDelFromStorage = storage.delFromStorage;\n  var oldAddToStorage = storage.addToStorage;\n\n  storage.delFromStorage = function (el) {\n    oldDelFromStorage.call(storage, el);\n\n    if (el) {\n      el.onRemove && el.onRemove(vmlRoot);\n    }\n  };\n\n  storage.addToStorage = function (el) {\n    // Displayable already has a vml node\n    el.onAdd && el.onAdd(vmlRoot);\n    oldAddToStorage.call(storage, el);\n  };\n\n  this._firstPaint = true;\n}\n\nVMLPainter.prototype = {\n  constructor: VMLPainter,\n  getType: function () {\n    return 'vml';\n  },\n\n  /**\n   * @return {HTMLDivElement}\n   */\n  getViewportRoot: function () {\n    return this._vmlViewport;\n  },\n  getViewportRootOffset: function () {\n    var viewportRoot = this.getViewportRoot();\n\n    if (viewportRoot) {\n      return {\n        offsetLeft: viewportRoot.offsetLeft || 0,\n        offsetTop: viewportRoot.offsetTop || 0\n      };\n    }\n  },\n\n  /**\n   * 刷新\n   */\n  refresh: function () {\n    var list = this.storage.getDisplayList(true, true);\n\n    this._paintList(list);\n  },\n  _paintList: function (list) {\n    var vmlRoot = this._vmlRoot;\n\n    for (var i = 0; i < list.length; i++) {\n      var el = list[i];\n\n      if (el.invisible || el.ignore) {\n        if (!el.__alreadyNotVisible) {\n          el.onRemove(vmlRoot);\n        } // Set as already invisible\n\n\n        el.__alreadyNotVisible = true;\n      } else {\n        if (el.__alreadyNotVisible) {\n          el.onAdd(vmlRoot);\n        }\n\n        el.__alreadyNotVisible = false;\n\n        if (el.__dirty) {\n          el.beforeBrush && el.beforeBrush();\n          (el.brushVML || el.brush).call(el, vmlRoot);\n          el.afterBrush && el.afterBrush();\n        }\n      }\n\n      el.__dirty = false;\n    }\n\n    if (this._firstPaint) {\n      // Detached from document at first time\n      // to avoid page refreshing too many times\n      // FIXME 如果每次都先 removeChild 可能会导致一些填充和描边的效果改变\n      this._vmlViewport.appendChild(vmlRoot);\n\n      this._firstPaint = false;\n    }\n  },\n  resize: function (width, height) {\n    var width = width == null ? this._getWidth() : width;\n    var height = height == null ? this._getHeight() : height;\n\n    if (this._width != width || this._height != height) {\n      this._width = width;\n      this._height = height;\n      var vmlViewportStyle = this._vmlViewport.style;\n      vmlViewportStyle.width = width + 'px';\n      vmlViewportStyle.height = height + 'px';\n    }\n  },\n  dispose: function () {\n    this.root.innerHTML = '';\n    this._vmlRoot = this._vmlViewport = this.storage = null;\n  },\n  getWidth: function () {\n    return this._width;\n  },\n  getHeight: function () {\n    return this._height;\n  },\n  clear: function () {\n    if (this._vmlViewport) {\n      this.root.removeChild(this._vmlViewport);\n    }\n  },\n  _getWidth: function () {\n    var root = this.root;\n    var stl = root.currentStyle;\n    return (root.clientWidth || parseInt10(stl.width)) - parseInt10(stl.paddingLeft) - parseInt10(stl.paddingRight) | 0;\n  },\n  _getHeight: function () {\n    var root = this.root;\n    var stl = root.currentStyle;\n    return (root.clientHeight || parseInt10(stl.height)) - parseInt10(stl.paddingTop) - parseInt10(stl.paddingBottom) | 0;\n  }\n}; // Not supported methods\n\nfunction createMethodNotSupport(method) {\n  return function () {\n    zrLog('In IE8.0 VML mode painter not support method \"' + method + '\"');\n  };\n} // Unsupported methods\n\n\neach(['getLayer', 'insertLayer', 'eachLayer', 'eachBuiltinLayer', 'eachOtherLayer', 'getLayers', 'modLayer', 'delLayer', 'clearLayer', 'toDataURL', 'pathToImage'], function (name) {\n  VMLPainter.prototype[name] = createMethodNotSupport(name);\n});\nvar _default = VMLPainter;\nmodule.exports = _default;\n\n/***/ }),\n/* 631 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar env = __webpack_require__(466);\n\nvar _vector = __webpack_require__(463);\n\nvar applyTransform = _vector.applyTransform;\n\nvar BoundingRect = __webpack_require__(467);\n\nvar colorTool = __webpack_require__(474);\n\nvar textContain = __webpack_require__(473);\n\nvar textHelper = __webpack_require__(491);\n\nvar RectText = __webpack_require__(523);\n\nvar Displayable = __webpack_require__(489);\n\nvar ZImage = __webpack_require__(479);\n\nvar Text = __webpack_require__(480);\n\nvar Path = __webpack_require__(461);\n\nvar PathProxy = __webpack_require__(476);\n\nvar Gradient = __webpack_require__(490);\n\nvar vmlCore = __webpack_require__(535);\n\n// http://www.w3.org/TR/NOTE-VML\n// TODO Use proxy like svg instead of overwrite brush methods\nvar CMD = PathProxy.CMD;\nvar round = Math.round;\nvar sqrt = Math.sqrt;\nvar abs = Math.abs;\nvar cos = Math.cos;\nvar sin = Math.sin;\nvar mathMax = Math.max;\n\nif (!env.canvasSupported) {\n  var comma = ',';\n  var imageTransformPrefix = 'progid:DXImageTransform.Microsoft';\n  var Z = 21600;\n  var Z2 = Z / 2;\n  var ZLEVEL_BASE = 100000;\n  var Z_BASE = 1000;\n\n  var initRootElStyle = function (el) {\n    el.style.cssText = 'position:absolute;left:0;top:0;width:1px;height:1px;';\n    el.coordsize = Z + ',' + Z;\n    el.coordorigin = '0,0';\n  };\n\n  var encodeHtmlAttribute = function (s) {\n    return String(s).replace(/&/g, '&amp;').replace(/\"/g, '&quot;');\n  };\n\n  var rgb2Str = function (r, g, b) {\n    return 'rgb(' + [r, g, b].join(',') + ')';\n  };\n\n  var append = function (parent, child) {\n    if (child && parent && child.parentNode !== parent) {\n      parent.appendChild(child);\n    }\n  };\n\n  var remove = function (parent, child) {\n    if (child && parent && child.parentNode === parent) {\n      parent.removeChild(child);\n    }\n  };\n\n  var getZIndex = function (zlevel, z, z2) {\n    // z 的取值范围为 [0, 1000]\n    return (parseFloat(zlevel) || 0) * ZLEVEL_BASE + (parseFloat(z) || 0) * Z_BASE + z2;\n  };\n\n  var parsePercent = function (value, maxValue) {\n    if (typeof value === 'string') {\n      if (value.lastIndexOf('%') >= 0) {\n        return parseFloat(value) / 100 * maxValue;\n      }\n\n      return parseFloat(value);\n    }\n\n    return value;\n  };\n  /***************************************************\n   * PATH\n   **************************************************/\n\n\n  var setColorAndOpacity = function (el, color, opacity) {\n    var colorArr = colorTool.parse(color);\n    opacity = +opacity;\n\n    if (isNaN(opacity)) {\n      opacity = 1;\n    }\n\n    if (colorArr) {\n      el.color = rgb2Str(colorArr[0], colorArr[1], colorArr[2]);\n      el.opacity = opacity * colorArr[3];\n    }\n  };\n\n  var getColorAndAlpha = function (color) {\n    var colorArr = colorTool.parse(color);\n    return [rgb2Str(colorArr[0], colorArr[1], colorArr[2]), colorArr[3]];\n  };\n\n  var updateFillNode = function (el, style, zrEl) {\n    // TODO pattern\n    var fill = style.fill;\n\n    if (fill != null) {\n      // Modified from excanvas\n      if (fill instanceof Gradient) {\n        var gradientType;\n        var angle = 0;\n        var focus = [0, 0]; // additional offset\n\n        var shift = 0; // scale factor for offset\n\n        var expansion = 1;\n        var rect = zrEl.getBoundingRect();\n        var rectWidth = rect.width;\n        var rectHeight = rect.height;\n\n        if (fill.type === 'linear') {\n          gradientType = 'gradient';\n          var transform = zrEl.transform;\n          var p0 = [fill.x * rectWidth, fill.y * rectHeight];\n          var p1 = [fill.x2 * rectWidth, fill.y2 * rectHeight];\n\n          if (transform) {\n            applyTransform(p0, p0, transform);\n            applyTransform(p1, p1, transform);\n          }\n\n          var dx = p1[0] - p0[0];\n          var dy = p1[1] - p0[1];\n          angle = Math.atan2(dx, dy) * 180 / Math.PI; // The angle should be a non-negative number.\n\n          if (angle < 0) {\n            angle += 360;\n          } // Very small angles produce an unexpected result because they are\n          // converted to a scientific notation string.\n\n\n          if (angle < 1e-6) {\n            angle = 0;\n          }\n        } else {\n          gradientType = 'gradientradial';\n          var p0 = [fill.x * rectWidth, fill.y * rectHeight];\n          var transform = zrEl.transform;\n          var scale = zrEl.scale;\n          var width = rectWidth;\n          var height = rectHeight;\n          focus = [// Percent in bounding rect\n          (p0[0] - rect.x) / width, (p0[1] - rect.y) / height];\n\n          if (transform) {\n            applyTransform(p0, p0, transform);\n          }\n\n          width /= scale[0] * Z;\n          height /= scale[1] * Z;\n          var dimension = mathMax(width, height);\n          shift = 2 * 0 / dimension;\n          expansion = 2 * fill.r / dimension - shift;\n        } // We need to sort the color stops in ascending order by offset,\n        // otherwise IE won't interpret it correctly.\n\n\n        var stops = fill.colorStops.slice();\n        stops.sort(function (cs1, cs2) {\n          return cs1.offset - cs2.offset;\n        });\n        var length = stops.length; // Color and alpha list of first and last stop\n\n        var colorAndAlphaList = [];\n        var colors = [];\n\n        for (var i = 0; i < length; i++) {\n          var stop = stops[i];\n          var colorAndAlpha = getColorAndAlpha(stop.color);\n          colors.push(stop.offset * expansion + shift + ' ' + colorAndAlpha[0]);\n\n          if (i === 0 || i === length - 1) {\n            colorAndAlphaList.push(colorAndAlpha);\n          }\n        }\n\n        if (length >= 2) {\n          var color1 = colorAndAlphaList[0][0];\n          var color2 = colorAndAlphaList[1][0];\n          var opacity1 = colorAndAlphaList[0][1] * style.opacity;\n          var opacity2 = colorAndAlphaList[1][1] * style.opacity;\n          el.type = gradientType;\n          el.method = 'none';\n          el.focus = '100%';\n          el.angle = angle;\n          el.color = color1;\n          el.color2 = color2;\n          el.colors = colors.join(','); // When colors attribute is used, the meanings of opacity and o:opacity2\n          // are reversed.\n\n          el.opacity = opacity2; // FIXME g_o_:opacity ?\n\n          el.opacity2 = opacity1;\n        }\n\n        if (gradientType === 'radial') {\n          el.focusposition = focus.join(',');\n        }\n      } else {\n        // FIXME Change from Gradient fill to color fill\n        setColorAndOpacity(el, fill, style.opacity);\n      }\n    }\n  };\n\n  var updateStrokeNode = function (el, style) {\n    // if (style.lineJoin != null) {\n    //     el.joinstyle = style.lineJoin;\n    // }\n    // if (style.miterLimit != null) {\n    //     el.miterlimit = style.miterLimit * Z;\n    // }\n    // if (style.lineCap != null) {\n    //     el.endcap = style.lineCap;\n    // }\n    if (style.lineDash != null) {\n      el.dashstyle = style.lineDash.join(' ');\n    }\n\n    if (style.stroke != null && !(style.stroke instanceof Gradient)) {\n      setColorAndOpacity(el, style.stroke, style.opacity);\n    }\n  };\n\n  var updateFillAndStroke = function (vmlEl, type, style, zrEl) {\n    var isFill = type == 'fill';\n    var el = vmlEl.getElementsByTagName(type)[0]; // Stroke must have lineWidth\n\n    if (style[type] != null && style[type] !== 'none' && (isFill || !isFill && style.lineWidth)) {\n      vmlEl[isFill ? 'filled' : 'stroked'] = 'true'; // FIXME Remove before updating, or set `colors` will throw error\n\n      if (style[type] instanceof Gradient) {\n        remove(vmlEl, el);\n      }\n\n      if (!el) {\n        el = vmlCore.createNode(type);\n      }\n\n      isFill ? updateFillNode(el, style, zrEl) : updateStrokeNode(el, style);\n      append(vmlEl, el);\n    } else {\n      vmlEl[isFill ? 'filled' : 'stroked'] = 'false';\n      remove(vmlEl, el);\n    }\n  };\n\n  var points = [[], [], []];\n\n  var pathDataToString = function (path, m) {\n    var M = CMD.M;\n    var C = CMD.C;\n    var L = CMD.L;\n    var A = CMD.A;\n    var Q = CMD.Q;\n    var str = [];\n    var nPoint;\n    var cmdStr;\n    var cmd;\n    var i;\n    var xi;\n    var yi;\n    var data = path.data;\n    var dataLength = path.len();\n\n    for (i = 0; i < dataLength;) {\n      cmd = data[i++];\n      cmdStr = '';\n      nPoint = 0;\n\n      switch (cmd) {\n        case M:\n          cmdStr = ' m ';\n          nPoint = 1;\n          xi = data[i++];\n          yi = data[i++];\n          points[0][0] = xi;\n          points[0][1] = yi;\n          break;\n\n        case L:\n          cmdStr = ' l ';\n          nPoint = 1;\n          xi = data[i++];\n          yi = data[i++];\n          points[0][0] = xi;\n          points[0][1] = yi;\n          break;\n\n        case Q:\n        case C:\n          cmdStr = ' c ';\n          nPoint = 3;\n          var x1 = data[i++];\n          var y1 = data[i++];\n          var x2 = data[i++];\n          var y2 = data[i++];\n          var x3;\n          var y3;\n\n          if (cmd === Q) {\n            // Convert quadratic to cubic using degree elevation\n            x3 = x2;\n            y3 = y2;\n            x2 = (x2 + 2 * x1) / 3;\n            y2 = (y2 + 2 * y1) / 3;\n            x1 = (xi + 2 * x1) / 3;\n            y1 = (yi + 2 * y1) / 3;\n          } else {\n            x3 = data[i++];\n            y3 = data[i++];\n          }\n\n          points[0][0] = x1;\n          points[0][1] = y1;\n          points[1][0] = x2;\n          points[1][1] = y2;\n          points[2][0] = x3;\n          points[2][1] = y3;\n          xi = x3;\n          yi = y3;\n          break;\n\n        case A:\n          var x = 0;\n          var y = 0;\n          var sx = 1;\n          var sy = 1;\n          var angle = 0;\n\n          if (m) {\n            // Extract SRT from matrix\n            x = m[4];\n            y = m[5];\n            sx = sqrt(m[0] * m[0] + m[1] * m[1]);\n            sy = sqrt(m[2] * m[2] + m[3] * m[3]);\n            angle = Math.atan2(-m[1] / sy, m[0] / sx);\n          }\n\n          var cx = data[i++];\n          var cy = data[i++];\n          var rx = data[i++];\n          var ry = data[i++];\n          var startAngle = data[i++] + angle;\n          var endAngle = data[i++] + startAngle + angle; // FIXME\n          // var psi = data[i++];\n\n          i++;\n          var clockwise = data[i++];\n          var x0 = cx + cos(startAngle) * rx;\n          var y0 = cy + sin(startAngle) * ry;\n          var x1 = cx + cos(endAngle) * rx;\n          var y1 = cy + sin(endAngle) * ry;\n          var type = clockwise ? ' wa ' : ' at ';\n\n          if (Math.abs(x0 - x1) < 1e-4) {\n            // IE won't render arches drawn counter clockwise if x0 == x1.\n            if (Math.abs(endAngle - startAngle) > 1e-2) {\n              // Offset x0 by 1/80 of a pixel. Use something\n              // that can be represented in binary\n              if (clockwise) {\n                x0 += 270 / Z;\n              }\n            } else {\n              // Avoid case draw full circle\n              if (Math.abs(y0 - cy) < 1e-4) {\n                if (clockwise && x0 < cx || !clockwise && x0 > cx) {\n                  y1 -= 270 / Z;\n                } else {\n                  y1 += 270 / Z;\n                }\n              } else if (clockwise && y0 < cy || !clockwise && y0 > cy) {\n                x1 += 270 / Z;\n              } else {\n                x1 -= 270 / Z;\n              }\n            }\n          }\n\n          str.push(type, round(((cx - rx) * sx + x) * Z - Z2), comma, round(((cy - ry) * sy + y) * Z - Z2), comma, round(((cx + rx) * sx + x) * Z - Z2), comma, round(((cy + ry) * sy + y) * Z - Z2), comma, round((x0 * sx + x) * Z - Z2), comma, round((y0 * sy + y) * Z - Z2), comma, round((x1 * sx + x) * Z - Z2), comma, round((y1 * sy + y) * Z - Z2));\n          xi = x1;\n          yi = y1;\n          break;\n\n        case CMD.R:\n          var p0 = points[0];\n          var p1 = points[1]; // x0, y0\n\n          p0[0] = data[i++];\n          p0[1] = data[i++]; // x1, y1\n\n          p1[0] = p0[0] + data[i++];\n          p1[1] = p0[1] + data[i++];\n\n          if (m) {\n            applyTransform(p0, p0, m);\n            applyTransform(p1, p1, m);\n          }\n\n          p0[0] = round(p0[0] * Z - Z2);\n          p1[0] = round(p1[0] * Z - Z2);\n          p0[1] = round(p0[1] * Z - Z2);\n          p1[1] = round(p1[1] * Z - Z2);\n          str.push( // x0, y0\n          ' m ', p0[0], comma, p0[1], // x1, y0\n          ' l ', p1[0], comma, p0[1], // x1, y1\n          ' l ', p1[0], comma, p1[1], // x0, y1\n          ' l ', p0[0], comma, p1[1]);\n          break;\n\n        case CMD.Z:\n          // FIXME Update xi, yi\n          str.push(' x ');\n      }\n\n      if (nPoint > 0) {\n        str.push(cmdStr);\n\n        for (var k = 0; k < nPoint; k++) {\n          var p = points[k];\n          m && applyTransform(p, p, m); // 不 round 会非常慢\n\n          str.push(round(p[0] * Z - Z2), comma, round(p[1] * Z - Z2), k < nPoint - 1 ? comma : '');\n        }\n      }\n    }\n\n    return str.join('');\n  }; // Rewrite the original path method\n\n\n  Path.prototype.brushVML = function (vmlRoot) {\n    var style = this.style;\n    var vmlEl = this._vmlEl;\n\n    if (!vmlEl) {\n      vmlEl = vmlCore.createNode('shape');\n      initRootElStyle(vmlEl);\n      this._vmlEl = vmlEl;\n    }\n\n    updateFillAndStroke(vmlEl, 'fill', style, this);\n    updateFillAndStroke(vmlEl, 'stroke', style, this);\n    var m = this.transform;\n    var needTransform = m != null;\n    var strokeEl = vmlEl.getElementsByTagName('stroke')[0];\n\n    if (strokeEl) {\n      var lineWidth = style.lineWidth; // Get the line scale.\n      // Determinant of this.m_ means how much the area is enlarged by the\n      // transformation. So its square root can be used as a scale factor\n      // for width.\n\n      if (needTransform && !style.strokeNoScale) {\n        var det = m[0] * m[3] - m[1] * m[2];\n        lineWidth *= sqrt(abs(det));\n      }\n\n      strokeEl.weight = lineWidth + 'px';\n    }\n\n    var path = this.path || (this.path = new PathProxy());\n\n    if (this.__dirtyPath) {\n      path.beginPath();\n      this.buildPath(path, this.shape);\n      path.toStatic();\n      this.__dirtyPath = false;\n    }\n\n    vmlEl.path = pathDataToString(path, this.transform);\n    vmlEl.style.zIndex = getZIndex(this.zlevel, this.z, this.z2); // Append to root\n\n    append(vmlRoot, vmlEl); // Text\n\n    if (style.text != null) {\n      this.drawRectText(vmlRoot, this.getBoundingRect());\n    } else {\n      this.removeRectText(vmlRoot);\n    }\n  };\n\n  Path.prototype.onRemove = function (vmlRoot) {\n    remove(vmlRoot, this._vmlEl);\n    this.removeRectText(vmlRoot);\n  };\n\n  Path.prototype.onAdd = function (vmlRoot) {\n    append(vmlRoot, this._vmlEl);\n    this.appendRectText(vmlRoot);\n  };\n  /***************************************************\n   * IMAGE\n   **************************************************/\n\n\n  var isImage = function (img) {\n    // FIXME img instanceof Image 如果 img 是一个字符串的时候，IE8 下会报错\n    return typeof img === 'object' && img.tagName && img.tagName.toUpperCase() === 'IMG'; // return img instanceof Image;\n  }; // Rewrite the original path method\n\n\n  ZImage.prototype.brushVML = function (vmlRoot) {\n    var style = this.style;\n    var image = style.image; // Image original width, height\n\n    var ow;\n    var oh;\n\n    if (isImage(image)) {\n      var src = image.src;\n\n      if (src === this._imageSrc) {\n        ow = this._imageWidth;\n        oh = this._imageHeight;\n      } else {\n        var imageRuntimeStyle = image.runtimeStyle;\n        var oldRuntimeWidth = imageRuntimeStyle.width;\n        var oldRuntimeHeight = imageRuntimeStyle.height;\n        imageRuntimeStyle.width = 'auto';\n        imageRuntimeStyle.height = 'auto'; // get the original size\n\n        ow = image.width;\n        oh = image.height; // and remove overides\n\n        imageRuntimeStyle.width = oldRuntimeWidth;\n        imageRuntimeStyle.height = oldRuntimeHeight; // Caching image original width, height and src\n\n        this._imageSrc = src;\n        this._imageWidth = ow;\n        this._imageHeight = oh;\n      }\n\n      image = src;\n    } else {\n      if (image === this._imageSrc) {\n        ow = this._imageWidth;\n        oh = this._imageHeight;\n      }\n    }\n\n    if (!image) {\n      return;\n    }\n\n    var x = style.x || 0;\n    var y = style.y || 0;\n    var dw = style.width;\n    var dh = style.height;\n    var sw = style.sWidth;\n    var sh = style.sHeight;\n    var sx = style.sx || 0;\n    var sy = style.sy || 0;\n    var hasCrop = sw && sh;\n    var vmlEl = this._vmlEl;\n\n    if (!vmlEl) {\n      // FIXME 使用 group 在 left, top 都不是 0 的时候就无法显示了。\n      // vmlEl = vmlCore.createNode('group');\n      vmlEl = vmlCore.doc.createElement('div');\n      initRootElStyle(vmlEl);\n      this._vmlEl = vmlEl;\n    }\n\n    var vmlElStyle = vmlEl.style;\n    var hasRotation = false;\n    var m;\n    var scaleX = 1;\n    var scaleY = 1;\n\n    if (this.transform) {\n      m = this.transform;\n      scaleX = sqrt(m[0] * m[0] + m[1] * m[1]);\n      scaleY = sqrt(m[2] * m[2] + m[3] * m[3]);\n      hasRotation = m[1] || m[2];\n    }\n\n    if (hasRotation) {\n      // If filters are necessary (rotation exists), create them\n      // filters are bog-slow, so only create them if abbsolutely necessary\n      // The following check doesn't account for skews (which don't exist\n      // in the canvas spec (yet) anyway.\n      // From excanvas\n      var p0 = [x, y];\n      var p1 = [x + dw, y];\n      var p2 = [x, y + dh];\n      var p3 = [x + dw, y + dh];\n      applyTransform(p0, p0, m);\n      applyTransform(p1, p1, m);\n      applyTransform(p2, p2, m);\n      applyTransform(p3, p3, m);\n      var maxX = mathMax(p0[0], p1[0], p2[0], p3[0]);\n      var maxY = mathMax(p0[1], p1[1], p2[1], p3[1]);\n      var transformFilter = [];\n      transformFilter.push('M11=', m[0] / scaleX, comma, 'M12=', m[2] / scaleY, comma, 'M21=', m[1] / scaleX, comma, 'M22=', m[3] / scaleY, comma, 'Dx=', round(x * scaleX + m[4]), comma, 'Dy=', round(y * scaleY + m[5]));\n      vmlElStyle.padding = '0 ' + round(maxX) + 'px ' + round(maxY) + 'px 0'; // FIXME DXImageTransform 在 IE11 的兼容模式下不起作用\n\n      vmlElStyle.filter = imageTransformPrefix + '.Matrix(' + transformFilter.join('') + ', SizingMethod=clip)';\n    } else {\n      if (m) {\n        x = x * scaleX + m[4];\n        y = y * scaleY + m[5];\n      }\n\n      vmlElStyle.filter = '';\n      vmlElStyle.left = round(x) + 'px';\n      vmlElStyle.top = round(y) + 'px';\n    }\n\n    var imageEl = this._imageEl;\n    var cropEl = this._cropEl;\n\n    if (!imageEl) {\n      imageEl = vmlCore.doc.createElement('div');\n      this._imageEl = imageEl;\n    }\n\n    var imageELStyle = imageEl.style;\n\n    if (hasCrop) {\n      // Needs know image original width and height\n      if (!(ow && oh)) {\n        var tmpImage = new Image();\n        var self = this;\n\n        tmpImage.onload = function () {\n          tmpImage.onload = null;\n          ow = tmpImage.width;\n          oh = tmpImage.height; // Adjust image width and height to fit the ratio destinationSize / sourceSize\n\n          imageELStyle.width = round(scaleX * ow * dw / sw) + 'px';\n          imageELStyle.height = round(scaleY * oh * dh / sh) + 'px'; // Caching image original width, height and src\n\n          self._imageWidth = ow;\n          self._imageHeight = oh;\n          self._imageSrc = image;\n        };\n\n        tmpImage.src = image;\n      } else {\n        imageELStyle.width = round(scaleX * ow * dw / sw) + 'px';\n        imageELStyle.height = round(scaleY * oh * dh / sh) + 'px';\n      }\n\n      if (!cropEl) {\n        cropEl = vmlCore.doc.createElement('div');\n        cropEl.style.overflow = 'hidden';\n        this._cropEl = cropEl;\n      }\n\n      var cropElStyle = cropEl.style;\n      cropElStyle.width = round((dw + sx * dw / sw) * scaleX);\n      cropElStyle.height = round((dh + sy * dh / sh) * scaleY);\n      cropElStyle.filter = imageTransformPrefix + '.Matrix(Dx=' + -sx * dw / sw * scaleX + ',Dy=' + -sy * dh / sh * scaleY + ')';\n\n      if (!cropEl.parentNode) {\n        vmlEl.appendChild(cropEl);\n      }\n\n      if (imageEl.parentNode != cropEl) {\n        cropEl.appendChild(imageEl);\n      }\n    } else {\n      imageELStyle.width = round(scaleX * dw) + 'px';\n      imageELStyle.height = round(scaleY * dh) + 'px';\n      vmlEl.appendChild(imageEl);\n\n      if (cropEl && cropEl.parentNode) {\n        vmlEl.removeChild(cropEl);\n        this._cropEl = null;\n      }\n    }\n\n    var filterStr = '';\n    var alpha = style.opacity;\n\n    if (alpha < 1) {\n      filterStr += '.Alpha(opacity=' + round(alpha * 100) + ') ';\n    }\n\n    filterStr += imageTransformPrefix + '.AlphaImageLoader(src=' + image + ', SizingMethod=scale)';\n    imageELStyle.filter = filterStr;\n    vmlEl.style.zIndex = getZIndex(this.zlevel, this.z, this.z2); // Append to root\n\n    append(vmlRoot, vmlEl); // Text\n\n    if (style.text != null) {\n      this.drawRectText(vmlRoot, this.getBoundingRect());\n    }\n  };\n\n  ZImage.prototype.onRemove = function (vmlRoot) {\n    remove(vmlRoot, this._vmlEl);\n    this._vmlEl = null;\n    this._cropEl = null;\n    this._imageEl = null;\n    this.removeRectText(vmlRoot);\n  };\n\n  ZImage.prototype.onAdd = function (vmlRoot) {\n    append(vmlRoot, this._vmlEl);\n    this.appendRectText(vmlRoot);\n  };\n  /***************************************************\n   * TEXT\n   **************************************************/\n\n\n  var DEFAULT_STYLE_NORMAL = 'normal';\n  var fontStyleCache = {};\n  var fontStyleCacheCount = 0;\n  var MAX_FONT_CACHE_SIZE = 100;\n  var fontEl = document.createElement('div');\n\n  var getFontStyle = function (fontString) {\n    var fontStyle = fontStyleCache[fontString];\n\n    if (!fontStyle) {\n      // Clear cache\n      if (fontStyleCacheCount > MAX_FONT_CACHE_SIZE) {\n        fontStyleCacheCount = 0;\n        fontStyleCache = {};\n      }\n\n      var style = fontEl.style;\n      var fontFamily;\n\n      try {\n        style.font = fontString;\n        fontFamily = style.fontFamily.split(',')[0];\n      } catch (e) {}\n\n      fontStyle = {\n        style: style.fontStyle || DEFAULT_STYLE_NORMAL,\n        variant: style.fontVariant || DEFAULT_STYLE_NORMAL,\n        weight: style.fontWeight || DEFAULT_STYLE_NORMAL,\n        size: parseFloat(style.fontSize || 12) | 0,\n        family: fontFamily || 'Microsoft YaHei'\n      };\n      fontStyleCache[fontString] = fontStyle;\n      fontStyleCacheCount++;\n    }\n\n    return fontStyle;\n  };\n\n  var textMeasureEl; // Overwrite measure text method\n\n  textContain.$override('measureText', function (text, textFont) {\n    var doc = vmlCore.doc;\n\n    if (!textMeasureEl) {\n      textMeasureEl = doc.createElement('div');\n      textMeasureEl.style.cssText = 'position:absolute;top:-20000px;left:0;' + 'padding:0;margin:0;border:none;white-space:pre;';\n      vmlCore.doc.body.appendChild(textMeasureEl);\n    }\n\n    try {\n      textMeasureEl.style.font = textFont;\n    } catch (ex) {// Ignore failures to set to invalid font.\n    }\n\n    textMeasureEl.innerHTML = ''; // Don't use innerHTML or innerText because they allow markup/whitespace.\n\n    textMeasureEl.appendChild(doc.createTextNode(text));\n    return {\n      width: textMeasureEl.offsetWidth\n    };\n  });\n  var tmpRect = new BoundingRect();\n\n  var drawRectText = function (vmlRoot, rect, textRect, fromTextEl) {\n    var style = this.style; // Optimize, avoid normalize every time.\n\n    this.__dirty && textHelper.normalizeTextStyle(style, true);\n    var text = style.text; // Convert to string\n\n    text != null && (text += '');\n\n    if (!text) {\n      return;\n    } // Convert rich text to plain text. Rich text is not supported in\n    // IE8-, but tags in rich text template will be removed.\n\n\n    if (style.rich) {\n      var contentBlock = textContain.parseRichText(text, style);\n      text = [];\n\n      for (var i = 0; i < contentBlock.lines.length; i++) {\n        var tokens = contentBlock.lines[i].tokens;\n        var textLine = [];\n\n        for (var j = 0; j < tokens.length; j++) {\n          textLine.push(tokens[j].text);\n        }\n\n        text.push(textLine.join(''));\n      }\n\n      text = text.join('\\n');\n    }\n\n    var x;\n    var y;\n    var align = style.textAlign;\n    var verticalAlign = style.textVerticalAlign;\n    var fontStyle = getFontStyle(style.font); // FIXME encodeHtmlAttribute ?\n\n    var font = fontStyle.style + ' ' + fontStyle.variant + ' ' + fontStyle.weight + ' ' + fontStyle.size + 'px \"' + fontStyle.family + '\"';\n    textRect = textRect || textContain.getBoundingRect(text, font, align, verticalAlign); // Transform rect to view space\n\n    var m = this.transform; // Ignore transform for text in other element\n\n    if (m && !fromTextEl) {\n      tmpRect.copy(rect);\n      tmpRect.applyTransform(m);\n      rect = tmpRect;\n    }\n\n    if (!fromTextEl) {\n      var textPosition = style.textPosition;\n      var distance = style.textDistance; // Text position represented by coord\n\n      if (textPosition instanceof Array) {\n        x = rect.x + parsePercent(textPosition[0], rect.width);\n        y = rect.y + parsePercent(textPosition[1], rect.height);\n        align = align || 'left';\n      } else {\n        var res = textContain.adjustTextPositionOnRect(textPosition, rect, distance);\n        x = res.x;\n        y = res.y; // Default align and baseline when has textPosition\n\n        align = align || res.textAlign;\n        verticalAlign = verticalAlign || res.textVerticalAlign;\n      }\n    } else {\n      x = rect.x;\n      y = rect.y;\n    }\n\n    x = textContain.adjustTextX(x, textRect.width, align);\n    y = textContain.adjustTextY(y, textRect.height, verticalAlign); // Force baseline 'middle'\n\n    y += textRect.height / 2; // var fontSize = fontStyle.size;\n    // 1.75 is an arbitrary number, as there is no info about the text baseline\n    // switch (baseline) {\n    // case 'hanging':\n    // case 'top':\n    //     y += fontSize / 1.75;\n    //     break;\n    //     case 'middle':\n    //         break;\n    //     default:\n    //     // case null:\n    //     // case 'alphabetic':\n    //     // case 'ideographic':\n    //     // case 'bottom':\n    //         y -= fontSize / 2.25;\n    //         break;\n    // }\n    // switch (align) {\n    //     case 'left':\n    //         break;\n    //     case 'center':\n    //         x -= textRect.width / 2;\n    //         break;\n    //     case 'right':\n    //         x -= textRect.width;\n    //         break;\n    // case 'end':\n    // align = elementStyle.direction == 'ltr' ? 'right' : 'left';\n    // break;\n    // case 'start':\n    // align = elementStyle.direction == 'rtl' ? 'right' : 'left';\n    // break;\n    // default:\n    //     align = 'left';\n    // }\n\n    var createNode = vmlCore.createNode;\n    var textVmlEl = this._textVmlEl;\n    var pathEl;\n    var textPathEl;\n    var skewEl;\n\n    if (!textVmlEl) {\n      textVmlEl = createNode('line');\n      pathEl = createNode('path');\n      textPathEl = createNode('textpath');\n      skewEl = createNode('skew'); // FIXME Why here is not cammel case\n      // Align 'center' seems wrong\n\n      textPathEl.style['v-text-align'] = 'left';\n      initRootElStyle(textVmlEl);\n      pathEl.textpathok = true;\n      textPathEl.on = true;\n      textVmlEl.from = '0 0';\n      textVmlEl.to = '1000 0.05';\n      append(textVmlEl, skewEl);\n      append(textVmlEl, pathEl);\n      append(textVmlEl, textPathEl);\n      this._textVmlEl = textVmlEl;\n    } else {\n      // 这里是在前面 appendChild 保证顺序的前提下\n      skewEl = textVmlEl.firstChild;\n      pathEl = skewEl.nextSibling;\n      textPathEl = pathEl.nextSibling;\n    }\n\n    var coords = [x, y];\n    var textVmlElStyle = textVmlEl.style; // Ignore transform for text in other element\n\n    if (m && fromTextEl) {\n      applyTransform(coords, coords, m);\n      skewEl.on = true;\n      skewEl.matrix = m[0].toFixed(3) + comma + m[2].toFixed(3) + comma + m[1].toFixed(3) + comma + m[3].toFixed(3) + ',0,0'; // Text position\n\n      skewEl.offset = (round(coords[0]) || 0) + ',' + (round(coords[1]) || 0); // Left top point as origin\n\n      skewEl.origin = '0 0';\n      textVmlElStyle.left = '0px';\n      textVmlElStyle.top = '0px';\n    } else {\n      skewEl.on = false;\n      textVmlElStyle.left = round(x) + 'px';\n      textVmlElStyle.top = round(y) + 'px';\n    }\n\n    textPathEl.string = encodeHtmlAttribute(text); // TODO\n\n    try {\n      textPathEl.style.font = font;\n    } // Error font format\n    catch (e) {}\n\n    updateFillAndStroke(textVmlEl, 'fill', {\n      fill: style.textFill,\n      opacity: style.opacity\n    }, this);\n    updateFillAndStroke(textVmlEl, 'stroke', {\n      stroke: style.textStroke,\n      opacity: style.opacity,\n      lineDash: style.lineDash\n    }, this);\n    textVmlEl.style.zIndex = getZIndex(this.zlevel, this.z, this.z2); // Attached to root\n\n    append(vmlRoot, textVmlEl);\n  };\n\n  var removeRectText = function (vmlRoot) {\n    remove(vmlRoot, this._textVmlEl);\n    this._textVmlEl = null;\n  };\n\n  var appendRectText = function (vmlRoot) {\n    append(vmlRoot, this._textVmlEl);\n  };\n\n  var list = [RectText, Displayable, ZImage, Path, Text]; // In case Displayable has been mixed in RectText\n\n  for (var i = 0; i < list.length; i++) {\n    var proto = list[i].prototype;\n    proto.drawRectText = drawRectText;\n    proto.removeRectText = removeRectText;\n    proto.appendRectText = appendRectText;\n  }\n\n  Text.prototype.brushVML = function (vmlRoot) {\n    var style = this.style;\n\n    if (style.text != null) {\n      this.drawRectText(vmlRoot, {\n        x: style.x || 0,\n        y: style.y || 0,\n        width: 0,\n        height: 0\n      }, this.getBoundingRect(), true);\n    } else {\n      this.removeRectText(vmlRoot);\n    }\n  };\n\n  Text.prototype.onRemove = function (vmlRoot) {\n    this.removeRectText(vmlRoot);\n  };\n\n  Text.prototype.onAdd = function (vmlRoot) {\n    this.appendRectText(vmlRoot);\n  };\n}\n\n/***/ }),\n/* 632 */\n/***/ (function(module, exports, __webpack_require__) {\n\n__webpack_require__(631);\n\nvar _zrender = __webpack_require__(502);\n\nvar registerPainter = _zrender.registerPainter;\n\nvar Painter = __webpack_require__(630);\n\nregisterPainter('vml', Painter);\n\n/***/ }),\n/* 633 */,\n/* 634 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar echarts = __webpack_require__(462);\n\n__webpack_require__(542);\n\n__webpack_require__(560);\n__webpack_require__(559);\n__webpack_require__(554);\nexports.default = {\n  name: 'barPercent',\n  props: {\n    className: {\n      type: String,\n      default: 'chart'\n    },\n    id: {\n      type: String,\n      default: 'chart'\n    },\n    width: {\n      type: String,\n      default: '200px'\n    },\n    height: {\n      type: String,\n      default: '200px'\n    }\n  },\n  data: function data() {\n    return {};\n  },\n  mounted: function mounted() {\n    this.initChart();\n  },\n\n  methods: {\n    initChart: function initChart() {\n      this.chart = echarts.init(document.getElementById(this.id));\n\n      this.chart.setOption({\n        backgroundColor: '#394056',\n        title: {\n          text: '请求数',\n          textStyle: {\n            fontWeight: 'normal',\n            fontSize: 16,\n            color: '#F1F1F3'\n          },\n          left: '6%'\n        },\n        tooltip: {\n          trigger: 'axis',\n          axisPointer: {\n            lineStyle: {\n              color: '#57617B'\n            }\n          }\n        },\n        legend: {\n          icon: 'rect',\n          itemWidth: 14,\n          itemHeight: 5,\n          itemGap: 13,\n          data: ['移动', '电信', '联通'],\n          right: '4%',\n          textStyle: {\n            fontSize: 12,\n            color: '#F1F1F3'\n          }\n        },\n        grid: {\n          left: '3%',\n          right: '4%',\n          bottom: '3%',\n          containLabel: true\n        },\n        xAxis: [{\n          type: 'category',\n          boundaryGap: false,\n          axisLine: {\n            lineStyle: {\n              color: '#57617B'\n            }\n          },\n          data: ['13:00', '13:05', '13:10', '13:15', '13:20', '13:25', '13:30', '13:35', '13:40', '13:45', '13:50', '13:55']\n        }],\n        yAxis: [{\n          type: 'value',\n          name: '单位（%）',\n          axisTick: {\n            show: false\n          },\n          axisLine: {\n            lineStyle: {\n              color: '#57617B'\n            }\n          },\n          axisLabel: {\n            margin: 10,\n            textStyle: {\n              fontSize: 14\n            }\n          },\n          splitLine: {\n            lineStyle: {\n              color: '#57617B'\n            }\n          }\n        }],\n        series: [{\n          name: '移动',\n          type: 'line',\n          smooth: true,\n          symbol: 'circle',\n          symbolSize: 5,\n          showSymbol: false,\n          lineStyle: {\n            normal: {\n              width: 1\n            }\n          },\n          areaStyle: {\n            normal: {\n              color: new echarts.graphic.LinearGradient(0, 0, 0, 1, [{\n                offset: 0,\n                color: 'rgba(137, 189, 27, 0.3)'\n              }, {\n                offset: 0.8,\n                color: 'rgba(137, 189, 27, 0)'\n              }], false),\n              shadowColor: 'rgba(0, 0, 0, 0.1)',\n              shadowBlur: 10\n            }\n          },\n          itemStyle: {\n            normal: {\n              color: 'rgb(137,189,27)',\n              borderColor: 'rgba(137,189,2,0.27)',\n              borderWidth: 12\n\n            }\n          },\n          data: [220, 182, 191, 134, 150, 120, 110, 125, 145, 122, 165, 122]\n        }, {\n          name: '电信',\n          type: 'line',\n          smooth: true,\n          symbol: 'circle',\n          symbolSize: 5,\n          showSymbol: false,\n          lineStyle: {\n            normal: {\n              width: 1\n            }\n          },\n          areaStyle: {\n            normal: {\n              color: new echarts.graphic.LinearGradient(0, 0, 0, 1, [{\n                offset: 0,\n                color: 'rgba(0, 136, 212, 0.3)'\n              }, {\n                offset: 0.8,\n                color: 'rgba(0, 136, 212, 0)'\n              }], false),\n              shadowColor: 'rgba(0, 0, 0, 0.1)',\n              shadowBlur: 10\n            }\n          },\n          itemStyle: {\n            normal: {\n              color: 'rgb(0,136,212)',\n              borderColor: 'rgba(0,136,212,0.2)',\n              borderWidth: 12\n\n            }\n          },\n          data: [120, 110, 125, 145, 122, 165, 122, 220, 182, 191, 134, 150]\n        }, {\n          name: '联通',\n          type: 'line',\n          smooth: true,\n          symbol: 'circle',\n          symbolSize: 5,\n          showSymbol: false,\n          lineStyle: {\n            normal: {\n              width: 1\n            }\n          },\n          areaStyle: {\n            normal: {\n              color: new echarts.graphic.LinearGradient(0, 0, 0, 1, [{\n                offset: 0,\n                color: 'rgba(219, 50, 51, 0.3)'\n              }, {\n                offset: 0.8,\n                color: 'rgba(219, 50, 51, 0)'\n              }], false),\n              shadowColor: 'rgba(0, 0, 0, 0.1)',\n              shadowBlur: 10\n            }\n          },\n          itemStyle: {\n            normal: {\n              color: 'rgb(219,50,51)',\n              borderColor: 'rgba(219,50,51,0.2)',\n              borderWidth: 12\n            }\n          },\n          data: [220, 182, 125, 145, 122, 191, 134, 150, 120, 110, 165, 122]\n        }]\n      });\n    }\n  }\n};\n\n/***/ }),\n/* 635 */,\n/* 636 */,\n/* 637 */,\n/* 638 */,\n/* 639 */,\n/* 640 */,\n/* 641 */,\n/* 642 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _lineMarker = __webpack_require__(708);\n\nvar _lineMarker2 = _interopRequireDefault(_lineMarker);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = {\n  components: { lineMarker: _lineMarker2.default }\n};\n\n/***/ }),\n/* 643 */,\n/* 644 */,\n/* 645 */,\n/* 646 */,\n/* 647 */,\n/* 648 */,\n/* 649 */,\n/* 650 */,\n/* 651 */,\n/* 652 */,\n/* 653 */,\n/* 654 */,\n/* 655 */,\n/* 656 */,\n/* 657 */,\n/* 658 */,\n/* 659 */,\n/* 660 */,\n/* 661 */,\n/* 662 */,\n/* 663 */,\n/* 664 */,\n/* 665 */,\n/* 666 */,\n/* 667 */\n/***/ (function(module, exports, __webpack_require__) {\n\nexports = module.exports = __webpack_require__(440)(true);\n// imports\n\n\n// module\nexports.push([module.i, \".chart-container[data-v-a1ad0344]{position:relative;width:100%;height:80%}\", \"\", {\"version\":3,\"sources\":[\"E:/eagle/Credit-BA-Management/src/views/charts/line.vue\"],\"names\":[],\"mappings\":\"AACA,kCACI,kBAAmB,AACnB,WAAY,AACZ,UAAY,CACf\",\"file\":\"line.vue\",\"sourcesContent\":[\"\\n.chart-container[data-v-a1ad0344]{\\r\\n    position: relative;\\r\\n    width: 100%;\\r\\n    height: 80%;\\n}\\r\\n\"],\"sourceRoot\":\"\"}]);\n\n// exports\n\n\n/***/ }),\n/* 668 */,\n/* 669 */,\n/* 670 */,\n/* 671 */,\n/* 672 */,\n/* 673 */,\n/* 674 */,\n/* 675 */,\n/* 676 */,\n/* 677 */,\n/* 678 */,\n/* 679 */,\n/* 680 */,\n/* 681 */,\n/* 682 */,\n/* 683 */,\n/* 684 */,\n/* 685 */,\n/* 686 */,\n/* 687 */,\n/* 688 */,\n/* 689 */,\n/* 690 */,\n/* 691 */,\n/* 692 */,\n/* 693 */,\n/* 694 */,\n/* 695 */,\n/* 696 */,\n/* 697 */,\n/* 698 */,\n/* 699 */,\n/* 700 */,\n/* 701 */,\n/* 702 */\n/***/ (function(module, exports, __webpack_require__) {\n\n// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = __webpack_require__(667);\nif(typeof content === 'string') content = [[module.i, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar update = __webpack_require__(441)(\"4a6c8b4f\", content, true);\n\n/***/ }),\n/* 703 */,\n/* 704 */,\n/* 705 */,\n/* 706 */,\n/* 707 */,\n/* 708 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Component = __webpack_require__(0)(\n  /* script */\n  __webpack_require__(634),\n  /* template */\n  __webpack_require__(723),\n  /* styles */\n  null,\n  /* scopeId */\n  null,\n  /* moduleIdentifier (server only) */\n  null\n)\n\nmodule.exports = Component.exports\n\n\n/***/ }),\n/* 709 */,\n/* 710 */,\n/* 711 */,\n/* 712 */,\n/* 713 */,\n/* 714 */,\n/* 715 */,\n/* 716 */,\n/* 717 */,\n/* 718 */,\n/* 719 */,\n/* 720 */,\n/* 721 */,\n/* 722 */,\n/* 723 */\n/***/ (function(module, exports) {\n\nmodule.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('div', {\n    class: _vm.className,\n    style: ({\n      height: _vm.height,\n      width: _vm.width\n    }),\n    attrs: {\n      \"id\": _vm.id\n    }\n  })\n},staticRenderFns: []}\n\n/***/ }),\n/* 724 */,\n/* 725 */\n/***/ (function(module, exports) {\n\nmodule.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('div', {\n    staticClass: \"components-container\",\n    staticStyle: {\n      \"height\": \"100vh\"\n    }\n  }, [_c('div', {\n    staticClass: \"chart-container\"\n  }, [_c('lineMarker', {\n    attrs: {\n      \"height\": \"100%\",\n      \"width\": \"100%\"\n    }\n  })], 1)])\n},staticRenderFns: []}\n\n/***/ })\n]));\n\n\n// WEBPACK FOOTER //\n// js/1.3d15fcc49d75e7b0dab9.js","function injectStyle (ssrContext) {\n  require(\"!!../../../node_modules/extract-text-webpack-plugin/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"minimize\\\":true,\\\"sourceMap\\\":true}!../../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-a1ad0344\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!../../../node_modules/vue-loader/lib/selector?type=styles&index=0!./line.vue\")\n}\nvar Component = require(\"!../../../node_modules/vue-loader/lib/component-normalizer\")(\n  /* script */\n  require(\"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./line.vue\"),\n  /* template */\n  require(\"!!../../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-a1ad0344\\\"}!../../../node_modules/vue-loader/lib/selector?type=template&index=0!./line.vue\"),\n  /* styles */\n  injectStyle,\n  /* scopeId */\n  \"data-v-a1ad0344\",\n  /* moduleIdentifier (server only) */\n  null\n)\n\nmodule.exports = Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/views/charts/line.vue\n// module id = 448\n// module chunks = 1","/**\n * @module zrender/core/util\n */\n// 用于处理merge时无法遍历Date等对象的问题\nvar BUILTIN_OBJECT = {\n  '[object Function]': 1,\n  '[object RegExp]': 1,\n  '[object Date]': 1,\n  '[object Error]': 1,\n  '[object CanvasGradient]': 1,\n  '[object CanvasPattern]': 1,\n  // For node-canvas\n  '[object Image]': 1,\n  '[object Canvas]': 1\n};\nvar TYPED_ARRAY = {\n  '[object Int8Array]': 1,\n  '[object Uint8Array]': 1,\n  '[object Uint8ClampedArray]': 1,\n  '[object Int16Array]': 1,\n  '[object Uint16Array]': 1,\n  '[object Int32Array]': 1,\n  '[object Uint32Array]': 1,\n  '[object Float32Array]': 1,\n  '[object Float64Array]': 1\n};\nvar objToString = Object.prototype.toString;\nvar arrayProto = Array.prototype;\nvar nativeForEach = arrayProto.forEach;\nvar nativeFilter = arrayProto.filter;\nvar nativeSlice = arrayProto.slice;\nvar nativeMap = arrayProto.map;\nvar nativeReduce = arrayProto.reduce; // Avoid assign to an exported variable, for transforming to cjs.\n\nvar methods = {};\n\nfunction $override(name, fn) {\n  methods[name] = fn;\n}\n/**\n * Those data types can be cloned:\n *     Plain object, Array, TypedArray, number, string, null, undefined.\n * Those data types will be assgined using the orginal data:\n *     BUILTIN_OBJECT\n * Instance of user defined class will be cloned to a plain object, without\n * properties in prototype.\n * Other data types is not supported (not sure what will happen).\n *\n * Caution: do not support clone Date, for performance consideration.\n * (There might be a large number of date in `series.data`).\n * So date should not be modified in and out of echarts.\n *\n * @param {*} source\n * @return {*} new\n */\n\n\nfunction clone(source) {\n  if (source == null || typeof source != 'object') {\n    return source;\n  }\n\n  var result = source;\n  var typeStr = objToString.call(source);\n\n  if (typeStr === '[object Array]') {\n    result = [];\n\n    for (var i = 0, len = source.length; i < len; i++) {\n      result[i] = clone(source[i]);\n    }\n  } else if (TYPED_ARRAY[typeStr]) {\n    var Ctor = source.constructor;\n\n    if (source.constructor.from) {\n      result = Ctor.from(source);\n    } else {\n      result = new Ctor(source.length);\n\n      for (var i = 0, len = source.length; i < len; i++) {\n        result[i] = clone(source[i]);\n      }\n    }\n  } else if (!BUILTIN_OBJECT[typeStr] && !isPrimitive(source) && !isDom(source)) {\n    result = {};\n\n    for (var key in source) {\n      if (source.hasOwnProperty(key)) {\n        result[key] = clone(source[key]);\n      }\n    }\n  }\n\n  return result;\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {*} target\n * @param {*} source\n * @param {boolean} [overwrite=false]\n */\n\n\nfunction merge(target, source, overwrite) {\n  // We should escapse that source is string\n  // and enter for ... in ...\n  if (!isObject(source) || !isObject(target)) {\n    return overwrite ? clone(source) : target;\n  }\n\n  for (var key in source) {\n    if (source.hasOwnProperty(key)) {\n      var targetProp = target[key];\n      var sourceProp = source[key];\n\n      if (isObject(sourceProp) && isObject(targetProp) && !isArray(sourceProp) && !isArray(targetProp) && !isDom(sourceProp) && !isDom(targetProp) && !isBuiltInObject(sourceProp) && !isBuiltInObject(targetProp) && !isPrimitive(sourceProp) && !isPrimitive(targetProp)) {\n        // 如果需要递归覆盖，就递归调用merge\n        merge(targetProp, sourceProp, overwrite);\n      } else if (overwrite || !(key in target)) {\n        // 否则只处理overwrite为true，或者在目标对象中没有此属性的情况\n        // NOTE，在 target[key] 不存在的时候也是直接覆盖\n        target[key] = clone(source[key], true);\n      }\n    }\n  }\n\n  return target;\n}\n/**\n * @param {Array} targetAndSources The first item is target, and the rests are source.\n * @param {boolean} [overwrite=false]\n * @return {*} target\n */\n\n\nfunction mergeAll(targetAndSources, overwrite) {\n  var result = targetAndSources[0];\n\n  for (var i = 1, len = targetAndSources.length; i < len; i++) {\n    result = merge(result, targetAndSources[i], overwrite);\n  }\n\n  return result;\n}\n/**\n * @param {*} target\n * @param {*} source\n * @memberOf module:zrender/core/util\n */\n\n\nfunction extend(target, source) {\n  for (var key in source) {\n    if (source.hasOwnProperty(key)) {\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n/**\n * @param {*} target\n * @param {*} source\n * @param {boolean} [overlay=false]\n * @memberOf module:zrender/core/util\n */\n\n\nfunction defaults(target, source, overlay) {\n  for (var key in source) {\n    if (source.hasOwnProperty(key) && (overlay ? source[key] != null : target[key] == null)) {\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nvar createCanvas = function () {\n  return methods.createCanvas();\n};\n\nmethods.createCanvas = function () {\n  return document.createElement('canvas');\n}; // FIXME\n\n\nvar _ctx;\n\nfunction getContext() {\n  if (!_ctx) {\n    // Use util.createCanvas instead of createCanvas\n    // because createCanvas may be overwritten in different environment\n    _ctx = createCanvas().getContext('2d');\n  }\n\n  return _ctx;\n}\n/**\n * 查询数组中元素的index\n * @memberOf module:zrender/core/util\n */\n\n\nfunction indexOf(array, value) {\n  if (array) {\n    if (array.indexOf) {\n      return array.indexOf(value);\n    }\n\n    for (var i = 0, len = array.length; i < len; i++) {\n      if (array[i] === value) {\n        return i;\n      }\n    }\n  }\n\n  return -1;\n}\n/**\n * 构造类继承关系\n *\n * @memberOf module:zrender/core/util\n * @param {Function} clazz 源类\n * @param {Function} baseClazz 基类\n */\n\n\nfunction inherits(clazz, baseClazz) {\n  var clazzPrototype = clazz.prototype;\n\n  function F() {}\n\n  F.prototype = baseClazz.prototype;\n  clazz.prototype = new F();\n\n  for (var prop in clazzPrototype) {\n    clazz.prototype[prop] = clazzPrototype[prop];\n  }\n\n  clazz.prototype.constructor = clazz;\n  clazz.superClass = baseClazz;\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {Object|Function} target\n * @param {Object|Function} sorce\n * @param {boolean} overlay\n */\n\n\nfunction mixin(target, source, overlay) {\n  target = 'prototype' in target ? target.prototype : target;\n  source = 'prototype' in source ? source.prototype : source;\n  defaults(target, source, overlay);\n}\n/**\n * Consider typed array.\n * @param {Array|TypedArray} data\n */\n\n\nfunction isArrayLike(data) {\n  if (!data) {\n    return;\n  }\n\n  if (typeof data == 'string') {\n    return false;\n  }\n\n  return typeof data.length == 'number';\n}\n/**\n * 数组或对象遍历\n * @memberOf module:zrender/core/util\n * @param {Object|Array} obj\n * @param {Function} cb\n * @param {*} [context]\n */\n\n\nfunction each(obj, cb, context) {\n  if (!(obj && cb)) {\n    return;\n  }\n\n  if (obj.forEach && obj.forEach === nativeForEach) {\n    obj.forEach(cb, context);\n  } else if (obj.length === +obj.length) {\n    for (var i = 0, len = obj.length; i < len; i++) {\n      cb.call(context, obj[i], i, obj);\n    }\n  } else {\n    for (var key in obj) {\n      if (obj.hasOwnProperty(key)) {\n        cb.call(context, obj[key], key, obj);\n      }\n    }\n  }\n}\n/**\n * 数组映射\n * @memberOf module:zrender/core/util\n * @param {Array} obj\n * @param {Function} cb\n * @param {*} [context]\n * @return {Array}\n */\n\n\nfunction map(obj, cb, context) {\n  if (!(obj && cb)) {\n    return;\n  }\n\n  if (obj.map && obj.map === nativeMap) {\n    return obj.map(cb, context);\n  } else {\n    var result = [];\n\n    for (var i = 0, len = obj.length; i < len; i++) {\n      result.push(cb.call(context, obj[i], i, obj));\n    }\n\n    return result;\n  }\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {Array} obj\n * @param {Function} cb\n * @param {Object} [memo]\n * @param {*} [context]\n * @return {Array}\n */\n\n\nfunction reduce(obj, cb, memo, context) {\n  if (!(obj && cb)) {\n    return;\n  }\n\n  if (obj.reduce && obj.reduce === nativeReduce) {\n    return obj.reduce(cb, memo, context);\n  } else {\n    for (var i = 0, len = obj.length; i < len; i++) {\n      memo = cb.call(context, memo, obj[i], i, obj);\n    }\n\n    return memo;\n  }\n}\n/**\n * 数组过滤\n * @memberOf module:zrender/core/util\n * @param {Array} obj\n * @param {Function} cb\n * @param {*} [context]\n * @return {Array}\n */\n\n\nfunction filter(obj, cb, context) {\n  if (!(obj && cb)) {\n    return;\n  }\n\n  if (obj.filter && obj.filter === nativeFilter) {\n    return obj.filter(cb, context);\n  } else {\n    var result = [];\n\n    for (var i = 0, len = obj.length; i < len; i++) {\n      if (cb.call(context, obj[i], i, obj)) {\n        result.push(obj[i]);\n      }\n    }\n\n    return result;\n  }\n}\n/**\n * 数组项查找\n * @memberOf module:zrender/core/util\n * @param {Array} obj\n * @param {Function} cb\n * @param {*} [context]\n * @return {*}\n */\n\n\nfunction find(obj, cb, context) {\n  if (!(obj && cb)) {\n    return;\n  }\n\n  for (var i = 0, len = obj.length; i < len; i++) {\n    if (cb.call(context, obj[i], i, obj)) {\n      return obj[i];\n    }\n  }\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {Function} func\n * @param {*} context\n * @return {Function}\n */\n\n\nfunction bind(func, context) {\n  var args = nativeSlice.call(arguments, 2);\n  return function () {\n    return func.apply(context, args.concat(nativeSlice.call(arguments)));\n  };\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {Function} func\n * @return {Function}\n */\n\n\nfunction curry(func) {\n  var args = nativeSlice.call(arguments, 1);\n  return function () {\n    return func.apply(this, args.concat(nativeSlice.call(arguments)));\n  };\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {*} value\n * @return {boolean}\n */\n\n\nfunction isArray(value) {\n  return objToString.call(value) === '[object Array]';\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {*} value\n * @return {boolean}\n */\n\n\nfunction isFunction(value) {\n  return typeof value === 'function';\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {*} value\n * @return {boolean}\n */\n\n\nfunction isString(value) {\n  return objToString.call(value) === '[object String]';\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {*} value\n * @return {boolean}\n */\n\n\nfunction isObject(value) {\n  // Avoid a V8 JIT bug in Chrome 19-20.\n  // See https://code.google.com/p/v8/issues/detail?id=2291 for more details.\n  var type = typeof value;\n  return type === 'function' || !!value && type == 'object';\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {*} value\n * @return {boolean}\n */\n\n\nfunction isBuiltInObject(value) {\n  return !!BUILTIN_OBJECT[objToString.call(value)];\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {*} value\n * @return {boolean}\n */\n\n\nfunction isDom(value) {\n  return typeof value === 'object' && typeof value.nodeType === 'number' && typeof value.ownerDocument === 'object';\n}\n/**\n * Whether is exactly NaN. Notice isNaN('a') returns true.\n * @param {*} value\n * @return {boolean}\n */\n\n\nfunction eqNaN(value) {\n  return value !== value;\n}\n/**\n * If value1 is not null, then return value1, otherwise judget rest of values.\n * Low performance.\n * @memberOf module:zrender/core/util\n * @return {*} Final value\n */\n\n\nfunction retrieve(values) {\n  for (var i = 0, len = arguments.length; i < len; i++) {\n    if (arguments[i] != null) {\n      return arguments[i];\n    }\n  }\n}\n\nfunction retrieve2(value0, value1) {\n  return value0 != null ? value0 : value1;\n}\n\nfunction retrieve3(value0, value1, value2) {\n  return value0 != null ? value0 : value1 != null ? value1 : value2;\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {Array} arr\n * @param {number} startIndex\n * @param {number} endIndex\n * @return {Array}\n */\n\n\nfunction slice() {\n  return Function.call.apply(nativeSlice, arguments);\n}\n/**\n * Normalize css liked array configuration\n * e.g.\n *  3 => [3, 3, 3, 3]\n *  [4, 2] => [4, 2, 4, 2]\n *  [4, 3, 2] => [4, 3, 2, 3]\n * @param {number|Array.<number>} val\n * @return {Array.<number>}\n */\n\n\nfunction normalizeCssArray(val) {\n  if (typeof val === 'number') {\n    return [val, val, val, val];\n  }\n\n  var len = val.length;\n\n  if (len === 2) {\n    // vertical | horizontal\n    return [val[0], val[1], val[0], val[1]];\n  } else if (len === 3) {\n    // top | horizontal | bottom\n    return [val[0], val[1], val[2], val[1]];\n  }\n\n  return val;\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {boolean} condition\n * @param {string} message\n */\n\n\nfunction assert(condition, message) {\n  if (!condition) {\n    throw new Error(message);\n  }\n}\n\nvar primitiveKey = '__ec_primitive__';\n/**\n * Set an object as primitive to be ignored traversing children in clone or merge\n */\n\nfunction setAsPrimitive(obj) {\n  obj[primitiveKey] = true;\n}\n\nfunction isPrimitive(obj) {\n  return obj[primitiveKey];\n}\n/**\n * @constructor\n * @param {Object} obj Only apply `ownProperty`.\n */\n\n\nfunction HashMap(obj) {\n  obj && each(obj, function (value, key) {\n    this.set(key, value);\n  }, this);\n} // Add prefix to avoid conflict with Object.prototype.\n\n\nvar HASH_MAP_PREFIX = '_ec_';\nvar HASH_MAP_PREFIX_LENGTH = 4;\nHashMap.prototype = {\n  constructor: HashMap,\n  // Do not provide `has` method to avoid defining what is `has`.\n  // (We usually treat `null` and `undefined` as the same, different\n  // from ES6 Map).\n  get: function (key) {\n    return this[HASH_MAP_PREFIX + key];\n  },\n  set: function (key, value) {\n    this[HASH_MAP_PREFIX + key] = value; // Comparing with invocation chaining, `return value` is more commonly\n    // used in this case: `var someVal = map.set('a', genVal());`\n\n    return value;\n  },\n  // Although util.each can be performed on this hashMap directly, user\n  // should not use the exposed keys, who are prefixed.\n  each: function (cb, context) {\n    context !== void 0 && (cb = bind(cb, context));\n\n    for (var prefixedKey in this) {\n      this.hasOwnProperty(prefixedKey) && cb(this[prefixedKey], prefixedKey.slice(HASH_MAP_PREFIX_LENGTH));\n    }\n  },\n  // Do not use this method if performance sensitive.\n  removeKey: function (key) {\n    delete this[HASH_MAP_PREFIX + key];\n  }\n};\n\nfunction createHashMap(obj) {\n  return new HashMap(obj);\n}\n\nfunction noop() {}\n\nexports.$override = $override;\nexports.clone = clone;\nexports.merge = merge;\nexports.mergeAll = mergeAll;\nexports.extend = extend;\nexports.defaults = defaults;\nexports.createCanvas = createCanvas;\nexports.getContext = getContext;\nexports.indexOf = indexOf;\nexports.inherits = inherits;\nexports.mixin = mixin;\nexports.isArrayLike = isArrayLike;\nexports.each = each;\nexports.map = map;\nexports.reduce = reduce;\nexports.filter = filter;\nexports.find = find;\nexports.bind = bind;\nexports.curry = curry;\nexports.isArray = isArray;\nexports.isFunction = isFunction;\nexports.isString = isString;\nexports.isObject = isObject;\nexports.isBuiltInObject = isBuiltInObject;\nexports.isDom = isDom;\nexports.eqNaN = eqNaN;\nexports.retrieve = retrieve;\nexports.retrieve2 = retrieve2;\nexports.retrieve3 = retrieve3;\nexports.slice = slice;\nexports.normalizeCssArray = normalizeCssArray;\nexports.assert = assert;\nexports.setAsPrimitive = setAsPrimitive;\nexports.isPrimitive = isPrimitive;\nexports.createHashMap = createHashMap;\nexports.noop = noop;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/core/util.js\n// module id = 460\n// module chunks = 0 1","var Displayable = require(\"./Displayable\");\n\nvar zrUtil = require(\"../core/util\");\n\nvar PathProxy = require(\"../core/PathProxy\");\n\nvar pathContain = require(\"../contain/path\");\n\nvar Pattern = require(\"./Pattern\");\n\nvar getCanvasPattern = Pattern.prototype.getCanvasPattern;\nvar abs = Math.abs;\nvar pathProxyForDraw = new PathProxy(true);\n/**\n * @alias module:zrender/graphic/Path\n * @extends module:zrender/graphic/Displayable\n * @constructor\n * @param {Object} opts\n */\n\nfunction Path(opts) {\n  Displayable.call(this, opts);\n  /**\n   * @type {module:zrender/core/PathProxy}\n   * @readOnly\n   */\n\n  this.path = null;\n}\n\nPath.prototype = {\n  constructor: Path,\n  type: 'path',\n  __dirtyPath: true,\n  strokeContainThreshold: 5,\n  brush: function (ctx, prevEl) {\n    var style = this.style;\n    var path = this.path || pathProxyForDraw;\n    var hasStroke = style.hasStroke();\n    var hasFill = style.hasFill();\n    var fill = style.fill;\n    var stroke = style.stroke;\n    var hasFillGradient = hasFill && !!fill.colorStops;\n    var hasStrokeGradient = hasStroke && !!stroke.colorStops;\n    var hasFillPattern = hasFill && !!fill.image;\n    var hasStrokePattern = hasStroke && !!stroke.image;\n    style.bind(ctx, this, prevEl);\n    this.setTransform(ctx);\n\n    if (this.__dirty) {\n      var rect; // Update gradient because bounding rect may changed\n\n      if (hasFillGradient) {\n        rect = rect || this.getBoundingRect();\n        this._fillGradient = style.getGradient(ctx, fill, rect);\n      }\n\n      if (hasStrokeGradient) {\n        rect = rect || this.getBoundingRect();\n        this._strokeGradient = style.getGradient(ctx, stroke, rect);\n      }\n    } // Use the gradient or pattern\n\n\n    if (hasFillGradient) {\n      // PENDING If may have affect the state\n      ctx.fillStyle = this._fillGradient;\n    } else if (hasFillPattern) {\n      ctx.fillStyle = getCanvasPattern.call(fill, ctx);\n    }\n\n    if (hasStrokeGradient) {\n      ctx.strokeStyle = this._strokeGradient;\n    } else if (hasStrokePattern) {\n      ctx.strokeStyle = getCanvasPattern.call(stroke, ctx);\n    }\n\n    var lineDash = style.lineDash;\n    var lineDashOffset = style.lineDashOffset;\n    var ctxLineDash = !!ctx.setLineDash; // Update path sx, sy\n\n    var scale = this.getGlobalScale();\n    path.setScale(scale[0], scale[1]); // Proxy context\n    // Rebuild path in following 2 cases\n    // 1. Path is dirty\n    // 2. Path needs javascript implemented lineDash stroking.\n    //    In this case, lineDash information will not be saved in PathProxy\n\n    if (this.__dirtyPath || lineDash && !ctxLineDash && hasStroke) {\n      path.beginPath(ctx); // Setting line dash before build path\n\n      if (lineDash && !ctxLineDash) {\n        path.setLineDash(lineDash);\n        path.setLineDashOffset(lineDashOffset);\n      }\n\n      this.buildPath(path, this.shape, false); // Clear path dirty flag\n\n      if (this.path) {\n        this.__dirtyPath = false;\n      }\n    } else {\n      // Replay path building\n      ctx.beginPath();\n      this.path.rebuildPath(ctx);\n    }\n\n    hasFill && path.fill(ctx);\n\n    if (lineDash && ctxLineDash) {\n      ctx.setLineDash(lineDash);\n      ctx.lineDashOffset = lineDashOffset;\n    }\n\n    hasStroke && path.stroke(ctx);\n\n    if (lineDash && ctxLineDash) {\n      // PENDING\n      // Remove lineDash\n      ctx.setLineDash([]);\n    }\n\n    this.restoreTransform(ctx); // Draw rect text\n\n    if (style.text != null) {\n      this.drawRectText(ctx, this.getBoundingRect());\n    }\n  },\n  // When bundling path, some shape may decide if use moveTo to begin a new subpath or closePath\n  // Like in circle\n  buildPath: function (ctx, shapeCfg, inBundle) {},\n  createPathProxy: function () {\n    this.path = new PathProxy();\n  },\n  getBoundingRect: function () {\n    var rect = this._rect;\n    var style = this.style;\n    var needsUpdateRect = !rect;\n\n    if (needsUpdateRect) {\n      var path = this.path;\n\n      if (!path) {\n        // Create path on demand.\n        path = this.path = new PathProxy();\n      }\n\n      if (this.__dirtyPath) {\n        path.beginPath();\n        this.buildPath(path, this.shape, false);\n      }\n\n      rect = path.getBoundingRect();\n    }\n\n    this._rect = rect;\n\n    if (style.hasStroke()) {\n      // Needs update rect with stroke lineWidth when\n      // 1. Element changes scale or lineWidth\n      // 2. Shape is changed\n      var rectWithStroke = this._rectWithStroke || (this._rectWithStroke = rect.clone());\n\n      if (this.__dirty || needsUpdateRect) {\n        rectWithStroke.copy(rect); // FIXME Must after updateTransform\n\n        var w = style.lineWidth; // PENDING, Min line width is needed when line is horizontal or vertical\n\n        var lineScale = style.strokeNoScale ? this.getLineScale() : 1; // Only add extra hover lineWidth when there are no fill\n\n        if (!style.hasFill()) {\n          w = Math.max(w, this.strokeContainThreshold || 4);\n        } // Consider line width\n        // Line scale can't be 0;\n\n\n        if (lineScale > 1e-10) {\n          rectWithStroke.width += w / lineScale;\n          rectWithStroke.height += w / lineScale;\n          rectWithStroke.x -= w / lineScale / 2;\n          rectWithStroke.y -= w / lineScale / 2;\n        }\n      } // Return rect with stroke\n\n\n      return rectWithStroke;\n    }\n\n    return rect;\n  },\n  contain: function (x, y) {\n    var localPos = this.transformCoordToLocal(x, y);\n    var rect = this.getBoundingRect();\n    var style = this.style;\n    x = localPos[0];\n    y = localPos[1];\n\n    if (rect.contain(x, y)) {\n      var pathData = this.path.data;\n\n      if (style.hasStroke()) {\n        var lineWidth = style.lineWidth;\n        var lineScale = style.strokeNoScale ? this.getLineScale() : 1; // Line scale can't be 0;\n\n        if (lineScale > 1e-10) {\n          // Only add extra hover lineWidth when there are no fill\n          if (!style.hasFill()) {\n            lineWidth = Math.max(lineWidth, this.strokeContainThreshold);\n          }\n\n          if (pathContain.containStroke(pathData, lineWidth / lineScale, x, y)) {\n            return true;\n          }\n        }\n      }\n\n      if (style.hasFill()) {\n        return pathContain.contain(pathData, x, y);\n      }\n    }\n\n    return false;\n  },\n\n  /**\n   * @param  {boolean} dirtyPath\n   */\n  dirty: function (dirtyPath) {\n    if (dirtyPath == null) {\n      dirtyPath = true;\n    } // Only mark dirty, not mark clean\n\n\n    if (dirtyPath) {\n      this.__dirtyPath = dirtyPath;\n      this._rect = null;\n    }\n\n    this.__dirty = true;\n    this.__zr && this.__zr.refresh(); // Used as a clipping path\n\n    if (this.__clipTarget) {\n      this.__clipTarget.dirty();\n    }\n  },\n\n  /**\n   * Alias for animate('shape')\n   * @param {boolean} loop\n   */\n  animateShape: function (loop) {\n    return this.animate('shape', loop);\n  },\n  // Overwrite attrKV\n  attrKV: function (key, value) {\n    // FIXME\n    if (key === 'shape') {\n      this.setShape(value);\n      this.__dirtyPath = true;\n      this._rect = null;\n    } else {\n      Displayable.prototype.attrKV.call(this, key, value);\n    }\n  },\n\n  /**\n   * @param {Object|string} key\n   * @param {*} value\n   */\n  setShape: function (key, value) {\n    var shape = this.shape; // Path from string may not have shape\n\n    if (shape) {\n      if (zrUtil.isObject(key)) {\n        for (var name in key) {\n          if (key.hasOwnProperty(name)) {\n            shape[name] = key[name];\n          }\n        }\n      } else {\n        shape[key] = value;\n      }\n\n      this.dirty(true);\n    }\n\n    return this;\n  },\n  getLineScale: function () {\n    var m = this.transform; // Get the line scale.\n    // Determinant of `m` means how much the area is enlarged by the\n    // transformation. So its square root can be used as a scale factor\n    // for width.\n\n    return m && abs(m[0] - 1) > 1e-10 && abs(m[3] - 1) > 1e-10 ? Math.sqrt(abs(m[0] * m[3] - m[2] * m[1])) : 1;\n  }\n};\n/**\n * 扩展一个 Path element, 比如星形，圆等。\n * Extend a path element\n * @param {Object} props\n * @param {string} props.type Path type\n * @param {Function} props.init Initialize\n * @param {Function} props.buildPath Overwrite buildPath method\n * @param {Object} [props.style] Extended default style config\n * @param {Object} [props.shape] Extended default shape config\n */\n\nPath.extend = function (defaults) {\n  var Sub = function (opts) {\n    Path.call(this, opts);\n\n    if (defaults.style) {\n      // Extend default style\n      this.style.extendFrom(defaults.style, false);\n    } // Extend default shape\n\n\n    var defaultShape = defaults.shape;\n\n    if (defaultShape) {\n      this.shape = this.shape || {};\n      var thisShape = this.shape;\n\n      for (var name in defaultShape) {\n        if (!thisShape.hasOwnProperty(name) && defaultShape.hasOwnProperty(name)) {\n          thisShape[name] = defaultShape[name];\n        }\n      }\n    }\n\n    defaults.init && defaults.init.call(this, opts);\n  };\n\n  zrUtil.inherits(Sub, Path); // FIXME 不能 extend position, rotation 等引用对象\n\n  for (var name in defaults) {\n    // Extending prototype values and methods\n    if (name !== 'style' && name !== 'shape') {\n      Sub.prototype[name] = defaults[name];\n    }\n  }\n\n  return Sub;\n};\n\nzrUtil.inherits(Path, Displayable);\nvar _default = Path;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/Path.js\n// module id = 461\n// module chunks = 0 1","// Enable DEV mode when using source code without build. which has no __DEV__ variable\n// In build process 'typeof __DEV__' will be replace with 'boolean'\n// So this code will be removed or disabled anyway after built.\nif (typeof __DEV__ === 'undefined') {\n    // In browser\n    if (typeof window !== 'undefined') {\n        window.__DEV__ = true;\n    }\n    // In node\n    else if (typeof global !== 'undefined') {\n        global.__DEV__ = true;\n    }\n}\n\n/*!\n * ECharts, a javascript interactive chart library.\n *\n * Copyright (c) 2015, Baidu Inc.\n * All rights reserved.\n *\n * LICENSE\n * https://github.com/ecomfe/echarts/blob/master/LICENSE.txt\n */\n\n/**\n * @module echarts\n */\n\n\n    var env = require('zrender/lib/core/env');\n\n    var GlobalModel = require('./model/Global');\n    var ExtensionAPI = require('./ExtensionAPI');\n    var CoordinateSystemManager = require('./CoordinateSystem');\n    var OptionManager = require('./model/OptionManager');\n\n    var ComponentModel = require('./model/Component');\n    var SeriesModel = require('./model/Series');\n\n    var ComponentView = require('./view/Component');\n    var ChartView = require('./view/Chart');\n    var graphic = require('./util/graphic');\n    var modelUtil = require('./util/model');\n    var throttle = require('./util/throttle');\n\n    var zrender = require('zrender');\n    var zrUtil = require('zrender/lib/core/util');\n    var colorTool = require('zrender/lib/tool/color');\n    var Eventful = require('zrender/lib/mixin/Eventful');\n    var timsort = require('zrender/lib/core/timsort');\n\n    var each = zrUtil.each;\n    var parseClassType = ComponentModel.parseClassType;\n\n    var PRIORITY_PROCESSOR_FILTER = 1000;\n    var PRIORITY_PROCESSOR_STATISTIC = 5000;\n\n\n    var PRIORITY_VISUAL_LAYOUT = 1000;\n    var PRIORITY_VISUAL_GLOBAL = 2000;\n    var PRIORITY_VISUAL_CHART = 3000;\n    var PRIORITY_VISUAL_COMPONENT = 4000;\n    // FIXME\n    // necessary?\n    var PRIORITY_VISUAL_BRUSH = 5000;\n\n    // Main process have three entries: `setOption`, `dispatchAction` and `resize`,\n    // where they must not be invoked nestedly, except the only case: invoke\n    // dispatchAction with updateMethod \"none\" in main process.\n    // This flag is used to carry out this rule.\n    // All events will be triggered out side main process (i.e. when !this[IN_MAIN_PROCESS]).\n    var IN_MAIN_PROCESS = '__flagInMainProcess';\n    var HAS_GRADIENT_OR_PATTERN_BG = '__hasGradientOrPatternBg';\n    var OPTION_UPDATED = '__optionUpdated';\n    var ACTION_REG = /^[a-zA-Z0-9_]+$/;\n\n    function createRegisterEventWithLowercaseName(method) {\n        return function (eventName, handler, context) {\n            // Event name is all lowercase\n            eventName = eventName && eventName.toLowerCase();\n            Eventful.prototype[method].call(this, eventName, handler, context);\n        };\n    }\n\n    /**\n     * @module echarts~MessageCenter\n     */\n    function MessageCenter() {\n        Eventful.call(this);\n    }\n    MessageCenter.prototype.on = createRegisterEventWithLowercaseName('on');\n    MessageCenter.prototype.off = createRegisterEventWithLowercaseName('off');\n    MessageCenter.prototype.one = createRegisterEventWithLowercaseName('one');\n    zrUtil.mixin(MessageCenter, Eventful);\n\n    /**\n     * @module echarts~ECharts\n     */\n    function ECharts (dom, theme, opts) {\n        opts = opts || {};\n\n        // Get theme by name\n        if (typeof theme === 'string') {\n            theme = themeStorage[theme];\n        }\n\n        /**\n         * @type {string}\n         */\n        this.id;\n        /**\n         * Group id\n         * @type {string}\n         */\n        this.group;\n        /**\n         * @type {HTMLDomElement}\n         * @private\n         */\n        this._dom = dom;\n        /**\n         * @type {module:zrender/ZRender}\n         * @private\n         */\n        var zr = this._zr = zrender.init(dom, {\n            renderer: opts.renderer || 'canvas',\n            devicePixelRatio: opts.devicePixelRatio,\n            width: opts.width,\n            height: opts.height\n        });\n\n        /**\n         * Expect 60 pfs.\n         * @type {Function}\n         * @private\n         */\n        this._throttledZrFlush = throttle.throttle(zrUtil.bind(zr.flush, zr), 17);\n\n        /**\n         * @type {Object}\n         * @private\n         */\n        this._theme = zrUtil.clone(theme);\n\n        /**\n         * @type {Array.<module:echarts/view/Chart>}\n         * @private\n         */\n        this._chartsViews = [];\n\n        /**\n         * @type {Object.<string, module:echarts/view/Chart>}\n         * @private\n         */\n        this._chartsMap = {};\n\n        /**\n         * @type {Array.<module:echarts/view/Component>}\n         * @private\n         */\n        this._componentsViews = [];\n\n        /**\n         * @type {Object.<string, module:echarts/view/Component>}\n         * @private\n         */\n        this._componentsMap = {};\n\n        /**\n         * @type {module:echarts/ExtensionAPI}\n         * @private\n         */\n        this._api = new ExtensionAPI(this);\n\n        /**\n         * @type {module:echarts/CoordinateSystem}\n         * @private\n         */\n        this._coordSysMgr = new CoordinateSystemManager();\n\n        Eventful.call(this);\n\n        /**\n         * @type {module:echarts~MessageCenter}\n         * @private\n         */\n        this._messageCenter = new MessageCenter();\n\n        // Init mouse events\n        this._initEvents();\n\n        // In case some people write `window.onresize = chart.resize`\n        this.resize = zrUtil.bind(this.resize, this);\n\n        // Can't dispatch action during rendering procedure\n        this._pendingActions = [];\n        // Sort on demand\n        function prioritySortFunc(a, b) {\n            return a.prio - b.prio;\n        }\n        timsort(visualFuncs, prioritySortFunc);\n        timsort(dataProcessorFuncs, prioritySortFunc);\n\n        zr.animation.on('frame', this._onframe, this);\n    }\n\n    var echartsProto = ECharts.prototype;\n\n    echartsProto._onframe = function () {\n        // Lazy update\n        if (this[OPTION_UPDATED]) {\n            var silent = this[OPTION_UPDATED].silent;\n\n            this[IN_MAIN_PROCESS] = true;\n\n            updateMethods.prepareAndUpdate.call(this);\n\n            this[IN_MAIN_PROCESS] = false;\n\n            this[OPTION_UPDATED] = false;\n\n            flushPendingActions.call(this, silent);\n\n            triggerUpdatedEvent.call(this, silent);\n        }\n    };\n    /**\n     * @return {HTMLDomElement}\n     */\n    echartsProto.getDom = function () {\n        return this._dom;\n    };\n\n    /**\n     * @return {module:zrender~ZRender}\n     */\n    echartsProto.getZr = function () {\n        return this._zr;\n    };\n\n    /**\n     * Usage:\n     * chart.setOption(option, notMerge, lazyUpdate);\n     * chart.setOption(option, {\n     *     notMerge: ...,\n     *     lazyUpdate: ...,\n     *     silent: ...\n     * });\n     *\n     * @param {Object} option\n     * @param {Object|boolean} [opts] opts or notMerge.\n     * @param {boolean} [opts.notMerge=false]\n     * @param {boolean} [opts.lazyUpdate=false] Useful when setOption frequently.\n     */\n    echartsProto.setOption = function (option, notMerge, lazyUpdate) {\n        if (__DEV__) {\n            zrUtil.assert(!this[IN_MAIN_PROCESS], '`setOption` should not be called during main process.');\n        }\n\n        var silent;\n        if (zrUtil.isObject(notMerge)) {\n            lazyUpdate = notMerge.lazyUpdate;\n            silent = notMerge.silent;\n            notMerge = notMerge.notMerge;\n        }\n\n        this[IN_MAIN_PROCESS] = true;\n\n        if (!this._model || notMerge) {\n            var optionManager = new OptionManager(this._api);\n            var theme = this._theme;\n            var ecModel = this._model = new GlobalModel(null, null, theme, optionManager);\n            ecModel.init(null, null, theme, optionManager);\n        }\n\n        // FIXME\n        // ugly\n        this.__lastOnlyGraphic = !!(option && option.graphic);\n        zrUtil.each(option, function (o, mainType) {\n            mainType !== 'graphic' && (this.__lastOnlyGraphic = false);\n        }, this);\n\n        this._model.setOption(option, optionPreprocessorFuncs);\n\n        if (lazyUpdate) {\n            this[OPTION_UPDATED] = {silent: silent};\n            this[IN_MAIN_PROCESS] = false;\n        }\n        else {\n            updateMethods.prepareAndUpdate.call(this);\n            // Ensure zr refresh sychronously, and then pixel in canvas can be\n            // fetched after `setOption`.\n            this._zr.flush();\n\n            this[OPTION_UPDATED] = false;\n            this[IN_MAIN_PROCESS] = false;\n\n            flushPendingActions.call(this, silent);\n            triggerUpdatedEvent.call(this, silent);\n        }\n    };\n\n    /**\n     * @DEPRECATED\n     */\n    echartsProto.setTheme = function () {\n        console.log('ECharts#setTheme() is DEPRECATED in ECharts 3.0');\n    };\n\n    /**\n     * @return {module:echarts/model/Global}\n     */\n    echartsProto.getModel = function () {\n        return this._model;\n    };\n\n    /**\n     * @return {Object}\n     */\n    echartsProto.getOption = function () {\n        return this._model && this._model.getOption();\n    };\n\n    /**\n     * @return {number}\n     */\n    echartsProto.getWidth = function () {\n        return this._zr.getWidth();\n    };\n\n    /**\n     * @return {number}\n     */\n    echartsProto.getHeight = function () {\n        return this._zr.getHeight();\n    };\n\n    /**\n     * Get canvas which has all thing rendered\n     * @param {Object} opts\n     * @param {string} [opts.backgroundColor]\n     */\n    echartsProto.getRenderedCanvas = function (opts) {\n        if (!env.canvasSupported) {\n            return;\n        }\n        opts = opts || {};\n        opts.pixelRatio = opts.pixelRatio || 1;\n        opts.backgroundColor = opts.backgroundColor\n            || this._model.get('backgroundColor');\n        var zr = this._zr;\n        var list = zr.storage.getDisplayList();\n        // Stop animations\n        zrUtil.each(list, function (el) {\n            el.stopAnimation(true);\n        });\n        return zr.painter.getRenderedCanvas(opts);\n    };\n    /**\n     * @return {string}\n     * @param {Object} opts\n     * @param {string} [opts.type='png']\n     * @param {string} [opts.pixelRatio=1]\n     * @param {string} [opts.backgroundColor]\n     * @param {string} [opts.excludeComponents]\n     */\n    echartsProto.getDataURL = function (opts) {\n        opts = opts || {};\n        var excludeComponents = opts.excludeComponents;\n        var ecModel = this._model;\n        var excludesComponentViews = [];\n        var self = this;\n\n        each(excludeComponents, function (componentType) {\n            ecModel.eachComponent({\n                mainType: componentType\n            }, function (component) {\n                var view = self._componentsMap[component.__viewId];\n                if (!view.group.ignore) {\n                    excludesComponentViews.push(view);\n                    view.group.ignore = true;\n                }\n            });\n        });\n\n        var url = this.getRenderedCanvas(opts).toDataURL(\n            'image/' + (opts && opts.type || 'png')\n        );\n\n        each(excludesComponentViews, function (view) {\n            view.group.ignore = false;\n        });\n        return url;\n    };\n\n\n    /**\n     * @return {string}\n     * @param {Object} opts\n     * @param {string} [opts.type='png']\n     * @param {string} [opts.pixelRatio=1]\n     * @param {string} [opts.backgroundColor]\n     */\n    echartsProto.getConnectedDataURL = function (opts) {\n        if (!env.canvasSupported) {\n            return;\n        }\n        var groupId = this.group;\n        var mathMin = Math.min;\n        var mathMax = Math.max;\n        var MAX_NUMBER = Infinity;\n        if (connectedGroups[groupId]) {\n            var left = MAX_NUMBER;\n            var top = MAX_NUMBER;\n            var right = -MAX_NUMBER;\n            var bottom = -MAX_NUMBER;\n            var canvasList = [];\n            var dpr = (opts && opts.pixelRatio) || 1;\n\n            zrUtil.each(instances, function (chart, id) {\n                if (chart.group === groupId) {\n                    var canvas = chart.getRenderedCanvas(\n                        zrUtil.clone(opts)\n                    );\n                    var boundingRect = chart.getDom().getBoundingClientRect();\n                    left = mathMin(boundingRect.left, left);\n                    top = mathMin(boundingRect.top, top);\n                    right = mathMax(boundingRect.right, right);\n                    bottom = mathMax(boundingRect.bottom, bottom);\n                    canvasList.push({\n                        dom: canvas,\n                        left: boundingRect.left,\n                        top: boundingRect.top\n                    });\n                }\n            });\n\n            left *= dpr;\n            top *= dpr;\n            right *= dpr;\n            bottom *= dpr;\n            var width = right - left;\n            var height = bottom - top;\n            var targetCanvas = zrUtil.createCanvas();\n            targetCanvas.width = width;\n            targetCanvas.height = height;\n            var zr = zrender.init(targetCanvas);\n\n            each(canvasList, function (item) {\n                var img = new graphic.Image({\n                    style: {\n                        x: item.left * dpr - left,\n                        y: item.top * dpr - top,\n                        image: item.dom\n                    }\n                });\n                zr.add(img);\n            });\n            zr.refreshImmediately();\n\n            return targetCanvas.toDataURL('image/' + (opts && opts.type || 'png'));\n        }\n        else {\n            return this.getDataURL(opts);\n        }\n    };\n\n    /**\n     * Convert from logical coordinate system to pixel coordinate system.\n     * See CoordinateSystem#convertToPixel.\n     * @param {string|Object} finder\n     *        If string, e.g., 'geo', means {geoIndex: 0}.\n     *        If Object, could contain some of these properties below:\n     *        {\n     *            seriesIndex / seriesId / seriesName,\n     *            geoIndex / geoId, geoName,\n     *            bmapIndex / bmapId / bmapName,\n     *            xAxisIndex / xAxisId / xAxisName,\n     *            yAxisIndex / yAxisId / yAxisName,\n     *            gridIndex / gridId / gridName,\n     *            ... (can be extended)\n     *        }\n     * @param {Array|number} value\n     * @return {Array|number} result\n     */\n    echartsProto.convertToPixel = zrUtil.curry(doConvertPixel, 'convertToPixel');\n\n    /**\n     * Convert from pixel coordinate system to logical coordinate system.\n     * See CoordinateSystem#convertFromPixel.\n     * @param {string|Object} finder\n     *        If string, e.g., 'geo', means {geoIndex: 0}.\n     *        If Object, could contain some of these properties below:\n     *        {\n     *            seriesIndex / seriesId / seriesName,\n     *            geoIndex / geoId / geoName,\n     *            bmapIndex / bmapId / bmapName,\n     *            xAxisIndex / xAxisId / xAxisName,\n     *            yAxisIndex / yAxisId / yAxisName\n     *            gridIndex / gridId / gridName,\n     *            ... (can be extended)\n     *        }\n     * @param {Array|number} value\n     * @return {Array|number} result\n     */\n    echartsProto.convertFromPixel = zrUtil.curry(doConvertPixel, 'convertFromPixel');\n\n    function doConvertPixel(methodName, finder, value) {\n        var ecModel = this._model;\n        var coordSysList = this._coordSysMgr.getCoordinateSystems();\n        var result;\n\n        finder = modelUtil.parseFinder(ecModel, finder);\n\n        for (var i = 0; i < coordSysList.length; i++) {\n            var coordSys = coordSysList[i];\n            if (coordSys[methodName]\n                && (result = coordSys[methodName](ecModel, finder, value)) != null\n            ) {\n                return result;\n            }\n        }\n\n        if (__DEV__) {\n            console.warn(\n                'No coordinate system that supports ' + methodName + ' found by the given finder.'\n            );\n        }\n    }\n\n    /**\n     * Is the specified coordinate systems or components contain the given pixel point.\n     * @param {string|Object} finder\n     *        If string, e.g., 'geo', means {geoIndex: 0}.\n     *        If Object, could contain some of these properties below:\n     *        {\n     *            seriesIndex / seriesId / seriesName,\n     *            geoIndex / geoId / geoName,\n     *            bmapIndex / bmapId / bmapName,\n     *            xAxisIndex / xAxisId / xAxisName,\n     *            yAxisIndex / yAxisId / yAxisName\n     *            gridIndex / gridId / gridName,\n     *            ... (can be extended)\n     *        }\n     * @param {Array|number} value\n     * @return {boolean} result\n     */\n    echartsProto.containPixel = function (finder, value) {\n        var ecModel = this._model;\n        var result;\n\n        finder = modelUtil.parseFinder(ecModel, finder);\n\n        zrUtil.each(finder, function (models, key) {\n            key.indexOf('Models') >= 0 && zrUtil.each(models, function (model) {\n                var coordSys = model.coordinateSystem;\n                if (coordSys && coordSys.containPoint) {\n                    result |= !!coordSys.containPoint(value);\n                }\n                else if (key === 'seriesModels') {\n                    var view = this._chartsMap[model.__viewId];\n                    if (view && view.containPoint) {\n                        result |= view.containPoint(value, model);\n                    }\n                    else {\n                        if (__DEV__) {\n                            console.warn(key + ': ' + (view\n                                ? 'The found component do not support containPoint.'\n                                : 'No view mapping to the found component.'\n                            ));\n                        }\n                    }\n                }\n                else {\n                    if (__DEV__) {\n                        console.warn(key + ': containPoint is not supported');\n                    }\n                }\n            }, this);\n        }, this);\n\n        return !!result;\n    };\n\n    /**\n     * Get visual from series or data.\n     * @param {string|Object} finder\n     *        If string, e.g., 'series', means {seriesIndex: 0}.\n     *        If Object, could contain some of these properties below:\n     *        {\n     *            seriesIndex / seriesId / seriesName,\n     *            dataIndex / dataIndexInside\n     *        }\n     *        If dataIndex is not specified, series visual will be fetched,\n     *        but not data item visual.\n     *        If all of seriesIndex, seriesId, seriesName are not specified,\n     *        visual will be fetched from first series.\n     * @param {string} visualType 'color', 'symbol', 'symbolSize'\n     */\n    echartsProto.getVisual = function (finder, visualType) {\n        var ecModel = this._model;\n\n        finder = modelUtil.parseFinder(ecModel, finder, {defaultMainType: 'series'});\n\n        var seriesModel = finder.seriesModel;\n\n        if (__DEV__) {\n            if (!seriesModel) {\n                console.warn('There is no specified seires model');\n            }\n        }\n\n        var data = seriesModel.getData();\n\n        var dataIndexInside = finder.hasOwnProperty('dataIndexInside')\n            ? finder.dataIndexInside\n            : finder.hasOwnProperty('dataIndex')\n            ? data.indexOfRawIndex(finder.dataIndex)\n            : null;\n\n        return dataIndexInside != null\n            ? data.getItemVisual(dataIndexInside, visualType)\n            : data.getVisual(visualType);\n    };\n\n\n    var updateMethods = {\n\n        /**\n         * @param {Object} payload\n         * @private\n         */\n        update: function (payload) {\n            // console.time && console.time('update');\n\n            var ecModel = this._model;\n            var api = this._api;\n            var coordSysMgr = this._coordSysMgr;\n            var zr = this._zr;\n            // update before setOption\n            if (!ecModel) {\n                return;\n            }\n\n            // Fixme First time update ?\n            ecModel.restoreData();\n\n            // TODO\n            // Save total ecModel here for undo/redo (after restoring data and before processing data).\n            // Undo (restoration of total ecModel) can be carried out in 'action' or outside API call.\n\n            // Create new coordinate system each update\n            // In LineView may save the old coordinate system and use it to get the orignal point\n            coordSysMgr.create(this._model, this._api);\n\n            processData.call(this, ecModel, api);\n\n            stackSeriesData.call(this, ecModel);\n\n            coordSysMgr.update(ecModel, api);\n\n            doVisualEncoding.call(this, ecModel, payload);\n\n            doRender.call(this, ecModel, payload);\n\n            // Set background\n            var backgroundColor = ecModel.get('backgroundColor') || 'transparent';\n\n            var painter = zr.painter;\n            // TODO all use clearColor ?\n            if (painter.isSingleCanvas && painter.isSingleCanvas()) {\n                zr.configLayer(0, {\n                    clearColor: backgroundColor\n                });\n            }\n            else {\n                // In IE8\n                if (!env.canvasSupported) {\n                    var colorArr = colorTool.parse(backgroundColor);\n                    backgroundColor = colorTool.stringify(colorArr, 'rgb');\n                    if (colorArr[3] === 0) {\n                        backgroundColor = 'transparent';\n                    }\n                }\n                if (backgroundColor.colorStops || backgroundColor.image) {\n                    // Gradient background\n                    // FIXME Fixed layer？\n                    zr.configLayer(0, {\n                        clearColor: backgroundColor\n                    });\n                    this[HAS_GRADIENT_OR_PATTERN_BG] = true;\n\n                    this._dom.style.background = 'transparent';\n                }\n                else {\n                    if (this[HAS_GRADIENT_OR_PATTERN_BG]) {\n                        zr.configLayer(0, {\n                            clearColor: null\n                        });\n                    }\n                    this[HAS_GRADIENT_OR_PATTERN_BG] = false;\n\n                    this._dom.style.background = backgroundColor;\n                }\n            }\n\n            // console.time && console.timeEnd('update');\n        },\n\n        /**\n         * @param {Object} payload\n         * @private\n         */\n        updateView: function (payload) {\n            var ecModel = this._model;\n\n            // update before setOption\n            if (!ecModel) {\n                return;\n            }\n\n            ecModel.eachSeries(function (seriesModel) {\n                seriesModel.getData().clearAllVisual();\n            });\n\n            doVisualEncoding.call(this, ecModel, payload);\n\n            invokeUpdateMethod.call(this, 'updateView', ecModel, payload);\n        },\n\n        /**\n         * @param {Object} payload\n         * @private\n         */\n        updateVisual: function (payload) {\n            var ecModel = this._model;\n\n            // update before setOption\n            if (!ecModel) {\n                return;\n            }\n\n            ecModel.eachSeries(function (seriesModel) {\n                seriesModel.getData().clearAllVisual();\n            });\n\n            doVisualEncoding.call(this, ecModel, payload, true);\n\n            invokeUpdateMethod.call(this, 'updateVisual', ecModel, payload);\n        },\n\n        /**\n         * @param {Object} payload\n         * @private\n         */\n        updateLayout: function (payload) {\n            var ecModel = this._model;\n\n            // update before setOption\n            if (!ecModel) {\n                return;\n            }\n\n            doLayout.call(this, ecModel, payload);\n\n            invokeUpdateMethod.call(this, 'updateLayout', ecModel, payload);\n        },\n\n        /**\n         * @param {Object} payload\n         * @private\n         */\n        prepareAndUpdate: function (payload) {\n            var ecModel = this._model;\n\n            prepareView.call(this, 'component', ecModel);\n\n            prepareView.call(this, 'chart', ecModel);\n\n            // FIXME\n            // ugly\n            if (this.__lastOnlyGraphic) {\n                each(this._componentsViews, function (componentView) {\n                    var componentModel = componentView.__model;\n                    if (componentModel && componentModel.mainType === 'graphic') {\n                        componentView.render(componentModel, ecModel, this._api, payload);\n                        updateZ(componentModel, componentView);\n                    }\n                }, this);\n                this.__lastOnlyGraphic = false;\n            }\n            else {\n                updateMethods.update.call(this, payload);\n            }\n        }\n    };\n\n    /**\n     * @private\n     */\n    function updateDirectly(ecIns, method, payload, mainType, subType) {\n        var ecModel = ecIns._model;\n        var query = {};\n        query[mainType + 'Id'] = payload[mainType + 'Id'];\n        query[mainType + 'Index'] = payload[mainType + 'Index'];\n        query[mainType + 'Name'] = payload[mainType + 'Name'];\n\n        var condition = {mainType: mainType, query: query};\n        subType && (condition.subType = subType); // subType may be '' by parseClassType;\n\n        // If dispatchAction before setOption, do nothing.\n        ecModel && ecModel.eachComponent(condition, function (model, index) {\n            var view = ecIns[\n                mainType === 'series' ? '_chartsMap' : '_componentsMap'\n            ][model.__viewId];\n            if (view && view.__alive) {\n                view[method](model, ecModel, ecIns._api, payload);\n            }\n        }, ecIns);\n    }\n\n    /**\n     * Resize the chart\n     * @param {Object} opts\n     * @param {number} [opts.width] Can be 'auto' (the same as null/undefined)\n     * @param {number} [opts.height] Can be 'auto' (the same as null/undefined)\n     * @param {boolean} [opts.silent=false]\n     */\n    echartsProto.resize = function (opts) {\n        if (__DEV__) {\n            zrUtil.assert(!this[IN_MAIN_PROCESS], '`resize` should not be called during main process.');\n        }\n\n        this[IN_MAIN_PROCESS] = true;\n\n        this._zr.resize(opts);\n\n        var optionChanged = this._model && this._model.resetOption('media');\n        var updateMethod = optionChanged ? 'prepareAndUpdate' : 'update';\n\n        updateMethods[updateMethod].call(this);\n\n        // Resize loading effect\n        this._loadingFX && this._loadingFX.resize();\n\n        this[IN_MAIN_PROCESS] = false;\n\n        var silent = opts && opts.silent;\n\n        flushPendingActions.call(this, silent);\n\n        triggerUpdatedEvent.call(this, silent);\n    };\n\n    /**\n     * Show loading effect\n     * @param  {string} [name='default']\n     * @param  {Object} [cfg]\n     */\n    echartsProto.showLoading = function (name, cfg) {\n        if (zrUtil.isObject(name)) {\n            cfg = name;\n            name = '';\n        }\n        name = name || 'default';\n\n        this.hideLoading();\n        if (!loadingEffects[name]) {\n            if (__DEV__) {\n                console.warn('Loading effects ' + name + ' not exists.');\n            }\n            return;\n        }\n        var el = loadingEffects[name](this._api, cfg);\n        var zr = this._zr;\n        this._loadingFX = el;\n\n        zr.add(el);\n    };\n\n    /**\n     * Hide loading effect\n     */\n    echartsProto.hideLoading = function () {\n        this._loadingFX && this._zr.remove(this._loadingFX);\n        this._loadingFX = null;\n    };\n\n    /**\n     * @param {Object} eventObj\n     * @return {Object}\n     */\n    echartsProto.makeActionFromEvent = function (eventObj) {\n        var payload = zrUtil.extend({}, eventObj);\n        payload.type = eventActionMap[eventObj.type];\n        return payload;\n    };\n\n    /**\n     * @pubilc\n     * @param {Object} payload\n     * @param {string} [payload.type] Action type\n     * @param {Object|boolean} [opt] If pass boolean, means opt.silent\n     * @param {boolean} [opt.silent=false] Whether trigger events.\n     * @param {boolean} [opt.flush=undefined]\n     *                  true: Flush immediately, and then pixel in canvas can be fetched\n     *                      immediately. Caution: it might affect performance.\n     *                  false: Not not flush.\n     *                  undefined: Auto decide whether perform flush.\n     */\n    echartsProto.dispatchAction = function (payload, opt) {\n        if (!zrUtil.isObject(opt)) {\n            opt = {silent: !!opt};\n        }\n\n        if (!actions[payload.type]) {\n            return;\n        }\n\n        // if (__DEV__) {\n        //     zrUtil.assert(\n        //         !this[IN_MAIN_PROCESS],\n        //         '`dispatchAction` should not be called during main process.'\n        //         + 'unless updateMathod is \"none\".'\n        //     );\n        // }\n\n        // May dispatchAction in rendering procedure\n        if (this[IN_MAIN_PROCESS]) {\n            this._pendingActions.push(payload);\n            return;\n        }\n\n        doDispatchAction.call(this, payload, opt.silent);\n\n        if (opt.flush) {\n            this._zr.flush(true);\n        }\n        else if (opt.flush !== false && env.browser.weChat) {\n            // In WeChat embeded browser, `requestAnimationFrame` and `setInterval`\n            // hang when sliding page (on touch event), which cause that zr does not\n            // refresh util user interaction finished, which is not expected.\n            // But `dispatchAction` may be called too frequently when pan on touch\n            // screen, which impacts performance if do not throttle them.\n            this._throttledZrFlush();\n        }\n\n        flushPendingActions.call(this, opt.silent);\n\n        triggerUpdatedEvent.call(this, opt.silent);\n    };\n\n    function doDispatchAction(payload, silent) {\n        var payloadType = payload.type;\n        var actionWrap = actions[payloadType];\n        var actionInfo = actionWrap.actionInfo;\n\n        var cptType = (actionInfo.update || 'update').split(':');\n        var updateMethod = cptType.pop();\n        cptType = cptType[0] && parseClassType(cptType[0]);\n\n        this[IN_MAIN_PROCESS] = true;\n\n        var payloads = [payload];\n        var batched = false;\n        // Batch action\n        if (payload.batch) {\n            batched = true;\n            payloads = zrUtil.map(payload.batch, function (item) {\n                item = zrUtil.defaults(zrUtil.extend({}, item), payload);\n                item.batch = null;\n                return item;\n            });\n        }\n\n        var eventObjBatch = [];\n        var eventObj;\n        var isHighDown = payloadType === 'highlight' || payloadType === 'downplay';\n\n        for (var i = 0; i < payloads.length; i++) {\n            var batchItem = payloads[i];\n            // Action can specify the event by return it.\n            eventObj = actionWrap.action(batchItem, this._model);\n            // Emit event outside\n            eventObj = eventObj || zrUtil.extend({}, batchItem);\n            // Convert type to eventType\n            eventObj.type = actionInfo.event || eventObj.type;\n            eventObjBatch.push(eventObj);\n\n            // light update does not perform data process, layout and visual.\n            if (isHighDown) {\n                // method, payload, mainType, subType\n                updateDirectly(this, updateMethod, batchItem, 'series');\n            }\n            else if (cptType) {\n                updateDirectly(this, updateMethod, batchItem, cptType.main, cptType.sub);\n            }\n        }\n\n        if (updateMethod !== 'none' && !isHighDown && !cptType) {\n            // Still dirty\n            if (this[OPTION_UPDATED]) {\n                // FIXME Pass payload ?\n                updateMethods.prepareAndUpdate.call(this, payload);\n                this[OPTION_UPDATED] = false;\n            }\n            else {\n                updateMethods[updateMethod].call(this, payload);\n            }\n        }\n\n        // Follow the rule of action batch\n        if (batched) {\n            eventObj = {\n                type: actionInfo.event || payloadType,\n                batch: eventObjBatch\n            };\n        }\n        else {\n            eventObj = eventObjBatch[0];\n        }\n\n        this[IN_MAIN_PROCESS] = false;\n\n        !silent && this._messageCenter.trigger(eventObj.type, eventObj);\n    }\n\n    function flushPendingActions(silent) {\n        var pendingActions = this._pendingActions;\n        while (pendingActions.length) {\n            var payload = pendingActions.shift();\n            doDispatchAction.call(this, payload, silent);\n        }\n    }\n\n    function triggerUpdatedEvent(silent) {\n        !silent && this.trigger('updated');\n    }\n\n    /**\n     * Register event\n     * @method\n     */\n    echartsProto.on = createRegisterEventWithLowercaseName('on');\n    echartsProto.off = createRegisterEventWithLowercaseName('off');\n    echartsProto.one = createRegisterEventWithLowercaseName('one');\n\n    /**\n     * @param {string} methodName\n     * @private\n     */\n    function invokeUpdateMethod(methodName, ecModel, payload) {\n        var api = this._api;\n\n        // Update all components\n        each(this._componentsViews, function (component) {\n            var componentModel = component.__model;\n            component[methodName](componentModel, ecModel, api, payload);\n\n            updateZ(componentModel, component);\n        }, this);\n\n        // Upate all charts\n        ecModel.eachSeries(function (seriesModel, idx) {\n            var chart = this._chartsMap[seriesModel.__viewId];\n            chart[methodName](seriesModel, ecModel, api, payload);\n\n            updateZ(seriesModel, chart);\n\n            updateProgressiveAndBlend(seriesModel, chart);\n        }, this);\n\n        // If use hover layer\n        updateHoverLayerStatus(this._zr, ecModel);\n    }\n\n    /**\n     * Prepare view instances of charts and components\n     * @param  {module:echarts/model/Global} ecModel\n     * @private\n     */\n    function prepareView(type, ecModel) {\n        var isComponent = type === 'component';\n        var viewList = isComponent ? this._componentsViews : this._chartsViews;\n        var viewMap = isComponent ? this._componentsMap : this._chartsMap;\n        var zr = this._zr;\n\n        for (var i = 0; i < viewList.length; i++) {\n            viewList[i].__alive = false;\n        }\n\n        ecModel[isComponent ? 'eachComponent' : 'eachSeries'](function (componentType, model) {\n            if (isComponent) {\n                if (componentType === 'series') {\n                    return;\n                }\n            }\n            else {\n                model = componentType;\n            }\n\n            // Consider: id same and type changed.\n            var viewId = model.id + '_' + model.type;\n            var view = viewMap[viewId];\n            if (!view) {\n                var classType = parseClassType(model.type);\n                var Clazz = isComponent\n                    ? ComponentView.getClass(classType.main, classType.sub)\n                    : ChartView.getClass(classType.sub);\n                if (Clazz) {\n                    view = new Clazz();\n                    view.init(ecModel, this._api);\n                    viewMap[viewId] = view;\n                    viewList.push(view);\n                    zr.add(view.group);\n                }\n                else {\n                    // Error\n                    return;\n                }\n            }\n\n            model.__viewId = viewId;\n            view.__alive = true;\n            view.__id = viewId;\n            view.__model = model;\n        }, this);\n\n        for (var i = 0; i < viewList.length;) {\n            var view = viewList[i];\n            if (!view.__alive) {\n                zr.remove(view.group);\n                view.dispose(ecModel, this._api);\n                viewList.splice(i, 1);\n                delete viewMap[view.__id];\n            }\n            else {\n                i++;\n            }\n        }\n    }\n\n    /**\n     * Processor data in each series\n     *\n     * @param {module:echarts/model/Global} ecModel\n     * @private\n     */\n    function processData(ecModel, api) {\n        each(dataProcessorFuncs, function (process) {\n            process.func(ecModel, api);\n        });\n    }\n\n    /**\n     * @private\n     */\n    function stackSeriesData(ecModel) {\n        var stackedDataMap = {};\n        ecModel.eachSeries(function (series) {\n            var stack = series.get('stack');\n            var data = series.getData();\n            if (stack && data.type === 'list') {\n                var previousStack = stackedDataMap[stack];\n                if (previousStack) {\n                    data.stackedOn = previousStack;\n                }\n                stackedDataMap[stack] = data;\n            }\n        });\n    }\n\n    /**\n     * Layout before each chart render there series, special visual encoding stage\n     *\n     * @param {module:echarts/model/Global} ecModel\n     * @private\n     */\n    function doLayout(ecModel, payload) {\n        var api = this._api;\n        each(visualFuncs, function (visual) {\n            if (visual.isLayout) {\n                visual.func(ecModel, api, payload);\n            }\n        });\n    }\n\n    /**\n     * Encode visual infomation from data after data processing\n     *\n     * @param {module:echarts/model/Global} ecModel\n     * @param {object} layout\n     * @param {boolean} [excludesLayout]\n     * @private\n     */\n    function doVisualEncoding(ecModel, payload, excludesLayout) {\n        var api = this._api;\n        ecModel.clearColorPalette();\n        ecModel.eachSeries(function (seriesModel) {\n            seriesModel.clearColorPalette();\n        });\n        each(visualFuncs, function (visual) {\n            (!excludesLayout || !visual.isLayout)\n                && visual.func(ecModel, api, payload);\n        });\n    }\n\n    /**\n     * Render each chart and component\n     * @private\n     */\n    function doRender(ecModel, payload) {\n        var api = this._api;\n        // Render all components\n        each(this._componentsViews, function (componentView) {\n            var componentModel = componentView.__model;\n            componentView.render(componentModel, ecModel, api, payload);\n\n            updateZ(componentModel, componentView);\n        }, this);\n\n        each(this._chartsViews, function (chart) {\n            chart.__alive = false;\n        }, this);\n\n        // Render all charts\n        ecModel.eachSeries(function (seriesModel, idx) {\n            var chartView = this._chartsMap[seriesModel.__viewId];\n            chartView.__alive = true;\n            chartView.render(seriesModel, ecModel, api, payload);\n\n            chartView.group.silent = !!seriesModel.get('silent');\n\n            updateZ(seriesModel, chartView);\n\n            updateProgressiveAndBlend(seriesModel, chartView);\n\n        }, this);\n\n        // If use hover layer\n        updateHoverLayerStatus(this._zr, ecModel);\n\n        // Remove groups of unrendered charts\n        each(this._chartsViews, function (chart) {\n            if (!chart.__alive) {\n                chart.remove(ecModel, api);\n            }\n        }, this);\n    }\n\n    var MOUSE_EVENT_NAMES = [\n        'click', 'dblclick', 'mouseover', 'mouseout', 'mousemove',\n        'mousedown', 'mouseup', 'globalout', 'contextmenu'\n    ];\n    /**\n     * @private\n     */\n    echartsProto._initEvents = function () {\n        each(MOUSE_EVENT_NAMES, function (eveName) {\n            this._zr.on(eveName, function (e) {\n                var ecModel = this.getModel();\n                var el = e.target;\n                var params;\n\n                // no e.target when 'globalout'.\n                if (eveName === 'globalout') {\n                    params = {};\n                }\n                else if (el && el.dataIndex != null) {\n                    var dataModel = el.dataModel || ecModel.getSeriesByIndex(el.seriesIndex);\n                    params = dataModel && dataModel.getDataParams(el.dataIndex, el.dataType) || {};\n                }\n                // If element has custom eventData of components\n                else if (el && el.eventData) {\n                    params = zrUtil.extend({}, el.eventData);\n                }\n\n                if (params) {\n                    params.event = e;\n                    params.type = eveName;\n                    this.trigger(eveName, params);\n                }\n\n            }, this);\n        }, this);\n\n        each(eventActionMap, function (actionType, eventType) {\n            this._messageCenter.on(eventType, function (event) {\n                this.trigger(eventType, event);\n            }, this);\n        }, this);\n    };\n\n    /**\n     * @return {boolean}\n     */\n    echartsProto.isDisposed = function () {\n        return this._disposed;\n    };\n\n    /**\n     * Clear\n     */\n    echartsProto.clear = function () {\n        this.setOption({ series: [] }, true);\n    };\n    /**\n     * Dispose instance\n     */\n    echartsProto.dispose = function () {\n        if (this._disposed) {\n            if (__DEV__) {\n                console.warn('Instance ' + this.id + ' has been disposed');\n            }\n            return;\n        }\n        this._disposed = true;\n\n        var api = this._api;\n        var ecModel = this._model;\n\n        each(this._componentsViews, function (component) {\n            component.dispose(ecModel, api);\n        });\n        each(this._chartsViews, function (chart) {\n            chart.dispose(ecModel, api);\n        });\n\n        // Dispose after all views disposed\n        this._zr.dispose();\n\n        delete instances[this.id];\n    };\n\n    zrUtil.mixin(ECharts, Eventful);\n\n    function updateHoverLayerStatus(zr, ecModel) {\n        var storage = zr.storage;\n        var elCount = 0;\n        storage.traverse(function (el) {\n            if (!el.isGroup) {\n                elCount++;\n            }\n        });\n        if (elCount > ecModel.get('hoverLayerThreshold') && !env.node) {\n            storage.traverse(function (el) {\n                if (!el.isGroup) {\n                    el.useHoverLayer = true;\n                }\n            });\n        }\n    }\n    /**\n     * Update chart progressive and blend.\n     * @param {module:echarts/model/Series|module:echarts/model/Component} model\n     * @param {module:echarts/view/Component|module:echarts/view/Chart} view\n     */\n    function updateProgressiveAndBlend(seriesModel, chartView) {\n        // Progressive configuration\n        var elCount = 0;\n        chartView.group.traverse(function (el) {\n            if (el.type !== 'group' && !el.ignore) {\n                elCount++;\n            }\n        });\n        var frameDrawNum = +seriesModel.get('progressive');\n        var needProgressive = elCount > seriesModel.get('progressiveThreshold') && frameDrawNum && !env.node;\n        if (needProgressive) {\n            chartView.group.traverse(function (el) {\n                // FIXME marker and other components\n                if (!el.isGroup) {\n                    el.progressive = needProgressive ?\n                        Math.floor(elCount++ / frameDrawNum) : -1;\n                    if (needProgressive) {\n                        el.stopAnimation(true);\n                    }\n                }\n            });\n        }\n\n        // Blend configration\n        var blendMode = seriesModel.get('blendMode') || null;\n        if (__DEV__) {\n            if (!env.canvasSupported && blendMode && blendMode !== 'source-over') {\n                console.warn('Only canvas support blendMode');\n            }\n        }\n        chartView.group.traverse(function (el) {\n            // FIXME marker and other components\n            if (!el.isGroup) {\n                el.setStyle('blend', blendMode);\n            }\n        });\n    }\n    /**\n     * @param {module:echarts/model/Series|module:echarts/model/Component} model\n     * @param {module:echarts/view/Component|module:echarts/view/Chart} view\n     */\n    function updateZ(model, view) {\n        var z = model.get('z');\n        var zlevel = model.get('zlevel');\n        // Set z and zlevel\n        view.group.traverse(function (el) {\n            if (el.type !== 'group') {\n                z != null && (el.z = z);\n                zlevel != null && (el.zlevel = zlevel);\n            }\n        });\n    }\n    /**\n     * @type {Array.<Function>}\n     * @inner\n     */\n    var actions = [];\n\n    /**\n     * Map eventType to actionType\n     * @type {Object}\n     */\n    var eventActionMap = {};\n\n    /**\n     * Data processor functions of each stage\n     * @type {Array.<Object.<string, Function>>}\n     * @inner\n     */\n    var dataProcessorFuncs = [];\n\n    /**\n     * @type {Array.<Function>}\n     * @inner\n     */\n    var optionPreprocessorFuncs = [];\n\n    /**\n     * Visual encoding functions of each stage\n     * @type {Array.<Object.<string, Function>>}\n     * @inner\n     */\n    var visualFuncs = [];\n    /**\n     * Theme storage\n     * @type {Object.<key, Object>}\n     */\n    var themeStorage = {};\n    /**\n     * Loading effects\n     */\n    var loadingEffects = {};\n\n\n    var instances = {};\n    var connectedGroups = {};\n\n    var idBase = new Date() - 0;\n    var groupIdBase = new Date() - 0;\n    var DOM_ATTRIBUTE_KEY = '_echarts_instance_';\n    /**\n     * @alias module:echarts\n     */\n    var echarts = {\n        /**\n         * @type {number}\n         */\n        version: '3.4.0',\n        dependencies: {\n            zrender: '3.3.0'\n        }\n    };\n\n    function enableConnect(chart) {\n\n        var STATUS_PENDING = 0;\n        var STATUS_UPDATING = 1;\n        var STATUS_UPDATED = 2;\n        var STATUS_KEY = '__connectUpdateStatus';\n        function updateConnectedChartsStatus(charts, status) {\n            for (var i = 0; i < charts.length; i++) {\n                var otherChart = charts[i];\n                otherChart[STATUS_KEY] = status;\n            }\n        }\n        zrUtil.each(eventActionMap, function (actionType, eventType) {\n            chart._messageCenter.on(eventType, function (event) {\n                if (connectedGroups[chart.group] && chart[STATUS_KEY] !== STATUS_PENDING) {\n                    var action = chart.makeActionFromEvent(event);\n                    var otherCharts = [];\n\n                    zrUtil.each(instances, function (otherChart) {\n                        if (otherChart !== chart && otherChart.group === chart.group) {\n                            otherCharts.push(otherChart);\n                        }\n                    });\n\n                    updateConnectedChartsStatus(otherCharts, STATUS_PENDING);\n                    each(otherCharts, function (otherChart) {\n                        if (otherChart[STATUS_KEY] !== STATUS_UPDATING) {\n                            otherChart.dispatchAction(action);\n                        }\n                    });\n                    updateConnectedChartsStatus(otherCharts, STATUS_UPDATED);\n                }\n            });\n        });\n\n    }\n    /**\n     * @param {HTMLDomElement} dom\n     * @param {Object} [theme]\n     * @param {Object} opts\n     * @param {number} [opts.devicePixelRatio] Use window.devicePixelRatio by default\n     * @param {string} [opts.renderer] Currently only 'canvas' is supported.\n     * @param {number} [opts.width] Use clientWidth of the input `dom` by default.\n     *                              Can be 'auto' (the same as null/undefined)\n     * @param {number} [opts.height] Use clientHeight of the input `dom` by default.\n     *                               Can be 'auto' (the same as null/undefined)\n     */\n    echarts.init = function (dom, theme, opts) {\n        if (__DEV__) {\n            // Check version\n            if ((zrender.version.replace('.', '') - 0) < (echarts.dependencies.zrender.replace('.', '') - 0)) {\n                throw new Error(\n                    'ZRender ' + zrender.version\n                    + ' is too old for ECharts ' + echarts.version\n                    + '. Current version need ZRender '\n                    + echarts.dependencies.zrender + '+'\n                );\n            }\n            if (!dom) {\n                throw new Error('Initialize failed: invalid dom.');\n            }\n            if (zrUtil.isDom(dom) && dom.nodeName.toUpperCase() !== 'CANVAS' && (!dom.clientWidth || !dom.clientHeight)) {\n                console.warn('Can\\'t get dom width or height');\n            }\n        }\n\n        var chart = new ECharts(dom, theme, opts);\n        chart.id = 'ec_' + idBase++;\n        instances[chart.id] = chart;\n\n        dom.setAttribute &&\n            dom.setAttribute(DOM_ATTRIBUTE_KEY, chart.id);\n\n        enableConnect(chart);\n\n        return chart;\n    };\n\n    /**\n     * @return {string|Array.<module:echarts~ECharts>} groupId\n     */\n    echarts.connect = function (groupId) {\n        // Is array of charts\n        if (zrUtil.isArray(groupId)) {\n            var charts = groupId;\n            groupId = null;\n            // If any chart has group\n            zrUtil.each(charts, function (chart) {\n                if (chart.group != null) {\n                    groupId = chart.group;\n                }\n            });\n            groupId = groupId || ('g_' + groupIdBase++);\n            zrUtil.each(charts, function (chart) {\n                chart.group = groupId;\n            });\n        }\n        connectedGroups[groupId] = true;\n        return groupId;\n    };\n\n    /**\n     * @return {string} groupId\n     */\n    echarts.disConnect = function (groupId) {\n        connectedGroups[groupId] = false;\n    };\n\n    /**\n     * Dispose a chart instance\n     * @param  {module:echarts~ECharts|HTMLDomElement|string} chart\n     */\n    echarts.dispose = function (chart) {\n        if (zrUtil.isDom(chart)) {\n            chart = echarts.getInstanceByDom(chart);\n        }\n        else if (typeof chart === 'string') {\n            chart = instances[chart];\n        }\n        if ((chart instanceof ECharts) && !chart.isDisposed()) {\n            chart.dispose();\n        }\n    };\n\n    /**\n     * @param  {HTMLDomElement} dom\n     * @return {echarts~ECharts}\n     */\n    echarts.getInstanceByDom = function (dom) {\n        var key = dom.getAttribute(DOM_ATTRIBUTE_KEY);\n        return instances[key];\n    };\n    /**\n     * @param {string} key\n     * @return {echarts~ECharts}\n     */\n    echarts.getInstanceById = function (key) {\n        return instances[key];\n    };\n\n    /**\n     * Register theme\n     */\n    echarts.registerTheme = function (name, theme) {\n        themeStorage[name] = theme;\n    };\n\n    /**\n     * Register option preprocessor\n     * @param {Function} preprocessorFunc\n     */\n    echarts.registerPreprocessor = function (preprocessorFunc) {\n        optionPreprocessorFuncs.push(preprocessorFunc);\n    };\n\n    /**\n     * @param {number} [priority=1000]\n     * @param {Function} processorFunc\n     */\n    echarts.registerProcessor = function (priority, processorFunc) {\n        if (typeof priority === 'function') {\n            processorFunc = priority;\n            priority = PRIORITY_PROCESSOR_FILTER;\n        }\n        if (__DEV__) {\n            if (isNaN(priority)) {\n                throw new Error('Unkown processor priority');\n            }\n        }\n        dataProcessorFuncs.push({\n            prio: priority,\n            func: processorFunc\n        });\n    };\n\n    /**\n     * Usage:\n     * registerAction('someAction', 'someEvent', function () { ... });\n     * registerAction('someAction', function () { ... });\n     * registerAction(\n     *     {type: 'someAction', event: 'someEvent', update: 'updateView'},\n     *     function () { ... }\n     * );\n     *\n     * @param {(string|Object)} actionInfo\n     * @param {string} actionInfo.type\n     * @param {string} [actionInfo.event]\n     * @param {string} [actionInfo.update]\n     * @param {string} [eventName]\n     * @param {Function} action\n     */\n    echarts.registerAction = function (actionInfo, eventName, action) {\n        if (typeof eventName === 'function') {\n            action = eventName;\n            eventName = '';\n        }\n        var actionType = zrUtil.isObject(actionInfo)\n            ? actionInfo.type\n            : ([actionInfo, actionInfo = {\n                event: eventName\n            }][0]);\n\n        // Event name is all lowercase\n        actionInfo.event = (actionInfo.event || actionType).toLowerCase();\n        eventName = actionInfo.event;\n\n        // Validate action type and event name.\n        zrUtil.assert(ACTION_REG.test(actionType) && ACTION_REG.test(eventName));\n\n        if (!actions[actionType]) {\n            actions[actionType] = {action: action, actionInfo: actionInfo};\n        }\n        eventActionMap[eventName] = actionType;\n    };\n\n    /**\n     * @param {string} type\n     * @param {*} CoordinateSystem\n     */\n    echarts.registerCoordinateSystem = function (type, CoordinateSystem) {\n        CoordinateSystemManager.register(type, CoordinateSystem);\n    };\n\n    /**\n     * Layout is a special stage of visual encoding\n     * Most visual encoding like color are common for different chart\n     * But each chart has it's own layout algorithm\n     *\n     * @param {number} [priority=1000]\n     * @param {Function} layoutFunc\n     */\n    echarts.registerLayout = function (priority, layoutFunc) {\n        if (typeof priority === 'function') {\n            layoutFunc = priority;\n            priority = PRIORITY_VISUAL_LAYOUT;\n        }\n        if (__DEV__) {\n            if (isNaN(priority)) {\n                throw new Error('Unkown layout priority');\n            }\n        }\n        visualFuncs.push({\n            prio: priority,\n            func: layoutFunc,\n            isLayout: true\n        });\n    };\n\n    /**\n     * @param {number} [priority=3000]\n     * @param {Function} visualFunc\n     */\n    echarts.registerVisual = function (priority, visualFunc) {\n        if (typeof priority === 'function') {\n            visualFunc = priority;\n            priority = PRIORITY_VISUAL_CHART;\n        }\n        if (__DEV__) {\n            if (isNaN(priority)) {\n                throw new Error('Unkown visual priority');\n            }\n        }\n        visualFuncs.push({\n            prio: priority,\n            func: visualFunc\n        });\n    };\n\n    /**\n     * @param {string} name\n     */\n    echarts.registerLoading = function (name, loadingFx) {\n        loadingEffects[name] = loadingFx;\n    };\n\n    /**\n     * @param {Object} opts\n     * @param {string} [superClass]\n     */\n    echarts.extendComponentModel = function (opts/*, superClass*/) {\n        // var Clazz = ComponentModel;\n        // if (superClass) {\n        //     var classType = parseClassType(superClass);\n        //     Clazz = ComponentModel.getClass(classType.main, classType.sub, true);\n        // }\n        return ComponentModel.extend(opts);\n    };\n\n    /**\n     * @param {Object} opts\n     * @param {string} [superClass]\n     */\n    echarts.extendComponentView = function (opts/*, superClass*/) {\n        // var Clazz = ComponentView;\n        // if (superClass) {\n        //     var classType = parseClassType(superClass);\n        //     Clazz = ComponentView.getClass(classType.main, classType.sub, true);\n        // }\n        return ComponentView.extend(opts);\n    };\n\n    /**\n     * @param {Object} opts\n     * @param {string} [superClass]\n     */\n    echarts.extendSeriesModel = function (opts/*, superClass*/) {\n        // var Clazz = SeriesModel;\n        // if (superClass) {\n        //     superClass = 'series.' + superClass.replace('series.', '');\n        //     var classType = parseClassType(superClass);\n        //     Clazz = ComponentModel.getClass(classType.main, classType.sub, true);\n        // }\n        return SeriesModel.extend(opts);\n    };\n\n    /**\n     * @param {Object} opts\n     * @param {string} [superClass]\n     */\n    echarts.extendChartView = function (opts/*, superClass*/) {\n        // var Clazz = ChartView;\n        // if (superClass) {\n        //     superClass = superClass.replace('series.', '');\n        //     var classType = parseClassType(superClass);\n        //     Clazz = ChartView.getClass(classType.main, true);\n        // }\n        return ChartView.extend(opts);\n    };\n\n    /**\n     * ZRender need a canvas context to do measureText.\n     * But in node environment canvas may be created by node-canvas.\n     * So we need to specify how to create a canvas instead of using document.createElement('canvas')\n     *\n     * Be careful of using it in the browser.\n     *\n     * @param {Function} creator\n     * @example\n     *     var Canvas = require('canvas');\n     *     var echarts = require('echarts');\n     *     echarts.setCanvasCreator(function () {\n     *         // Small size is enough.\n     *         return new Canvas(32, 32);\n     *     });\n     */\n    echarts.setCanvasCreator = function (creator) {\n        zrUtil.createCanvas = creator;\n    };\n\n    echarts.registerVisual(PRIORITY_VISUAL_GLOBAL, require('./visual/seriesColor'));\n    echarts.registerPreprocessor(require('./preprocessor/backwardCompat'));\n    echarts.registerLoading('default', require('./loading/default'));\n\n    // Default action\n    echarts.registerAction({\n        type: 'highlight',\n        event: 'highlight',\n        update: 'highlight'\n    }, zrUtil.noop);\n    echarts.registerAction({\n        type: 'downplay',\n        event: 'downplay',\n        update: 'downplay'\n    }, zrUtil.noop);\n\n\n    // --------\n    // Exports\n    // --------\n    //\n    echarts.List = require('./data/List');\n    echarts.Model = require('./model/Model');\n\n    echarts.graphic = require('./util/graphic');\n    echarts.number = require('./util/number');\n    echarts.format = require('./util/format');\n    echarts.throttle = throttle.throttle;\n    echarts.matrix = require('zrender/lib/core/matrix');\n    echarts.vector = require('zrender/lib/core/vector');\n    echarts.color = require('zrender/lib/tool/color');\n\n    echarts.util = {};\n    each([\n            'map', 'each', 'filter', 'indexOf', 'inherits', 'reduce', 'filter',\n            'bind', 'curry', 'isArray', 'isString', 'isObject', 'isFunction',\n            'extend', 'defaults', 'clone'\n        ],\n        function (name) {\n            echarts.util[name] = zrUtil[name];\n        }\n    );\n\n    // PRIORITY\n    echarts.PRIORITY = {\n        PROCESSOR: {\n            FILTER: PRIORITY_PROCESSOR_FILTER,\n            STATISTIC: PRIORITY_PROCESSOR_STATISTIC\n        },\n        VISUAL: {\n            LAYOUT: PRIORITY_VISUAL_LAYOUT,\n            GLOBAL: PRIORITY_VISUAL_GLOBAL,\n            CHART: PRIORITY_VISUAL_CHART,\n            COMPONENT: PRIORITY_VISUAL_COMPONENT,\n            BRUSH: PRIORITY_VISUAL_BRUSH\n        }\n    };\n\n    module.exports = echarts;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/echarts.js\n// module id = 462\n// module chunks = 0 1","var ArrayCtor = typeof Float32Array === 'undefined' ? Array : Float32Array;\n/**\n * 创建一个向量\n * @param {number} [x=0]\n * @param {number} [y=0]\n * @return {Vector2}\n */\n\nfunction create(x, y) {\n  var out = new ArrayCtor(2);\n\n  if (x == null) {\n    x = 0;\n  }\n\n  if (y == null) {\n    y = 0;\n  }\n\n  out[0] = x;\n  out[1] = y;\n  return out;\n}\n/**\n * 复制向量数据\n * @param {Vector2} out\n * @param {Vector2} v\n * @return {Vector2}\n */\n\n\nfunction copy(out, v) {\n  out[0] = v[0];\n  out[1] = v[1];\n  return out;\n}\n/**\n * 克隆一个向量\n * @param {Vector2} v\n * @return {Vector2}\n */\n\n\nfunction clone(v) {\n  var out = new ArrayCtor(2);\n  out[0] = v[0];\n  out[1] = v[1];\n  return out;\n}\n/**\n * 设置向量的两个项\n * @param {Vector2} out\n * @param {number} a\n * @param {number} b\n * @return {Vector2} 结果\n */\n\n\nfunction set(out, a, b) {\n  out[0] = a;\n  out[1] = b;\n  return out;\n}\n/**\n * 向量相加\n * @param {Vector2} out\n * @param {Vector2} v1\n * @param {Vector2} v2\n */\n\n\nfunction add(out, v1, v2) {\n  out[0] = v1[0] + v2[0];\n  out[1] = v1[1] + v2[1];\n  return out;\n}\n/**\n * 向量缩放后相加\n * @param {Vector2} out\n * @param {Vector2} v1\n * @param {Vector2} v2\n * @param {number} a\n */\n\n\nfunction scaleAndAdd(out, v1, v2, a) {\n  out[0] = v1[0] + v2[0] * a;\n  out[1] = v1[1] + v2[1] * a;\n  return out;\n}\n/**\n * 向量相减\n * @param {Vector2} out\n * @param {Vector2} v1\n * @param {Vector2} v2\n */\n\n\nfunction sub(out, v1, v2) {\n  out[0] = v1[0] - v2[0];\n  out[1] = v1[1] - v2[1];\n  return out;\n}\n/**\n * 向量长度\n * @param {Vector2} v\n * @return {number}\n */\n\n\nfunction len(v) {\n  return Math.sqrt(lenSquare(v));\n}\n\nvar length = len; // jshint ignore:line\n\n/**\n * 向量长度平方\n * @param {Vector2} v\n * @return {number}\n */\n\nfunction lenSquare(v) {\n  return v[0] * v[0] + v[1] * v[1];\n}\n\nvar lengthSquare = lenSquare;\n/**\n * 向量乘法\n * @param {Vector2} out\n * @param {Vector2} v1\n * @param {Vector2} v2\n */\n\nfunction mul(out, v1, v2) {\n  out[0] = v1[0] * v2[0];\n  out[1] = v1[1] * v2[1];\n  return out;\n}\n/**\n * 向量除法\n * @param {Vector2} out\n * @param {Vector2} v1\n * @param {Vector2} v2\n */\n\n\nfunction div(out, v1, v2) {\n  out[0] = v1[0] / v2[0];\n  out[1] = v1[1] / v2[1];\n  return out;\n}\n/**\n * 向量点乘\n * @param {Vector2} v1\n * @param {Vector2} v2\n * @return {number}\n */\n\n\nfunction dot(v1, v2) {\n  return v1[0] * v2[0] + v1[1] * v2[1];\n}\n/**\n * 向量缩放\n * @param {Vector2} out\n * @param {Vector2} v\n * @param {number} s\n */\n\n\nfunction scale(out, v, s) {\n  out[0] = v[0] * s;\n  out[1] = v[1] * s;\n  return out;\n}\n/**\n * 向量归一化\n * @param {Vector2} out\n * @param {Vector2} v\n */\n\n\nfunction normalize(out, v) {\n  var d = len(v);\n\n  if (d === 0) {\n    out[0] = 0;\n    out[1] = 0;\n  } else {\n    out[0] = v[0] / d;\n    out[1] = v[1] / d;\n  }\n\n  return out;\n}\n/**\n * 计算向量间距离\n * @param {Vector2} v1\n * @param {Vector2} v2\n * @return {number}\n */\n\n\nfunction distance(v1, v2) {\n  return Math.sqrt((v1[0] - v2[0]) * (v1[0] - v2[0]) + (v1[1] - v2[1]) * (v1[1] - v2[1]));\n}\n\nvar dist = distance;\n/**\n * 向量距离平方\n * @param {Vector2} v1\n * @param {Vector2} v2\n * @return {number}\n */\n\nfunction distanceSquare(v1, v2) {\n  return (v1[0] - v2[0]) * (v1[0] - v2[0]) + (v1[1] - v2[1]) * (v1[1] - v2[1]);\n}\n\nvar distSquare = distanceSquare;\n/**\n * 求负向量\n * @param {Vector2} out\n * @param {Vector2} v\n */\n\nfunction negate(out, v) {\n  out[0] = -v[0];\n  out[1] = -v[1];\n  return out;\n}\n/**\n * 插值两个点\n * @param {Vector2} out\n * @param {Vector2} v1\n * @param {Vector2} v2\n * @param {number} t\n */\n\n\nfunction lerp(out, v1, v2, t) {\n  out[0] = v1[0] + t * (v2[0] - v1[0]);\n  out[1] = v1[1] + t * (v2[1] - v1[1]);\n  return out;\n}\n/**\n * 矩阵左乘向量\n * @param {Vector2} out\n * @param {Vector2} v\n * @param {Vector2} m\n */\n\n\nfunction applyTransform(out, v, m) {\n  var x = v[0];\n  var y = v[1];\n  out[0] = m[0] * x + m[2] * y + m[4];\n  out[1] = m[1] * x + m[3] * y + m[5];\n  return out;\n}\n/**\n * 求两个向量最小值\n * @param  {Vector2} out\n * @param  {Vector2} v1\n * @param  {Vector2} v2\n */\n\n\nfunction min(out, v1, v2) {\n  out[0] = Math.min(v1[0], v2[0]);\n  out[1] = Math.min(v1[1], v2[1]);\n  return out;\n}\n/**\n * 求两个向量最大值\n * @param  {Vector2} out\n * @param  {Vector2} v1\n * @param  {Vector2} v2\n */\n\n\nfunction max(out, v1, v2) {\n  out[0] = Math.max(v1[0], v2[0]);\n  out[1] = Math.max(v1[1], v2[1]);\n  return out;\n}\n\nexports.create = create;\nexports.copy = copy;\nexports.clone = clone;\nexports.set = set;\nexports.add = add;\nexports.scaleAndAdd = scaleAndAdd;\nexports.sub = sub;\nexports.len = len;\nexports.length = length;\nexports.lenSquare = lenSquare;\nexports.lengthSquare = lengthSquare;\nexports.mul = mul;\nexports.div = div;\nexports.dot = dot;\nexports.scale = scale;\nexports.normalize = normalize;\nexports.distance = distance;\nexports.dist = dist;\nexports.distanceSquare = distanceSquare;\nexports.distSquare = distSquare;\nexports.negate = negate;\nexports.lerp = lerp;\nexports.applyTransform = applyTransform;\nexports.min = min;\nexports.max = max;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/core/vector.js\n// module id = 463\n// module chunks = 0 1","'use strict';\n\n\n    var zrUtil = require('zrender/lib/core/util');\n\n    var pathTool = require('zrender/lib/tool/path');\n    var round = Math.round;\n    var Path = require('zrender/lib/graphic/Path');\n    var colorTool = require('zrender/lib/tool/color');\n    var matrix = require('zrender/lib/core/matrix');\n    var vector = require('zrender/lib/core/vector');\n\n    var graphic = {};\n\n    graphic.Group = require('zrender/lib/container/Group');\n\n    graphic.Image = require('zrender/lib/graphic/Image');\n\n    graphic.Text = require('zrender/lib/graphic/Text');\n\n    graphic.Circle = require('zrender/lib/graphic/shape/Circle');\n\n    graphic.Sector = require('zrender/lib/graphic/shape/Sector');\n\n    graphic.Ring = require('zrender/lib/graphic/shape/Ring');\n\n    graphic.Polygon = require('zrender/lib/graphic/shape/Polygon');\n\n    graphic.Polyline = require('zrender/lib/graphic/shape/Polyline');\n\n    graphic.Rect = require('zrender/lib/graphic/shape/Rect');\n\n    graphic.Line = require('zrender/lib/graphic/shape/Line');\n\n    graphic.BezierCurve = require('zrender/lib/graphic/shape/BezierCurve');\n\n    graphic.Arc = require('zrender/lib/graphic/shape/Arc');\n\n    graphic.CompoundPath = require('zrender/lib/graphic/CompoundPath');\n\n    graphic.LinearGradient = require('zrender/lib/graphic/LinearGradient');\n\n    graphic.RadialGradient = require('zrender/lib/graphic/RadialGradient');\n\n    graphic.BoundingRect = require('zrender/lib/core/BoundingRect');\n\n    /**\n     * Extend shape with parameters\n     */\n    graphic.extendShape = function (opts) {\n        return Path.extend(opts);\n    };\n\n    /**\n     * Extend path\n     */\n    graphic.extendPath = function (pathData, opts) {\n        return pathTool.extendFromString(pathData, opts);\n    };\n\n    /**\n     * Create a path element from path data string\n     * @param {string} pathData\n     * @param {Object} opts\n     * @param {module:zrender/core/BoundingRect} rect\n     * @param {string} [layout=cover] 'center' or 'cover'\n     */\n    graphic.makePath = function (pathData, opts, rect, layout) {\n        var path = pathTool.createFromString(pathData, opts);\n        var boundingRect = path.getBoundingRect();\n        if (rect) {\n            var aspect = boundingRect.width / boundingRect.height;\n\n            if (layout === 'center') {\n                // Set rect to center, keep width / height ratio.\n                var width = rect.height * aspect;\n                var height;\n                if (width <= rect.width) {\n                    height = rect.height;\n                }\n                else {\n                    width = rect.width;\n                    height = width / aspect;\n                }\n                var cx = rect.x + rect.width / 2;\n                var cy = rect.y + rect.height / 2;\n\n                rect.x = cx - width / 2;\n                rect.y = cy - height / 2;\n                rect.width = width;\n                rect.height = height;\n            }\n\n            graphic.resizePath(path, rect);\n        }\n        return path;\n    };\n\n    graphic.mergePath = pathTool.mergePath,\n\n    /**\n     * Resize a path to fit the rect\n     * @param {module:zrender/graphic/Path} path\n     * @param {Object} rect\n     */\n    graphic.resizePath = function (path, rect) {\n        if (!path.applyTransform) {\n            return;\n        }\n\n        var pathRect = path.getBoundingRect();\n\n        var m = pathRect.calculateTransform(rect);\n\n        path.applyTransform(m);\n    };\n\n    /**\n     * Sub pixel optimize line for canvas\n     *\n     * @param {Object} param\n     * @param {Object} [param.shape]\n     * @param {number} [param.shape.x1]\n     * @param {number} [param.shape.y1]\n     * @param {number} [param.shape.x2]\n     * @param {number} [param.shape.y2]\n     * @param {Object} [param.style]\n     * @param {number} [param.style.lineWidth]\n     * @return {Object} Modified param\n     */\n    graphic.subPixelOptimizeLine = function (param) {\n        var subPixelOptimize = graphic.subPixelOptimize;\n        var shape = param.shape;\n        var lineWidth = param.style.lineWidth;\n\n        if (round(shape.x1 * 2) === round(shape.x2 * 2)) {\n            shape.x1 = shape.x2 = subPixelOptimize(shape.x1, lineWidth, true);\n        }\n        if (round(shape.y1 * 2) === round(shape.y2 * 2)) {\n            shape.y1 = shape.y2 = subPixelOptimize(shape.y1, lineWidth, true);\n        }\n        return param;\n    };\n\n    /**\n     * Sub pixel optimize rect for canvas\n     *\n     * @param {Object} param\n     * @param {Object} [param.shape]\n     * @param {number} [param.shape.x]\n     * @param {number} [param.shape.y]\n     * @param {number} [param.shape.width]\n     * @param {number} [param.shape.height]\n     * @param {Object} [param.style]\n     * @param {number} [param.style.lineWidth]\n     * @return {Object} Modified param\n     */\n    graphic.subPixelOptimizeRect = function (param) {\n        var subPixelOptimize = graphic.subPixelOptimize;\n        var shape = param.shape;\n        var lineWidth = param.style.lineWidth;\n        var originX = shape.x;\n        var originY = shape.y;\n        var originWidth = shape.width;\n        var originHeight = shape.height;\n        shape.x = subPixelOptimize(shape.x, lineWidth, true);\n        shape.y = subPixelOptimize(shape.y, lineWidth, true);\n        shape.width = Math.max(\n            subPixelOptimize(originX + originWidth, lineWidth, false) - shape.x,\n            originWidth === 0 ? 0 : 1\n        );\n        shape.height = Math.max(\n            subPixelOptimize(originY + originHeight, lineWidth, false) - shape.y,\n            originHeight === 0 ? 0 : 1\n        );\n        return param;\n    };\n\n    /**\n     * Sub pixel optimize for canvas\n     *\n     * @param {number} position Coordinate, such as x, y\n     * @param {number} lineWidth Should be nonnegative integer.\n     * @param {boolean=} positiveOrNegative Default false (negative).\n     * @return {number} Optimized position.\n     */\n    graphic.subPixelOptimize = function (position, lineWidth, positiveOrNegative) {\n        // Assure that (position + lineWidth / 2) is near integer edge,\n        // otherwise line will be fuzzy in canvas.\n        var doubledPosition = round(position * 2);\n        return (doubledPosition + round(lineWidth)) % 2 === 0\n            ? doubledPosition / 2\n            : (doubledPosition + (positiveOrNegative ? 1 : -1)) / 2;\n    };\n\n    function hasFillOrStroke(fillOrStroke) {\n        return fillOrStroke != null && fillOrStroke != 'none';\n    }\n\n    function liftColor(color) {\n        return typeof color === 'string' ? colorTool.lift(color, -0.1) : color;\n    }\n\n    /**\n     * @private\n     */\n    function cacheElementStl(el) {\n        if (el.__hoverStlDirty) {\n            var stroke = el.style.stroke;\n            var fill = el.style.fill;\n\n            // Create hoverStyle on mouseover\n            var hoverStyle = el.__hoverStl;\n            hoverStyle.fill = hoverStyle.fill\n                || (hasFillOrStroke(fill) ? liftColor(fill) : null);\n            hoverStyle.stroke = hoverStyle.stroke\n                || (hasFillOrStroke(stroke) ? liftColor(stroke) : null);\n\n            var normalStyle = {};\n            for (var name in hoverStyle) {\n                if (hoverStyle.hasOwnProperty(name)) {\n                    normalStyle[name] = el.style[name];\n                }\n            }\n\n            el.__normalStl = normalStyle;\n\n            el.__hoverStlDirty = false;\n        }\n    }\n\n    /**\n     * @private\n     */\n    function doSingleEnterHover(el) {\n        if (el.__isHover) {\n            return;\n        }\n\n        cacheElementStl(el);\n\n        if (el.useHoverLayer) {\n            el.__zr && el.__zr.addHover(el, el.__hoverStl);\n        }\n        else {\n            el.setStyle(el.__hoverStl);\n            el.z2 += 1;\n        }\n\n        el.__isHover = true;\n    }\n\n    /**\n     * @inner\n     */\n    function doSingleLeaveHover(el) {\n        if (!el.__isHover) {\n            return;\n        }\n\n        var normalStl = el.__normalStl;\n        if (el.useHoverLayer) {\n            el.__zr && el.__zr.removeHover(el);\n        }\n        else {\n            normalStl && el.setStyle(normalStl);\n            el.z2 -= 1;\n        }\n\n        el.__isHover = false;\n    }\n\n    /**\n     * @inner\n     */\n    function doEnterHover(el) {\n        el.type === 'group'\n            ? el.traverse(function (child) {\n                if (child.type !== 'group') {\n                    doSingleEnterHover(child);\n                }\n            })\n            : doSingleEnterHover(el);\n    }\n\n    function doLeaveHover(el) {\n        el.type === 'group'\n            ? el.traverse(function (child) {\n                if (child.type !== 'group') {\n                    doSingleLeaveHover(child);\n                }\n            })\n            : doSingleLeaveHover(el);\n    }\n\n    /**\n     * @inner\n     */\n    function setElementHoverStl(el, hoverStl) {\n        // If element has sepcified hoverStyle, then use it instead of given hoverStyle\n        // Often used when item group has a label element and it's hoverStyle is different\n        el.__hoverStl = el.hoverStyle || hoverStl || {};\n        el.__hoverStlDirty = true;\n\n        if (el.__isHover) {\n            cacheElementStl(el);\n        }\n    }\n\n    /**\n     * @inner\n     */\n    function onElementMouseOver(e) {\n        if (this.__hoverSilentOnTouch && e.zrByTouch) {\n            return;\n        }\n\n        // Only if element is not in emphasis status\n        !this.__isEmphasis && doEnterHover(this);\n    }\n\n    /**\n     * @inner\n     */\n    function onElementMouseOut(e) {\n        if (this.__hoverSilentOnTouch && e.zrByTouch) {\n            return;\n        }\n\n        // Only if element is not in emphasis status\n        !this.__isEmphasis && doLeaveHover(this);\n    }\n\n    /**\n     * @inner\n     */\n    function enterEmphasis() {\n        this.__isEmphasis = true;\n        doEnterHover(this);\n    }\n\n    /**\n     * @inner\n     */\n    function leaveEmphasis() {\n        this.__isEmphasis = false;\n        doLeaveHover(this);\n    }\n\n    /**\n     * Set hover style of element\n     * @param {module:zrender/Element} el\n     * @param {Object} [hoverStyle]\n     * @param {Object} [opt]\n     * @param {boolean} [opt.hoverSilentOnTouch=false]\n     *        In touch device, mouseover event will be trigger on touchstart event\n     *        (see module:zrender/dom/HandlerProxy). By this mechanism, we can\n     *        conviniently use hoverStyle when tap on touch screen without additional\n     *        code for compatibility.\n     *        But if the chart/component has select feature, which usually also use\n     *        hoverStyle, there might be conflict between 'select-highlight' and\n     *        'hover-highlight' especially when roam is enabled (see geo for example).\n     *        In this case, hoverSilentOnTouch should be used to disable hover-highlight\n     *        on touch device.\n     */\n    graphic.setHoverStyle = function (el, hoverStyle, opt) {\n        el.__hoverSilentOnTouch = opt && opt.hoverSilentOnTouch;\n\n        el.type === 'group'\n            ? el.traverse(function (child) {\n                if (child.type !== 'group') {\n                    setElementHoverStl(child, hoverStyle);\n                }\n            })\n            : setElementHoverStl(el, hoverStyle);\n\n        // Duplicated function will be auto-ignored, see Eventful.js.\n        el.on('mouseover', onElementMouseOver)\n          .on('mouseout', onElementMouseOut);\n\n        // Emphasis, normal can be triggered manually\n        el.on('emphasis', enterEmphasis)\n          .on('normal', leaveEmphasis);\n    };\n\n    /**\n     * Set text option in the style\n     * @param {Object} textStyle\n     * @param {module:echarts/model/Model} labelModel\n     * @param {string} color\n     */\n    graphic.setText = function (textStyle, labelModel, color) {\n        var labelPosition = labelModel.getShallow('position') || 'inside';\n        var labelOffset = labelModel.getShallow('offset');\n        var labelColor = labelPosition.indexOf('inside') >= 0 ? 'white' : color;\n        var textStyleModel = labelModel.getModel('textStyle');\n        zrUtil.extend(textStyle, {\n            textDistance: labelModel.getShallow('distance') || 5,\n            textFont: textStyleModel.getFont(),\n            textPosition: labelPosition,\n            textOffset: labelOffset,\n            textFill: textStyleModel.getTextColor() || labelColor\n        });\n    };\n\n    function animateOrSetProps(isUpdate, el, props, animatableModel, dataIndex, cb) {\n        if (typeof dataIndex === 'function') {\n            cb = dataIndex;\n            dataIndex = null;\n        }\n        // Do not check 'animation' property directly here. Consider this case:\n        // animation model is an `itemModel`, whose does not have `isAnimationEnabled`\n        // but its parent model (`seriesModel`) does.\n        var animationEnabled = animatableModel && animatableModel.isAnimationEnabled();\n\n        if (animationEnabled) {\n            var postfix = isUpdate ? 'Update' : '';\n            var duration = animatableModel.getShallow('animationDuration' + postfix);\n            var animationEasing = animatableModel.getShallow('animationEasing' + postfix);\n            var animationDelay = animatableModel.getShallow('animationDelay' + postfix);\n            if (typeof animationDelay === 'function') {\n                animationDelay = animationDelay(\n                    dataIndex,\n                    animatableModel.getAnimationDelayParams\n                        ? animatableModel.getAnimationDelayParams(el, dataIndex)\n                        : null\n                );\n            }\n            if (typeof duration === 'function') {\n                duration = duration(dataIndex);\n            }\n\n            duration > 0\n                ? el.animateTo(props, duration, animationDelay || 0, animationEasing, cb)\n                : (el.attr(props), cb && cb());\n        }\n        else {\n            el.attr(props);\n            cb && cb();\n        }\n    }\n\n    /**\n     * Update graphic element properties with or without animation according to the configuration in series\n     * @param {module:zrender/Element} el\n     * @param {Object} props\n     * @param {module:echarts/model/Model} [animatableModel]\n     * @param {number} [dataIndex]\n     * @param {Function} [cb]\n     * @example\n     *     graphic.updateProps(el, {\n     *         position: [100, 100]\n     *     }, seriesModel, dataIndex, function () { console.log('Animation done!'); });\n     *     // Or\n     *     graphic.updateProps(el, {\n     *         position: [100, 100]\n     *     }, seriesModel, function () { console.log('Animation done!'); });\n     */\n    graphic.updateProps = function (el, props, animatableModel, dataIndex, cb) {\n        animateOrSetProps(true, el, props, animatableModel, dataIndex, cb);\n    };\n\n    /**\n     * Init graphic element properties with or without animation according to the configuration in series\n     * @param {module:zrender/Element} el\n     * @param {Object} props\n     * @param {module:echarts/model/Model} [animatableModel]\n     * @param {number} [dataIndex]\n     * @param {Function} cb\n     */\n    graphic.initProps = function (el, props, animatableModel, dataIndex, cb) {\n        animateOrSetProps(false, el, props, animatableModel, dataIndex, cb);\n    };\n\n    /**\n     * Get transform matrix of target (param target),\n     * in coordinate of its ancestor (param ancestor)\n     *\n     * @param {module:zrender/mixin/Transformable} target\n     * @param {module:zrender/mixin/Transformable} [ancestor]\n     */\n    graphic.getTransform = function (target, ancestor) {\n        var mat = matrix.identity([]);\n\n        while (target && target !== ancestor) {\n            matrix.mul(mat, target.getLocalTransform(), mat);\n            target = target.parent;\n        }\n\n        return mat;\n    };\n\n    /**\n     * Apply transform to an vertex.\n     * @param {Array.<number>} vertex [x, y]\n     * @param {Array.<number>} transform Transform matrix: like [1, 0, 0, 1, 0, 0]\n     * @param {boolean=} invert Whether use invert matrix.\n     * @return {Array.<number>} [x, y]\n     */\n    graphic.applyTransform = function (vertex, transform, invert) {\n        if (invert) {\n            transform = matrix.invert([], transform);\n        }\n        return vector.applyTransform([], vertex, transform);\n    };\n\n    /**\n     * @param {string} direction 'left' 'right' 'top' 'bottom'\n     * @param {Array.<number>} transform Transform matrix: like [1, 0, 0, 1, 0, 0]\n     * @param {boolean=} invert Whether use invert matrix.\n     * @return {string} Transformed direction. 'left' 'right' 'top' 'bottom'\n     */\n    graphic.transformDirection = function (direction, transform, invert) {\n\n        // Pick a base, ensure that transform result will not be (0, 0).\n        var hBase = (transform[4] === 0 || transform[5] === 0 || transform[0] === 0)\n            ? 1 : Math.abs(2 * transform[4] / transform[0]);\n        var vBase = (transform[4] === 0 || transform[5] === 0 || transform[2] === 0)\n            ? 1 : Math.abs(2 * transform[4] / transform[2]);\n\n        var vertex = [\n            direction === 'left' ? -hBase : direction === 'right' ? hBase : 0,\n            direction === 'top' ? -vBase : direction === 'bottom' ? vBase : 0\n        ];\n\n        vertex = graphic.applyTransform(vertex, transform, invert);\n\n        return Math.abs(vertex[0]) > Math.abs(vertex[1])\n            ? (vertex[0] > 0 ? 'right' : 'left')\n            : (vertex[1] > 0 ? 'bottom' : 'top');\n    };\n\n    /**\n     * Apply group transition animation from g1 to g2\n     */\n    graphic.groupTransition = function (g1, g2, animatableModel, cb) {\n        if (!g1 || !g2) {\n            return;\n        }\n\n        function getElMap(g) {\n            var elMap = {};\n            g.traverse(function (el) {\n                if (!el.isGroup && el.anid) {\n                    elMap[el.anid] = el;\n                }\n            });\n            return elMap;\n        }\n        function getAnimatableProps(el) {\n            var obj = {\n                position: vector.clone(el.position),\n                rotation: el.rotation\n            };\n            if (el.shape) {\n                obj.shape = zrUtil.extend({}, el.shape);\n            }\n            return obj;\n        }\n        var elMap1 = getElMap(g1);\n\n        g2.traverse(function (el) {\n            if (!el.isGroup && el.anid) {\n                var oldEl = elMap1[el.anid];\n                if (oldEl) {\n                    var newProp = getAnimatableProps(el);\n                    el.attr(getAnimatableProps(oldEl));\n                    graphic.updateProps(el, newProp, animatableModel, el.dataIndex);\n                }\n                // else {\n                //     if (el.previousProps) {\n                //         graphic.updateProps\n                //     }\n                // }\n            }\n        });\n    };\n\n    module.exports = graphic;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/util/graphic.js\n// module id = 464\n// module chunks = 0 1","/**\n * 数值处理模块\n * @module echarts/util/number\n */\n\n\n\n    var number = {};\n\n    var RADIAN_EPSILON = 1e-4;\n\n    function _trim(str) {\n        return str.replace(/^\\s+/, '').replace(/\\s+$/, '');\n    }\n\n    /**\n     * Linear mapping a value from domain to range\n     * @memberOf module:echarts/util/number\n     * @param  {(number|Array.<number>)} val\n     * @param  {Array.<number>} domain Domain extent domain[0] can be bigger than domain[1]\n     * @param  {Array.<number>} range  Range extent range[0] can be bigger than range[1]\n     * @param  {boolean} clamp\n     * @return {(number|Array.<number>}\n     */\n    number.linearMap = function (val, domain, range, clamp) {\n        var subDomain = domain[1] - domain[0];\n        var subRange = range[1] - range[0];\n\n        if (subDomain === 0) {\n            return subRange === 0\n                ? range[0]\n                : (range[0] + range[1]) / 2;\n        }\n\n        // Avoid accuracy problem in edge, such as\n        // 146.39 - 62.83 === 83.55999999999999.\n        // See echarts/test/ut/spec/util/number.js#linearMap#accuracyError\n        // It is a little verbose for efficiency considering this method\n        // is a hotspot.\n        if (clamp) {\n            if (subDomain > 0) {\n                if (val <= domain[0]) {\n                    return range[0];\n                }\n                else if (val >= domain[1]) {\n                    return range[1];\n                }\n            }\n            else {\n                if (val >= domain[0]) {\n                    return range[0];\n                }\n                else if (val <= domain[1]) {\n                    return range[1];\n                }\n            }\n        }\n        else {\n            if (val === domain[0]) {\n                return range[0];\n            }\n            if (val === domain[1]) {\n                return range[1];\n            }\n        }\n\n        return (val - domain[0]) / subDomain * subRange + range[0];\n    };\n\n    /**\n     * Convert a percent string to absolute number.\n     * Returns NaN if percent is not a valid string or number\n     * @memberOf module:echarts/util/number\n     * @param {string|number} percent\n     * @param {number} all\n     * @return {number}\n     */\n    number.parsePercent = function(percent, all) {\n        switch (percent) {\n            case 'center':\n            case 'middle':\n                percent = '50%';\n                break;\n            case 'left':\n            case 'top':\n                percent = '0%';\n                break;\n            case 'right':\n            case 'bottom':\n                percent = '100%';\n                break;\n        }\n        if (typeof percent === 'string') {\n            if (_trim(percent).match(/%$/)) {\n                return parseFloat(percent) / 100 * all;\n            }\n\n            return parseFloat(percent);\n        }\n\n        return percent == null ? NaN : +percent;\n    };\n\n    /**\n     * Fix rounding error of float numbers\n     * @param {number} x\n     * @return {number}\n     */\n    number.round = function (x, precision) {\n        if (precision == null) {\n            precision = 10;\n        }\n        // Avoid range error\n        precision = Math.min(Math.max(0, precision), 20);\n        return +(+x).toFixed(precision);\n    };\n\n    number.asc = function (arr) {\n        arr.sort(function (a, b) {\n            return a - b;\n        });\n        return arr;\n    };\n\n    /**\n     * Get precision\n     * @param {number} val\n     */\n    number.getPrecision = function (val) {\n        val = +val;\n        if (isNaN(val)) {\n            return 0;\n        }\n        // It is much faster than methods converting number to string as follows\n        //      var tmp = val.toString();\n        //      return tmp.length - 1 - tmp.indexOf('.');\n        // especially when precision is low\n        var e = 1;\n        var count = 0;\n        while (Math.round(val * e) / e !== val) {\n            e *= 10;\n            count++;\n        }\n        return count;\n    };\n\n    number.getPrecisionSafe = function (val) {\n        var str = val.toString();\n        var dotIndex = str.indexOf('.');\n        if (dotIndex < 0) {\n            return 0;\n        }\n        return str.length - 1 - dotIndex;\n    };\n\n    /**\n     * Minimal dicernible data precisioin according to a single pixel.\n     * @param {Array.<number>} dataExtent\n     * @param {Array.<number>} pixelExtent\n     * @return {number} precision\n     */\n    number.getPixelPrecision = function (dataExtent, pixelExtent) {\n        var log = Math.log;\n        var LN10 = Math.LN10;\n        var dataQuantity = Math.floor(log(dataExtent[1] - dataExtent[0]) / LN10);\n        var sizeQuantity = Math.round(log(Math.abs(pixelExtent[1] - pixelExtent[0])) / LN10);\n        // toFixed() digits argument must be between 0 and 20.\n        var precision = Math.min(Math.max(-dataQuantity + sizeQuantity, 0), 20);\n        return !isFinite(precision) ? 20 : precision;\n    };\n\n    // Number.MAX_SAFE_INTEGER, ie do not support.\n    number.MAX_SAFE_INTEGER = 9007199254740991;\n\n    /**\n     * To 0 - 2 * PI, considering negative radian.\n     * @param {number} radian\n     * @return {number}\n     */\n    number.remRadian = function (radian) {\n        var pi2 = Math.PI * 2;\n        return (radian % pi2 + pi2) % pi2;\n    };\n\n    /**\n     * @param {type} radian\n     * @return {boolean}\n     */\n    number.isRadianAroundZero = function (val) {\n        return val > -RADIAN_EPSILON && val < RADIAN_EPSILON;\n    };\n\n    /**\n     * @param {string|Date|number} value\n     * @return {Date} date\n     */\n    number.parseDate = function (value) {\n        if (value instanceof Date) {\n            return value;\n        }\n        else if (typeof value === 'string') {\n            // Treat as ISO format. See issue #3623\n            var ret = new Date(value);\n            if (isNaN(+ret)) {\n                // FIXME new Date('1970-01-01') is UTC, new Date('1970/01/01') is local\n                ret = new Date(new Date(value.replace(/-/g, '/')) - new Date('1970/01/01'));\n            }\n            return ret;\n        }\n\n        return new Date(Math.round(value));\n    };\n\n    /**\n     * Quantity of a number. e.g. 0.1, 1, 10, 100\n     * @param  {number} val\n     * @return {number}\n     */\n    number.quantity = function (val) {\n        return Math.pow(10, Math.floor(Math.log(val) / Math.LN10));\n    };\n\n    // \"Nice Numbers for Graph Labels\" of Graphic Gems\n    /**\n     * find a “nice” number approximately equal to x. Round the number if round = true, take ceiling if round = false\n     * The primary observation is that the “nicest” numbers in decimal are 1, 2, and 5, and all power-of-ten multiples of these numbers.\n     * @param  {number} val\n     * @param  {boolean} round\n     * @return {number}\n     */\n    number.nice = function (val, round) {\n        var exp10 = number.quantity(val);\n        var f = val / exp10; // between 1 and 10\n        var nf;\n        if (round) {\n            if (f < 1.5) { nf = 1; }\n            else if (f < 2.5) { nf = 2; }\n            else if (f < 4) { nf = 3; }\n            else if (f < 7) { nf = 5; }\n            else { nf = 10; }\n        }\n        else {\n            if (f < 1) { nf = 1; }\n            else if (f < 2) { nf = 2; }\n            else if (f < 3) { nf = 3; }\n            else if (f < 5) { nf = 5; }\n            else { nf = 10; }\n        }\n        return nf * exp10;\n    };\n\n    /**\n     * Order intervals asc, and split them when overlap.\n     * expect(numberUtil.reformIntervals([\n     *     {interval: [18, 62], close: [1, 1]},\n     *     {interval: [-Infinity, -70], close: [0, 0]},\n     *     {interval: [-70, -26], close: [1, 1]},\n     *     {interval: [-26, 18], close: [1, 1]},\n     *     {interval: [62, 150], close: [1, 1]},\n     *     {interval: [106, 150], close: [1, 1]},\n     *     {interval: [150, Infinity], close: [0, 0]}\n     * ])).toEqual([\n     *     {interval: [-Infinity, -70], close: [0, 0]},\n     *     {interval: [-70, -26], close: [1, 1]},\n     *     {interval: [-26, 18], close: [0, 1]},\n     *     {interval: [18, 62], close: [0, 1]},\n     *     {interval: [62, 150], close: [0, 1]},\n     *     {interval: [150, Infinity], close: [0, 0]}\n     * ]);\n     * @param {Array.<Object>} list, where `close` mean open or close\n     *        of the interval, and Infinity can be used.\n     * @return {Array.<Object>} The origin list, which has been reformed.\n     */\n    number.reformIntervals = function (list) {\n        list.sort(function (a, b) {\n            return littleThan(a, b, 0) ? -1 : 1;\n        });\n\n        var curr = -Infinity;\n        var currClose = 1;\n        for (var i = 0; i < list.length;) {\n            var interval = list[i].interval;\n            var close = list[i].close;\n\n            for (var lg = 0; lg < 2; lg++) {\n                if (interval[lg] <= curr) {\n                    interval[lg] = curr;\n                    close[lg] = !lg ? 1 - currClose : 1;\n                }\n                curr = interval[lg];\n                currClose = close[lg];\n            }\n\n            if (interval[0] === interval[1] && close[0] * close[1] !== 1) {\n                list.splice(i, 1);\n            }\n            else {\n                i++;\n            }\n        }\n\n        return list;\n\n        function littleThan(a, b, lg) {\n            return a.interval[lg] < b.interval[lg]\n                || (\n                    a.interval[lg] === b.interval[lg]\n                    && (\n                        (a.close[lg] - b.close[lg] === (!lg ? 1 : -1))\n                        || (!lg && littleThan(a, b, 1))\n                    )\n                );\n        }\n    };\n\n    /**\n     * parseFloat NaNs numeric-cast false positives (null|true|false|\"\")\n     * ...but misinterprets leading-number strings, particularly hex literals (\"0x...\")\n     * subtraction forces infinities to NaN\n     * @param {*} v\n     * @return {boolean}\n     */\n    number.isNumeric = function (v) {\n        return v - parseFloat(v) >= 0;\n    };\n\n    module.exports = number;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/util/number.js\n// module id = 465\n// module chunks = 0 1","/**\n * echarts设备环境识别\n *\n * @desc echarts基于Canvas，纯Javascript图表库，提供直观，生动，可交互，可个性化定制的数据统计图表。\n * @author firede[firede@firede.us]\n * @desc thanks zepto.\n */\nvar env = {};\n\nif (typeof navigator === 'undefined') {\n  // In node\n  env = {\n    browser: {},\n    os: {},\n    node: true,\n    // Assume canvas is supported\n    canvasSupported: true,\n    svgSupported: true\n  };\n} else {\n  env = detect(navigator.userAgent);\n}\n\nvar _default = env; // Zepto.js\n// (c) 2010-2013 Thomas Fuchs\n// Zepto.js may be freely distributed under the MIT license.\n\nfunction detect(ua) {\n  var os = {};\n  var browser = {}; // var webkit = ua.match(/Web[kK]it[\\/]{0,1}([\\d.]+)/);\n  // var android = ua.match(/(Android);?[\\s\\/]+([\\d.]+)?/);\n  // var ipad = ua.match(/(iPad).*OS\\s([\\d_]+)/);\n  // var ipod = ua.match(/(iPod)(.*OS\\s([\\d_]+))?/);\n  // var iphone = !ipad && ua.match(/(iPhone\\sOS)\\s([\\d_]+)/);\n  // var webos = ua.match(/(webOS|hpwOS)[\\s\\/]([\\d.]+)/);\n  // var touchpad = webos && ua.match(/TouchPad/);\n  // var kindle = ua.match(/Kindle\\/([\\d.]+)/);\n  // var silk = ua.match(/Silk\\/([\\d._]+)/);\n  // var blackberry = ua.match(/(BlackBerry).*Version\\/([\\d.]+)/);\n  // var bb10 = ua.match(/(BB10).*Version\\/([\\d.]+)/);\n  // var rimtabletos = ua.match(/(RIM\\sTablet\\sOS)\\s([\\d.]+)/);\n  // var playbook = ua.match(/PlayBook/);\n  // var chrome = ua.match(/Chrome\\/([\\d.]+)/) || ua.match(/CriOS\\/([\\d.]+)/);\n\n  var firefox = ua.match(/Firefox\\/([\\d.]+)/); // var safari = webkit && ua.match(/Mobile\\//) && !chrome;\n  // var webview = ua.match(/(iPhone|iPod|iPad).*AppleWebKit(?!.*Safari)/) && !chrome;\n\n  var ie = ua.match(/MSIE\\s([\\d.]+)/) // IE 11 Trident/7.0; rv:11.0\n  || ua.match(/Trident\\/.+?rv:(([\\d.]+))/);\n  var edge = ua.match(/Edge\\/([\\d.]+)/); // IE 12 and 12+\n\n  var weChat = /micromessenger/i.test(ua); // Todo: clean this up with a better OS/browser seperation:\n  // - discern (more) between multiple browsers on android\n  // - decide if kindle fire in silk mode is android or not\n  // - Firefox on Android doesn't specify the Android version\n  // - possibly devide in os, device and browser hashes\n  // if (browser.webkit = !!webkit) browser.version = webkit[1];\n  // if (android) os.android = true, os.version = android[2];\n  // if (iphone && !ipod) os.ios = os.iphone = true, os.version = iphone[2].replace(/_/g, '.');\n  // if (ipad) os.ios = os.ipad = true, os.version = ipad[2].replace(/_/g, '.');\n  // if (ipod) os.ios = os.ipod = true, os.version = ipod[3] ? ipod[3].replace(/_/g, '.') : null;\n  // if (webos) os.webos = true, os.version = webos[2];\n  // if (touchpad) os.touchpad = true;\n  // if (blackberry) os.blackberry = true, os.version = blackberry[2];\n  // if (bb10) os.bb10 = true, os.version = bb10[2];\n  // if (rimtabletos) os.rimtabletos = true, os.version = rimtabletos[2];\n  // if (playbook) browser.playbook = true;\n  // if (kindle) os.kindle = true, os.version = kindle[1];\n  // if (silk) browser.silk = true, browser.version = silk[1];\n  // if (!silk && os.android && ua.match(/Kindle Fire/)) browser.silk = true;\n  // if (chrome) browser.chrome = true, browser.version = chrome[1];\n\n  if (firefox) {\n    browser.firefox = true;\n    browser.version = firefox[1];\n  } // if (safari && (ua.match(/Safari/) || !!os.ios)) browser.safari = true;\n  // if (webview) browser.webview = true;\n\n\n  if (ie) {\n    browser.ie = true;\n    browser.version = ie[1];\n  }\n\n  if (edge) {\n    browser.edge = true;\n    browser.version = edge[1];\n  } // It is difficult to detect WeChat in Win Phone precisely, because ua can\n  // not be set on win phone. So we do not consider Win Phone.\n\n\n  if (weChat) {\n    browser.weChat = true;\n  } // os.tablet = !!(ipad || playbook || (android && !ua.match(/Mobile/)) ||\n  //     (firefox && ua.match(/Tablet/)) || (ie && !ua.match(/Phone/) && ua.match(/Touch/)));\n  // os.phone  = !!(!os.tablet && !os.ipod && (android || iphone || webos ||\n  //     (chrome && ua.match(/Android/)) || (chrome && ua.match(/CriOS\\/([\\d.]+)/)) ||\n  //     (firefox && ua.match(/Mobile/)) || (ie && ua.match(/Touch/))));\n\n\n  return {\n    browser: browser,\n    os: os,\n    node: false,\n    // 原生canvas支持，改极端点了\n    // canvasSupported : !(browser.ie && parseFloat(browser.version) < 9)\n    canvasSupported: !!document.createElement('canvas').getContext,\n    svgSupported: typeof SVGRect !== 'undefined',\n    // @see <http://stackoverflow.com/questions/4817029/whats-the-best-way-to-detect-a-touch-screen-device-using-javascript>\n    // works on most browsers\n    // IE10/11 does not support touch event, and MS Edge supports them but not by\n    // default, so we dont check navigator.maxTouchPoints for them here.\n    touchEventsSupported: 'ontouchstart' in window && !browser.ie && !browser.edge,\n    // <http://caniuse.com/#search=pointer%20event>.\n    pointerEventsSupported: 'onpointerdown' in window // Firefox supports pointer but not by default, only MS browsers are reliable on pointer\n    // events currently. So we dont use that on other browsers unless tested sufficiently.\n    // Although IE 10 supports pointer event, it use old style and is different from the\n    // standard. So we exclude that. (IE 10 is hardly used on touch device)\n    && (browser.edge || browser.ie && browser.version >= 11)\n  };\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/core/env.js\n// module id = 466\n// module chunks = 0 1","var vec2 = require(\"./vector\");\n\nvar matrix = require(\"./matrix\");\n\n/**\n * @module echarts/core/BoundingRect\n */\nvar v2ApplyTransform = vec2.applyTransform;\nvar mathMin = Math.min;\nvar mathMax = Math.max;\n/**\n * @alias module:echarts/core/BoundingRect\n */\n\nfunction BoundingRect(x, y, width, height) {\n  if (width < 0) {\n    x = x + width;\n    width = -width;\n  }\n\n  if (height < 0) {\n    y = y + height;\n    height = -height;\n  }\n  /**\n   * @type {number}\n   */\n\n\n  this.x = x;\n  /**\n   * @type {number}\n   */\n\n  this.y = y;\n  /**\n   * @type {number}\n   */\n\n  this.width = width;\n  /**\n   * @type {number}\n   */\n\n  this.height = height;\n}\n\nBoundingRect.prototype = {\n  constructor: BoundingRect,\n\n  /**\n   * @param {module:echarts/core/BoundingRect} other\n   */\n  union: function (other) {\n    var x = mathMin(other.x, this.x);\n    var y = mathMin(other.y, this.y);\n    this.width = mathMax(other.x + other.width, this.x + this.width) - x;\n    this.height = mathMax(other.y + other.height, this.y + this.height) - y;\n    this.x = x;\n    this.y = y;\n  },\n\n  /**\n   * @param {Array.<number>} m\n   * @methods\n   */\n  applyTransform: function () {\n    var lt = [];\n    var rb = [];\n    var lb = [];\n    var rt = [];\n    return function (m) {\n      // In case usage like this\n      // el.getBoundingRect().applyTransform(el.transform)\n      // And element has no transform\n      if (!m) {\n        return;\n      }\n\n      lt[0] = lb[0] = this.x;\n      lt[1] = rt[1] = this.y;\n      rb[0] = rt[0] = this.x + this.width;\n      rb[1] = lb[1] = this.y + this.height;\n      v2ApplyTransform(lt, lt, m);\n      v2ApplyTransform(rb, rb, m);\n      v2ApplyTransform(lb, lb, m);\n      v2ApplyTransform(rt, rt, m);\n      this.x = mathMin(lt[0], rb[0], lb[0], rt[0]);\n      this.y = mathMin(lt[1], rb[1], lb[1], rt[1]);\n      var maxX = mathMax(lt[0], rb[0], lb[0], rt[0]);\n      var maxY = mathMax(lt[1], rb[1], lb[1], rt[1]);\n      this.width = maxX - this.x;\n      this.height = maxY - this.y;\n    };\n  }(),\n\n  /**\n   * Calculate matrix of transforming from self to target rect\n   * @param  {module:zrender/core/BoundingRect} b\n   * @return {Array.<number>}\n   */\n  calculateTransform: function (b) {\n    var a = this;\n    var sx = b.width / a.width;\n    var sy = b.height / a.height;\n    var m = matrix.create(); // 矩阵右乘\n\n    matrix.translate(m, m, [-a.x, -a.y]);\n    matrix.scale(m, m, [sx, sy]);\n    matrix.translate(m, m, [b.x, b.y]);\n    return m;\n  },\n\n  /**\n   * @param {(module:echarts/core/BoundingRect|Object)} b\n   * @return {boolean}\n   */\n  intersect: function (b) {\n    if (!b) {\n      return false;\n    }\n\n    if (!(b instanceof BoundingRect)) {\n      // Normalize negative width/height.\n      b = BoundingRect.create(b);\n    }\n\n    var a = this;\n    var ax0 = a.x;\n    var ax1 = a.x + a.width;\n    var ay0 = a.y;\n    var ay1 = a.y + a.height;\n    var bx0 = b.x;\n    var bx1 = b.x + b.width;\n    var by0 = b.y;\n    var by1 = b.y + b.height;\n    return !(ax1 < bx0 || bx1 < ax0 || ay1 < by0 || by1 < ay0);\n  },\n  contain: function (x, y) {\n    var rect = this;\n    return x >= rect.x && x <= rect.x + rect.width && y >= rect.y && y <= rect.y + rect.height;\n  },\n\n  /**\n   * @return {module:echarts/core/BoundingRect}\n   */\n  clone: function () {\n    return new BoundingRect(this.x, this.y, this.width, this.height);\n  },\n\n  /**\n   * Copy from another rect\n   */\n  copy: function (other) {\n    this.x = other.x;\n    this.y = other.y;\n    this.width = other.width;\n    this.height = other.height;\n  },\n  plain: function () {\n    return {\n      x: this.x,\n      y: this.y,\n      width: this.width,\n      height: this.height\n    };\n  }\n};\n/**\n * @param {Object|module:zrender/core/BoundingRect} rect\n * @param {number} rect.x\n * @param {number} rect.y\n * @param {number} rect.width\n * @param {number} rect.height\n * @return {module:zrender/core/BoundingRect}\n */\n\nBoundingRect.create = function (rect) {\n  return new BoundingRect(rect.x, rect.y, rect.width, rect.height);\n};\n\nvar _default = BoundingRect;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/core/BoundingRect.js\n// module id = 467\n// module chunks = 0 1","\n\n    var zrUtil = require('zrender/lib/core/util');\n    var numberUtil = require('./number');\n    var textContain = require('zrender/lib/contain/text');\n\n    var formatUtil = {};\n    /**\n     * 每三位默认加,格式化\n     * @type {string|number} x\n     */\n    formatUtil.addCommas = function (x) {\n        if (isNaN(x)) {\n            return '-';\n        }\n        x = (x + '').split('.');\n        return x[0].replace(/(\\d{1,3})(?=(?:\\d{3})+(?!\\d))/g,'$1,')\n               + (x.length > 1 ? ('.' + x[1]) : '');\n    };\n\n    /**\n     * @param {string} str\n     * @param {boolean} [upperCaseFirst=false]\n     * @return {string} str\n     */\n    formatUtil.toCamelCase = function (str, upperCaseFirst) {\n        str = (str || '').toLowerCase().replace(/-(.)/g, function(match, group1) {\n            return group1.toUpperCase();\n        });\n\n        if (upperCaseFirst && str) {\n            str = str.charAt(0).toUpperCase() + str.slice(1);\n        }\n\n        return str;\n    };\n\n    /**\n     * Normalize css liked array configuration\n     * e.g.\n     *  3 => [3, 3, 3, 3]\n     *  [4, 2] => [4, 2, 4, 2]\n     *  [4, 3, 2] => [4, 3, 2, 3]\n     * @param {number|Array.<number>} val\n     */\n    formatUtil.normalizeCssArray = function (val) {\n        var len = val.length;\n        if (typeof (val) === 'number') {\n            return [val, val, val, val];\n        }\n        else if (len === 2) {\n            // vertical | horizontal\n            return [val[0], val[1], val[0], val[1]];\n        }\n        else if (len === 3) {\n            // top | horizontal | bottom\n            return [val[0], val[1], val[2], val[1]];\n        }\n        return val;\n    };\n\n    var encodeHTML = formatUtil.encodeHTML = function (source) {\n        return String(source)\n            .replace(/&/g, '&amp;')\n            .replace(/</g, '&lt;')\n            .replace(/>/g, '&gt;')\n            .replace(/\"/g, '&quot;')\n            .replace(/'/g, '&#39;');\n    };\n\n    var TPL_VAR_ALIAS = ['a', 'b', 'c', 'd', 'e', 'f', 'g'];\n\n    var wrapVar = function (varName, seriesIdx) {\n        return '{' + varName + (seriesIdx == null ? '' : seriesIdx) + '}';\n    };\n\n    /**\n     * Template formatter\n     * @param {string} tpl\n     * @param {Array.<Object>|Object} paramsList\n     * @param {boolean} [encode=false]\n     * @return {string}\n     */\n    formatUtil.formatTpl = function (tpl, paramsList, encode) {\n        if (!zrUtil.isArray(paramsList)) {\n            paramsList = [paramsList];\n        }\n        var seriesLen = paramsList.length;\n        if (!seriesLen) {\n            return '';\n        }\n\n        var $vars = paramsList[0].$vars || [];\n        for (var i = 0; i < $vars.length; i++) {\n            var alias = TPL_VAR_ALIAS[i];\n            var val = wrapVar(alias, 0);\n            tpl = tpl.replace(wrapVar(alias), encode ? encodeHTML(val) : val);\n        }\n        for (var seriesIdx = 0; seriesIdx < seriesLen; seriesIdx++) {\n            for (var k = 0; k < $vars.length; k++) {\n                var val = paramsList[seriesIdx][$vars[k]];\n                tpl = tpl.replace(\n                    wrapVar(TPL_VAR_ALIAS[k], seriesIdx),\n                    encode ? encodeHTML(val) : val\n                );\n            }\n        }\n\n        return tpl;\n    };\n\n\n    /**\n     * @param {string} str\n     * @return {string}\n     * @inner\n     */\n    var s2d = function (str) {\n        return str < 10 ? ('0' + str) : str;\n    };\n\n    /**\n     * ISO Date format\n     * @param {string} tpl\n     * @param {number} value\n     * @inner\n     */\n    formatUtil.formatTime = function (tpl, value) {\n        if (tpl === 'week'\n            || tpl === 'month'\n            || tpl === 'quarter'\n            || tpl === 'half-year'\n            || tpl === 'year'\n        ) {\n            tpl = 'MM-dd\\nyyyy';\n        }\n\n        var date = numberUtil.parseDate(value);\n        var y = date.getFullYear();\n        var M = date.getMonth() + 1;\n        var d = date.getDate();\n        var h = date.getHours();\n        var m = date.getMinutes();\n        var s = date.getSeconds();\n\n        tpl = tpl.replace('MM', s2d(M))\n            .toLowerCase()\n            .replace('yyyy', y)\n            .replace('yy', y % 100)\n            .replace('dd', s2d(d))\n            .replace('d', d)\n            .replace('hh', s2d(h))\n            .replace('h', h)\n            .replace('mm', s2d(m))\n            .replace('m', m)\n            .replace('ss', s2d(s))\n            .replace('s', s);\n\n        return tpl;\n    };\n\n    /**\n     * Capital first\n     * @param {string} str\n     * @return {string}\n     */\n    formatUtil.capitalFirst = function (str) {\n        return str ? str.charAt(0).toUpperCase() + str.substr(1) : str;\n    };\n\n    formatUtil.truncateText = textContain.truncateText;\n\n    module.exports = formatUtil;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/util/format.js\n// module id = 468\n// module chunks = 0 1","\n\n    var formatUtil = require('./format');\n    var nubmerUtil = require('./number');\n    var Model = require('../model/Model');\n    var zrUtil = require('zrender/lib/core/util');\n    var each = zrUtil.each;\n    var isObject = zrUtil.isObject;\n\n    var modelUtil = {};\n\n    /**\n     * If value is not array, then translate it to array.\n     * @param  {*} value\n     * @return {Array} [value] or value\n     */\n    modelUtil.normalizeToArray = function (value) {\n        return value instanceof Array\n            ? value\n            : value == null\n            ? []\n            : [value];\n    };\n\n    /**\n     * Sync default option between normal and emphasis like `position` and `show`\n     * In case some one will write code like\n     *     label: {\n     *         normal: {\n     *             show: false,\n     *             position: 'outside',\n     *             textStyle: {\n     *                 fontSize: 18\n     *             }\n     *         },\n     *         emphasis: {\n     *             show: true\n     *         }\n     *     }\n     * @param {Object} opt\n     * @param {Array.<string>} subOpts\n     */\n     modelUtil.defaultEmphasis = function (opt, subOpts) {\n        if (opt) {\n            var emphasisOpt = opt.emphasis = opt.emphasis || {};\n            var normalOpt = opt.normal = opt.normal || {};\n\n            // Default emphasis option from normal\n            each(subOpts, function (subOptName) {\n                var val = zrUtil.retrieve(emphasisOpt[subOptName], normalOpt[subOptName]);\n                if (val != null) {\n                    emphasisOpt[subOptName] = val;\n                }\n            });\n        }\n    };\n\n    modelUtil.LABEL_OPTIONS = ['position', 'offset', 'show', 'textStyle', 'distance', 'formatter'];\n\n    /**\n     * data could be [12, 2323, {value: 223}, [1221, 23], {value: [2, 23]}]\n     * This helper method retieves value from data.\n     * @param {string|number|Date|Array|Object} dataItem\n     * @return {number|string|Date|Array.<number|string|Date>}\n     */\n    modelUtil.getDataItemValue = function (dataItem) {\n        // Performance sensitive.\n        return dataItem && (dataItem.value == null ? dataItem : dataItem.value);\n    };\n\n    /**\n     * data could be [12, 2323, {value: 223}, [1221, 23], {value: [2, 23]}]\n     * This helper method determine if dataItem has extra option besides value\n     * @param {string|number|Date|Array|Object} dataItem\n     */\n    modelUtil.isDataItemOption = function (dataItem) {\n        return isObject(dataItem)\n            && !(dataItem instanceof Array);\n            // // markLine data can be array\n            // && !(dataItem[0] && isObject(dataItem[0]) && !(dataItem[0] instanceof Array));\n    };\n\n    /**\n     * This helper method convert value in data.\n     * @param {string|number|Date} value\n     * @param {Object|string} [dimInfo] If string (like 'x'), dimType defaults 'number'.\n     */\n    modelUtil.converDataValue = function (value, dimInfo) {\n        // Performance sensitive.\n        var dimType = dimInfo && dimInfo.type;\n        if (dimType === 'ordinal') {\n            return value;\n        }\n\n        if (dimType === 'time' && !isFinite(value) && value != null && value !== '-') {\n            value = +nubmerUtil.parseDate(value);\n        }\n\n        // dimType defaults 'number'.\n        // If dimType is not ordinal and value is null or undefined or NaN or '-',\n        // parse to NaN.\n        return (value == null || value === '')\n            ? NaN : +value; // If string (like '-'), using '+' parse to NaN\n    };\n\n    /**\n     * Create a model proxy to be used in tooltip for edge data, markLine data, markPoint data.\n     * @param {module:echarts/data/List} data\n     * @param {Object} opt\n     * @param {string} [opt.seriesIndex]\n     * @param {Object} [opt.name]\n     * @param {Object} [opt.mainType]\n     * @param {Object} [opt.subType]\n     */\n    modelUtil.createDataFormatModel = function (data, opt) {\n        var model = new Model();\n        zrUtil.mixin(model, modelUtil.dataFormatMixin);\n        model.seriesIndex = opt.seriesIndex;\n        model.name = opt.name || '';\n        model.mainType = opt.mainType;\n        model.subType = opt.subType;\n\n        model.getData = function () {\n            return data;\n        };\n        return model;\n    };\n\n    // PENDING A little ugly\n    modelUtil.dataFormatMixin = {\n        /**\n         * Get params for formatter\n         * @param {number} dataIndex\n         * @param {string} [dataType]\n         * @return {Object}\n         */\n        getDataParams: function (dataIndex, dataType) {\n            var data = this.getData(dataType);\n\n            var seriesIndex = this.seriesIndex;\n            var seriesName = this.name;\n\n            var rawValue = this.getRawValue(dataIndex, dataType);\n            var rawDataIndex = data.getRawIndex(dataIndex);\n            var name = data.getName(dataIndex, true);\n            var itemOpt = data.getRawDataItem(dataIndex);\n\n            return {\n                componentType: this.mainType,\n                componentSubType: this.subType,\n                seriesType: this.mainType === 'series' ? this.subType : null,\n                seriesIndex: seriesIndex,\n                seriesName: seriesName,\n                name: name,\n                dataIndex: rawDataIndex,\n                data: itemOpt,\n                dataType: dataType,\n                value: rawValue,\n                color: data.getItemVisual(dataIndex, 'color'),\n\n                // Param name list for mapping `a`, `b`, `c`, `d`, `e`\n                $vars: ['seriesName', 'name', 'value']\n            };\n        },\n\n        /**\n         * Format label\n         * @param {number} dataIndex\n         * @param {string} [status='normal'] 'normal' or 'emphasis'\n         * @param {string} [dataType]\n         * @param {number} [dimIndex]\n         * @return {string}\n         */\n        getFormattedLabel: function (dataIndex, status, dataType, dimIndex) {\n            status = status || 'normal';\n            var data = this.getData(dataType);\n            var itemModel = data.getItemModel(dataIndex);\n\n            var params = this.getDataParams(dataIndex, dataType);\n            if (dimIndex != null && (params.value instanceof Array)) {\n                params.value = params.value[dimIndex];\n            }\n\n            var formatter = itemModel.get(['label', status, 'formatter']);\n\n            if (typeof formatter === 'function') {\n                params.status = status;\n                return formatter(params);\n            }\n            else if (typeof formatter === 'string') {\n                return formatUtil.formatTpl(formatter, params);\n            }\n        },\n\n        /**\n         * Get raw value in option\n         * @param {number} idx\n         * @param {string} [dataType]\n         * @return {Object}\n         */\n        getRawValue: function (idx, dataType) {\n            var data = this.getData(dataType);\n            var dataItem = data.getRawDataItem(idx);\n            if (dataItem != null) {\n                return (isObject(dataItem) && !(dataItem instanceof Array))\n                    ? dataItem.value : dataItem;\n            }\n        },\n\n        /**\n         * Should be implemented.\n         * @param {number} dataIndex\n         * @param {boolean} [multipleSeries=false]\n         * @param {number} [dataType]\n         * @return {string} tooltip string\n         */\n        formatTooltip: zrUtil.noop\n    };\n\n    /**\n     * Mapping to exists for merge.\n     *\n     * @public\n     * @param {Array.<Object>|Array.<module:echarts/model/Component>} exists\n     * @param {Object|Array.<Object>} newCptOptions\n     * @return {Array.<Object>} Result, like [{exist: ..., option: ...}, {}],\n     *                          index of which is the same as exists.\n     */\n    modelUtil.mappingToExists = function (exists, newCptOptions) {\n        // Mapping by the order by original option (but not order of\n        // new option) in merge mode. Because we should ensure\n        // some specified index (like xAxisIndex) is consistent with\n        // original option, which is easy to understand, espatially in\n        // media query. And in most case, merge option is used to\n        // update partial option but not be expected to change order.\n        newCptOptions = (newCptOptions || []).slice();\n\n        var result = zrUtil.map(exists || [], function (obj, index) {\n            return {exist: obj};\n        });\n\n        // Mapping by id or name if specified.\n        each(newCptOptions, function (cptOption, index) {\n            if (!isObject(cptOption)) {\n                return;\n            }\n\n            // id has highest priority.\n            for (var i = 0; i < result.length; i++) {\n                if (!result[i].option // Consider name: two map to one.\n                    && cptOption.id != null\n                    && result[i].exist.id === cptOption.id + ''\n                ) {\n                    result[i].option = cptOption;\n                    newCptOptions[index] = null;\n                    return;\n                }\n            }\n\n            for (var i = 0; i < result.length; i++) {\n                var exist = result[i].exist;\n                if (!result[i].option // Consider name: two map to one.\n                    // Can not match when both ids exist but different.\n                    && (exist.id == null || cptOption.id == null)\n                    && cptOption.name != null\n                    && !modelUtil.isIdInner(cptOption)\n                    && !modelUtil.isIdInner(exist)\n                    && exist.name === cptOption.name + ''\n                ) {\n                    result[i].option = cptOption;\n                    newCptOptions[index] = null;\n                    return;\n                }\n            }\n        });\n\n        // Otherwise mapping by index.\n        each(newCptOptions, function (cptOption, index) {\n            if (!isObject(cptOption)) {\n                return;\n            }\n\n            var i = 0;\n            for (; i < result.length; i++) {\n                var exist = result[i].exist;\n                if (!result[i].option\n                    // Existing model that already has id should be able to\n                    // mapped to (because after mapping performed model may\n                    // be assigned with a id, whish should not affect next\n                    // mapping), except those has inner id.\n                    && !modelUtil.isIdInner(exist)\n                    // Caution:\n                    // Do not overwrite id. But name can be overwritten,\n                    // because axis use name as 'show label text'.\n                    // 'exist' always has id and name and we dont\n                    // need to check it.\n                    && cptOption.id == null\n                ) {\n                    result[i].option = cptOption;\n                    break;\n                }\n            }\n\n            if (i >= result.length) {\n                result.push({option: cptOption});\n            }\n        });\n\n        return result;\n    };\n\n    /**\n     * Make id and name for mapping result (result of mappingToExists)\n     * into `keyInfo` field.\n     *\n     * @public\n     * @param {Array.<Object>} Result, like [{exist: ..., option: ...}, {}],\n     *                          which order is the same as exists.\n     * @return {Array.<Object>} The input.\n     */\n    modelUtil.makeIdAndName = function (mapResult) {\n        // We use this id to hash component models and view instances\n        // in echarts. id can be specified by user, or auto generated.\n\n        // The id generation rule ensures new view instance are able\n        // to mapped to old instance when setOption are called in\n        // no-merge mode. So we generate model id by name and plus\n        // type in view id.\n\n        // name can be duplicated among components, which is convenient\n        // to specify multi components (like series) by one name.\n\n        // Ensure that each id is distinct.\n        var idMap = {};\n\n        each(mapResult, function (item, index) {\n            var existCpt = item.exist;\n            existCpt && (idMap[existCpt.id] = item);\n        });\n\n        each(mapResult, function (item, index) {\n            var opt = item.option;\n\n            zrUtil.assert(\n                !opt || opt.id == null || !idMap[opt.id] || idMap[opt.id] === item,\n                'id duplicates: ' + (opt && opt.id)\n            );\n\n            opt && opt.id != null && (idMap[opt.id] = item);\n            !item.keyInfo && (item.keyInfo = {});\n        });\n\n        // Make name and id.\n        each(mapResult, function (item, index) {\n            var existCpt = item.exist;\n            var opt = item.option;\n            var keyInfo = item.keyInfo;\n\n            if (!isObject(opt)) {\n                return;\n            }\n\n            // name can be overwitten. Consider case: axis.name = '20km'.\n            // But id generated by name will not be changed, which affect\n            // only in that case: setOption with 'not merge mode' and view\n            // instance will be recreated, which can be accepted.\n            keyInfo.name = opt.name != null\n                ? opt.name + ''\n                : existCpt\n                ? existCpt.name\n                : '\\0-';\n\n            if (existCpt) {\n                keyInfo.id = existCpt.id;\n            }\n            else if (opt.id != null) {\n                keyInfo.id = opt.id + '';\n            }\n            else {\n                // Consider this situatoin:\n                //  optionA: [{name: 'a'}, {name: 'a'}, {..}]\n                //  optionB [{..}, {name: 'a'}, {name: 'a'}]\n                // Series with the same name between optionA and optionB\n                // should be mapped.\n                var idNum = 0;\n                do {\n                    keyInfo.id = '\\0' + keyInfo.name + '\\0' + idNum++;\n                }\n                while (idMap[keyInfo.id]);\n            }\n\n            idMap[keyInfo.id] = item;\n        });\n    };\n\n    /**\n     * @public\n     * @param {Object} cptOption\n     * @return {boolean}\n     */\n    modelUtil.isIdInner = function (cptOption) {\n        return isObject(cptOption)\n            && cptOption.id\n            && (cptOption.id + '').indexOf('\\0_ec_\\0') === 0;\n    };\n\n    /**\n     * A helper for removing duplicate items between batchA and batchB,\n     * and in themselves, and categorize by series.\n     *\n     * @param {Array.<Object>} batchA Like: [{seriesId: 2, dataIndex: [32, 4, 5]}, ...]\n     * @param {Array.<Object>} batchB Like: [{seriesId: 2, dataIndex: [32, 4, 5]}, ...]\n     * @return {Array.<Array.<Object>, Array.<Object>>} result: [resultBatchA, resultBatchB]\n     */\n    modelUtil.compressBatches = function (batchA, batchB) {\n        var mapA = {};\n        var mapB = {};\n\n        makeMap(batchA || [], mapA);\n        makeMap(batchB || [], mapB, mapA);\n\n        return [mapToArray(mapA), mapToArray(mapB)];\n\n        function makeMap(sourceBatch, map, otherMap) {\n            for (var i = 0, len = sourceBatch.length; i < len; i++) {\n                var seriesId = sourceBatch[i].seriesId;\n                var dataIndices = modelUtil.normalizeToArray(sourceBatch[i].dataIndex);\n                var otherDataIndices = otherMap && otherMap[seriesId];\n\n                for (var j = 0, lenj = dataIndices.length; j < lenj; j++) {\n                    var dataIndex = dataIndices[j];\n\n                    if (otherDataIndices && otherDataIndices[dataIndex]) {\n                        otherDataIndices[dataIndex] = null;\n                    }\n                    else {\n                        (map[seriesId] || (map[seriesId] = {}))[dataIndex] = 1;\n                    }\n                }\n            }\n        }\n\n        function mapToArray(map, isData) {\n            var result = [];\n            for (var i in map) {\n                if (map.hasOwnProperty(i) && map[i] != null) {\n                    if (isData) {\n                        result.push(+i);\n                    }\n                    else {\n                        var dataIndices = mapToArray(map[i], true);\n                        dataIndices.length && result.push({seriesId: i, dataIndex: dataIndices});\n                    }\n                }\n            }\n            return result;\n        }\n    };\n\n    /**\n     * @param {module:echarts/data/List} data\n     * @param {Object} payload Contains dataIndex (means rawIndex) / dataIndexInside / name\n     *                         each of which can be Array or primary type.\n     * @return {number|Array.<number>} dataIndex If not found, return undefined/null.\n     */\n    modelUtil.queryDataIndex = function (data, payload) {\n        if (payload.dataIndexInside != null) {\n            return payload.dataIndexInside;\n        }\n        else if (payload.dataIndex != null) {\n            return zrUtil.isArray(payload.dataIndex)\n                ? zrUtil.map(payload.dataIndex, function (value) {\n                    return data.indexOfRawIndex(value);\n                })\n                : data.indexOfRawIndex(payload.dataIndex);\n        }\n        else if (payload.name != null) {\n            return zrUtil.isArray(payload.name)\n                ? zrUtil.map(payload.name, function (value) {\n                    return data.indexOfName(value);\n                })\n                : data.indexOfName(payload.name);\n        }\n    };\n\n    /**\n     * @param {module:echarts/model/Global} ecModel\n     * @param {string|Object} finder\n     *        If string, e.g., 'geo', means {geoIndex: 0}.\n     *        If Object, could contain some of these properties below:\n     *        {\n     *            seriesIndex, seriesId, seriesName,\n     *            geoIndex, geoId, goeName,\n     *            bmapIndex, bmapId, bmapName,\n     *            xAxisIndex, xAxisId, xAxisName,\n     *            yAxisIndex, yAxisId, yAxisName,\n     *            gridIndex, gridId, gridName,\n     *            ... (can be extended)\n     *        }\n     *        Each properties can be number|string|Array.<number>|Array.<string>\n     *        For example, a finder could be\n     *        {\n     *            seriesIndex: 3,\n     *            geoId: ['aa', 'cc'],\n     *            gridName: ['xx', 'rr']\n     *        }\n     * @param {Object} [opt]\n     * @param {string} [opt.defaultMainType]\n     * @return {Object} result like:\n     *        {\n     *            seriesModels: [seriesModel1, seriesModel2],\n     *            seriesModel: seriesModel1, // The first model\n     *            geoModels: [geoModel1, geoModel2],\n     *            geoModel: geoModel1, // The first model\n     *            ...\n     *        }\n     */\n    modelUtil.parseFinder = function (ecModel, finder, opt) {\n        if (zrUtil.isString(finder)) {\n            var obj = {};\n            obj[finder + 'Index'] = 0;\n            finder = obj;\n        }\n\n        var defaultMainType = opt && opt.defaultMainType;\n        if (defaultMainType\n            && !has(finder, defaultMainType + 'Index')\n            && !has(finder, defaultMainType + 'Id')\n            && !has(finder, defaultMainType + 'Name')\n        ) {\n            finder[defaultMainType + 'Index'] = 0;\n        }\n\n        var result = {};\n\n        each(finder, function (value, key) {\n            var value = finder[key];\n\n            // Exclude 'dataIndex' and other illgal keys.\n            if (key === 'dataIndex' || key === 'dataIndexInside') {\n                result[key] = value;\n                return;\n            }\n\n            var parsedKey = key.match(/^(\\w+)(Index|Id|Name)$/) || [];\n            var mainType = parsedKey[1];\n            var queryType = parsedKey[2];\n\n            if (!mainType || !queryType) {\n                return;\n            }\n\n            var queryParam = {mainType: mainType};\n            queryParam[queryType.toLowerCase()] = value;\n            var models = ecModel.queryComponents(queryParam);\n            result[mainType + 'Models'] = models;\n            result[mainType + 'Model'] = models[0];\n        });\n\n        return result;\n    };\n\n    function has(obj, prop) {\n        return obj && obj.hasOwnProperty(prop);\n    }\n\n    module.exports = modelUtil;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/util/model.js\n// module id = 469\n// module chunks = 0 1","/**\n * @module echarts/model/Model\n */\n\n\n    var zrUtil = require('zrender/lib/core/util');\n    var clazzUtil = require('../util/clazz');\n    var env = require('zrender/lib/core/env');\n\n    /**\n     * @alias module:echarts/model/Model\n     * @constructor\n     * @param {Object} option\n     * @param {module:echarts/model/Model} [parentModel]\n     * @param {module:echarts/model/Global} [ecModel]\n     */\n    function Model(option, parentModel, ecModel) {\n        /**\n         * @type {module:echarts/model/Model}\n         * @readOnly\n         */\n        this.parentModel = parentModel;\n\n        /**\n         * @type {module:echarts/model/Global}\n         * @readOnly\n         */\n        this.ecModel = ecModel;\n\n        /**\n         * @type {Object}\n         * @protected\n         */\n        this.option = option;\n\n        // Simple optimization\n        // if (this.init) {\n        //     if (arguments.length <= 4) {\n        //         this.init(option, parentModel, ecModel, extraOpt);\n        //     }\n        //     else {\n        //         this.init.apply(this, arguments);\n        //     }\n        // }\n    }\n\n    Model.prototype = {\n\n        constructor: Model,\n\n        /**\n         * Model 的初始化函数\n         * @param {Object} option\n         */\n        init: null,\n\n        /**\n         * 从新的 Option merge\n         */\n        mergeOption: function (option) {\n            zrUtil.merge(this.option, option, true);\n        },\n\n        /**\n         * @param {string|Array.<string>} path\n         * @param {boolean} [ignoreParent=false]\n         * @return {*}\n         */\n        get: function (path, ignoreParent) {\n            if (path == null) {\n                return this.option;\n            }\n\n            return doGet(\n                this.option,\n                this.parsePath(path),\n                !ignoreParent && getParent(this, path)\n            );\n        },\n\n        /**\n         * @param {string} key\n         * @param {boolean} [ignoreParent=false]\n         * @return {*}\n         */\n        getShallow: function (key, ignoreParent) {\n            var option = this.option;\n\n            var val = option == null ? option : option[key];\n            var parentModel = !ignoreParent && getParent(this, key);\n            if (val == null && parentModel) {\n                val = parentModel.getShallow(key);\n            }\n            return val;\n        },\n\n        /**\n         * @param {string|Array.<string>} path\n         * @param {module:echarts/model/Model} [parentModel]\n         * @return {module:echarts/model/Model}\n         */\n        getModel: function (path, parentModel) {\n            var obj = path == null\n                ? this.option\n                : doGet(this.option, path = this.parsePath(path));\n\n            var thisParentModel;\n            parentModel = parentModel || (\n                (thisParentModel = getParent(this, path))\n                    && thisParentModel.getModel(path)\n            );\n\n            return new Model(obj, parentModel, this.ecModel);\n        },\n\n        /**\n         * If model has option\n         */\n        isEmpty: function () {\n            return this.option == null;\n        },\n\n        restoreData: function () {},\n\n        // Pending\n        clone: function () {\n            var Ctor = this.constructor;\n            return new Ctor(zrUtil.clone(this.option));\n        },\n\n        setReadOnly: function (properties) {\n            clazzUtil.setReadOnly(this, properties);\n        },\n\n        // If path is null/undefined, return null/undefined.\n        parsePath: function(path) {\n            if (typeof path === 'string') {\n                path = path.split('.');\n            }\n            return path;\n        },\n\n        /**\n         * @param {Function} getParentMethod\n         *        param {Array.<string>|string} path\n         *        return {module:echarts/model/Model}\n         */\n        customizeGetParent: function (getParentMethod) {\n            clazzUtil.set(this, 'getParent', getParentMethod);\n        },\n\n        isAnimationEnabled: function () {\n            if (!env.node) {\n                if (this.option.animation != null) {\n                    return !!this.option.animation;\n                }\n                else if (this.parentModel) {\n                    return this.parentModel.isAnimationEnabled();\n                }\n            }\n        }\n    };\n\n    function doGet(obj, pathArr, parentModel) {\n        for (var i = 0; i < pathArr.length; i++) {\n            // Ignore empty\n            if (!pathArr[i]) {\n                continue;\n            }\n            // obj could be number/string/... (like 0)\n            obj = (obj && typeof obj === 'object') ? obj[pathArr[i]] : null;\n            if (obj == null) {\n                break;\n            }\n        }\n        if (obj == null && parentModel) {\n            obj = parentModel.get(pathArr);\n        }\n        return obj;\n    }\n\n    function getParent(model, path) {\n        var getParentMethod = clazzUtil.get(model, 'getParent');\n        return getParentMethod ? getParentMethod.call(model, path) : model.parentModel;\n    }\n\n    // Enable Model.extend.\n    clazzUtil.enableClassExtend(Model);\n\n    var mixin = zrUtil.mixin;\n    mixin(Model, require('./mixin/lineStyle'));\n    mixin(Model, require('./mixin/areaStyle'));\n    mixin(Model, require('./mixin/textStyle'));\n    mixin(Model, require('./mixin/itemStyle'));\n\n    module.exports = Model;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/model/Model.js\n// module id = 470\n// module chunks = 0 1","\n\n    var zrUtil = require('zrender/lib/core/util');\n\n    var clazz = {};\n\n    var TYPE_DELIMITER = '.';\n    var IS_CONTAINER = '___EC__COMPONENT__CONTAINER___';\n    var MEMBER_PRIFIX = '\\0ec_\\0';\n\n    /**\n     * Hide private class member.\n     * The same behavior as `host[name] = value;` (can be right-value)\n     * @public\n     */\n    clazz.set = function (host, name, value) {\n        return (host[MEMBER_PRIFIX + name] = value);\n    };\n\n    /**\n     * Hide private class member.\n     * The same behavior as `host[name];`\n     * @public\n     */\n    clazz.get = function (host, name) {\n        return host[MEMBER_PRIFIX + name];\n    };\n\n    /**\n     * For hidden private class member.\n     * The same behavior as `host.hasOwnProperty(name);`\n     * @public\n     */\n    clazz.hasOwn = function (host, name) {\n        return host.hasOwnProperty(MEMBER_PRIFIX + name);\n    };\n\n    /**\n     * @public\n     */\n    var parseClassType = clazz.parseClassType = function (componentType) {\n        var ret = {main: '', sub: ''};\n        if (componentType) {\n            componentType = componentType.split(TYPE_DELIMITER);\n            ret.main = componentType[0] || '';\n            ret.sub = componentType[1] || '';\n        }\n        return ret;\n    };\n\n    /**\n     * @public\n     */\n    function checkClassType(componentType) {\n        zrUtil.assert(\n            /^[a-zA-Z0-9_]+([.][a-zA-Z0-9_]+)?$/.test(componentType),\n            'componentType \"' + componentType + '\" illegal'\n        );\n    }\n\n    /**\n     * @public\n     */\n    clazz.enableClassExtend = function (RootClass, mandatoryMethods) {\n\n        RootClass.$constructor = RootClass;\n        RootClass.extend = function (proto) {\n\n            if (__DEV__) {\n                zrUtil.each(mandatoryMethods, function (method) {\n                    if (!proto[method]) {\n                        console.warn(\n                            'Method `' + method + '` should be implemented'\n                            + (proto.type ? ' in ' + proto.type : '') + '.'\n                        );\n                    }\n                });\n            }\n\n            var superClass = this;\n            var ExtendedClass = function () {\n                if (!proto.$constructor) {\n                    superClass.apply(this, arguments);\n                }\n                else {\n                    proto.$constructor.apply(this, arguments);\n                }\n            };\n\n            zrUtil.extend(ExtendedClass.prototype, proto);\n\n            ExtendedClass.extend = this.extend;\n            ExtendedClass.superCall = superCall;\n            ExtendedClass.superApply = superApply;\n            zrUtil.inherits(ExtendedClass, this);\n            ExtendedClass.superClass = superClass;\n\n            return ExtendedClass;\n        };\n    };\n\n    // superCall should have class info, which can not be fetch from 'this'.\n    // Consider this case:\n    // class A has method f,\n    // class B inherits class A, overrides method f, f call superApply('f'),\n    // class C inherits class B, do not overrides method f,\n    // then when method of class C is called, dead loop occured.\n    function superCall(context, methodName) {\n        var args = zrUtil.slice(arguments, 2);\n        return this.superClass.prototype[methodName].apply(context, args);\n    }\n\n    function superApply(context, methodName, args) {\n        return this.superClass.prototype[methodName].apply(context, args);\n    }\n\n    /**\n     * @param {Object} entity\n     * @param {Object} options\n     * @param {boolean} [options.registerWhenExtend]\n     * @public\n     */\n    clazz.enableClassManagement = function (entity, options) {\n        options = options || {};\n\n        /**\n         * Component model classes\n         * key: componentType,\n         * value:\n         *     componentClass, when componentType is 'xxx'\n         *     or Object.<subKey, componentClass>, when componentType is 'xxx.yy'\n         * @type {Object}\n         */\n        var storage = {};\n\n        entity.registerClass = function (Clazz, componentType) {\n            if (componentType) {\n                checkClassType(componentType);\n                componentType = parseClassType(componentType);\n\n                if (!componentType.sub) {\n                    if (__DEV__) {\n                        if (storage[componentType.main]) {\n                            console.warn(componentType.main + ' exists.');\n                        }\n                    }\n                    storage[componentType.main] = Clazz;\n                }\n                else if (componentType.sub !== IS_CONTAINER) {\n                    var container = makeContainer(componentType);\n                    container[componentType.sub] = Clazz;\n                }\n            }\n            return Clazz;\n        };\n\n        entity.getClass = function (componentMainType, subType, throwWhenNotFound) {\n            var Clazz = storage[componentMainType];\n\n            if (Clazz && Clazz[IS_CONTAINER]) {\n                Clazz = subType ? Clazz[subType] : null;\n            }\n\n            if (throwWhenNotFound && !Clazz) {\n                throw new Error(\n                    !subType\n                        ? componentMainType + '.' + 'type should be specified.'\n                        : 'Component ' + componentMainType + '.' + (subType || '') + ' not exists. Load it first.'\n                );\n            }\n\n            return Clazz;\n        };\n\n        entity.getClassesByMainType = function (componentType) {\n            componentType = parseClassType(componentType);\n\n            var result = [];\n            var obj = storage[componentType.main];\n\n            if (obj && obj[IS_CONTAINER]) {\n                zrUtil.each(obj, function (o, type) {\n                    type !== IS_CONTAINER && result.push(o);\n                });\n            }\n            else {\n                result.push(obj);\n            }\n\n            return result;\n        };\n\n        entity.hasClass = function (componentType) {\n            // Just consider componentType.main.\n            componentType = parseClassType(componentType);\n            return !!storage[componentType.main];\n        };\n\n        /**\n         * @return {Array.<string>} Like ['aa', 'bb'], but can not be ['aa.xx']\n         */\n        entity.getAllClassMainTypes = function () {\n            var types = [];\n            zrUtil.each(storage, function (obj, type) {\n                types.push(type);\n            });\n            return types;\n        };\n\n        /**\n         * If a main type is container and has sub types\n         * @param  {string}  mainType\n         * @return {boolean}\n         */\n        entity.hasSubTypes = function (componentType) {\n            componentType = parseClassType(componentType);\n            var obj = storage[componentType.main];\n            return obj && obj[IS_CONTAINER];\n        };\n\n        entity.parseClassType = parseClassType;\n\n        function makeContainer(componentType) {\n            var container = storage[componentType.main];\n            if (!container || !container[IS_CONTAINER]) {\n                container = storage[componentType.main] = {};\n                container[IS_CONTAINER] = true;\n            }\n            return container;\n        }\n\n        if (options.registerWhenExtend) {\n            var originalExtend = entity.extend;\n            if (originalExtend) {\n                entity.extend = function (proto) {\n                    var ExtendedClass = originalExtend.call(this, proto);\n                    return entity.registerClass(ExtendedClass, proto.type);\n                };\n            }\n        }\n\n        return entity;\n    };\n\n    /**\n     * @param {string|Array.<string>} properties\n     */\n    clazz.setReadOnly = function (obj, properties) {\n        // FIXME It seems broken in IE8 simulation of IE11\n        // if (!zrUtil.isArray(properties)) {\n        //     properties = properties != null ? [properties] : [];\n        // }\n        // zrUtil.each(properties, function (prop) {\n        //     var value = obj[prop];\n\n        //     Object.defineProperty\n        //         && Object.defineProperty(obj, prop, {\n        //             value: value, writable: false\n        //         });\n        //     zrUtil.isArray(obj[prop])\n        //         && Object.freeze\n        //         && Object.freeze(obj[prop]);\n        // });\n    };\n\n    module.exports = clazz;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/util/clazz.js\n// module id = 471\n// module chunks = 0 1","/**\n * Component model\n *\n * @module echarts/model/Component\n */\n\n\n    var Model = require('./Model');\n    var zrUtil = require('zrender/lib/core/util');\n    var arrayPush = Array.prototype.push;\n    var componentUtil = require('../util/component');\n    var clazzUtil = require('../util/clazz');\n    var layout = require('../util/layout');\n\n    /**\n     * @alias module:echarts/model/Component\n     * @constructor\n     * @param {Object} option\n     * @param {module:echarts/model/Model} parentModel\n     * @param {module:echarts/model/Model} ecModel\n     */\n    var ComponentModel = Model.extend({\n\n        type: 'component',\n\n        /**\n         * @readOnly\n         * @type {string}\n         */\n        id: '',\n\n        /**\n         * @readOnly\n         */\n        name: '',\n\n        /**\n         * @readOnly\n         * @type {string}\n         */\n        mainType: '',\n\n        /**\n         * @readOnly\n         * @type {string}\n         */\n        subType: '',\n\n        /**\n         * @readOnly\n         * @type {number}\n         */\n        componentIndex: 0,\n\n        /**\n         * @type {Object}\n         * @protected\n         */\n        defaultOption: null,\n\n        /**\n         * @type {module:echarts/model/Global}\n         * @readOnly\n         */\n        ecModel: null,\n\n        /**\n         * key: componentType\n         * value:  Component model list, can not be null.\n         * @type {Object.<string, Array.<module:echarts/model/Model>>}\n         * @readOnly\n         */\n        dependentModels: [],\n\n        /**\n         * @type {string}\n         * @readOnly\n         */\n        uid: null,\n\n        /**\n         * Support merge layout params.\n         * Only support 'box' now (left/right/top/bottom/width/height).\n         * @type {string|Object} Object can be {ignoreSize: true}\n         * @readOnly\n         */\n        layoutMode: null,\n\n        $constructor: function (option, parentModel, ecModel, extraOpt) {\n            Model.call(this, option, parentModel, ecModel, extraOpt);\n\n            this.uid = componentUtil.getUID('componentModel');\n        },\n\n\n        init: function (option, parentModel, ecModel, extraOpt) {\n            this.mergeDefaultAndTheme(option, ecModel);\n        },\n\n        mergeDefaultAndTheme: function (option, ecModel) {\n            var layoutMode = this.layoutMode;\n            var inputPositionParams = layoutMode\n                ? layout.getLayoutParams(option) : {};\n\n            var themeModel = ecModel.getTheme();\n            zrUtil.merge(option, themeModel.get(this.mainType));\n            zrUtil.merge(option, this.getDefaultOption());\n\n            if (layoutMode) {\n                layout.mergeLayoutParam(option, inputPositionParams, layoutMode);\n            }\n        },\n\n        mergeOption: function (option, extraOpt) {\n            zrUtil.merge(this.option, option, true);\n\n            var layoutMode = this.layoutMode;\n            if (layoutMode) {\n                layout.mergeLayoutParam(this.option, option, layoutMode);\n            }\n        },\n\n        // Hooker after init or mergeOption\n        optionUpdated: function (newCptOption, isInit) {},\n\n        getDefaultOption: function () {\n            if (!clazzUtil.hasOwn(this, '__defaultOption')) {\n                var optList = [];\n                var Class = this.constructor;\n                while (Class) {\n                    var opt = Class.prototype.defaultOption;\n                    opt && optList.push(opt);\n                    Class = Class.superClass;\n                }\n\n                var defaultOption = {};\n                for (var i = optList.length - 1; i >= 0; i--) {\n                    defaultOption = zrUtil.merge(defaultOption, optList[i], true);\n                }\n                clazzUtil.set(this, '__defaultOption', defaultOption);\n            }\n            return clazzUtil.get(this, '__defaultOption');\n        },\n\n        getReferringComponents: function (mainType) {\n            return this.ecModel.queryComponents({\n                mainType: mainType,\n                index: this.get(mainType + 'Index', true),\n                id: this.get(mainType + 'Id', true)\n            });\n        }\n\n    });\n\n    // Reset ComponentModel.extend, add preConstruct.\n    // clazzUtil.enableClassExtend(\n    //     ComponentModel,\n    //     function (option, parentModel, ecModel, extraOpt) {\n    //         // Set dependentModels, componentIndex, name, id, mainType, subType.\n    //         zrUtil.extend(this, extraOpt);\n\n    //         this.uid = componentUtil.getUID('componentModel');\n\n    //         // this.setReadOnly([\n    //         //     'type', 'id', 'uid', 'name', 'mainType', 'subType',\n    //         //     'dependentModels', 'componentIndex'\n    //         // ]);\n    //     }\n    // );\n\n    // Add capability of registerClass, getClass, hasClass, registerSubTypeDefaulter and so on.\n    clazzUtil.enableClassManagement(\n        ComponentModel, {registerWhenExtend: true}\n    );\n    componentUtil.enableSubTypeDefaulter(ComponentModel);\n\n    // Add capability of ComponentModel.topologicalTravel.\n    componentUtil.enableTopologicalTravel(ComponentModel, getDependencies);\n\n    function getDependencies(componentType) {\n        var deps = [];\n        zrUtil.each(ComponentModel.getClassesByMainType(componentType), function (Clazz) {\n            arrayPush.apply(deps, Clazz.prototype.dependencies || []);\n        });\n        // Ensure main type\n        return zrUtil.map(deps, function (type) {\n            return clazzUtil.parseClassType(type).main;\n        });\n    }\n\n    zrUtil.mixin(ComponentModel, require('./mixin/boxLayout'));\n\n    module.exports = ComponentModel;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/model/Component.js\n// module id = 472\n// module chunks = 0 1","var BoundingRect = require(\"../core/BoundingRect\");\n\nvar imageHelper = require(\"../graphic/helper/image\");\n\nvar _util = require(\"../core/util\");\n\nvar getContext = _util.getContext;\nvar extend = _util.extend;\nvar retrieve2 = _util.retrieve2;\nvar retrieve3 = _util.retrieve3;\nvar textWidthCache = {};\nvar textWidthCacheCounter = 0;\nvar TEXT_CACHE_MAX = 5000;\nvar STYLE_REG = /\\{([a-zA-Z0-9_]+)\\|([^}]*)\\}/g;\nvar DEFAULT_FONT = '12px sans-serif'; // Avoid assign to an exported variable, for transforming to cjs.\n\nvar methods = {};\n\nfunction $override(name, fn) {\n  methods[name] = fn;\n}\n/**\n * @public\n * @param {string} text\n * @param {string} font\n * @return {number} width\n */\n\n\nfunction getWidth(text, font) {\n  font = font || DEFAULT_FONT;\n  var key = text + ':' + font;\n\n  if (textWidthCache[key]) {\n    return textWidthCache[key];\n  }\n\n  var textLines = (text + '').split('\\n');\n  var width = 0;\n\n  for (var i = 0, l = textLines.length; i < l; i++) {\n    // textContain.measureText may be overrided in SVG or VML\n    width = Math.max(measureText(textLines[i], font).width, width);\n  }\n\n  if (textWidthCacheCounter > TEXT_CACHE_MAX) {\n    textWidthCacheCounter = 0;\n    textWidthCache = {};\n  }\n\n  textWidthCacheCounter++;\n  textWidthCache[key] = width;\n  return width;\n}\n/**\n * @public\n * @param {string} text\n * @param {string} font\n * @param {string} [textAlign='left']\n * @param {string} [textVerticalAlign='top']\n * @param {Array.<number>} [textPadding]\n * @param {Object} [rich]\n * @param {Object} [truncate]\n * @return {Object} {x, y, width, height, lineHeight}\n */\n\n\nfunction getBoundingRect(text, font, textAlign, textVerticalAlign, textPadding, rich, truncate) {\n  return rich ? getRichTextRect(text, font, textAlign, textVerticalAlign, textPadding, rich, truncate) : getPlainTextRect(text, font, textAlign, textVerticalAlign, textPadding, truncate);\n}\n\nfunction getPlainTextRect(text, font, textAlign, textVerticalAlign, textPadding, truncate) {\n  var contentBlock = parsePlainText(text, font, textPadding, truncate);\n  var outerWidth = getWidth(text, font);\n\n  if (textPadding) {\n    outerWidth += textPadding[1] + textPadding[3];\n  }\n\n  var outerHeight = contentBlock.outerHeight;\n  var x = adjustTextX(0, outerWidth, textAlign);\n  var y = adjustTextY(0, outerHeight, textVerticalAlign);\n  var rect = new BoundingRect(x, y, outerWidth, outerHeight);\n  rect.lineHeight = contentBlock.lineHeight;\n  return rect;\n}\n\nfunction getRichTextRect(text, font, textAlign, textVerticalAlign, textPadding, rich, truncate) {\n  var contentBlock = parseRichText(text, {\n    rich: rich,\n    truncate: truncate,\n    font: font,\n    textAlign: textAlign,\n    textPadding: textPadding\n  });\n  var outerWidth = contentBlock.outerWidth;\n  var outerHeight = contentBlock.outerHeight;\n  var x = adjustTextX(0, outerWidth, textAlign);\n  var y = adjustTextY(0, outerHeight, textVerticalAlign);\n  return new BoundingRect(x, y, outerWidth, outerHeight);\n}\n/**\n * @public\n * @param {number} x\n * @param {number} width\n * @param {string} [textAlign='left']\n * @return {number} Adjusted x.\n */\n\n\nfunction adjustTextX(x, width, textAlign) {\n  // FIXME Right to left language\n  if (textAlign === 'right') {\n    x -= width;\n  } else if (textAlign === 'center') {\n    x -= width / 2;\n  }\n\n  return x;\n}\n/**\n * @public\n * @param {number} y\n * @param {number} height\n * @param {string} [textVerticalAlign='top']\n * @return {number} Adjusted y.\n */\n\n\nfunction adjustTextY(y, height, textVerticalAlign) {\n  if (textVerticalAlign === 'middle') {\n    y -= height / 2;\n  } else if (textVerticalAlign === 'bottom') {\n    y -= height;\n  }\n\n  return y;\n}\n/**\n * @public\n * @param {stirng} textPosition\n * @param {Object} rect {x, y, width, height}\n * @param {number} distance\n * @return {Object} {x, y, textAlign, textVerticalAlign}\n */\n\n\nfunction adjustTextPositionOnRect(textPosition, rect, distance) {\n  var x = rect.x;\n  var y = rect.y;\n  var height = rect.height;\n  var width = rect.width;\n  var halfHeight = height / 2;\n  var textAlign = 'left';\n  var textVerticalAlign = 'top';\n\n  switch (textPosition) {\n    case 'left':\n      x -= distance;\n      y += halfHeight;\n      textAlign = 'right';\n      textVerticalAlign = 'middle';\n      break;\n\n    case 'right':\n      x += distance + width;\n      y += halfHeight;\n      textVerticalAlign = 'middle';\n      break;\n\n    case 'top':\n      x += width / 2;\n      y -= distance;\n      textAlign = 'center';\n      textVerticalAlign = 'bottom';\n      break;\n\n    case 'bottom':\n      x += width / 2;\n      y += height + distance;\n      textAlign = 'center';\n      break;\n\n    case 'inside':\n      x += width / 2;\n      y += halfHeight;\n      textAlign = 'center';\n      textVerticalAlign = 'middle';\n      break;\n\n    case 'insideLeft':\n      x += distance;\n      y += halfHeight;\n      textVerticalAlign = 'middle';\n      break;\n\n    case 'insideRight':\n      x += width - distance;\n      y += halfHeight;\n      textAlign = 'right';\n      textVerticalAlign = 'middle';\n      break;\n\n    case 'insideTop':\n      x += width / 2;\n      y += distance;\n      textAlign = 'center';\n      break;\n\n    case 'insideBottom':\n      x += width / 2;\n      y += height - distance;\n      textAlign = 'center';\n      textVerticalAlign = 'bottom';\n      break;\n\n    case 'insideTopLeft':\n      x += distance;\n      y += distance;\n      break;\n\n    case 'insideTopRight':\n      x += width - distance;\n      y += distance;\n      textAlign = 'right';\n      break;\n\n    case 'insideBottomLeft':\n      x += distance;\n      y += height - distance;\n      textVerticalAlign = 'bottom';\n      break;\n\n    case 'insideBottomRight':\n      x += width - distance;\n      y += height - distance;\n      textAlign = 'right';\n      textVerticalAlign = 'bottom';\n      break;\n  }\n\n  return {\n    x: x,\n    y: y,\n    textAlign: textAlign,\n    textVerticalAlign: textVerticalAlign\n  };\n}\n/**\n * Show ellipsis if overflow.\n *\n * @public\n * @param  {string} text\n * @param  {string} containerWidth\n * @param  {string} font\n * @param  {number} [ellipsis='...']\n * @param  {Object} [options]\n * @param  {number} [options.maxIterations=3]\n * @param  {number} [options.minChar=0] If truncate result are less\n *                  then minChar, ellipsis will not show, which is\n *                  better for user hint in some cases.\n * @param  {number} [options.placeholder=''] When all truncated, use the placeholder.\n * @return {string}\n */\n\n\nfunction truncateText(text, containerWidth, font, ellipsis, options) {\n  if (!containerWidth) {\n    return '';\n  }\n\n  var textLines = (text + '').split('\\n');\n  options = prepareTruncateOptions(containerWidth, font, ellipsis, options); // FIXME\n  // It is not appropriate that every line has '...' when truncate multiple lines.\n\n  for (var i = 0, len = textLines.length; i < len; i++) {\n    textLines[i] = truncateSingleLine(textLines[i], options);\n  }\n\n  return textLines.join('\\n');\n}\n\nfunction prepareTruncateOptions(containerWidth, font, ellipsis, options) {\n  options = extend({}, options);\n  options.font = font;\n  var ellipsis = retrieve2(ellipsis, '...');\n  options.maxIterations = retrieve2(options.maxIterations, 2);\n  var minChar = options.minChar = retrieve2(options.minChar, 0); // FIXME\n  // Other languages?\n\n  options.cnCharWidth = getWidth('国', font); // FIXME\n  // Consider proportional font?\n\n  var ascCharWidth = options.ascCharWidth = getWidth('a', font);\n  options.placeholder = retrieve2(options.placeholder, ''); // Example 1: minChar: 3, text: 'asdfzxcv', truncate result: 'asdf', but not: 'a...'.\n  // Example 2: minChar: 3, text: '维度', truncate result: '维', but not: '...'.\n\n  var contentWidth = containerWidth = Math.max(0, containerWidth - 1); // Reserve some gap.\n\n  for (var i = 0; i < minChar && contentWidth >= ascCharWidth; i++) {\n    contentWidth -= ascCharWidth;\n  }\n\n  var ellipsisWidth = getWidth(ellipsis);\n\n  if (ellipsisWidth > contentWidth) {\n    ellipsis = '';\n    ellipsisWidth = 0;\n  }\n\n  contentWidth = containerWidth - ellipsisWidth;\n  options.ellipsis = ellipsis;\n  options.ellipsisWidth = ellipsisWidth;\n  options.contentWidth = contentWidth;\n  options.containerWidth = containerWidth;\n  return options;\n}\n\nfunction truncateSingleLine(textLine, options) {\n  var containerWidth = options.containerWidth;\n  var font = options.font;\n  var contentWidth = options.contentWidth;\n\n  if (!containerWidth) {\n    return '';\n  }\n\n  var lineWidth = getWidth(textLine, font);\n\n  if (lineWidth <= containerWidth) {\n    return textLine;\n  }\n\n  for (var j = 0;; j++) {\n    if (lineWidth <= contentWidth || j >= options.maxIterations) {\n      textLine += options.ellipsis;\n      break;\n    }\n\n    var subLength = j === 0 ? estimateLength(textLine, contentWidth, options.ascCharWidth, options.cnCharWidth) : lineWidth > 0 ? Math.floor(textLine.length * contentWidth / lineWidth) : 0;\n    textLine = textLine.substr(0, subLength);\n    lineWidth = getWidth(textLine, font);\n  }\n\n  if (textLine === '') {\n    textLine = options.placeholder;\n  }\n\n  return textLine;\n}\n\nfunction estimateLength(text, contentWidth, ascCharWidth, cnCharWidth) {\n  var width = 0;\n  var i = 0;\n\n  for (var len = text.length; i < len && width < contentWidth; i++) {\n    var charCode = text.charCodeAt(i);\n    width += 0 <= charCode && charCode <= 127 ? ascCharWidth : cnCharWidth;\n  }\n\n  return i;\n}\n/**\n * @public\n * @param {string} font\n * @return {number} line height\n */\n\n\nfunction getLineHeight(font) {\n  // FIXME A rough approach.\n  return getWidth('国', font);\n}\n/**\n * @public\n * @param {string} text\n * @param {string} font\n * @return {Object} width\n */\n\n\nfunction measureText(text, font) {\n  return methods.measureText(text, font);\n} // Avoid assign to an exported variable, for transforming to cjs.\n\n\nmethods.measureText = function (text, font) {\n  var ctx = getContext();\n  ctx.font = font || DEFAULT_FONT;\n  return ctx.measureText(text);\n};\n/**\n * @public\n * @param {string} text\n * @param {string} font\n * @param {Object} [truncate]\n * @return {Object} block: {lineHeight, lines, height, outerHeight}\n *  Notice: for performance, do not calculate outerWidth util needed.\n */\n\n\nfunction parsePlainText(text, font, padding, truncate) {\n  text != null && (text += '');\n  var lineHeight = getLineHeight(font);\n  var lines = text ? text.split('\\n') : [];\n  var height = lines.length * lineHeight;\n  var outerHeight = height;\n\n  if (padding) {\n    outerHeight += padding[0] + padding[2];\n  }\n\n  if (text && truncate) {\n    var truncOuterHeight = truncate.outerHeight;\n    var truncOuterWidth = truncate.outerWidth;\n\n    if (truncOuterHeight != null && outerHeight > truncOuterHeight) {\n      text = '';\n      lines = [];\n    } else if (truncOuterWidth != null) {\n      var options = prepareTruncateOptions(truncOuterWidth - (padding ? padding[1] + padding[3] : 0), font, truncate.ellipsis, {\n        minChar: truncate.minChar,\n        placeholder: truncate.placeholder\n      }); // FIXME\n      // It is not appropriate that every line has '...' when truncate multiple lines.\n\n      for (var i = 0, len = lines.length; i < len; i++) {\n        lines[i] = truncateSingleLine(lines[i], options);\n      }\n    }\n  }\n\n  return {\n    lines: lines,\n    height: height,\n    outerHeight: outerHeight,\n    lineHeight: lineHeight\n  };\n}\n/**\n * For example: 'some text {a|some text}other text{b|some text}xxx{c|}xxx'\n * Also consider 'bbbb{a|xxx\\nzzz}xxxx\\naaaa'.\n *\n * @public\n * @param {string} text\n * @param {Object} style\n * @return {Object} block\n * {\n *      width,\n *      height,\n *      lines: [{\n *          lineHeight,\n *          width,\n *          tokens: [[{\n *              styleName,\n *              text,\n *              width,      // include textPadding\n *              height,     // include textPadding\n *              textWidth, // pure text width\n *              textHeight, // pure text height\n *              lineHeihgt,\n *              font,\n *              textAlign,\n *              textVerticalAlign\n *          }], [...], ...]\n *      }, ...]\n * }\n * If styleName is undefined, it is plain text.\n */\n\n\nfunction parseRichText(text, style) {\n  var contentBlock = {\n    lines: [],\n    width: 0,\n    height: 0\n  };\n  text != null && (text += '');\n\n  if (!text) {\n    return contentBlock;\n  }\n\n  var lastIndex = STYLE_REG.lastIndex = 0;\n  var result;\n\n  while ((result = STYLE_REG.exec(text)) != null) {\n    var matchedIndex = result.index;\n\n    if (matchedIndex > lastIndex) {\n      pushTokens(contentBlock, text.substring(lastIndex, matchedIndex));\n    }\n\n    pushTokens(contentBlock, result[2], result[1]);\n    lastIndex = STYLE_REG.lastIndex;\n  }\n\n  if (lastIndex < text.length) {\n    pushTokens(contentBlock, text.substring(lastIndex, text.length));\n  }\n\n  var lines = contentBlock.lines;\n  var contentHeight = 0;\n  var contentWidth = 0; // For `textWidth: 100%`\n\n  var pendingList = [];\n  var stlPadding = style.textPadding;\n  var truncate = style.truncate;\n  var truncateWidth = truncate && truncate.outerWidth;\n  var truncateHeight = truncate && truncate.outerHeight;\n\n  if (stlPadding) {\n    truncateWidth != null && (truncateWidth -= stlPadding[1] + stlPadding[3]);\n    truncateHeight != null && (truncateHeight -= stlPadding[0] + stlPadding[2]);\n  } // Calculate layout info of tokens.\n\n\n  for (var i = 0; i < lines.length; i++) {\n    var line = lines[i];\n    var lineHeight = 0;\n    var lineWidth = 0;\n\n    for (var j = 0; j < line.tokens.length; j++) {\n      var token = line.tokens[j];\n      var tokenStyle = token.styleName && style.rich[token.styleName] || {}; // textPadding should not inherit from style.\n\n      var textPadding = token.textPadding = tokenStyle.textPadding; // textFont has been asigned to font by `normalizeStyle`.\n\n      var font = token.font = tokenStyle.font || style.font; // textHeight can be used when textVerticalAlign is specified in token.\n\n      var tokenHeight = token.textHeight = retrieve2( // textHeight should not be inherited, consider it can be specified\n      // as box height of the block.\n      tokenStyle.textHeight, getLineHeight(font));\n      textPadding && (tokenHeight += textPadding[0] + textPadding[2]);\n      token.height = tokenHeight;\n      token.lineHeight = retrieve3(tokenStyle.textLineHeight, style.textLineHeight, tokenHeight);\n      token.textAlign = tokenStyle && tokenStyle.textAlign || style.textAlign;\n      token.textVerticalAlign = tokenStyle && tokenStyle.textVerticalAlign || 'middle';\n\n      if (truncateHeight != null && contentHeight + token.lineHeight > truncateHeight) {\n        return {\n          lines: [],\n          width: 0,\n          height: 0\n        };\n      }\n\n      token.textWidth = getWidth(token.text, font);\n      var tokenWidth = tokenStyle.textWidth;\n      var tokenWidthNotSpecified = tokenWidth == null || tokenWidth === 'auto'; // Percent width, can be `100%`, can be used in drawing separate\n      // line when box width is needed to be auto.\n\n      if (typeof tokenWidth === 'string' && tokenWidth.charAt(tokenWidth.length - 1) === '%') {\n        token.percentWidth = tokenWidth;\n        pendingList.push(token);\n        tokenWidth = 0; // Do not truncate in this case, because there is no user case\n        // and it is too complicated.\n      } else {\n        if (tokenWidthNotSpecified) {\n          tokenWidth = token.textWidth; // FIXME: If image is not loaded and textWidth is not specified, calling\n          // `getBoundingRect()` will not get correct result.\n\n          var textBackgroundColor = tokenStyle.textBackgroundColor;\n          var bgImg = textBackgroundColor && textBackgroundColor.image; // Use cases:\n          // (1) If image is not loaded, it will be loaded at render phase and call\n          // `dirty()` and `textBackgroundColor.image` will be replaced with the loaded\n          // image, and then the right size will be calculated here at the next tick.\n          // See `graphic/helper/text.js`.\n          // (2) If image loaded, and `textBackgroundColor.image` is image src string,\n          // use `imageHelper.findExistImage` to find cached image.\n          // `imageHelper.findExistImage` will always be called here before\n          // `imageHelper.createOrUpdateImage` in `graphic/helper/text.js#renderRichText`\n          // which ensures that image will not be rendered before correct size calcualted.\n\n          if (bgImg) {\n            bgImg = imageHelper.findExistImage(bgImg);\n\n            if (imageHelper.isImageReady(bgImg)) {\n              tokenWidth = Math.max(tokenWidth, bgImg.width * tokenHeight / bgImg.height);\n            }\n          }\n        }\n\n        var paddingW = textPadding ? textPadding[1] + textPadding[3] : 0;\n        tokenWidth += paddingW;\n        var remianTruncWidth = truncateWidth != null ? truncateWidth - lineWidth : null;\n\n        if (remianTruncWidth != null && remianTruncWidth < tokenWidth) {\n          if (!tokenWidthNotSpecified || remianTruncWidth < paddingW) {\n            token.text = '';\n            token.textWidth = tokenWidth = 0;\n          } else {\n            token.text = truncateText(token.text, remianTruncWidth - paddingW, font, truncate.ellipsis, {\n              minChar: truncate.minChar\n            });\n            token.textWidth = getWidth(token.text, font);\n            tokenWidth = token.textWidth + paddingW;\n          }\n        }\n      }\n\n      lineWidth += token.width = tokenWidth;\n      tokenStyle && (lineHeight = Math.max(lineHeight, token.lineHeight));\n    }\n\n    line.width = lineWidth;\n    line.lineHeight = lineHeight;\n    contentHeight += lineHeight;\n    contentWidth = Math.max(contentWidth, lineWidth);\n  }\n\n  contentBlock.outerWidth = contentBlock.width = retrieve2(style.textWidth, contentWidth);\n  contentBlock.outerHeight = contentBlock.height = retrieve2(style.textHeight, contentHeight);\n\n  if (stlPadding) {\n    contentBlock.outerWidth += stlPadding[1] + stlPadding[3];\n    contentBlock.outerHeight += stlPadding[0] + stlPadding[2];\n  }\n\n  for (var i = 0; i < pendingList.length; i++) {\n    var token = pendingList[i];\n    var percentWidth = token.percentWidth; // Should not base on outerWidth, because token can not be placed out of padding.\n\n    token.width = parseInt(percentWidth, 10) / 100 * contentWidth;\n  }\n\n  return contentBlock;\n}\n\nfunction pushTokens(block, str, styleName) {\n  var isEmptyStr = str === '';\n  var strs = str.split('\\n');\n  var lines = block.lines;\n\n  for (var i = 0; i < strs.length; i++) {\n    var text = strs[i];\n    var token = {\n      styleName: styleName,\n      text: text,\n      isLineHolder: !text && !isEmptyStr\n    }; // The first token should be appended to the last line.\n\n    if (!i) {\n      var tokens = (lines[lines.length - 1] || (lines[0] = {\n        tokens: []\n      })).tokens; // Consider cases:\n      // (1) ''.split('\\n') => ['', '\\n', ''], the '' at the first item\n      // (which is a placeholder) should be replaced by new token.\n      // (2) A image backage, where token likes {a|}.\n      // (3) A redundant '' will affect textAlign in line.\n      // (4) tokens with the same tplName should not be merged, because\n      // they should be displayed in different box (with border and padding).\n\n      var tokensLen = tokens.length;\n      tokensLen === 1 && tokens[0].isLineHolder ? tokens[0] = token : // Consider text is '', only insert when it is the \"lineHolder\" or\n      // \"emptyStr\". Otherwise a redundant '' will affect textAlign in line.\n      (text || !tokensLen || isEmptyStr) && tokens.push(token);\n    } // Other tokens always start a new line.\n    else {\n        // If there is '', insert it as a placeholder.\n        lines.push({\n          tokens: [token]\n        });\n      }\n  }\n}\n\nfunction makeFont(style) {\n  // FIXME in node-canvas fontWeight is before fontStyle\n  // Use `fontSize` `fontFamily` to check whether font properties are defined.\n  return (style.fontSize || style.fontFamily) && [style.fontStyle, style.fontWeight, (style.fontSize || 12) + 'px', // If font properties are defined, `fontFamily` should not be ignored.\n  style.fontFamily || 'sans-serif'].join(' ') || style.textFont || style.font;\n}\n\nexports.DEFAULT_FONT = DEFAULT_FONT;\nexports.$override = $override;\nexports.getWidth = getWidth;\nexports.getBoundingRect = getBoundingRect;\nexports.adjustTextX = adjustTextX;\nexports.adjustTextY = adjustTextY;\nexports.adjustTextPositionOnRect = adjustTextPositionOnRect;\nexports.truncateText = truncateText;\nexports.getLineHeight = getLineHeight;\nexports.measureText = measureText;\nexports.parsePlainText = parsePlainText;\nexports.parseRichText = parseRichText;\nexports.makeFont = makeFont;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/contain/text.js\n// module id = 473\n// module chunks = 0 1","var LRU = require(\"../core/LRU\");\n\nvar kCSSColorTable = {\n  'transparent': [0, 0, 0, 0],\n  'aliceblue': [240, 248, 255, 1],\n  'antiquewhite': [250, 235, 215, 1],\n  'aqua': [0, 255, 255, 1],\n  'aquamarine': [127, 255, 212, 1],\n  'azure': [240, 255, 255, 1],\n  'beige': [245, 245, 220, 1],\n  'bisque': [255, 228, 196, 1],\n  'black': [0, 0, 0, 1],\n  'blanchedalmond': [255, 235, 205, 1],\n  'blue': [0, 0, 255, 1],\n  'blueviolet': [138, 43, 226, 1],\n  'brown': [165, 42, 42, 1],\n  'burlywood': [222, 184, 135, 1],\n  'cadetblue': [95, 158, 160, 1],\n  'chartreuse': [127, 255, 0, 1],\n  'chocolate': [210, 105, 30, 1],\n  'coral': [255, 127, 80, 1],\n  'cornflowerblue': [100, 149, 237, 1],\n  'cornsilk': [255, 248, 220, 1],\n  'crimson': [220, 20, 60, 1],\n  'cyan': [0, 255, 255, 1],\n  'darkblue': [0, 0, 139, 1],\n  'darkcyan': [0, 139, 139, 1],\n  'darkgoldenrod': [184, 134, 11, 1],\n  'darkgray': [169, 169, 169, 1],\n  'darkgreen': [0, 100, 0, 1],\n  'darkgrey': [169, 169, 169, 1],\n  'darkkhaki': [189, 183, 107, 1],\n  'darkmagenta': [139, 0, 139, 1],\n  'darkolivegreen': [85, 107, 47, 1],\n  'darkorange': [255, 140, 0, 1],\n  'darkorchid': [153, 50, 204, 1],\n  'darkred': [139, 0, 0, 1],\n  'darksalmon': [233, 150, 122, 1],\n  'darkseagreen': [143, 188, 143, 1],\n  'darkslateblue': [72, 61, 139, 1],\n  'darkslategray': [47, 79, 79, 1],\n  'darkslategrey': [47, 79, 79, 1],\n  'darkturquoise': [0, 206, 209, 1],\n  'darkviolet': [148, 0, 211, 1],\n  'deeppink': [255, 20, 147, 1],\n  'deepskyblue': [0, 191, 255, 1],\n  'dimgray': [105, 105, 105, 1],\n  'dimgrey': [105, 105, 105, 1],\n  'dodgerblue': [30, 144, 255, 1],\n  'firebrick': [178, 34, 34, 1],\n  'floralwhite': [255, 250, 240, 1],\n  'forestgreen': [34, 139, 34, 1],\n  'fuchsia': [255, 0, 255, 1],\n  'gainsboro': [220, 220, 220, 1],\n  'ghostwhite': [248, 248, 255, 1],\n  'gold': [255, 215, 0, 1],\n  'goldenrod': [218, 165, 32, 1],\n  'gray': [128, 128, 128, 1],\n  'green': [0, 128, 0, 1],\n  'greenyellow': [173, 255, 47, 1],\n  'grey': [128, 128, 128, 1],\n  'honeydew': [240, 255, 240, 1],\n  'hotpink': [255, 105, 180, 1],\n  'indianred': [205, 92, 92, 1],\n  'indigo': [75, 0, 130, 1],\n  'ivory': [255, 255, 240, 1],\n  'khaki': [240, 230, 140, 1],\n  'lavender': [230, 230, 250, 1],\n  'lavenderblush': [255, 240, 245, 1],\n  'lawngreen': [124, 252, 0, 1],\n  'lemonchiffon': [255, 250, 205, 1],\n  'lightblue': [173, 216, 230, 1],\n  'lightcoral': [240, 128, 128, 1],\n  'lightcyan': [224, 255, 255, 1],\n  'lightgoldenrodyellow': [250, 250, 210, 1],\n  'lightgray': [211, 211, 211, 1],\n  'lightgreen': [144, 238, 144, 1],\n  'lightgrey': [211, 211, 211, 1],\n  'lightpink': [255, 182, 193, 1],\n  'lightsalmon': [255, 160, 122, 1],\n  'lightseagreen': [32, 178, 170, 1],\n  'lightskyblue': [135, 206, 250, 1],\n  'lightslategray': [119, 136, 153, 1],\n  'lightslategrey': [119, 136, 153, 1],\n  'lightsteelblue': [176, 196, 222, 1],\n  'lightyellow': [255, 255, 224, 1],\n  'lime': [0, 255, 0, 1],\n  'limegreen': [50, 205, 50, 1],\n  'linen': [250, 240, 230, 1],\n  'magenta': [255, 0, 255, 1],\n  'maroon': [128, 0, 0, 1],\n  'mediumaquamarine': [102, 205, 170, 1],\n  'mediumblue': [0, 0, 205, 1],\n  'mediumorchid': [186, 85, 211, 1],\n  'mediumpurple': [147, 112, 219, 1],\n  'mediumseagreen': [60, 179, 113, 1],\n  'mediumslateblue': [123, 104, 238, 1],\n  'mediumspringgreen': [0, 250, 154, 1],\n  'mediumturquoise': [72, 209, 204, 1],\n  'mediumvioletred': [199, 21, 133, 1],\n  'midnightblue': [25, 25, 112, 1],\n  'mintcream': [245, 255, 250, 1],\n  'mistyrose': [255, 228, 225, 1],\n  'moccasin': [255, 228, 181, 1],\n  'navajowhite': [255, 222, 173, 1],\n  'navy': [0, 0, 128, 1],\n  'oldlace': [253, 245, 230, 1],\n  'olive': [128, 128, 0, 1],\n  'olivedrab': [107, 142, 35, 1],\n  'orange': [255, 165, 0, 1],\n  'orangered': [255, 69, 0, 1],\n  'orchid': [218, 112, 214, 1],\n  'palegoldenrod': [238, 232, 170, 1],\n  'palegreen': [152, 251, 152, 1],\n  'paleturquoise': [175, 238, 238, 1],\n  'palevioletred': [219, 112, 147, 1],\n  'papayawhip': [255, 239, 213, 1],\n  'peachpuff': [255, 218, 185, 1],\n  'peru': [205, 133, 63, 1],\n  'pink': [255, 192, 203, 1],\n  'plum': [221, 160, 221, 1],\n  'powderblue': [176, 224, 230, 1],\n  'purple': [128, 0, 128, 1],\n  'red': [255, 0, 0, 1],\n  'rosybrown': [188, 143, 143, 1],\n  'royalblue': [65, 105, 225, 1],\n  'saddlebrown': [139, 69, 19, 1],\n  'salmon': [250, 128, 114, 1],\n  'sandybrown': [244, 164, 96, 1],\n  'seagreen': [46, 139, 87, 1],\n  'seashell': [255, 245, 238, 1],\n  'sienna': [160, 82, 45, 1],\n  'silver': [192, 192, 192, 1],\n  'skyblue': [135, 206, 235, 1],\n  'slateblue': [106, 90, 205, 1],\n  'slategray': [112, 128, 144, 1],\n  'slategrey': [112, 128, 144, 1],\n  'snow': [255, 250, 250, 1],\n  'springgreen': [0, 255, 127, 1],\n  'steelblue': [70, 130, 180, 1],\n  'tan': [210, 180, 140, 1],\n  'teal': [0, 128, 128, 1],\n  'thistle': [216, 191, 216, 1],\n  'tomato': [255, 99, 71, 1],\n  'turquoise': [64, 224, 208, 1],\n  'violet': [238, 130, 238, 1],\n  'wheat': [245, 222, 179, 1],\n  'white': [255, 255, 255, 1],\n  'whitesmoke': [245, 245, 245, 1],\n  'yellow': [255, 255, 0, 1],\n  'yellowgreen': [154, 205, 50, 1]\n};\n\nfunction clampCssByte(i) {\n  // Clamp to integer 0 .. 255.\n  i = Math.round(i); // Seems to be what Chrome does (vs truncation).\n\n  return i < 0 ? 0 : i > 255 ? 255 : i;\n}\n\nfunction clampCssAngle(i) {\n  // Clamp to integer 0 .. 360.\n  i = Math.round(i); // Seems to be what Chrome does (vs truncation).\n\n  return i < 0 ? 0 : i > 360 ? 360 : i;\n}\n\nfunction clampCssFloat(f) {\n  // Clamp to float 0.0 .. 1.0.\n  return f < 0 ? 0 : f > 1 ? 1 : f;\n}\n\nfunction parseCssInt(str) {\n  // int or percentage.\n  if (str.length && str.charAt(str.length - 1) === '%') {\n    return clampCssByte(parseFloat(str) / 100 * 255);\n  }\n\n  return clampCssByte(parseInt(str, 10));\n}\n\nfunction parseCssFloat(str) {\n  // float or percentage.\n  if (str.length && str.charAt(str.length - 1) === '%') {\n    return clampCssFloat(parseFloat(str) / 100);\n  }\n\n  return clampCssFloat(parseFloat(str));\n}\n\nfunction cssHueToRgb(m1, m2, h) {\n  if (h < 0) {\n    h += 1;\n  } else if (h > 1) {\n    h -= 1;\n  }\n\n  if (h * 6 < 1) {\n    return m1 + (m2 - m1) * h * 6;\n  }\n\n  if (h * 2 < 1) {\n    return m2;\n  }\n\n  if (h * 3 < 2) {\n    return m1 + (m2 - m1) * (2 / 3 - h) * 6;\n  }\n\n  return m1;\n}\n\nfunction lerpNumber(a, b, p) {\n  return a + (b - a) * p;\n}\n\nfunction setRgba(out, r, g, b, a) {\n  out[0] = r;\n  out[1] = g;\n  out[2] = b;\n  out[3] = a;\n  return out;\n}\n\nfunction copyRgba(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  return out;\n}\n\nvar colorCache = new LRU(20);\nvar lastRemovedArr = null;\n\nfunction putToCache(colorStr, rgbaArr) {\n  // Reuse removed array\n  if (lastRemovedArr) {\n    copyRgba(lastRemovedArr, rgbaArr);\n  }\n\n  lastRemovedArr = colorCache.put(colorStr, lastRemovedArr || rgbaArr.slice());\n}\n/**\n * @param {string} colorStr\n * @param {Array.<number>} out\n * @return {Array.<number>}\n * @memberOf module:zrender/util/color\n */\n\n\nfunction parse(colorStr, rgbaArr) {\n  if (!colorStr) {\n    return;\n  }\n\n  rgbaArr = rgbaArr || [];\n  var cached = colorCache.get(colorStr);\n\n  if (cached) {\n    return copyRgba(rgbaArr, cached);\n  } // colorStr may be not string\n\n\n  colorStr = colorStr + ''; // Remove all whitespace, not compliant, but should just be more accepting.\n\n  var str = colorStr.replace(/ /g, '').toLowerCase(); // Color keywords (and transparent) lookup.\n\n  if (str in kCSSColorTable) {\n    copyRgba(rgbaArr, kCSSColorTable[str]);\n    putToCache(colorStr, rgbaArr);\n    return rgbaArr;\n  } // #abc and #abc123 syntax.\n\n\n  if (str.charAt(0) === '#') {\n    if (str.length === 4) {\n      var iv = parseInt(str.substr(1), 16); // TODO(deanm): Stricter parsing.\n\n      if (!(iv >= 0 && iv <= 0xfff)) {\n        setRgba(rgbaArr, 0, 0, 0, 1);\n        return; // Covers NaN.\n      }\n\n      setRgba(rgbaArr, (iv & 0xf00) >> 4 | (iv & 0xf00) >> 8, iv & 0xf0 | (iv & 0xf0) >> 4, iv & 0xf | (iv & 0xf) << 4, 1);\n      putToCache(colorStr, rgbaArr);\n      return rgbaArr;\n    } else if (str.length === 7) {\n      var iv = parseInt(str.substr(1), 16); // TODO(deanm): Stricter parsing.\n\n      if (!(iv >= 0 && iv <= 0xffffff)) {\n        setRgba(rgbaArr, 0, 0, 0, 1);\n        return; // Covers NaN.\n      }\n\n      setRgba(rgbaArr, (iv & 0xff0000) >> 16, (iv & 0xff00) >> 8, iv & 0xff, 1);\n      putToCache(colorStr, rgbaArr);\n      return rgbaArr;\n    }\n\n    return;\n  }\n\n  var op = str.indexOf('('),\n      ep = str.indexOf(')');\n\n  if (op !== -1 && ep + 1 === str.length) {\n    var fname = str.substr(0, op);\n    var params = str.substr(op + 1, ep - (op + 1)).split(',');\n    var alpha = 1; // To allow case fallthrough.\n\n    switch (fname) {\n      case 'rgba':\n        if (params.length !== 4) {\n          setRgba(rgbaArr, 0, 0, 0, 1);\n          return;\n        }\n\n        alpha = parseCssFloat(params.pop());\n      // jshint ignore:line\n      // Fall through.\n\n      case 'rgb':\n        if (params.length !== 3) {\n          setRgba(rgbaArr, 0, 0, 0, 1);\n          return;\n        }\n\n        setRgba(rgbaArr, parseCssInt(params[0]), parseCssInt(params[1]), parseCssInt(params[2]), alpha);\n        putToCache(colorStr, rgbaArr);\n        return rgbaArr;\n\n      case 'hsla':\n        if (params.length !== 4) {\n          setRgba(rgbaArr, 0, 0, 0, 1);\n          return;\n        }\n\n        params[3] = parseCssFloat(params[3]);\n        hsla2rgba(params, rgbaArr);\n        putToCache(colorStr, rgbaArr);\n        return rgbaArr;\n\n      case 'hsl':\n        if (params.length !== 3) {\n          setRgba(rgbaArr, 0, 0, 0, 1);\n          return;\n        }\n\n        hsla2rgba(params, rgbaArr);\n        putToCache(colorStr, rgbaArr);\n        return rgbaArr;\n\n      default:\n        return;\n    }\n  }\n\n  setRgba(rgbaArr, 0, 0, 0, 1);\n  return;\n}\n/**\n * @param {Array.<number>} hsla\n * @param {Array.<number>} rgba\n * @return {Array.<number>} rgba\n */\n\n\nfunction hsla2rgba(hsla, rgba) {\n  var h = (parseFloat(hsla[0]) % 360 + 360) % 360 / 360; // 0 .. 1\n  // NOTE(deanm): According to the CSS spec s/l should only be\n  // percentages, but we don't bother and let float or percentage.\n\n  var s = parseCssFloat(hsla[1]);\n  var l = parseCssFloat(hsla[2]);\n  var m2 = l <= 0.5 ? l * (s + 1) : l + s - l * s;\n  var m1 = l * 2 - m2;\n  rgba = rgba || [];\n  setRgba(rgba, clampCssByte(cssHueToRgb(m1, m2, h + 1 / 3) * 255), clampCssByte(cssHueToRgb(m1, m2, h) * 255), clampCssByte(cssHueToRgb(m1, m2, h - 1 / 3) * 255), 1);\n\n  if (hsla.length === 4) {\n    rgba[3] = hsla[3];\n  }\n\n  return rgba;\n}\n/**\n * @param {Array.<number>} rgba\n * @return {Array.<number>} hsla\n */\n\n\nfunction rgba2hsla(rgba) {\n  if (!rgba) {\n    return;\n  } // RGB from 0 to 255\n\n\n  var R = rgba[0] / 255;\n  var G = rgba[1] / 255;\n  var B = rgba[2] / 255;\n  var vMin = Math.min(R, G, B); // Min. value of RGB\n\n  var vMax = Math.max(R, G, B); // Max. value of RGB\n\n  var delta = vMax - vMin; // Delta RGB value\n\n  var L = (vMax + vMin) / 2;\n  var H;\n  var S; // HSL results from 0 to 1\n\n  if (delta === 0) {\n    H = 0;\n    S = 0;\n  } else {\n    if (L < 0.5) {\n      S = delta / (vMax + vMin);\n    } else {\n      S = delta / (2 - vMax - vMin);\n    }\n\n    var deltaR = ((vMax - R) / 6 + delta / 2) / delta;\n    var deltaG = ((vMax - G) / 6 + delta / 2) / delta;\n    var deltaB = ((vMax - B) / 6 + delta / 2) / delta;\n\n    if (R === vMax) {\n      H = deltaB - deltaG;\n    } else if (G === vMax) {\n      H = 1 / 3 + deltaR - deltaB;\n    } else if (B === vMax) {\n      H = 2 / 3 + deltaG - deltaR;\n    }\n\n    if (H < 0) {\n      H += 1;\n    }\n\n    if (H > 1) {\n      H -= 1;\n    }\n  }\n\n  var hsla = [H * 360, S, L];\n\n  if (rgba[3] != null) {\n    hsla.push(rgba[3]);\n  }\n\n  return hsla;\n}\n/**\n * @param {string} color\n * @param {number} level\n * @return {string}\n * @memberOf module:zrender/util/color\n */\n\n\nfunction lift(color, level) {\n  var colorArr = parse(color);\n\n  if (colorArr) {\n    for (var i = 0; i < 3; i++) {\n      if (level < 0) {\n        colorArr[i] = colorArr[i] * (1 - level) | 0;\n      } else {\n        colorArr[i] = (255 - colorArr[i]) * level + colorArr[i] | 0;\n      }\n    }\n\n    return stringify(colorArr, colorArr.length === 4 ? 'rgba' : 'rgb');\n  }\n}\n/**\n * @param {string} color\n * @return {string}\n * @memberOf module:zrender/util/color\n */\n\n\nfunction toHex(color) {\n  var colorArr = parse(color);\n\n  if (colorArr) {\n    return ((1 << 24) + (colorArr[0] << 16) + (colorArr[1] << 8) + +colorArr[2]).toString(16).slice(1);\n  }\n}\n/**\n * Map value to color. Faster than lerp methods because color is represented by rgba array.\n * @param {number} normalizedValue A float between 0 and 1.\n * @param {Array.<Array.<number>>} colors List of rgba color array\n * @param {Array.<number>} [out] Mapped gba color array\n * @return {Array.<number>} will be null/undefined if input illegal.\n */\n\n\nfunction fastLerp(normalizedValue, colors, out) {\n  if (!(colors && colors.length) || !(normalizedValue >= 0 && normalizedValue <= 1)) {\n    return;\n  }\n\n  out = out || [];\n  var value = normalizedValue * (colors.length - 1);\n  var leftIndex = Math.floor(value);\n  var rightIndex = Math.ceil(value);\n  var leftColor = colors[leftIndex];\n  var rightColor = colors[rightIndex];\n  var dv = value - leftIndex;\n  out[0] = clampCssByte(lerpNumber(leftColor[0], rightColor[0], dv));\n  out[1] = clampCssByte(lerpNumber(leftColor[1], rightColor[1], dv));\n  out[2] = clampCssByte(lerpNumber(leftColor[2], rightColor[2], dv));\n  out[3] = clampCssFloat(lerpNumber(leftColor[3], rightColor[3], dv));\n  return out;\n}\n/**\n * @deprecated\n */\n\n\nvar fastMapToColor = fastLerp;\n/**\n * @param {number} normalizedValue A float between 0 and 1.\n * @param {Array.<string>} colors Color list.\n * @param {boolean=} fullOutput Default false.\n * @return {(string|Object)} Result color. If fullOutput,\n *                           return {color: ..., leftIndex: ..., rightIndex: ..., value: ...},\n * @memberOf module:zrender/util/color\n */\n\nfunction lerp(normalizedValue, colors, fullOutput) {\n  if (!(colors && colors.length) || !(normalizedValue >= 0 && normalizedValue <= 1)) {\n    return;\n  }\n\n  var value = normalizedValue * (colors.length - 1);\n  var leftIndex = Math.floor(value);\n  var rightIndex = Math.ceil(value);\n  var leftColor = parse(colors[leftIndex]);\n  var rightColor = parse(colors[rightIndex]);\n  var dv = value - leftIndex;\n  var color = stringify([clampCssByte(lerpNumber(leftColor[0], rightColor[0], dv)), clampCssByte(lerpNumber(leftColor[1], rightColor[1], dv)), clampCssByte(lerpNumber(leftColor[2], rightColor[2], dv)), clampCssFloat(lerpNumber(leftColor[3], rightColor[3], dv))], 'rgba');\n  return fullOutput ? {\n    color: color,\n    leftIndex: leftIndex,\n    rightIndex: rightIndex,\n    value: value\n  } : color;\n}\n/**\n * @deprecated\n */\n\n\nvar mapToColor = lerp;\n/**\n * @param {string} color\n * @param {number=} h 0 ~ 360, ignore when null.\n * @param {number=} s 0 ~ 1, ignore when null.\n * @param {number=} l 0 ~ 1, ignore when null.\n * @return {string} Color string in rgba format.\n * @memberOf module:zrender/util/color\n */\n\nfunction modifyHSL(color, h, s, l) {\n  color = parse(color);\n\n  if (color) {\n    color = rgba2hsla(color);\n    h != null && (color[0] = clampCssAngle(h));\n    s != null && (color[1] = parseCssFloat(s));\n    l != null && (color[2] = parseCssFloat(l));\n    return stringify(hsla2rgba(color), 'rgba');\n  }\n}\n/**\n * @param {string} color\n * @param {number=} alpha 0 ~ 1\n * @return {string} Color string in rgba format.\n * @memberOf module:zrender/util/color\n */\n\n\nfunction modifyAlpha(color, alpha) {\n  color = parse(color);\n\n  if (color && alpha != null) {\n    color[3] = clampCssFloat(alpha);\n    return stringify(color, 'rgba');\n  }\n}\n/**\n * @param {Array.<number>} arrColor like [12,33,44,0.4]\n * @param {string} type 'rgba', 'hsva', ...\n * @return {string} Result color. (If input illegal, return undefined).\n */\n\n\nfunction stringify(arrColor, type) {\n  if (!arrColor || !arrColor.length) {\n    return;\n  }\n\n  var colorStr = arrColor[0] + ',' + arrColor[1] + ',' + arrColor[2];\n\n  if (type === 'rgba' || type === 'hsva' || type === 'hsla') {\n    colorStr += ',' + arrColor[3];\n  }\n\n  return type + '(' + colorStr + ')';\n}\n\nexports.parse = parse;\nexports.lift = lift;\nexports.toHex = toHex;\nexports.fastLerp = fastLerp;\nexports.fastMapToColor = fastMapToColor;\nexports.lerp = lerp;\nexports.mapToColor = mapToColor;\nexports.modifyHSL = modifyHSL;\nexports.modifyAlpha = modifyAlpha;\nexports.stringify = stringify;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/tool/color.js\n// module id = 474\n// module chunks = 0 1","'use strict';\n// Layout helpers for each component positioning\n\n\n    var zrUtil = require('zrender/lib/core/util');\n    var BoundingRect = require('zrender/lib/core/BoundingRect');\n    var numberUtil = require('./number');\n    var formatUtil = require('./format');\n    var parsePercent = numberUtil.parsePercent;\n    var each = zrUtil.each;\n\n    var layout = {};\n\n    var LOCATION_PARAMS = layout.LOCATION_PARAMS = [\n        'left', 'right', 'top', 'bottom', 'width', 'height'\n    ];\n\n    function boxLayout(orient, group, gap, maxWidth, maxHeight) {\n        var x = 0;\n        var y = 0;\n        if (maxWidth == null) {\n            maxWidth = Infinity;\n        }\n        if (maxHeight == null) {\n            maxHeight = Infinity;\n        }\n        var currentLineMaxSize = 0;\n        group.eachChild(function (child, idx) {\n            var position = child.position;\n            var rect = child.getBoundingRect();\n            var nextChild = group.childAt(idx + 1);\n            var nextChildRect = nextChild && nextChild.getBoundingRect();\n            var nextX;\n            var nextY;\n            if (orient === 'horizontal') {\n                var moveX = rect.width + (nextChildRect ? (-nextChildRect.x + rect.x) : 0);\n                nextX = x + moveX;\n                // Wrap when width exceeds maxWidth or meet a `newline` group\n                if (nextX > maxWidth || child.newline) {\n                    x = 0;\n                    nextX = moveX;\n                    y += currentLineMaxSize + gap;\n                    currentLineMaxSize = rect.height;\n                }\n                else {\n                    currentLineMaxSize = Math.max(currentLineMaxSize, rect.height);\n                }\n            }\n            else {\n                var moveY = rect.height + (nextChildRect ? (-nextChildRect.y + rect.y) : 0);\n                nextY = y + moveY;\n                // Wrap when width exceeds maxHeight or meet a `newline` group\n                if (nextY > maxHeight || child.newline) {\n                    x += currentLineMaxSize + gap;\n                    y = 0;\n                    nextY = moveY;\n                    currentLineMaxSize = rect.width;\n                }\n                else {\n                    currentLineMaxSize = Math.max(currentLineMaxSize, rect.width);\n                }\n            }\n\n            if (child.newline) {\n                return;\n            }\n\n            position[0] = x;\n            position[1] = y;\n\n            orient === 'horizontal'\n                ? (x = nextX + gap)\n                : (y = nextY + gap);\n        });\n    }\n\n    /**\n     * VBox or HBox layouting\n     * @param {string} orient\n     * @param {module:zrender/container/Group} group\n     * @param {number} gap\n     * @param {number} [width=Infinity]\n     * @param {number} [height=Infinity]\n     */\n    layout.box = boxLayout;\n\n    /**\n     * VBox layouting\n     * @param {module:zrender/container/Group} group\n     * @param {number} gap\n     * @param {number} [width=Infinity]\n     * @param {number} [height=Infinity]\n     */\n    layout.vbox = zrUtil.curry(boxLayout, 'vertical');\n\n    /**\n     * HBox layouting\n     * @param {module:zrender/container/Group} group\n     * @param {number} gap\n     * @param {number} [width=Infinity]\n     * @param {number} [height=Infinity]\n     */\n    layout.hbox = zrUtil.curry(boxLayout, 'horizontal');\n\n    /**\n     * If x or x2 is not specified or 'center' 'left' 'right',\n     * the width would be as long as possible.\n     * If y or y2 is not specified or 'middle' 'top' 'bottom',\n     * the height would be as long as possible.\n     *\n     * @param {Object} positionInfo\n     * @param {number|string} [positionInfo.x]\n     * @param {number|string} [positionInfo.y]\n     * @param {number|string} [positionInfo.x2]\n     * @param {number|string} [positionInfo.y2]\n     * @param {Object} containerRect\n     * @param {string|number} margin\n     * @return {Object} {width, height}\n     */\n    layout.getAvailableSize = function (positionInfo, containerRect, margin) {\n        var containerWidth = containerRect.width;\n        var containerHeight = containerRect.height;\n\n        var x = parsePercent(positionInfo.x, containerWidth);\n        var y = parsePercent(positionInfo.y, containerHeight);\n        var x2 = parsePercent(positionInfo.x2, containerWidth);\n        var y2 = parsePercent(positionInfo.y2, containerHeight);\n\n        (isNaN(x) || isNaN(parseFloat(positionInfo.x))) && (x = 0);\n        (isNaN(x2) || isNaN(parseFloat(positionInfo.x2))) && (x2 = containerWidth);\n        (isNaN(y) || isNaN(parseFloat(positionInfo.y))) && (y = 0);\n        (isNaN(y2) || isNaN(parseFloat(positionInfo.y2))) && (y2 = containerHeight);\n\n        margin = formatUtil.normalizeCssArray(margin || 0);\n\n        return {\n            width: Math.max(x2 - x - margin[1] - margin[3], 0),\n            height: Math.max(y2 - y - margin[0] - margin[2], 0)\n        };\n    };\n\n    /**\n     * Parse position info.\n     *\n     * @param {Object} positionInfo\n     * @param {number|string} [positionInfo.left]\n     * @param {number|string} [positionInfo.top]\n     * @param {number|string} [positionInfo.right]\n     * @param {number|string} [positionInfo.bottom]\n     * @param {number|string} [positionInfo.width]\n     * @param {number|string} [positionInfo.height]\n     * @param {number|string} [positionInfo.aspect] Aspect is width / height\n     * @param {Object} containerRect\n     * @param {string|number} [margin]\n     *\n     * @return {module:zrender/core/BoundingRect}\n     */\n    layout.getLayoutRect = function (\n        positionInfo, containerRect, margin\n    ) {\n        margin = formatUtil.normalizeCssArray(margin || 0);\n\n        var containerWidth = containerRect.width;\n        var containerHeight = containerRect.height;\n\n        var left = parsePercent(positionInfo.left, containerWidth);\n        var top = parsePercent(positionInfo.top, containerHeight);\n        var right = parsePercent(positionInfo.right, containerWidth);\n        var bottom = parsePercent(positionInfo.bottom, containerHeight);\n        var width = parsePercent(positionInfo.width, containerWidth);\n        var height = parsePercent(positionInfo.height, containerHeight);\n\n        var verticalMargin = margin[2] + margin[0];\n        var horizontalMargin = margin[1] + margin[3];\n        var aspect = positionInfo.aspect;\n\n        // If width is not specified, calculate width from left and right\n        if (isNaN(width)) {\n            width = containerWidth - right - horizontalMargin - left;\n        }\n        if (isNaN(height)) {\n            height = containerHeight - bottom - verticalMargin - top;\n        }\n\n        // If width and height are not given\n        // 1. Graph should not exceeds the container\n        // 2. Aspect must be keeped\n        // 3. Graph should take the space as more as possible\n        if (isNaN(width) && isNaN(height)) {\n            if (aspect > containerWidth / containerHeight) {\n                width = containerWidth * 0.8;\n            }\n            else {\n                height = containerHeight * 0.8;\n            }\n        }\n\n        if (aspect != null) {\n            // Calculate width or height with given aspect\n            if (isNaN(width)) {\n                width = aspect * height;\n            }\n            if (isNaN(height)) {\n                height = width / aspect;\n            }\n        }\n\n        // If left is not specified, calculate left from right and width\n        if (isNaN(left)) {\n            left = containerWidth - right - width - horizontalMargin;\n        }\n        if (isNaN(top)) {\n            top = containerHeight - bottom - height - verticalMargin;\n        }\n\n        // Align left and top\n        switch (positionInfo.left || positionInfo.right) {\n            case 'center':\n                left = containerWidth / 2 - width / 2 - margin[3];\n                break;\n            case 'right':\n                left = containerWidth - width - horizontalMargin;\n                break;\n        }\n        switch (positionInfo.top || positionInfo.bottom) {\n            case 'middle':\n            case 'center':\n                top = containerHeight / 2 - height / 2 - margin[0];\n                break;\n            case 'bottom':\n                top = containerHeight - height - verticalMargin;\n                break;\n        }\n        // If something is wrong and left, top, width, height are calculated as NaN\n        left = left || 0;\n        top = top || 0;\n        if (isNaN(width)) {\n            // Width may be NaN if only one value is given except width\n            width = containerWidth - left - (right || 0);\n        }\n        if (isNaN(height)) {\n            // Height may be NaN if only one value is given except height\n            height = containerHeight - top - (bottom || 0);\n        }\n\n        var rect = new BoundingRect(left + margin[3], top + margin[0], width, height);\n        rect.margin = margin;\n        return rect;\n    };\n\n\n    /**\n     * Position a zr element in viewport\n     *  Group position is specified by either\n     *  {left, top}, {right, bottom}\n     *  If all properties exists, right and bottom will be igonred.\n     *\n     * Logic:\n     *     1. Scale (against origin point in parent coord)\n     *     2. Rotate (against origin point in parent coord)\n     *     3. Traslate (with el.position by this method)\n     * So this method only fixes the last step 'Traslate', which does not affect\n     * scaling and rotating.\n     *\n     * If be called repeatly with the same input el, the same result will be gotten.\n     *\n     * @param {module:zrender/Element} el Should have `getBoundingRect` method.\n     * @param {Object} positionInfo\n     * @param {number|string} [positionInfo.left]\n     * @param {number|string} [positionInfo.top]\n     * @param {number|string} [positionInfo.right]\n     * @param {number|string} [positionInfo.bottom]\n     * @param {Object} containerRect\n     * @param {string|number} margin\n     * @param {Object} [opt]\n     * @param {Array.<number>} [opt.hv=[1,1]] Only horizontal or only vertical.\n     * @param {Array.<number>} [opt.boundingMode='all']\n     *        Specify how to calculate boundingRect when locating.\n     *        'all': Position the boundingRect that is transformed and uioned\n     *               both itself and its descendants.\n     *               This mode simplies confine the elements in the bounding\n     *               of their container (e.g., using 'right: 0').\n     *        'raw': Position the boundingRect that is not transformed and only itself.\n     *               This mode is useful when you want a element can overflow its\n     *               container. (Consider a rotated circle needs to be located in a corner.)\n     *               In this mode positionInfo.width/height can only be number.\n     */\n    layout.positionElement = function (el, positionInfo, containerRect, margin, opt) {\n        var h = !opt || !opt.hv || opt.hv[0];\n        var v = !opt || !opt.hv || opt.hv[1];\n        var boundingMode = opt && opt.boundingMode || 'all';\n\n        if (!h && !v) {\n            return;\n        }\n\n        var rect;\n        if (boundingMode === 'raw') {\n            rect = el.type === 'group'\n                ? new BoundingRect(0, 0, +positionInfo.width || 0, +positionInfo.height || 0)\n                : el.getBoundingRect();\n        }\n        else {\n            rect = el.getBoundingRect();\n            if (el.needLocalTransform()) {\n                var transform = el.getLocalTransform();\n                // Notice: raw rect may be inner object of el,\n                // which should not be modified.\n                rect = rect.clone();\n                rect.applyTransform(transform);\n            }\n        }\n\n        positionInfo = layout.getLayoutRect(\n            zrUtil.defaults(\n                {width: rect.width, height: rect.height},\n                positionInfo\n            ),\n            containerRect,\n            margin\n        );\n\n        // Because 'tranlate' is the last step in transform\n        // (see zrender/core/Transformable#getLocalTransfrom),\n        // we can just only modify el.position to get final result.\n        var elPos = el.position;\n        var dx = h ? positionInfo.x - rect.x : 0;\n        var dy = v ? positionInfo.y - rect.y : 0;\n\n        el.attr('position', boundingMode === 'raw' ? [dx, dy] : [elPos[0] + dx, elPos[1] + dy]);\n    };\n\n    /**\n     * Consider Case:\n     * When defulat option has {left: 0, width: 100}, and we set {right: 0}\n     * through setOption or media query, using normal zrUtil.merge will cause\n     * {right: 0} does not take effect.\n     *\n     * @example\n     * ComponentModel.extend({\n     *     init: function () {\n     *         ...\n     *         var inputPositionParams = layout.getLayoutParams(option);\n     *         this.mergeOption(inputPositionParams);\n     *     },\n     *     mergeOption: function (newOption) {\n     *         newOption && zrUtil.merge(thisOption, newOption, true);\n     *         layout.mergeLayoutParam(thisOption, newOption);\n     *     }\n     * });\n     *\n     * @param {Object} targetOption\n     * @param {Object} newOption\n     * @param {Object|string} [opt]\n     * @param {boolean} [opt.ignoreSize=false] Some component must has width and height.\n     */\n    layout.mergeLayoutParam = function (targetOption, newOption, opt) {\n        !zrUtil.isObject(opt) && (opt = {});\n        var hNames = ['width', 'left', 'right']; // Order by priority.\n        var vNames = ['height', 'top', 'bottom']; // Order by priority.\n        var hResult = merge(hNames);\n        var vResult = merge(vNames);\n\n        copy(hNames, targetOption, hResult);\n        copy(vNames, targetOption, vResult);\n\n        function merge(names) {\n            var newParams = {};\n            var newValueCount = 0;\n            var merged = {};\n            var mergedValueCount = 0;\n            var enoughParamNumber = opt.ignoreSize ? 1 : 2;\n\n            each(names, function (name) {\n                merged[name] = targetOption[name];\n            });\n            each(names, function (name) {\n                // Consider case: newOption.width is null, which is\n                // set by user for removing width setting.\n                hasProp(newOption, name) && (newParams[name] = merged[name] = newOption[name]);\n                hasValue(newParams, name) && newValueCount++;\n                hasValue(merged, name) && mergedValueCount++;\n            });\n\n            // Case: newOption: {width: ..., right: ...},\n            // or targetOption: {right: ...} and newOption: {width: ...},\n            // There is no conflict when merged only has params count\n            // little than enoughParamNumber.\n            if (mergedValueCount === enoughParamNumber || !newValueCount) {\n                return merged;\n            }\n            // Case: newOption: {width: ..., right: ...},\n            // Than we can make sure user only want those two, and ignore\n            // all origin params in targetOption.\n            else if (newValueCount >= enoughParamNumber) {\n                return newParams;\n            }\n            else {\n                // Chose another param from targetOption by priority.\n                // When 'ignoreSize', enoughParamNumber is 1 and those will not happen.\n                for (var i = 0; i < names.length; i++) {\n                    var name = names[i];\n                    if (!hasProp(newParams, name) && hasProp(targetOption, name)) {\n                        newParams[name] = targetOption[name];\n                        break;\n                    }\n                }\n                return newParams;\n            }\n        }\n\n        function hasProp(obj, name) {\n            return obj.hasOwnProperty(name);\n        }\n\n        function hasValue(obj, name) {\n            return obj[name] != null && obj[name] !== 'auto';\n        }\n\n        function copy(names, target, source) {\n            each(names, function (name) {\n                target[name] = source[name];\n            });\n        }\n    };\n\n    /**\n     * Retrieve 'left', 'right', 'top', 'bottom', 'width', 'height' from object.\n     * @param {Object} source\n     * @return {Object} Result contains those props.\n     */\n    layout.getLayoutParams = function (source) {\n        return layout.copyLayoutParams({}, source);\n    };\n\n    /**\n     * Retrieve 'left', 'right', 'top', 'bottom', 'width', 'height' from object.\n     * @param {Object} source\n     * @return {Object} Result contains those props.\n     */\n    layout.copyLayoutParams = function (target, source) {\n        source && target && each(LOCATION_PARAMS, function (name) {\n            source.hasOwnProperty(name) && (target[name] = source[name]);\n        });\n        return target;\n    };\n\n    module.exports = layout;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/util/layout.js\n// module id = 475\n// module chunks = 0 1","var curve = require(\"./curve\");\n\nvar vec2 = require(\"./vector\");\n\nvar bbox = require(\"./bbox\");\n\nvar BoundingRect = require(\"./BoundingRect\");\n\nvar _config = require(\"../config\");\n\nvar dpr = _config.devicePixelRatio;\n\n/**\n * Path 代理，可以在`buildPath`中用于替代`ctx`, 会保存每个path操作的命令到pathCommands属性中\n * 可以用于 isInsidePath 判断以及获取boundingRect\n *\n * @module zrender/core/PathProxy\n * @author Yi Shen (http://www.github.com/pissang)\n */\n// TODO getTotalLength, getPointAtLength\nvar CMD = {\n  M: 1,\n  L: 2,\n  C: 3,\n  Q: 4,\n  A: 5,\n  Z: 6,\n  // Rect\n  R: 7\n}; // var CMD_MEM_SIZE = {\n//     M: 3,\n//     L: 3,\n//     C: 7,\n//     Q: 5,\n//     A: 9,\n//     R: 5,\n//     Z: 1\n// };\n\nvar min = [];\nvar max = [];\nvar min2 = [];\nvar max2 = [];\nvar mathMin = Math.min;\nvar mathMax = Math.max;\nvar mathCos = Math.cos;\nvar mathSin = Math.sin;\nvar mathSqrt = Math.sqrt;\nvar mathAbs = Math.abs;\nvar hasTypedArray = typeof Float32Array != 'undefined';\n/**\n * @alias module:zrender/core/PathProxy\n * @constructor\n */\n\nvar PathProxy = function (notSaveData) {\n  this._saveData = !(notSaveData || false);\n\n  if (this._saveData) {\n    /**\n     * Path data. Stored as flat array\n     * @type {Array.<Object>}\n     */\n    this.data = [];\n  }\n\n  this._ctx = null;\n};\n/**\n * 快速计算Path包围盒（并不是最小包围盒）\n * @return {Object}\n */\n\n\nPathProxy.prototype = {\n  constructor: PathProxy,\n  _xi: 0,\n  _yi: 0,\n  _x0: 0,\n  _y0: 0,\n  // Unit x, Unit y. Provide for avoiding drawing that too short line segment\n  _ux: 0,\n  _uy: 0,\n  _len: 0,\n  _lineDash: null,\n  _dashOffset: 0,\n  _dashIdx: 0,\n  _dashSum: 0,\n\n  /**\n   * @readOnly\n   */\n  setScale: function (sx, sy) {\n    this._ux = mathAbs(1 / dpr / sx) || 0;\n    this._uy = mathAbs(1 / dpr / sy) || 0;\n  },\n  getContext: function () {\n    return this._ctx;\n  },\n\n  /**\n   * @param  {CanvasRenderingContext2D} ctx\n   * @return {module:zrender/core/PathProxy}\n   */\n  beginPath: function (ctx) {\n    this._ctx = ctx;\n    ctx && ctx.beginPath();\n    ctx && (this.dpr = ctx.dpr); // Reset\n\n    if (this._saveData) {\n      this._len = 0;\n    }\n\n    if (this._lineDash) {\n      this._lineDash = null;\n      this._dashOffset = 0;\n    }\n\n    return this;\n  },\n\n  /**\n   * @param  {number} x\n   * @param  {number} y\n   * @return {module:zrender/core/PathProxy}\n   */\n  moveTo: function (x, y) {\n    this.addData(CMD.M, x, y);\n    this._ctx && this._ctx.moveTo(x, y); // x0, y0, xi, yi 是记录在 _dashedXXXXTo 方法中使用\n    // xi, yi 记录当前点, x0, y0 在 closePath 的时候回到起始点。\n    // 有可能在 beginPath 之后直接调用 lineTo，这时候 x0, y0 需要\n    // 在 lineTo 方法中记录，这里先不考虑这种情况，dashed line 也只在 IE10- 中不支持\n\n    this._x0 = x;\n    this._y0 = y;\n    this._xi = x;\n    this._yi = y;\n    return this;\n  },\n\n  /**\n   * @param  {number} x\n   * @param  {number} y\n   * @return {module:zrender/core/PathProxy}\n   */\n  lineTo: function (x, y) {\n    var exceedUnit = mathAbs(x - this._xi) > this._ux || mathAbs(y - this._yi) > this._uy // Force draw the first segment\n    || this._len < 5;\n    this.addData(CMD.L, x, y);\n\n    if (this._ctx && exceedUnit) {\n      this._needsDash() ? this._dashedLineTo(x, y) : this._ctx.lineTo(x, y);\n    }\n\n    if (exceedUnit) {\n      this._xi = x;\n      this._yi = y;\n    }\n\n    return this;\n  },\n\n  /**\n   * @param  {number} x1\n   * @param  {number} y1\n   * @param  {number} x2\n   * @param  {number} y2\n   * @param  {number} x3\n   * @param  {number} y3\n   * @return {module:zrender/core/PathProxy}\n   */\n  bezierCurveTo: function (x1, y1, x2, y2, x3, y3) {\n    this.addData(CMD.C, x1, y1, x2, y2, x3, y3);\n\n    if (this._ctx) {\n      this._needsDash() ? this._dashedBezierTo(x1, y1, x2, y2, x3, y3) : this._ctx.bezierCurveTo(x1, y1, x2, y2, x3, y3);\n    }\n\n    this._xi = x3;\n    this._yi = y3;\n    return this;\n  },\n\n  /**\n   * @param  {number} x1\n   * @param  {number} y1\n   * @param  {number} x2\n   * @param  {number} y2\n   * @return {module:zrender/core/PathProxy}\n   */\n  quadraticCurveTo: function (x1, y1, x2, y2) {\n    this.addData(CMD.Q, x1, y1, x2, y2);\n\n    if (this._ctx) {\n      this._needsDash() ? this._dashedQuadraticTo(x1, y1, x2, y2) : this._ctx.quadraticCurveTo(x1, y1, x2, y2);\n    }\n\n    this._xi = x2;\n    this._yi = y2;\n    return this;\n  },\n\n  /**\n   * @param  {number} cx\n   * @param  {number} cy\n   * @param  {number} r\n   * @param  {number} startAngle\n   * @param  {number} endAngle\n   * @param  {boolean} anticlockwise\n   * @return {module:zrender/core/PathProxy}\n   */\n  arc: function (cx, cy, r, startAngle, endAngle, anticlockwise) {\n    this.addData(CMD.A, cx, cy, r, r, startAngle, endAngle - startAngle, 0, anticlockwise ? 0 : 1);\n    this._ctx && this._ctx.arc(cx, cy, r, startAngle, endAngle, anticlockwise);\n    this._xi = mathCos(endAngle) * r + cx;\n    this._yi = mathSin(endAngle) * r + cx;\n    return this;\n  },\n  // TODO\n  arcTo: function (x1, y1, x2, y2, radius) {\n    if (this._ctx) {\n      this._ctx.arcTo(x1, y1, x2, y2, radius);\n    }\n\n    return this;\n  },\n  // TODO\n  rect: function (x, y, w, h) {\n    this._ctx && this._ctx.rect(x, y, w, h);\n    this.addData(CMD.R, x, y, w, h);\n    return this;\n  },\n\n  /**\n   * @return {module:zrender/core/PathProxy}\n   */\n  closePath: function () {\n    this.addData(CMD.Z);\n    var ctx = this._ctx;\n    var x0 = this._x0;\n    var y0 = this._y0;\n\n    if (ctx) {\n      this._needsDash() && this._dashedLineTo(x0, y0);\n      ctx.closePath();\n    }\n\n    this._xi = x0;\n    this._yi = y0;\n    return this;\n  },\n\n  /**\n   * Context 从外部传入，因为有可能是 rebuildPath 完之后再 fill。\n   * stroke 同样\n   * @param {CanvasRenderingContext2D} ctx\n   * @return {module:zrender/core/PathProxy}\n   */\n  fill: function (ctx) {\n    ctx && ctx.fill();\n    this.toStatic();\n  },\n\n  /**\n   * @param {CanvasRenderingContext2D} ctx\n   * @return {module:zrender/core/PathProxy}\n   */\n  stroke: function (ctx) {\n    ctx && ctx.stroke();\n    this.toStatic();\n  },\n\n  /**\n   * 必须在其它绘制命令前调用\n   * Must be invoked before all other path drawing methods\n   * @return {module:zrender/core/PathProxy}\n   */\n  setLineDash: function (lineDash) {\n    if (lineDash instanceof Array) {\n      this._lineDash = lineDash;\n      this._dashIdx = 0;\n      var lineDashSum = 0;\n\n      for (var i = 0; i < lineDash.length; i++) {\n        lineDashSum += lineDash[i];\n      }\n\n      this._dashSum = lineDashSum;\n    }\n\n    return this;\n  },\n\n  /**\n   * 必须在其它绘制命令前调用\n   * Must be invoked before all other path drawing methods\n   * @return {module:zrender/core/PathProxy}\n   */\n  setLineDashOffset: function (offset) {\n    this._dashOffset = offset;\n    return this;\n  },\n\n  /**\n   *\n   * @return {boolean}\n   */\n  len: function () {\n    return this._len;\n  },\n\n  /**\n   * 直接设置 Path 数据\n   */\n  setData: function (data) {\n    var len = data.length;\n\n    if (!(this.data && this.data.length == len) && hasTypedArray) {\n      this.data = new Float32Array(len);\n    }\n\n    for (var i = 0; i < len; i++) {\n      this.data[i] = data[i];\n    }\n\n    this._len = len;\n  },\n\n  /**\n   * 添加子路径\n   * @param {module:zrender/core/PathProxy|Array.<module:zrender/core/PathProxy>} path\n   */\n  appendPath: function (path) {\n    if (!(path instanceof Array)) {\n      path = [path];\n    }\n\n    var len = path.length;\n    var appendSize = 0;\n    var offset = this._len;\n\n    for (var i = 0; i < len; i++) {\n      appendSize += path[i].len();\n    }\n\n    if (hasTypedArray && this.data instanceof Float32Array) {\n      this.data = new Float32Array(offset + appendSize);\n    }\n\n    for (var i = 0; i < len; i++) {\n      var appendPathData = path[i].data;\n\n      for (var k = 0; k < appendPathData.length; k++) {\n        this.data[offset++] = appendPathData[k];\n      }\n    }\n\n    this._len = offset;\n  },\n\n  /**\n   * 填充 Path 数据。\n   * 尽量复用而不申明新的数组。大部分图形重绘的指令数据长度都是不变的。\n   */\n  addData: function (cmd) {\n    if (!this._saveData) {\n      return;\n    }\n\n    var data = this.data;\n\n    if (this._len + arguments.length > data.length) {\n      // 因为之前的数组已经转换成静态的 Float32Array\n      // 所以不够用时需要扩展一个新的动态数组\n      this._expandData();\n\n      data = this.data;\n    }\n\n    for (var i = 0; i < arguments.length; i++) {\n      data[this._len++] = arguments[i];\n    }\n\n    this._prevCmd = cmd;\n  },\n  _expandData: function () {\n    // Only if data is Float32Array\n    if (!(this.data instanceof Array)) {\n      var newData = [];\n\n      for (var i = 0; i < this._len; i++) {\n        newData[i] = this.data[i];\n      }\n\n      this.data = newData;\n    }\n  },\n\n  /**\n   * If needs js implemented dashed line\n   * @return {boolean}\n   * @private\n   */\n  _needsDash: function () {\n    return this._lineDash;\n  },\n  _dashedLineTo: function (x1, y1) {\n    var dashSum = this._dashSum;\n    var offset = this._dashOffset;\n    var lineDash = this._lineDash;\n    var ctx = this._ctx;\n    var x0 = this._xi;\n    var y0 = this._yi;\n    var dx = x1 - x0;\n    var dy = y1 - y0;\n    var dist = mathSqrt(dx * dx + dy * dy);\n    var x = x0;\n    var y = y0;\n    var dash;\n    var nDash = lineDash.length;\n    var idx;\n    dx /= dist;\n    dy /= dist;\n\n    if (offset < 0) {\n      // Convert to positive offset\n      offset = dashSum + offset;\n    }\n\n    offset %= dashSum;\n    x -= offset * dx;\n    y -= offset * dy;\n\n    while (dx > 0 && x <= x1 || dx < 0 && x >= x1 || dx == 0 && (dy > 0 && y <= y1 || dy < 0 && y >= y1)) {\n      idx = this._dashIdx;\n      dash = lineDash[idx];\n      x += dx * dash;\n      y += dy * dash;\n      this._dashIdx = (idx + 1) % nDash; // Skip positive offset\n\n      if (dx > 0 && x < x0 || dx < 0 && x > x0 || dy > 0 && y < y0 || dy < 0 && y > y0) {\n        continue;\n      }\n\n      ctx[idx % 2 ? 'moveTo' : 'lineTo'](dx >= 0 ? mathMin(x, x1) : mathMax(x, x1), dy >= 0 ? mathMin(y, y1) : mathMax(y, y1));\n    } // Offset for next lineTo\n\n\n    dx = x - x1;\n    dy = y - y1;\n    this._dashOffset = -mathSqrt(dx * dx + dy * dy);\n  },\n  // Not accurate dashed line to\n  _dashedBezierTo: function (x1, y1, x2, y2, x3, y3) {\n    var dashSum = this._dashSum;\n    var offset = this._dashOffset;\n    var lineDash = this._lineDash;\n    var ctx = this._ctx;\n    var x0 = this._xi;\n    var y0 = this._yi;\n    var t;\n    var dx;\n    var dy;\n    var cubicAt = curve.cubicAt;\n    var bezierLen = 0;\n    var idx = this._dashIdx;\n    var nDash = lineDash.length;\n    var x;\n    var y;\n    var tmpLen = 0;\n\n    if (offset < 0) {\n      // Convert to positive offset\n      offset = dashSum + offset;\n    }\n\n    offset %= dashSum; // Bezier approx length\n\n    for (t = 0; t < 1; t += 0.1) {\n      dx = cubicAt(x0, x1, x2, x3, t + 0.1) - cubicAt(x0, x1, x2, x3, t);\n      dy = cubicAt(y0, y1, y2, y3, t + 0.1) - cubicAt(y0, y1, y2, y3, t);\n      bezierLen += mathSqrt(dx * dx + dy * dy);\n    } // Find idx after add offset\n\n\n    for (; idx < nDash; idx++) {\n      tmpLen += lineDash[idx];\n\n      if (tmpLen > offset) {\n        break;\n      }\n    }\n\n    t = (tmpLen - offset) / bezierLen;\n\n    while (t <= 1) {\n      x = cubicAt(x0, x1, x2, x3, t);\n      y = cubicAt(y0, y1, y2, y3, t); // Use line to approximate dashed bezier\n      // Bad result if dash is long\n\n      idx % 2 ? ctx.moveTo(x, y) : ctx.lineTo(x, y);\n      t += lineDash[idx] / bezierLen;\n      idx = (idx + 1) % nDash;\n    } // Finish the last segment and calculate the new offset\n\n\n    idx % 2 !== 0 && ctx.lineTo(x3, y3);\n    dx = x3 - x;\n    dy = y3 - y;\n    this._dashOffset = -mathSqrt(dx * dx + dy * dy);\n  },\n  _dashedQuadraticTo: function (x1, y1, x2, y2) {\n    // Convert quadratic to cubic using degree elevation\n    var x3 = x2;\n    var y3 = y2;\n    x2 = (x2 + 2 * x1) / 3;\n    y2 = (y2 + 2 * y1) / 3;\n    x1 = (this._xi + 2 * x1) / 3;\n    y1 = (this._yi + 2 * y1) / 3;\n\n    this._dashedBezierTo(x1, y1, x2, y2, x3, y3);\n  },\n\n  /**\n   * 转成静态的 Float32Array 减少堆内存占用\n   * Convert dynamic array to static Float32Array\n   */\n  toStatic: function () {\n    var data = this.data;\n\n    if (data instanceof Array) {\n      data.length = this._len;\n\n      if (hasTypedArray) {\n        this.data = new Float32Array(data);\n      }\n    }\n  },\n\n  /**\n   * @return {module:zrender/core/BoundingRect}\n   */\n  getBoundingRect: function () {\n    min[0] = min[1] = min2[0] = min2[1] = Number.MAX_VALUE;\n    max[0] = max[1] = max2[0] = max2[1] = -Number.MAX_VALUE;\n    var data = this.data;\n    var xi = 0;\n    var yi = 0;\n    var x0 = 0;\n    var y0 = 0;\n\n    for (var i = 0; i < data.length;) {\n      var cmd = data[i++];\n\n      if (i == 1) {\n        // 如果第一个命令是 L, C, Q\n        // 则 previous point 同绘制命令的第一个 point\n        //\n        // 第一个命令为 Arc 的情况下会在后面特殊处理\n        xi = data[i];\n        yi = data[i + 1];\n        x0 = xi;\n        y0 = yi;\n      }\n\n      switch (cmd) {\n        case CMD.M:\n          // moveTo 命令重新创建一个新的 subpath, 并且更新新的起点\n          // 在 closePath 的时候使用\n          x0 = data[i++];\n          y0 = data[i++];\n          xi = x0;\n          yi = y0;\n          min2[0] = x0;\n          min2[1] = y0;\n          max2[0] = x0;\n          max2[1] = y0;\n          break;\n\n        case CMD.L:\n          bbox.fromLine(xi, yi, data[i], data[i + 1], min2, max2);\n          xi = data[i++];\n          yi = data[i++];\n          break;\n\n        case CMD.C:\n          bbox.fromCubic(xi, yi, data[i++], data[i++], data[i++], data[i++], data[i], data[i + 1], min2, max2);\n          xi = data[i++];\n          yi = data[i++];\n          break;\n\n        case CMD.Q:\n          bbox.fromQuadratic(xi, yi, data[i++], data[i++], data[i], data[i + 1], min2, max2);\n          xi = data[i++];\n          yi = data[i++];\n          break;\n\n        case CMD.A:\n          // TODO Arc 判断的开销比较大\n          var cx = data[i++];\n          var cy = data[i++];\n          var rx = data[i++];\n          var ry = data[i++];\n          var startAngle = data[i++];\n          var endAngle = data[i++] + startAngle; // TODO Arc 旋转\n\n          var psi = data[i++];\n          var anticlockwise = 1 - data[i++];\n\n          if (i == 1) {\n            // 直接使用 arc 命令\n            // 第一个命令起点还未定义\n            x0 = mathCos(startAngle) * rx + cx;\n            y0 = mathSin(startAngle) * ry + cy;\n          }\n\n          bbox.fromArc(cx, cy, rx, ry, startAngle, endAngle, anticlockwise, min2, max2);\n          xi = mathCos(endAngle) * rx + cx;\n          yi = mathSin(endAngle) * ry + cy;\n          break;\n\n        case CMD.R:\n          x0 = xi = data[i++];\n          y0 = yi = data[i++];\n          var width = data[i++];\n          var height = data[i++]; // Use fromLine\n\n          bbox.fromLine(x0, y0, x0 + width, y0 + height, min2, max2);\n          break;\n\n        case CMD.Z:\n          xi = x0;\n          yi = y0;\n          break;\n      } // Union\n\n\n      vec2.min(min, min, min2);\n      vec2.max(max, max, max2);\n    } // No data\n\n\n    if (i === 0) {\n      min[0] = min[1] = max[0] = max[1] = 0;\n    }\n\n    return new BoundingRect(min[0], min[1], max[0] - min[0], max[1] - min[1]);\n  },\n\n  /**\n   * Rebuild path from current data\n   * Rebuild path will not consider javascript implemented line dash.\n   * @param {CanvasRenderingContext2D} ctx\n   */\n  rebuildPath: function (ctx) {\n    var d = this.data;\n    var x0, y0;\n    var xi, yi;\n    var x, y;\n    var ux = this._ux;\n    var uy = this._uy;\n    var len = this._len;\n\n    for (var i = 0; i < len;) {\n      var cmd = d[i++];\n\n      if (i == 1) {\n        // 如果第一个命令是 L, C, Q\n        // 则 previous point 同绘制命令的第一个 point\n        //\n        // 第一个命令为 Arc 的情况下会在后面特殊处理\n        xi = d[i];\n        yi = d[i + 1];\n        x0 = xi;\n        y0 = yi;\n      }\n\n      switch (cmd) {\n        case CMD.M:\n          x0 = xi = d[i++];\n          y0 = yi = d[i++];\n          ctx.moveTo(xi, yi);\n          break;\n\n        case CMD.L:\n          x = d[i++];\n          y = d[i++]; // Not draw too small seg between\n\n          if (mathAbs(x - xi) > ux || mathAbs(y - yi) > uy || i === len - 1) {\n            ctx.lineTo(x, y);\n            xi = x;\n            yi = y;\n          }\n\n          break;\n\n        case CMD.C:\n          ctx.bezierCurveTo(d[i++], d[i++], d[i++], d[i++], d[i++], d[i++]);\n          xi = d[i - 2];\n          yi = d[i - 1];\n          break;\n\n        case CMD.Q:\n          ctx.quadraticCurveTo(d[i++], d[i++], d[i++], d[i++]);\n          xi = d[i - 2];\n          yi = d[i - 1];\n          break;\n\n        case CMD.A:\n          var cx = d[i++];\n          var cy = d[i++];\n          var rx = d[i++];\n          var ry = d[i++];\n          var theta = d[i++];\n          var dTheta = d[i++];\n          var psi = d[i++];\n          var fs = d[i++];\n          var r = rx > ry ? rx : ry;\n          var scaleX = rx > ry ? 1 : rx / ry;\n          var scaleY = rx > ry ? ry / rx : 1;\n          var isEllipse = Math.abs(rx - ry) > 1e-3;\n          var endAngle = theta + dTheta;\n\n          if (isEllipse) {\n            ctx.translate(cx, cy);\n            ctx.rotate(psi);\n            ctx.scale(scaleX, scaleY);\n            ctx.arc(0, 0, r, theta, endAngle, 1 - fs);\n            ctx.scale(1 / scaleX, 1 / scaleY);\n            ctx.rotate(-psi);\n            ctx.translate(-cx, -cy);\n          } else {\n            ctx.arc(cx, cy, r, theta, endAngle, 1 - fs);\n          }\n\n          if (i == 1) {\n            // 直接使用 arc 命令\n            // 第一个命令起点还未定义\n            x0 = mathCos(theta) * rx + cx;\n            y0 = mathSin(theta) * ry + cy;\n          }\n\n          xi = mathCos(endAngle) * rx + cx;\n          yi = mathSin(endAngle) * ry + cy;\n          break;\n\n        case CMD.R:\n          x0 = xi = d[i];\n          y0 = yi = d[i + 1];\n          ctx.rect(d[i++], d[i++], d[i++], d[i++]);\n          break;\n\n        case CMD.Z:\n          ctx.closePath();\n          xi = x0;\n          yi = y0;\n      }\n    }\n  }\n};\nPathProxy.CMD = CMD;\nvar _default = PathProxy;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/core/PathProxy.js\n// module id = 476\n// module chunks = 0 1","var _vector = require(\"./vector\");\n\nvar v2Create = _vector.create;\nvar v2DistSquare = _vector.distSquare;\n\n/**\n * 曲线辅助模块\n * @module zrender/core/curve\n * @author pissang(https://www.github.com/pissang)\n */\nvar mathPow = Math.pow;\nvar mathSqrt = Math.sqrt;\nvar EPSILON = 1e-8;\nvar EPSILON_NUMERIC = 1e-4;\nvar THREE_SQRT = mathSqrt(3);\nvar ONE_THIRD = 1 / 3; // 临时变量\n\nvar _v0 = v2Create();\n\nvar _v1 = v2Create();\n\nvar _v2 = v2Create();\n\nfunction isAroundZero(val) {\n  return val > -EPSILON && val < EPSILON;\n}\n\nfunction isNotAroundZero(val) {\n  return val > EPSILON || val < -EPSILON;\n}\n/**\n * 计算三次贝塞尔值\n * @memberOf module:zrender/core/curve\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} p3\n * @param  {number} t\n * @return {number}\n */\n\n\nfunction cubicAt(p0, p1, p2, p3, t) {\n  var onet = 1 - t;\n  return onet * onet * (onet * p0 + 3 * t * p1) + t * t * (t * p3 + 3 * onet * p2);\n}\n/**\n * 计算三次贝塞尔导数值\n * @memberOf module:zrender/core/curve\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} p3\n * @param  {number} t\n * @return {number}\n */\n\n\nfunction cubicDerivativeAt(p0, p1, p2, p3, t) {\n  var onet = 1 - t;\n  return 3 * (((p1 - p0) * onet + 2 * (p2 - p1) * t) * onet + (p3 - p2) * t * t);\n}\n/**\n * 计算三次贝塞尔方程根，使用盛金公式\n * @memberOf module:zrender/core/curve\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} p3\n * @param  {number} val\n * @param  {Array.<number>} roots\n * @return {number} 有效根数目\n */\n\n\nfunction cubicRootAt(p0, p1, p2, p3, val, roots) {\n  // Evaluate roots of cubic functions\n  var a = p3 + 3 * (p1 - p2) - p0;\n  var b = 3 * (p2 - p1 * 2 + p0);\n  var c = 3 * (p1 - p0);\n  var d = p0 - val;\n  var A = b * b - 3 * a * c;\n  var B = b * c - 9 * a * d;\n  var C = c * c - 3 * b * d;\n  var n = 0;\n\n  if (isAroundZero(A) && isAroundZero(B)) {\n    if (isAroundZero(b)) {\n      roots[0] = 0;\n    } else {\n      var t1 = -c / b; //t1, t2, t3, b is not zero\n\n      if (t1 >= 0 && t1 <= 1) {\n        roots[n++] = t1;\n      }\n    }\n  } else {\n    var disc = B * B - 4 * A * C;\n\n    if (isAroundZero(disc)) {\n      var K = B / A;\n      var t1 = -b / a + K; // t1, a is not zero\n\n      var t2 = -K / 2; // t2, t3\n\n      if (t1 >= 0 && t1 <= 1) {\n        roots[n++] = t1;\n      }\n\n      if (t2 >= 0 && t2 <= 1) {\n        roots[n++] = t2;\n      }\n    } else if (disc > 0) {\n      var discSqrt = mathSqrt(disc);\n      var Y1 = A * b + 1.5 * a * (-B + discSqrt);\n      var Y2 = A * b + 1.5 * a * (-B - discSqrt);\n\n      if (Y1 < 0) {\n        Y1 = -mathPow(-Y1, ONE_THIRD);\n      } else {\n        Y1 = mathPow(Y1, ONE_THIRD);\n      }\n\n      if (Y2 < 0) {\n        Y2 = -mathPow(-Y2, ONE_THIRD);\n      } else {\n        Y2 = mathPow(Y2, ONE_THIRD);\n      }\n\n      var t1 = (-b - (Y1 + Y2)) / (3 * a);\n\n      if (t1 >= 0 && t1 <= 1) {\n        roots[n++] = t1;\n      }\n    } else {\n      var T = (2 * A * b - 3 * a * B) / (2 * mathSqrt(A * A * A));\n      var theta = Math.acos(T) / 3;\n      var ASqrt = mathSqrt(A);\n      var tmp = Math.cos(theta);\n      var t1 = (-b - 2 * ASqrt * tmp) / (3 * a);\n      var t2 = (-b + ASqrt * (tmp + THREE_SQRT * Math.sin(theta))) / (3 * a);\n      var t3 = (-b + ASqrt * (tmp - THREE_SQRT * Math.sin(theta))) / (3 * a);\n\n      if (t1 >= 0 && t1 <= 1) {\n        roots[n++] = t1;\n      }\n\n      if (t2 >= 0 && t2 <= 1) {\n        roots[n++] = t2;\n      }\n\n      if (t3 >= 0 && t3 <= 1) {\n        roots[n++] = t3;\n      }\n    }\n  }\n\n  return n;\n}\n/**\n * 计算三次贝塞尔方程极限值的位置\n * @memberOf module:zrender/core/curve\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} p3\n * @param  {Array.<number>} extrema\n * @return {number} 有效数目\n */\n\n\nfunction cubicExtrema(p0, p1, p2, p3, extrema) {\n  var b = 6 * p2 - 12 * p1 + 6 * p0;\n  var a = 9 * p1 + 3 * p3 - 3 * p0 - 9 * p2;\n  var c = 3 * p1 - 3 * p0;\n  var n = 0;\n\n  if (isAroundZero(a)) {\n    if (isNotAroundZero(b)) {\n      var t1 = -c / b;\n\n      if (t1 >= 0 && t1 <= 1) {\n        extrema[n++] = t1;\n      }\n    }\n  } else {\n    var disc = b * b - 4 * a * c;\n\n    if (isAroundZero(disc)) {\n      extrema[0] = -b / (2 * a);\n    } else if (disc > 0) {\n      var discSqrt = mathSqrt(disc);\n      var t1 = (-b + discSqrt) / (2 * a);\n      var t2 = (-b - discSqrt) / (2 * a);\n\n      if (t1 >= 0 && t1 <= 1) {\n        extrema[n++] = t1;\n      }\n\n      if (t2 >= 0 && t2 <= 1) {\n        extrema[n++] = t2;\n      }\n    }\n  }\n\n  return n;\n}\n/**\n * 细分三次贝塞尔曲线\n * @memberOf module:zrender/core/curve\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} p3\n * @param  {number} t\n * @param  {Array.<number>} out\n */\n\n\nfunction cubicSubdivide(p0, p1, p2, p3, t, out) {\n  var p01 = (p1 - p0) * t + p0;\n  var p12 = (p2 - p1) * t + p1;\n  var p23 = (p3 - p2) * t + p2;\n  var p012 = (p12 - p01) * t + p01;\n  var p123 = (p23 - p12) * t + p12;\n  var p0123 = (p123 - p012) * t + p012; // Seg0\n\n  out[0] = p0;\n  out[1] = p01;\n  out[2] = p012;\n  out[3] = p0123; // Seg1\n\n  out[4] = p0123;\n  out[5] = p123;\n  out[6] = p23;\n  out[7] = p3;\n}\n/**\n * 投射点到三次贝塞尔曲线上，返回投射距离。\n * 投射点有可能会有一个或者多个，这里只返回其中距离最短的一个。\n * @param {number} x0\n * @param {number} y0\n * @param {number} x1\n * @param {number} y1\n * @param {number} x2\n * @param {number} y2\n * @param {number} x3\n * @param {number} y3\n * @param {number} x\n * @param {number} y\n * @param {Array.<number>} [out] 投射点\n * @return {number}\n */\n\n\nfunction cubicProjectPoint(x0, y0, x1, y1, x2, y2, x3, y3, x, y, out) {\n  // http://pomax.github.io/bezierinfo/#projections\n  var t;\n  var interval = 0.005;\n  var d = Infinity;\n  var prev;\n  var next;\n  var d1;\n  var d2;\n  _v0[0] = x;\n  _v0[1] = y; // 先粗略估计一下可能的最小距离的 t 值\n  // PENDING\n\n  for (var _t = 0; _t < 1; _t += 0.05) {\n    _v1[0] = cubicAt(x0, x1, x2, x3, _t);\n    _v1[1] = cubicAt(y0, y1, y2, y3, _t);\n    d1 = v2DistSquare(_v0, _v1);\n\n    if (d1 < d) {\n      t = _t;\n      d = d1;\n    }\n  }\n\n  d = Infinity; // At most 32 iteration\n\n  for (var i = 0; i < 32; i++) {\n    if (interval < EPSILON_NUMERIC) {\n      break;\n    }\n\n    prev = t - interval;\n    next = t + interval; // t - interval\n\n    _v1[0] = cubicAt(x0, x1, x2, x3, prev);\n    _v1[1] = cubicAt(y0, y1, y2, y3, prev);\n    d1 = v2DistSquare(_v1, _v0);\n\n    if (prev >= 0 && d1 < d) {\n      t = prev;\n      d = d1;\n    } else {\n      // t + interval\n      _v2[0] = cubicAt(x0, x1, x2, x3, next);\n      _v2[1] = cubicAt(y0, y1, y2, y3, next);\n      d2 = v2DistSquare(_v2, _v0);\n\n      if (next <= 1 && d2 < d) {\n        t = next;\n        d = d2;\n      } else {\n        interval *= 0.5;\n      }\n    }\n  } // t\n\n\n  if (out) {\n    out[0] = cubicAt(x0, x1, x2, x3, t);\n    out[1] = cubicAt(y0, y1, y2, y3, t);\n  } // console.log(interval, i);\n\n\n  return mathSqrt(d);\n}\n/**\n * 计算二次方贝塞尔值\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} t\n * @return {number}\n */\n\n\nfunction quadraticAt(p0, p1, p2, t) {\n  var onet = 1 - t;\n  return onet * (onet * p0 + 2 * t * p1) + t * t * p2;\n}\n/**\n * 计算二次方贝塞尔导数值\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} t\n * @return {number}\n */\n\n\nfunction quadraticDerivativeAt(p0, p1, p2, t) {\n  return 2 * ((1 - t) * (p1 - p0) + t * (p2 - p1));\n}\n/**\n * 计算二次方贝塞尔方程根\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} t\n * @param  {Array.<number>} roots\n * @return {number} 有效根数目\n */\n\n\nfunction quadraticRootAt(p0, p1, p2, val, roots) {\n  var a = p0 - 2 * p1 + p2;\n  var b = 2 * (p1 - p0);\n  var c = p0 - val;\n  var n = 0;\n\n  if (isAroundZero(a)) {\n    if (isNotAroundZero(b)) {\n      var t1 = -c / b;\n\n      if (t1 >= 0 && t1 <= 1) {\n        roots[n++] = t1;\n      }\n    }\n  } else {\n    var disc = b * b - 4 * a * c;\n\n    if (isAroundZero(disc)) {\n      var t1 = -b / (2 * a);\n\n      if (t1 >= 0 && t1 <= 1) {\n        roots[n++] = t1;\n      }\n    } else if (disc > 0) {\n      var discSqrt = mathSqrt(disc);\n      var t1 = (-b + discSqrt) / (2 * a);\n      var t2 = (-b - discSqrt) / (2 * a);\n\n      if (t1 >= 0 && t1 <= 1) {\n        roots[n++] = t1;\n      }\n\n      if (t2 >= 0 && t2 <= 1) {\n        roots[n++] = t2;\n      }\n    }\n  }\n\n  return n;\n}\n/**\n * 计算二次贝塞尔方程极限值\n * @memberOf module:zrender/core/curve\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @return {number}\n */\n\n\nfunction quadraticExtremum(p0, p1, p2) {\n  var divider = p0 + p2 - 2 * p1;\n\n  if (divider === 0) {\n    // p1 is center of p0 and p2\n    return 0.5;\n  } else {\n    return (p0 - p1) / divider;\n  }\n}\n/**\n * 细分二次贝塞尔曲线\n * @memberOf module:zrender/core/curve\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} t\n * @param  {Array.<number>} out\n */\n\n\nfunction quadraticSubdivide(p0, p1, p2, t, out) {\n  var p01 = (p1 - p0) * t + p0;\n  var p12 = (p2 - p1) * t + p1;\n  var p012 = (p12 - p01) * t + p01; // Seg0\n\n  out[0] = p0;\n  out[1] = p01;\n  out[2] = p012; // Seg1\n\n  out[3] = p012;\n  out[4] = p12;\n  out[5] = p2;\n}\n/**\n * 投射点到二次贝塞尔曲线上，返回投射距离。\n * 投射点有可能会有一个或者多个，这里只返回其中距离最短的一个。\n * @param {number} x0\n * @param {number} y0\n * @param {number} x1\n * @param {number} y1\n * @param {number} x2\n * @param {number} y2\n * @param {number} x\n * @param {number} y\n * @param {Array.<number>} out 投射点\n * @return {number}\n */\n\n\nfunction quadraticProjectPoint(x0, y0, x1, y1, x2, y2, x, y, out) {\n  // http://pomax.github.io/bezierinfo/#projections\n  var t;\n  var interval = 0.005;\n  var d = Infinity;\n  _v0[0] = x;\n  _v0[1] = y; // 先粗略估计一下可能的最小距离的 t 值\n  // PENDING\n\n  for (var _t = 0; _t < 1; _t += 0.05) {\n    _v1[0] = quadraticAt(x0, x1, x2, _t);\n    _v1[1] = quadraticAt(y0, y1, y2, _t);\n    var d1 = v2DistSquare(_v0, _v1);\n\n    if (d1 < d) {\n      t = _t;\n      d = d1;\n    }\n  }\n\n  d = Infinity; // At most 32 iteration\n\n  for (var i = 0; i < 32; i++) {\n    if (interval < EPSILON_NUMERIC) {\n      break;\n    }\n\n    var prev = t - interval;\n    var next = t + interval; // t - interval\n\n    _v1[0] = quadraticAt(x0, x1, x2, prev);\n    _v1[1] = quadraticAt(y0, y1, y2, prev);\n    var d1 = v2DistSquare(_v1, _v0);\n\n    if (prev >= 0 && d1 < d) {\n      t = prev;\n      d = d1;\n    } else {\n      // t + interval\n      _v2[0] = quadraticAt(x0, x1, x2, next);\n      _v2[1] = quadraticAt(y0, y1, y2, next);\n      var d2 = v2DistSquare(_v2, _v0);\n\n      if (next <= 1 && d2 < d) {\n        t = next;\n        d = d2;\n      } else {\n        interval *= 0.5;\n      }\n    }\n  } // t\n\n\n  if (out) {\n    out[0] = quadraticAt(x0, x1, x2, t);\n    out[1] = quadraticAt(y0, y1, y2, t);\n  } // console.log(interval, i);\n\n\n  return mathSqrt(d);\n}\n\nexports.cubicAt = cubicAt;\nexports.cubicDerivativeAt = cubicDerivativeAt;\nexports.cubicRootAt = cubicRootAt;\nexports.cubicExtrema = cubicExtrema;\nexports.cubicSubdivide = cubicSubdivide;\nexports.cubicProjectPoint = cubicProjectPoint;\nexports.quadraticAt = quadraticAt;\nexports.quadraticDerivativeAt = quadraticDerivativeAt;\nexports.quadraticRootAt = quadraticRootAt;\nexports.quadraticExtremum = quadraticExtremum;\nexports.quadraticSubdivide = quadraticSubdivide;\nexports.quadraticProjectPoint = quadraticProjectPoint;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/core/curve.js\n// module id = 477\n// module chunks = 0 1","/**\n * 3x2矩阵操作类\n * @exports zrender/tool/matrix\n */\nvar ArrayCtor = typeof Float32Array === 'undefined' ? Array : Float32Array;\n/**\n * 创建一个单位矩阵\n * @return {Float32Array|Array.<number>}\n */\n\nfunction create() {\n  var out = new ArrayCtor(6);\n  identity(out);\n  return out;\n}\n/**\n * 设置矩阵为单位矩阵\n * @param {Float32Array|Array.<number>} out\n */\n\n\nfunction identity(out) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 1;\n  out[4] = 0;\n  out[5] = 0;\n  return out;\n}\n/**\n * 复制矩阵\n * @param {Float32Array|Array.<number>} out\n * @param {Float32Array|Array.<number>} m\n */\n\n\nfunction copy(out, m) {\n  out[0] = m[0];\n  out[1] = m[1];\n  out[2] = m[2];\n  out[3] = m[3];\n  out[4] = m[4];\n  out[5] = m[5];\n  return out;\n}\n/**\n * 矩阵相乘\n * @param {Float32Array|Array.<number>} out\n * @param {Float32Array|Array.<number>} m1\n * @param {Float32Array|Array.<number>} m2\n */\n\n\nfunction mul(out, m1, m2) {\n  // Consider matrix.mul(m, m2, m);\n  // where out is the same as m2.\n  // So use temp variable to escape error.\n  var out0 = m1[0] * m2[0] + m1[2] * m2[1];\n  var out1 = m1[1] * m2[0] + m1[3] * m2[1];\n  var out2 = m1[0] * m2[2] + m1[2] * m2[3];\n  var out3 = m1[1] * m2[2] + m1[3] * m2[3];\n  var out4 = m1[0] * m2[4] + m1[2] * m2[5] + m1[4];\n  var out5 = m1[1] * m2[4] + m1[3] * m2[5] + m1[5];\n  out[0] = out0;\n  out[1] = out1;\n  out[2] = out2;\n  out[3] = out3;\n  out[4] = out4;\n  out[5] = out5;\n  return out;\n}\n/**\n * 平移变换\n * @param {Float32Array|Array.<number>} out\n * @param {Float32Array|Array.<number>} a\n * @param {Float32Array|Array.<number>} v\n */\n\n\nfunction translate(out, a, v) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4] + v[0];\n  out[5] = a[5] + v[1];\n  return out;\n}\n/**\n * 旋转变换\n * @param {Float32Array|Array.<number>} out\n * @param {Float32Array|Array.<number>} a\n * @param {number} rad\n */\n\n\nfunction rotate(out, a, rad) {\n  var aa = a[0];\n  var ac = a[2];\n  var atx = a[4];\n  var ab = a[1];\n  var ad = a[3];\n  var aty = a[5];\n  var st = Math.sin(rad);\n  var ct = Math.cos(rad);\n  out[0] = aa * ct + ab * st;\n  out[1] = -aa * st + ab * ct;\n  out[2] = ac * ct + ad * st;\n  out[3] = -ac * st + ct * ad;\n  out[4] = ct * atx + st * aty;\n  out[5] = ct * aty - st * atx;\n  return out;\n}\n/**\n * 缩放变换\n * @param {Float32Array|Array.<number>} out\n * @param {Float32Array|Array.<number>} a\n * @param {Float32Array|Array.<number>} v\n */\n\n\nfunction scale(out, a, v) {\n  var vx = v[0];\n  var vy = v[1];\n  out[0] = a[0] * vx;\n  out[1] = a[1] * vy;\n  out[2] = a[2] * vx;\n  out[3] = a[3] * vy;\n  out[4] = a[4] * vx;\n  out[5] = a[5] * vy;\n  return out;\n}\n/**\n * 求逆矩阵\n * @param {Float32Array|Array.<number>} out\n * @param {Float32Array|Array.<number>} a\n */\n\n\nfunction invert(out, a) {\n  var aa = a[0];\n  var ac = a[2];\n  var atx = a[4];\n  var ab = a[1];\n  var ad = a[3];\n  var aty = a[5];\n  var det = aa * ad - ab * ac;\n\n  if (!det) {\n    return null;\n  }\n\n  det = 1.0 / det;\n  out[0] = ad * det;\n  out[1] = -ab * det;\n  out[2] = -ac * det;\n  out[3] = aa * det;\n  out[4] = (ac * aty - ad * atx) * det;\n  out[5] = (ab * atx - aa * aty) * det;\n  return out;\n}\n\nexports.create = create;\nexports.identity = identity;\nexports.copy = copy;\nexports.mul = mul;\nexports.translate = translate;\nexports.rotate = rotate;\nexports.scale = scale;\nexports.invert = invert;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/core/matrix.js\n// module id = 478\n// module chunks = 0 1","var Displayable = require(\"./Displayable\");\n\nvar BoundingRect = require(\"../core/BoundingRect\");\n\nvar zrUtil = require(\"../core/util\");\n\nvar imageHelper = require(\"./helper/image\");\n\n/**\n * @alias zrender/graphic/Image\n * @extends module:zrender/graphic/Displayable\n * @constructor\n * @param {Object} opts\n */\nfunction ZImage(opts) {\n  Displayable.call(this, opts);\n}\n\nZImage.prototype = {\n  constructor: ZImage,\n  type: 'image',\n  brush: function (ctx, prevEl) {\n    var style = this.style;\n    var src = style.image; // Must bind each time\n\n    style.bind(ctx, this, prevEl);\n    var image = this._image = imageHelper.createOrUpdateImage(src, this._image, this, this.onload);\n\n    if (!image || !imageHelper.isImageReady(image)) {\n      return;\n    } // 图片已经加载完成\n    // if (image.nodeName.toUpperCase() == 'IMG') {\n    //     if (!image.complete) {\n    //         return;\n    //     }\n    // }\n    // Else is canvas\n\n\n    var x = style.x || 0;\n    var y = style.y || 0;\n    var width = style.width;\n    var height = style.height;\n    var aspect = image.width / image.height;\n\n    if (width == null && height != null) {\n      // Keep image/height ratio\n      width = height * aspect;\n    } else if (height == null && width != null) {\n      height = width / aspect;\n    } else if (width == null && height == null) {\n      width = image.width;\n      height = image.height;\n    } // 设置transform\n\n\n    this.setTransform(ctx);\n\n    if (style.sWidth && style.sHeight) {\n      var sx = style.sx || 0;\n      var sy = style.sy || 0;\n      ctx.drawImage(image, sx, sy, style.sWidth, style.sHeight, x, y, width, height);\n    } else if (style.sx && style.sy) {\n      var sx = style.sx;\n      var sy = style.sy;\n      var sWidth = width - sx;\n      var sHeight = height - sy;\n      ctx.drawImage(image, sx, sy, sWidth, sHeight, x, y, width, height);\n    } else {\n      ctx.drawImage(image, x, y, width, height);\n    }\n\n    this.restoreTransform(ctx); // Draw rect text\n\n    if (style.text != null) {\n      this.drawRectText(ctx, this.getBoundingRect());\n    }\n  },\n  getBoundingRect: function () {\n    var style = this.style;\n\n    if (!this._rect) {\n      this._rect = new BoundingRect(style.x || 0, style.y || 0, style.width || 0, style.height || 0);\n    }\n\n    return this._rect;\n  }\n};\nzrUtil.inherits(ZImage, Displayable);\nvar _default = ZImage;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/Image.js\n// module id = 479\n// module chunks = 0 1","var Displayable = require(\"./Displayable\");\n\nvar zrUtil = require(\"../core/util\");\n\nvar textContain = require(\"../contain/text\");\n\nvar textHelper = require(\"./helper/text\");\n\n/**\n * @alias zrender/graphic/Text\n * @extends module:zrender/graphic/Displayable\n * @constructor\n * @param {Object} opts\n */\nvar Text = function (opts) {\n  // jshint ignore:line\n  Displayable.call(this, opts);\n};\n\nText.prototype = {\n  constructor: Text,\n  type: 'text',\n  brush: function (ctx, prevEl) {\n    var style = this.style; // Optimize, avoid normalize every time.\n\n    this.__dirty && textHelper.normalizeTextStyle(style, true); // Use props with prefix 'text'.\n\n    style.fill = style.stroke = style.shadowBlur = style.shadowColor = style.shadowOffsetX = style.shadowOffsetY = null;\n    var text = style.text; // Convert to string\n\n    text != null && (text += ''); // Always bind style\n\n    style.bind(ctx, this, prevEl);\n\n    if (!textHelper.needDrawText(text, style)) {\n      return;\n    }\n\n    this.setTransform(ctx);\n    textHelper.renderText(this, ctx, text, style);\n    this.restoreTransform(ctx);\n  },\n  getBoundingRect: function () {\n    var style = this.style; // Optimize, avoid normalize every time.\n\n    this.__dirty && textHelper.normalizeTextStyle(style, true);\n\n    if (!this._rect) {\n      var text = style.text;\n      text != null ? text += '' : text = '';\n      var rect = textContain.getBoundingRect(style.text + '', style.font, style.textAlign, style.textVerticalAlign, style.textPadding, style.rich);\n      rect.x += style.x || 0;\n      rect.y += style.y || 0;\n\n      if (textHelper.getStroke(style.textStroke, style.textStrokeWidth)) {\n        var w = style.textStrokeWidth;\n        rect.x -= w / 2;\n        rect.y -= w / 2;\n        rect.width += w;\n        rect.height += w;\n      }\n\n      this._rect = rect;\n    }\n\n    return this._rect;\n  }\n};\nzrUtil.inherits(Text, Displayable);\nvar _default = Text;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/Text.js\n// module id = 480\n// module chunks = 0 1","/**\n * 事件扩展\n * @module zrender/mixin/Eventful\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *         pissang (https://www.github.com/pissang)\n */\nvar arrySlice = Array.prototype.slice;\n/**\n * 事件分发器\n * @alias module:zrender/mixin/Eventful\n * @constructor\n */\n\nvar Eventful = function () {\n  this._$handlers = {};\n};\n\nEventful.prototype = {\n  constructor: Eventful,\n\n  /**\n   * 单次触发绑定，trigger后销毁\n   *\n   * @param {string} event 事件名\n   * @param {Function} handler 响应函数\n   * @param {Object} context\n   */\n  one: function (event, handler, context) {\n    var _h = this._$handlers;\n\n    if (!handler || !event) {\n      return this;\n    }\n\n    if (!_h[event]) {\n      _h[event] = [];\n    }\n\n    for (var i = 0; i < _h[event].length; i++) {\n      if (_h[event][i].h === handler) {\n        return this;\n      }\n    }\n\n    _h[event].push({\n      h: handler,\n      one: true,\n      ctx: context || this\n    });\n\n    return this;\n  },\n\n  /**\n   * 绑定事件\n   * @param {string} event 事件名\n   * @param {Function} handler 事件处理函数\n   * @param {Object} [context]\n   */\n  on: function (event, handler, context) {\n    var _h = this._$handlers;\n\n    if (!handler || !event) {\n      return this;\n    }\n\n    if (!_h[event]) {\n      _h[event] = [];\n    }\n\n    for (var i = 0; i < _h[event].length; i++) {\n      if (_h[event][i].h === handler) {\n        return this;\n      }\n    }\n\n    _h[event].push({\n      h: handler,\n      one: false,\n      ctx: context || this\n    });\n\n    return this;\n  },\n\n  /**\n   * 是否绑定了事件\n   * @param  {string}  event\n   * @return {boolean}\n   */\n  isSilent: function (event) {\n    var _h = this._$handlers;\n    return _h[event] && _h[event].length;\n  },\n\n  /**\n   * 解绑事件\n   * @param {string} event 事件名\n   * @param {Function} [handler] 事件处理函数\n   */\n  off: function (event, handler) {\n    var _h = this._$handlers;\n\n    if (!event) {\n      this._$handlers = {};\n      return this;\n    }\n\n    if (handler) {\n      if (_h[event]) {\n        var newList = [];\n\n        for (var i = 0, l = _h[event].length; i < l; i++) {\n          if (_h[event][i]['h'] != handler) {\n            newList.push(_h[event][i]);\n          }\n        }\n\n        _h[event] = newList;\n      }\n\n      if (_h[event] && _h[event].length === 0) {\n        delete _h[event];\n      }\n    } else {\n      delete _h[event];\n    }\n\n    return this;\n  },\n\n  /**\n   * 事件分发\n   *\n   * @param {string} type 事件类型\n   */\n  trigger: function (type) {\n    if (this._$handlers[type]) {\n      var args = arguments;\n      var argLen = args.length;\n\n      if (argLen > 3) {\n        args = arrySlice.call(args, 1);\n      }\n\n      var _h = this._$handlers[type];\n      var len = _h.length;\n\n      for (var i = 0; i < len;) {\n        // Optimize advise from backbone\n        switch (argLen) {\n          case 1:\n            _h[i]['h'].call(_h[i]['ctx']);\n\n            break;\n\n          case 2:\n            _h[i]['h'].call(_h[i]['ctx'], args[1]);\n\n            break;\n\n          case 3:\n            _h[i]['h'].call(_h[i]['ctx'], args[1], args[2]);\n\n            break;\n\n          default:\n            // have more than 2 given arguments\n            _h[i]['h'].apply(_h[i]['ctx'], args);\n\n            break;\n        }\n\n        if (_h[i]['one']) {\n          _h.splice(i, 1);\n\n          len--;\n        } else {\n          i++;\n        }\n      }\n    }\n\n    return this;\n  },\n\n  /**\n   * 带有context的事件分发, 最后一个参数是事件回调的context\n   * @param {string} type 事件类型\n   */\n  triggerWithContext: function (type) {\n    if (this._$handlers[type]) {\n      var args = arguments;\n      var argLen = args.length;\n\n      if (argLen > 4) {\n        args = arrySlice.call(args, 1, args.length - 1);\n      }\n\n      var ctx = args[args.length - 1];\n      var _h = this._$handlers[type];\n      var len = _h.length;\n\n      for (var i = 0; i < len;) {\n        // Optimize advise from backbone\n        switch (argLen) {\n          case 1:\n            _h[i]['h'].call(ctx);\n\n            break;\n\n          case 2:\n            _h[i]['h'].call(ctx, args[1]);\n\n            break;\n\n          case 3:\n            _h[i]['h'].call(ctx, args[1], args[2]);\n\n            break;\n\n          default:\n            // have more than 2 given arguments\n            _h[i]['h'].apply(ctx, args);\n\n            break;\n        }\n\n        if (_h[i]['one']) {\n          _h.splice(i, 1);\n\n          len--;\n        } else {\n          i++;\n        }\n      }\n    }\n\n    return this;\n  }\n}; // 对象可以通过 onxxxx 绑定事件\n\n/**\n * @event module:zrender/mixin/Eventful#onclick\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#onmouseover\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#onmouseout\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#onmousemove\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#onmousewheel\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#onmousedown\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#onmouseup\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#ondrag\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#ondragstart\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#ondragend\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#ondragenter\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#ondragleave\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#ondragover\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#ondrop\n * @type {Function}\n * @default null\n */\n\nvar _default = Eventful;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/mixin/Eventful.js\n// module id = 481\n// module chunks = 0 1","var zrUtil = require(\"../core/util\");\n\nvar Element = require(\"../Element\");\n\nvar BoundingRect = require(\"../core/BoundingRect\");\n\n/**\n * Group是一个容器，可以插入子节点，Group的变换也会被应用到子节点上\n * @module zrender/graphic/Group\n * @example\n *     var Group = require('zrender/container/Group');\n *     var Circle = require('zrender/graphic/shape/Circle');\n *     var g = new Group();\n *     g.position[0] = 100;\n *     g.position[1] = 100;\n *     g.add(new Circle({\n *         style: {\n *             x: 100,\n *             y: 100,\n *             r: 20,\n *         }\n *     }));\n *     zr.add(g);\n */\n\n/**\n * @alias module:zrender/graphic/Group\n * @constructor\n * @extends module:zrender/mixin/Transformable\n * @extends module:zrender/mixin/Eventful\n */\nvar Group = function (opts) {\n  opts = opts || {};\n  Element.call(this, opts);\n\n  for (var key in opts) {\n    if (opts.hasOwnProperty(key)) {\n      this[key] = opts[key];\n    }\n  }\n\n  this._children = [];\n  this.__storage = null;\n  this.__dirty = true;\n};\n\nGroup.prototype = {\n  constructor: Group,\n  isGroup: true,\n\n  /**\n   * @type {string}\n   */\n  type: 'group',\n\n  /**\n   * 所有子孙元素是否响应鼠标事件\n   * @name module:/zrender/container/Group#silent\n   * @type {boolean}\n   * @default false\n   */\n  silent: false,\n\n  /**\n   * @return {Array.<module:zrender/Element>}\n   */\n  children: function () {\n    return this._children.slice();\n  },\n\n  /**\n   * 获取指定 index 的儿子节点\n   * @param  {number} idx\n   * @return {module:zrender/Element}\n   */\n  childAt: function (idx) {\n    return this._children[idx];\n  },\n\n  /**\n   * 获取指定名字的儿子节点\n   * @param  {string} name\n   * @return {module:zrender/Element}\n   */\n  childOfName: function (name) {\n    var children = this._children;\n\n    for (var i = 0; i < children.length; i++) {\n      if (children[i].name === name) {\n        return children[i];\n      }\n    }\n  },\n\n  /**\n   * @return {number}\n   */\n  childCount: function () {\n    return this._children.length;\n  },\n\n  /**\n   * 添加子节点到最后\n   * @param {module:zrender/Element} child\n   */\n  add: function (child) {\n    if (child && child !== this && child.parent !== this) {\n      this._children.push(child);\n\n      this._doAdd(child);\n    }\n\n    return this;\n  },\n\n  /**\n   * 添加子节点在 nextSibling 之前\n   * @param {module:zrender/Element} child\n   * @param {module:zrender/Element} nextSibling\n   */\n  addBefore: function (child, nextSibling) {\n    if (child && child !== this && child.parent !== this && nextSibling && nextSibling.parent === this) {\n      var children = this._children;\n      var idx = children.indexOf(nextSibling);\n\n      if (idx >= 0) {\n        children.splice(idx, 0, child);\n\n        this._doAdd(child);\n      }\n    }\n\n    return this;\n  },\n  _doAdd: function (child) {\n    if (child.parent) {\n      child.parent.remove(child);\n    }\n\n    child.parent = this;\n    var storage = this.__storage;\n    var zr = this.__zr;\n\n    if (storage && storage !== child.__storage) {\n      storage.addToStorage(child);\n\n      if (child instanceof Group) {\n        child.addChildrenToStorage(storage);\n      }\n    }\n\n    zr && zr.refresh();\n  },\n\n  /**\n   * 移除子节点\n   * @param {module:zrender/Element} child\n   */\n  remove: function (child) {\n    var zr = this.__zr;\n    var storage = this.__storage;\n    var children = this._children;\n    var idx = zrUtil.indexOf(children, child);\n\n    if (idx < 0) {\n      return this;\n    }\n\n    children.splice(idx, 1);\n    child.parent = null;\n\n    if (storage) {\n      storage.delFromStorage(child);\n\n      if (child instanceof Group) {\n        child.delChildrenFromStorage(storage);\n      }\n    }\n\n    zr && zr.refresh();\n    return this;\n  },\n\n  /**\n   * 移除所有子节点\n   */\n  removeAll: function () {\n    var children = this._children;\n    var storage = this.__storage;\n    var child;\n    var i;\n\n    for (i = 0; i < children.length; i++) {\n      child = children[i];\n\n      if (storage) {\n        storage.delFromStorage(child);\n\n        if (child instanceof Group) {\n          child.delChildrenFromStorage(storage);\n        }\n      }\n\n      child.parent = null;\n    }\n\n    children.length = 0;\n    return this;\n  },\n\n  /**\n   * 遍历所有子节点\n   * @param  {Function} cb\n   * @param  {}   context\n   */\n  eachChild: function (cb, context) {\n    var children = this._children;\n\n    for (var i = 0; i < children.length; i++) {\n      var child = children[i];\n      cb.call(context, child, i);\n    }\n\n    return this;\n  },\n\n  /**\n   * 深度优先遍历所有子孙节点\n   * @param  {Function} cb\n   * @param  {}   context\n   */\n  traverse: function (cb, context) {\n    for (var i = 0; i < this._children.length; i++) {\n      var child = this._children[i];\n      cb.call(context, child);\n\n      if (child.type === 'group') {\n        child.traverse(cb, context);\n      }\n    }\n\n    return this;\n  },\n  addChildrenToStorage: function (storage) {\n    for (var i = 0; i < this._children.length; i++) {\n      var child = this._children[i];\n      storage.addToStorage(child);\n\n      if (child instanceof Group) {\n        child.addChildrenToStorage(storage);\n      }\n    }\n  },\n  delChildrenFromStorage: function (storage) {\n    for (var i = 0; i < this._children.length; i++) {\n      var child = this._children[i];\n      storage.delFromStorage(child);\n\n      if (child instanceof Group) {\n        child.delChildrenFromStorage(storage);\n      }\n    }\n  },\n  dirty: function () {\n    this.__dirty = true;\n    this.__zr && this.__zr.refresh();\n    return this;\n  },\n\n  /**\n   * @return {module:zrender/core/BoundingRect}\n   */\n  getBoundingRect: function (includeChildren) {\n    // TODO Caching\n    var rect = null;\n    var tmpRect = new BoundingRect(0, 0, 0, 0);\n    var children = includeChildren || this._children;\n    var tmpMat = [];\n\n    for (var i = 0; i < children.length; i++) {\n      var child = children[i];\n\n      if (child.ignore || child.invisible) {\n        continue;\n      }\n\n      var childRect = child.getBoundingRect();\n      var transform = child.getLocalTransform(tmpMat); // TODO\n      // The boundingRect cacluated by transforming original\n      // rect may be bigger than the actual bundingRect when rotation\n      // is used. (Consider a circle rotated aginst its center, where\n      // the actual boundingRect should be the same as that not be\n      // rotated.) But we can not find better approach to calculate\n      // actual boundingRect yet, considering performance.\n\n      if (transform) {\n        tmpRect.copy(childRect);\n        tmpRect.applyTransform(transform);\n        rect = rect || tmpRect.clone();\n        rect.union(tmpRect);\n      } else {\n        rect = rect || childRect.clone();\n        rect.union(childRect);\n      }\n    }\n\n    return rect || tmpRect;\n  }\n};\nzrUtil.inherits(Group, Element);\nvar _default = Group;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/container/Group.js\n// module id = 483\n// module chunks = 0 1","var _config = require(\"../config\");\n\nvar debugMode = _config.debugMode;\n\nvar log = function () {};\n\nif (debugMode === 1) {\n  log = function () {\n    for (var k in arguments) {\n      throw new Error(arguments[k]);\n    }\n  };\n} else if (debugMode > 1) {\n  log = function () {\n    for (var k in arguments) {\n      console.log(arguments[k]);\n    }\n  };\n}\n\nvar _default = log;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/core/log.js\n// module id = 484\n// module chunks = 0 1","var Eventful = require(\"../mixin/Eventful\");\n\nexports.Dispatcher = Eventful;\n\nvar env = require(\"./env\");\n\n/**\n * 事件辅助类\n * @module zrender/core/event\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n */\nvar isDomLevel2 = typeof window !== 'undefined' && !!window.addEventListener;\nvar MOUSE_EVENT_REG = /^(?:mouse|pointer|contextmenu|drag|drop)|click/;\n\nfunction getBoundingClientRect(el) {\n  // BlackBerry 5, iOS 3 (original iPhone) don't have getBoundingRect\n  return el.getBoundingClientRect ? el.getBoundingClientRect() : {\n    left: 0,\n    top: 0\n  };\n} // `calculate` is optional, default false\n\n\nfunction clientToLocal(el, e, out, calculate) {\n  out = out || {}; // According to the W3C Working Draft, offsetX and offsetY should be relative\n  // to the padding edge of the target element. The only browser using this convention\n  // is IE. Webkit uses the border edge, Opera uses the content edge, and FireFox does\n  // not support the properties.\n  // (see http://www.jacklmoore.com/notes/mouse-position/)\n  // In zr painter.dom, padding edge equals to border edge.\n  // FIXME\n  // When mousemove event triggered on ec tooltip, target is not zr painter.dom, and\n  // offsetX/Y is relative to e.target, where the calculation of zrX/Y via offsetX/Y\n  // is too complex. So css-transfrom dont support in this case temporarily.\n\n  if (calculate || !env.canvasSupported) {\n    defaultGetZrXY(el, e, out);\n  } // Caution: In FireFox, layerX/layerY Mouse position relative to the closest positioned\n  // ancestor element, so we should make sure el is positioned (e.g., not position:static).\n  // BTW1, Webkit don't return the same results as FF in non-simple cases (like add\n  // zoom-factor, overflow / opacity layers, transforms ...)\n  // BTW2, (ev.offsetY || ev.pageY - $(ev.target).offset().top) is not correct in preserve-3d.\n  // <https://bugs.jquery.com/ticket/8523#comment:14>\n  // BTW3, In ff, offsetX/offsetY is always 0.\n  else if (env.browser.firefox && e.layerX != null && e.layerX !== e.offsetX) {\n      out.zrX = e.layerX;\n      out.zrY = e.layerY;\n    } // For IE6+, chrome, safari, opera. (When will ff support offsetX?)\n    else if (e.offsetX != null) {\n        out.zrX = e.offsetX;\n        out.zrY = e.offsetY;\n      } // For some other device, e.g., IOS safari.\n      else {\n          defaultGetZrXY(el, e, out);\n        }\n\n  return out;\n}\n\nfunction defaultGetZrXY(el, e, out) {\n  // This well-known method below does not support css transform.\n  var box = getBoundingClientRect(el);\n  out.zrX = e.clientX - box.left;\n  out.zrY = e.clientY - box.top;\n}\n/**\n * 如果存在第三方嵌入的一些dom触发的事件，或touch事件，需要转换一下事件坐标.\n * `calculate` is optional, default false.\n */\n\n\nfunction normalizeEvent(el, e, calculate) {\n  e = e || window.event;\n\n  if (e.zrX != null) {\n    return e;\n  }\n\n  var eventType = e.type;\n  var isTouch = eventType && eventType.indexOf('touch') >= 0;\n\n  if (!isTouch) {\n    clientToLocal(el, e, e, calculate);\n    e.zrDelta = e.wheelDelta ? e.wheelDelta / 120 : -(e.detail || 0) / 3;\n  } else {\n    var touch = eventType != 'touchend' ? e.targetTouches[0] : e.changedTouches[0];\n    touch && clientToLocal(el, touch, e, calculate);\n  } // Add which for click: 1 === left; 2 === middle; 3 === right; otherwise: 0;\n  // See jQuery: https://github.com/jquery/jquery/blob/master/src/event.js\n  // If e.which has been defined, if may be readonly,\n  // see: https://developer.mozilla.org/en-US/docs/Web/API/MouseEvent/which\n\n\n  var button = e.button;\n\n  if (e.which == null && button !== undefined && MOUSE_EVENT_REG.test(e.type)) {\n    e.which = button & 1 ? 1 : button & 2 ? 3 : button & 4 ? 2 : 0;\n  }\n\n  return e;\n}\n\nfunction addEventListener(el, name, handler) {\n  if (isDomLevel2) {\n    el.addEventListener(name, handler);\n  } else {\n    el.attachEvent('on' + name, handler);\n  }\n}\n\nfunction removeEventListener(el, name, handler) {\n  if (isDomLevel2) {\n    el.removeEventListener(name, handler);\n  } else {\n    el.detachEvent('on' + name, handler);\n  }\n}\n/**\n * preventDefault and stopPropagation.\n * Notice: do not do that in zrender. Upper application\n * do that if necessary.\n *\n * @memberOf module:zrender/core/event\n * @method\n * @param {Event} e : event对象\n */\n\n\nvar stop = isDomLevel2 ? function (e) {\n  e.preventDefault();\n  e.stopPropagation();\n  e.cancelBubble = true;\n} : function (e) {\n  e.returnValue = false;\n  e.cancelBubble = true;\n};\n\nfunction notLeftMouse(e) {\n  // If e.which is undefined, considered as left mouse event.\n  return e.which > 1;\n} // 做向上兼容\n\n\nexports.clientToLocal = clientToLocal;\nexports.normalizeEvent = normalizeEvent;\nexports.addEventListener = addEventListener;\nexports.removeEventListener = removeEventListener;\nexports.stop = stop;\nexports.notLeftMouse = notLeftMouse;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/core/event.js\n// module id = 485\n// module chunks = 0 1","/**\n * // Scale class management\n * @module echarts/scale/Scale\n */\n\n\n    var clazzUtil = require('../util/clazz');\n\n    function Scale() {\n        /**\n         * Extent\n         * @type {Array.<number>}\n         * @protected\n         */\n        this._extent = [Infinity, -Infinity];\n\n        /**\n         * Step is calculated in adjustExtent\n         * @type {Array.<number>}\n         * @protected\n         */\n        this._interval = 0;\n\n        this.init && this.init.apply(this, arguments);\n    }\n\n    var scaleProto = Scale.prototype;\n\n    /**\n     * Parse input val to valid inner number.\n     * @param {*} val\n     * @return {number}\n     */\n    scaleProto.parse = function (val) {\n        // Notice: This would be a trap here, If the implementation\n        // of this method depends on extent, and this method is used\n        // before extent set (like in dataZoom), it would be wrong.\n        // Nevertheless, parse does not depend on extent generally.\n        return val;\n    };\n\n    scaleProto.contain = function (val) {\n        var extent = this._extent;\n        return val >= extent[0] && val <= extent[1];\n    };\n\n    /**\n     * Normalize value to linear [0, 1], return 0.5 if extent span is 0\n     * @param {number} val\n     * @return {number}\n     */\n    scaleProto.normalize = function (val) {\n        var extent = this._extent;\n        if (extent[1] === extent[0]) {\n            return 0.5;\n        }\n        return (val - extent[0]) / (extent[1] - extent[0]);\n    };\n\n    /**\n     * Scale normalized value\n     * @param {number} val\n     * @return {number}\n     */\n    scaleProto.scale = function (val) {\n        var extent = this._extent;\n        return val * (extent[1] - extent[0]) + extent[0];\n    };\n\n    /**\n     * Set extent from data\n     * @param {Array.<number>} other\n     */\n    scaleProto.unionExtent = function (other) {\n        var extent = this._extent;\n        other[0] < extent[0] && (extent[0] = other[0]);\n        other[1] > extent[1] && (extent[1] = other[1]);\n        // not setExtent because in log axis it may transformed to power\n        // this.setExtent(extent[0], extent[1]);\n    };\n\n    /**\n     * Set extent from data\n     * @param {module:echarts/data/List} data\n     * @param {string} dim\n     */\n    scaleProto.unionExtentFromData = function (data, dim) {\n        this.unionExtent(data.getDataExtent(dim, true));\n    };\n\n    /**\n     * Get extent\n     * @return {Array.<number>}\n     */\n    scaleProto.getExtent = function () {\n        return this._extent.slice();\n    };\n\n    /**\n     * Set extent\n     * @param {number} start\n     * @param {number} end\n     */\n    scaleProto.setExtent = function (start, end) {\n        var thisExtent = this._extent;\n        if (!isNaN(start)) {\n            thisExtent[0] = start;\n        }\n        if (!isNaN(end)) {\n            thisExtent[1] = end;\n        }\n    };\n\n    /**\n     * @return {Array.<string>}\n     */\n    scaleProto.getTicksLabels = function () {\n        var labels = [];\n        var ticks = this.getTicks();\n        for (var i = 0; i < ticks.length; i++) {\n            labels.push(this.getLabel(ticks[i]));\n        }\n        return labels;\n    };\n\n    clazzUtil.enableClassExtend(Scale);\n    clazzUtil.enableClassManagement(Scale, {\n        registerWhenExtend: true\n    });\n\n    module.exports = Scale;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/scale/Scale.js\n// module id = 487\n// module chunks = 0 1","var dpr = 1; // If in browser environment\n\nif (typeof window !== 'undefined') {\n  dpr = Math.max(window.devicePixelRatio || 1, 1);\n}\n/**\n * config默认配置项\n * @exports zrender/config\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n */\n\n/**\n * debug日志选项：catchBrushException为true下有效\n * 0 : 不生成debug数据，发布用\n * 1 : 异常抛出，调试用\n * 2 : 控制台输出，调试用\n */\n\n\nvar debugMode = 0; // retina 屏幕优化\n\nvar devicePixelRatio = dpr;\nexports.debugMode = debugMode;\nexports.devicePixelRatio = devicePixelRatio;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/config.js\n// module id = 488\n// module chunks = 0 1","var zrUtil = require(\"../core/util\");\n\nvar Style = require(\"./Style\");\n\nvar Element = require(\"../Element\");\n\nvar RectText = require(\"./mixin/RectText\");\n\n/**\n * 可绘制的图形基类\n * Base class of all displayable graphic objects\n * @module zrender/graphic/Displayable\n */\n\n/**\n * @alias module:zrender/graphic/Displayable\n * @extends module:zrender/Element\n * @extends module:zrender/graphic/mixin/RectText\n */\nfunction Displayable(opts) {\n  opts = opts || {};\n  Element.call(this, opts); // Extend properties\n\n  for (var name in opts) {\n    if (opts.hasOwnProperty(name) && name !== 'style') {\n      this[name] = opts[name];\n    }\n  }\n  /**\n   * @type {module:zrender/graphic/Style}\n   */\n\n\n  this.style = new Style(opts.style, this);\n  this._rect = null; // Shapes for cascade clipping.\n\n  this.__clipPaths = []; // FIXME Stateful must be mixined after style is setted\n  // Stateful.call(this, opts);\n}\n\nDisplayable.prototype = {\n  constructor: Displayable,\n  type: 'displayable',\n\n  /**\n   * Displayable 是否为脏，Painter 中会根据该标记判断是否需要是否需要重新绘制\n   * Dirty flag. From which painter will determine if this displayable object needs brush\n   * @name module:zrender/graphic/Displayable#__dirty\n   * @type {boolean}\n   */\n  __dirty: true,\n\n  /**\n   * 图形是否可见，为true时不绘制图形，但是仍能触发鼠标事件\n   * If ignore drawing of the displayable object. Mouse event will still be triggered\n   * @name module:/zrender/graphic/Displayable#invisible\n   * @type {boolean}\n   * @default false\n   */\n  invisible: false,\n\n  /**\n   * @name module:/zrender/graphic/Displayable#z\n   * @type {number}\n   * @default 0\n   */\n  z: 0,\n\n  /**\n   * @name module:/zrender/graphic/Displayable#z\n   * @type {number}\n   * @default 0\n   */\n  z2: 0,\n\n  /**\n   * z层level，决定绘画在哪层canvas中\n   * @name module:/zrender/graphic/Displayable#zlevel\n   * @type {number}\n   * @default 0\n   */\n  zlevel: 0,\n\n  /**\n   * 是否可拖拽\n   * @name module:/zrender/graphic/Displayable#draggable\n   * @type {boolean}\n   * @default false\n   */\n  draggable: false,\n\n  /**\n   * 是否正在拖拽\n   * @name module:/zrender/graphic/Displayable#draggable\n   * @type {boolean}\n   * @default false\n   */\n  dragging: false,\n\n  /**\n   * 是否相应鼠标事件\n   * @name module:/zrender/graphic/Displayable#silent\n   * @type {boolean}\n   * @default false\n   */\n  silent: false,\n\n  /**\n   * If enable culling\n   * @type {boolean}\n   * @default false\n   */\n  culling: false,\n\n  /**\n   * Mouse cursor when hovered\n   * @name module:/zrender/graphic/Displayable#cursor\n   * @type {string}\n   */\n  cursor: 'pointer',\n\n  /**\n   * If hover area is bounding rect\n   * @name module:/zrender/graphic/Displayable#rectHover\n   * @type {string}\n   */\n  rectHover: false,\n\n  /**\n   * Render the element progressively when the value >= 0,\n   * usefull for large data.\n   * @type {number}\n   */\n  progressive: -1,\n  beforeBrush: function (ctx) {},\n  afterBrush: function (ctx) {},\n\n  /**\n   * 图形绘制方法\n   * @param {CanvasRenderingContext2D} ctx\n   */\n  // Interface\n  brush: function (ctx, prevEl) {},\n\n  /**\n   * 获取最小包围盒\n   * @return {module:zrender/core/BoundingRect}\n   */\n  // Interface\n  getBoundingRect: function () {},\n\n  /**\n   * 判断坐标 x, y 是否在图形上\n   * If displayable element contain coord x, y\n   * @param  {number} x\n   * @param  {number} y\n   * @return {boolean}\n   */\n  contain: function (x, y) {\n    return this.rectContain(x, y);\n  },\n\n  /**\n   * @param  {Function} cb\n   * @param  {}   context\n   */\n  traverse: function (cb, context) {\n    cb.call(context, this);\n  },\n\n  /**\n   * 判断坐标 x, y 是否在图形的包围盒上\n   * If bounding rect of element contain coord x, y\n   * @param  {number} x\n   * @param  {number} y\n   * @return {boolean}\n   */\n  rectContain: function (x, y) {\n    var coord = this.transformCoordToLocal(x, y);\n    var rect = this.getBoundingRect();\n    return rect.contain(coord[0], coord[1]);\n  },\n\n  /**\n   * 标记图形元素为脏，并且在下一帧重绘\n   * Mark displayable element dirty and refresh next frame\n   */\n  dirty: function () {\n    this.__dirty = true;\n    this._rect = null;\n    this.__zr && this.__zr.refresh();\n  },\n\n  /**\n   * 图形是否会触发事件\n   * If displayable object binded any event\n   * @return {boolean}\n   */\n  // TODO, 通过 bind 绑定的事件\n  // isSilent: function () {\n  //     return !(\n  //         this.hoverable || this.draggable\n  //         || this.onmousemove || this.onmouseover || this.onmouseout\n  //         || this.onmousedown || this.onmouseup || this.onclick\n  //         || this.ondragenter || this.ondragover || this.ondragleave\n  //         || this.ondrop\n  //     );\n  // },\n\n  /**\n   * Alias for animate('style')\n   * @param {boolean} loop\n   */\n  animateStyle: function (loop) {\n    return this.animate('style', loop);\n  },\n  attrKV: function (key, value) {\n    if (key !== 'style') {\n      Element.prototype.attrKV.call(this, key, value);\n    } else {\n      this.style.set(value);\n    }\n  },\n\n  /**\n   * @param {Object|string} key\n   * @param {*} value\n   */\n  setStyle: function (key, value) {\n    this.style.set(key, value);\n    this.dirty(false);\n    return this;\n  },\n\n  /**\n   * Use given style object\n   * @param  {Object} obj\n   */\n  useStyle: function (obj) {\n    this.style = new Style(obj, this);\n    this.dirty(false);\n    return this;\n  }\n};\nzrUtil.inherits(Displayable, Element);\nzrUtil.mixin(Displayable, RectText); // zrUtil.mixin(Displayable, Stateful);\n\nvar _default = Displayable;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/Displayable.js\n// module id = 489\n// module chunks = 0 1","/**\n * @param {Array.<Object>} colorStops\n */\nvar Gradient = function (colorStops) {\n  this.colorStops = colorStops || [];\n};\n\nGradient.prototype = {\n  constructor: Gradient,\n  addColorStop: function (offset, color) {\n    this.colorStops.push({\n      offset: offset,\n      color: color\n    });\n  }\n};\nvar _default = Gradient;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/Gradient.js\n// module id = 490\n// module chunks = 0 1","var _util = require(\"../../core/util\");\n\nvar retrieve2 = _util.retrieve2;\nvar retrieve3 = _util.retrieve3;\nvar each = _util.each;\nvar normalizeCssArray = _util.normalizeCssArray;\nvar isString = _util.isString;\nvar isObject = _util.isObject;\n\nvar textContain = require(\"../../contain/text\");\n\nvar roundRectHelper = require(\"./roundRect\");\n\nvar imageHelper = require(\"./image\");\n\n// TODO: Have not support 'start', 'end' yet.\nvar VALID_TEXT_ALIGN = {\n  left: 1,\n  right: 1,\n  center: 1\n};\nvar VALID_TEXT_VERTICAL_ALIGN = {\n  top: 1,\n  bottom: 1,\n  middle: 1\n};\n/**\n * @param {module:zrender/graphic/Style} style\n * @return {module:zrender/graphic/Style} The input style.\n */\n\nfunction normalizeTextStyle(style) {\n  normalizeStyle(style);\n  each(style.rich, normalizeStyle);\n  return style;\n}\n\nfunction normalizeStyle(style) {\n  if (style) {\n    style.font = textContain.makeFont(style);\n    var textAlign = style.textAlign;\n    textAlign === 'middle' && (textAlign = 'center');\n    style.textAlign = textAlign == null || VALID_TEXT_ALIGN[textAlign] ? textAlign : 'left'; // Compatible with textBaseline.\n\n    var textVerticalAlign = style.textVerticalAlign || style.textBaseline;\n    textVerticalAlign === 'center' && (textVerticalAlign = 'middle');\n    style.textVerticalAlign = textVerticalAlign == null || VALID_TEXT_VERTICAL_ALIGN[textVerticalAlign] ? textVerticalAlign : 'top';\n    var textPadding = style.textPadding;\n\n    if (textPadding) {\n      style.textPadding = normalizeCssArray(style.textPadding);\n    }\n  }\n}\n/**\n * @param {CanvasRenderingContext2D} ctx\n * @param {string} text\n * @param {module:zrender/graphic/Style} style\n * @param {Object|boolean} [rect] {x, y, width, height}\n *                  If set false, rect text is not used.\n */\n\n\nfunction renderText(hostEl, ctx, text, style, rect) {\n  style.rich ? renderRichText(hostEl, ctx, text, style, rect) : renderPlainText(hostEl, ctx, text, style, rect);\n}\n\nfunction renderPlainText(hostEl, ctx, text, style, rect) {\n  var font = setCtx(ctx, 'font', style.font || textContain.DEFAULT_FONT);\n  var textPadding = style.textPadding;\n  var contentBlock = hostEl.__textCotentBlock;\n\n  if (!contentBlock || hostEl.__dirty) {\n    contentBlock = hostEl.__textCotentBlock = textContain.parsePlainText(text, font, textPadding, style.truncate);\n  }\n\n  var outerHeight = contentBlock.outerHeight;\n  var textLines = contentBlock.lines;\n  var lineHeight = contentBlock.lineHeight;\n  var boxPos = getBoxPosition(outerHeight, style, rect);\n  var baseX = boxPos.baseX;\n  var baseY = boxPos.baseY;\n  var textAlign = boxPos.textAlign;\n  var textVerticalAlign = boxPos.textVerticalAlign; // Origin of textRotation should be the base point of text drawing.\n\n  applyTextRotation(ctx, style, rect, baseX, baseY);\n  var boxY = textContain.adjustTextY(baseY, outerHeight, textVerticalAlign);\n  var textX = baseX;\n  var textY = boxY;\n  var needDrawBg = needDrawBackground(style);\n\n  if (needDrawBg || textPadding) {\n    // Consider performance, do not call getTextWidth util necessary.\n    var textWidth = textContain.getWidth(text, font);\n    var outerWidth = textWidth;\n    textPadding && (outerWidth += textPadding[1] + textPadding[3]);\n    var boxX = textContain.adjustTextX(baseX, outerWidth, textAlign);\n    needDrawBg && drawBackground(hostEl, ctx, style, boxX, boxY, outerWidth, outerHeight);\n\n    if (textPadding) {\n      textX = getTextXForPadding(baseX, textAlign, textPadding);\n      textY += textPadding[0];\n    }\n  }\n\n  setCtx(ctx, 'textAlign', textAlign || 'left'); // Force baseline to be \"middle\". Otherwise, if using \"top\", the\n  // text will offset downward a little bit in font \"Microsoft YaHei\".\n\n  setCtx(ctx, 'textBaseline', 'middle'); // Always set shadowBlur and shadowOffset to avoid leak from displayable.\n\n  setCtx(ctx, 'shadowBlur', style.textShadowBlur || 0);\n  setCtx(ctx, 'shadowColor', style.textShadowColor || 'transparent');\n  setCtx(ctx, 'shadowOffsetX', style.textShadowOffsetX || 0);\n  setCtx(ctx, 'shadowOffsetY', style.textShadowOffsetY || 0); // `textBaseline` is set as 'middle'.\n\n  textY += lineHeight / 2;\n  var textStrokeWidth = style.textStrokeWidth;\n  var textStroke = getStroke(style.textStroke, textStrokeWidth);\n  var textFill = getFill(style.textFill);\n\n  if (textStroke) {\n    setCtx(ctx, 'lineWidth', textStrokeWidth);\n    setCtx(ctx, 'strokeStyle', textStroke);\n  }\n\n  if (textFill) {\n    setCtx(ctx, 'fillStyle', textFill);\n  }\n\n  for (var i = 0; i < textLines.length; i++) {\n    // Fill after stroke so the outline will not cover the main part.\n    textStroke && ctx.strokeText(textLines[i], textX, textY);\n    textFill && ctx.fillText(textLines[i], textX, textY);\n    textY += lineHeight;\n  }\n}\n\nfunction renderRichText(hostEl, ctx, text, style, rect) {\n  var contentBlock = hostEl.__textCotentBlock;\n\n  if (!contentBlock || hostEl.__dirty) {\n    contentBlock = hostEl.__textCotentBlock = textContain.parseRichText(text, style);\n  }\n\n  drawRichText(hostEl, ctx, contentBlock, style, rect);\n}\n\nfunction drawRichText(hostEl, ctx, contentBlock, style, rect) {\n  var contentWidth = contentBlock.width;\n  var outerWidth = contentBlock.outerWidth;\n  var outerHeight = contentBlock.outerHeight;\n  var textPadding = style.textPadding;\n  var boxPos = getBoxPosition(outerHeight, style, rect);\n  var baseX = boxPos.baseX;\n  var baseY = boxPos.baseY;\n  var textAlign = boxPos.textAlign;\n  var textVerticalAlign = boxPos.textVerticalAlign; // Origin of textRotation should be the base point of text drawing.\n\n  applyTextRotation(ctx, style, rect, baseX, baseY);\n  var boxX = textContain.adjustTextX(baseX, outerWidth, textAlign);\n  var boxY = textContain.adjustTextY(baseY, outerHeight, textVerticalAlign);\n  var xLeft = boxX;\n  var lineTop = boxY;\n\n  if (textPadding) {\n    xLeft += textPadding[3];\n    lineTop += textPadding[0];\n  }\n\n  var xRight = xLeft + contentWidth;\n  needDrawBackground(style) && drawBackground(hostEl, ctx, style, boxX, boxY, outerWidth, outerHeight);\n\n  for (var i = 0; i < contentBlock.lines.length; i++) {\n    var line = contentBlock.lines[i];\n    var tokens = line.tokens;\n    var tokenCount = tokens.length;\n    var lineHeight = line.lineHeight;\n    var usedWidth = line.width;\n    var leftIndex = 0;\n    var lineXLeft = xLeft;\n    var lineXRight = xRight;\n    var rightIndex = tokenCount - 1;\n    var token;\n\n    while (leftIndex < tokenCount && (token = tokens[leftIndex], !token.textAlign || token.textAlign === 'left')) {\n      placeToken(hostEl, ctx, token, style, lineHeight, lineTop, lineXLeft, 'left');\n      usedWidth -= token.width;\n      lineXLeft += token.width;\n      leftIndex++;\n    }\n\n    while (rightIndex >= 0 && (token = tokens[rightIndex], token.textAlign === 'right')) {\n      placeToken(hostEl, ctx, token, style, lineHeight, lineTop, lineXRight, 'right');\n      usedWidth -= token.width;\n      lineXRight -= token.width;\n      rightIndex--;\n    } // The other tokens are placed as textAlign 'center' if there is enough space.\n\n\n    lineXLeft += (contentWidth - (lineXLeft - xLeft) - (xRight - lineXRight) - usedWidth) / 2;\n\n    while (leftIndex <= rightIndex) {\n      token = tokens[leftIndex]; // Consider width specified by user, use 'center' rather than 'left'.\n\n      placeToken(hostEl, ctx, token, style, lineHeight, lineTop, lineXLeft + token.width / 2, 'center');\n      lineXLeft += token.width;\n      leftIndex++;\n    }\n\n    lineTop += lineHeight;\n  }\n}\n\nfunction applyTextRotation(ctx, style, rect, x, y) {\n  // textRotation only apply in RectText.\n  if (rect && style.textRotation) {\n    var origin = style.textOrigin;\n\n    if (origin === 'center') {\n      x = rect.width / 2 + rect.x;\n      y = rect.height / 2 + rect.y;\n    } else if (origin) {\n      x = origin[0] + rect.x;\n      y = origin[1] + rect.y;\n    }\n\n    ctx.translate(x, y); // Positive: anticlockwise\n\n    ctx.rotate(-style.textRotation);\n    ctx.translate(-x, -y);\n  }\n}\n\nfunction placeToken(hostEl, ctx, token, style, lineHeight, lineTop, x, textAlign) {\n  var tokenStyle = style.rich[token.styleName] || {}; // 'ctx.textBaseline' is always set as 'middle', for sake of\n  // the bias of \"Microsoft YaHei\".\n\n  var textVerticalAlign = token.textVerticalAlign;\n  var y = lineTop + lineHeight / 2;\n\n  if (textVerticalAlign === 'top') {\n    y = lineTop + token.height / 2;\n  } else if (textVerticalAlign === 'bottom') {\n    y = lineTop + lineHeight - token.height / 2;\n  }\n\n  !token.isLineHolder && needDrawBackground(tokenStyle) && drawBackground(hostEl, ctx, tokenStyle, textAlign === 'right' ? x - token.width : textAlign === 'center' ? x - token.width / 2 : x, y - token.height / 2, token.width, token.height);\n  var textPadding = token.textPadding;\n\n  if (textPadding) {\n    x = getTextXForPadding(x, textAlign, textPadding);\n    y -= token.height / 2 - textPadding[2] - token.textHeight / 2;\n  }\n\n  setCtx(ctx, 'shadowBlur', retrieve3(tokenStyle.textShadowBlur, style.textShadowBlur, 0));\n  setCtx(ctx, 'shadowColor', tokenStyle.textShadowColor || style.textShadowColor || 'transparent');\n  setCtx(ctx, 'shadowOffsetX', retrieve3(tokenStyle.textShadowOffsetX, style.textShadowOffsetX, 0));\n  setCtx(ctx, 'shadowOffsetY', retrieve3(tokenStyle.textShadowOffsetY, style.textShadowOffsetY, 0));\n  setCtx(ctx, 'textAlign', textAlign); // Force baseline to be \"middle\". Otherwise, if using \"top\", the\n  // text will offset downward a little bit in font \"Microsoft YaHei\".\n\n  setCtx(ctx, 'textBaseline', 'middle');\n  setCtx(ctx, 'font', token.font || textContain.DEFAULT_FONT);\n  var textStroke = getStroke(tokenStyle.textStroke || style.textStroke, textStrokeWidth);\n  var textFill = getFill(tokenStyle.textFill || style.textFill);\n  var textStrokeWidth = retrieve2(tokenStyle.textStrokeWidth, style.textStrokeWidth); // Fill after stroke so the outline will not cover the main part.\n\n  if (textStroke) {\n    setCtx(ctx, 'lineWidth', textStrokeWidth);\n    setCtx(ctx, 'strokeStyle', textStroke);\n    ctx.strokeText(token.text, x, y);\n  }\n\n  if (textFill) {\n    setCtx(ctx, 'fillStyle', textFill);\n    ctx.fillText(token.text, x, y);\n  }\n}\n\nfunction needDrawBackground(style) {\n  return style.textBackgroundColor || style.textBorderWidth && style.textBorderColor;\n} // style: {textBackgroundColor, textBorderWidth, textBorderColor, textBorderRadius}\n// shape: {x, y, width, height}\n\n\nfunction drawBackground(hostEl, ctx, style, x, y, width, height) {\n  var textBackgroundColor = style.textBackgroundColor;\n  var textBorderWidth = style.textBorderWidth;\n  var textBorderColor = style.textBorderColor;\n  var isPlainBg = isString(textBackgroundColor);\n  setCtx(ctx, 'shadowBlur', style.textBoxShadowBlur || 0);\n  setCtx(ctx, 'shadowColor', style.textBoxShadowColor || 'transparent');\n  setCtx(ctx, 'shadowOffsetX', style.textBoxShadowOffsetX || 0);\n  setCtx(ctx, 'shadowOffsetY', style.textBoxShadowOffsetY || 0);\n\n  if (isPlainBg || textBorderWidth && textBorderColor) {\n    ctx.beginPath();\n    var textBorderRadius = style.textBorderRadius;\n\n    if (!textBorderRadius) {\n      ctx.rect(x, y, width, height);\n    } else {\n      roundRectHelper.buildPath(ctx, {\n        x: x,\n        y: y,\n        width: width,\n        height: height,\n        r: textBorderRadius\n      });\n    }\n\n    ctx.closePath();\n  }\n\n  if (isPlainBg) {\n    setCtx(ctx, 'fillStyle', textBackgroundColor);\n    ctx.fill();\n  } else if (isObject(textBackgroundColor)) {\n    var image = textBackgroundColor.image;\n    image = imageHelper.createOrUpdateImage(image, null, hostEl, onBgImageLoaded, textBackgroundColor);\n\n    if (image && imageHelper.isImageReady(image)) {\n      ctx.drawImage(image, x, y, width, height);\n    }\n  }\n\n  if (textBorderWidth && textBorderColor) {\n    setCtx(ctx, 'lineWidth', textBorderWidth);\n    setCtx(ctx, 'strokeStyle', textBorderColor);\n    ctx.stroke();\n  }\n}\n\nfunction onBgImageLoaded(image, textBackgroundColor) {\n  // Replace image, so that `contain/text.js#parseRichText`\n  // will get correct result in next tick.\n  textBackgroundColor.image = image;\n}\n\nfunction getBoxPosition(blockHeiht, style, rect) {\n  var baseX = style.x || 0;\n  var baseY = style.y || 0;\n  var textAlign = style.textAlign;\n  var textVerticalAlign = style.textVerticalAlign; // Text position represented by coord\n\n  if (rect) {\n    var textPosition = style.textPosition;\n\n    if (textPosition instanceof Array) {\n      // Percent\n      baseX = rect.x + parsePercent(textPosition[0], rect.width);\n      baseY = rect.y + parsePercent(textPosition[1], rect.height);\n    } else {\n      var res = textContain.adjustTextPositionOnRect(textPosition, rect, style.textDistance);\n      baseX = res.x;\n      baseY = res.y; // Default align and baseline when has textPosition\n\n      textAlign = textAlign || res.textAlign;\n      textVerticalAlign = textVerticalAlign || res.textVerticalAlign;\n    } // textOffset is only support in RectText, otherwise\n    // we have to adjust boundingRect for textOffset.\n\n\n    var textOffset = style.textOffset;\n\n    if (textOffset) {\n      baseX += textOffset[0];\n      baseY += textOffset[1];\n    }\n  }\n\n  return {\n    baseX: baseX,\n    baseY: baseY,\n    textAlign: textAlign,\n    textVerticalAlign: textVerticalAlign\n  };\n}\n\nfunction setCtx(ctx, prop, value) {\n  // FIXME ??? performance try\n  // if (ctx.__currentValues[prop] !== value) {\n  // ctx[prop] = ctx.__currentValues[prop] = value;\n  ctx[prop] = value; // }\n\n  return ctx[prop];\n}\n/**\n * @param {string} [stroke] If specified, do not check style.textStroke.\n * @param {string} [lineWidth] If specified, do not check style.textStroke.\n * @param {number} style\n */\n\n\nfunction getStroke(stroke, lineWidth) {\n  return stroke == null || lineWidth <= 0 || stroke === 'transparent' || stroke === 'none' ? null // TODO pattern and gradient?\n  : stroke.image || stroke.colorStops ? '#000' : stroke;\n}\n\nfunction getFill(fill) {\n  return fill == null || fill === 'none' ? null // TODO pattern and gradient?\n  : fill.image || fill.colorStops ? '#000' : fill;\n}\n\nfunction parsePercent(value, maxValue) {\n  if (typeof value === 'string') {\n    if (value.lastIndexOf('%') >= 0) {\n      return parseFloat(value) / 100 * maxValue;\n    }\n\n    return parseFloat(value);\n  }\n\n  return value;\n}\n\nfunction getTextXForPadding(x, textAlign, textPadding) {\n  return textAlign === 'right' ? x - textPadding[1] : textAlign === 'center' ? x + textPadding[3] / 2 - textPadding[1] / 2 : x + textPadding[3];\n}\n/**\n * @param {string} text\n * @param {module:zrender/Style} style\n * @return {boolean}\n */\n\n\nfunction needDrawText(text, style) {\n  return text != null && (text || style.textBackgroundColor || style.textBorderWidth && style.textBorderColor || style.textPadding);\n}\n\nexports.normalizeTextStyle = normalizeTextStyle;\nexports.renderText = renderText;\nexports.getStroke = getStroke;\nexports.getFill = getFill;\nexports.needDrawText = needDrawText;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/helper/text.js\n// module id = 491\n// module chunks = 0 1","// TODO Parse shadow style\n// TODO Only shallow path support\n\n    var zrUtil = require('zrender/lib/core/util');\n\n    module.exports = function (properties) {\n        // Normalize\n        for (var i = 0; i < properties.length; i++) {\n            if (!properties[i][1]) {\n               properties[i][1] = properties[i][0];\n            }\n        }\n        return function (excludes) {\n            var style = {};\n            for (var i = 0; i < properties.length; i++) {\n                var propName = properties[i][1];\n                if (excludes && zrUtil.indexOf(excludes, propName) >= 0) {\n                    continue;\n                }\n                var val = this.getShallow(propName);\n                if (val != null) {\n                    style[properties[i][0]] = val;\n                }\n            }\n            return style;\n        };\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/model/mixin/makeStyleMapper.js\n// module id = 492\n// module chunks = 0 1","'use strict';\n\n\n    var zrUtil = require('zrender/lib/core/util');\n\n    /**\n     * Interface of Coordinate System Class\n     *\n     * create:\n     *     @param {module:echarts/model/Global} ecModel\n     *     @param {module:echarts/ExtensionAPI} api\n     *     @return {Object} coordinate system instance\n     *\n     * update:\n     *     @param {module:echarts/model/Global} ecModel\n     *     @param {module:echarts/ExtensionAPI} api\n     *\n     * convertToPixel:\n     * convertFromPixel:\n     *     These two methods is also responsible for determine whether this\n     *     coodinate system is applicable to the given `finder`.\n     *     Each coordinate system will be tried, util one returns none\n     *     null/undefined value.\n     *     @param {module:echarts/model/Global} ecModel\n     *     @param {Object} finder\n     *     @param {Array|number} value\n     *     @return {Array|number} convert result.\n     *\n     * containPoint:\n     *     @param {Array.<number>} point In pixel coordinate system.\n     *     @return {boolean}\n     */\n\n    var coordinateSystemCreators = {};\n\n    function CoordinateSystemManager() {\n\n        this._coordinateSystems = [];\n    }\n\n    CoordinateSystemManager.prototype = {\n\n        constructor: CoordinateSystemManager,\n\n        create: function (ecModel, api) {\n            var coordinateSystems = [];\n            zrUtil.each(coordinateSystemCreators, function (creater, type) {\n                var list = creater.create(ecModel, api);\n                coordinateSystems = coordinateSystems.concat(list || []);\n            });\n\n            this._coordinateSystems = coordinateSystems;\n        },\n\n        update: function (ecModel, api) {\n            zrUtil.each(this._coordinateSystems, function (coordSys) {\n                // FIXME MUST have\n                coordSys.update && coordSys.update(ecModel, api);\n            });\n        },\n\n        getCoordinateSystems: function () {\n            return this._coordinateSystems.slice();\n        }\n    };\n\n    CoordinateSystemManager.register = function (type, coordinateSystemCreator) {\n        coordinateSystemCreators[type] = coordinateSystemCreator;\n    };\n\n    CoordinateSystemManager.get = function (type) {\n        return coordinateSystemCreators[type];\n    };\n\n    module.exports = CoordinateSystemManager;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/CoordinateSystem.js\n// module id = 493\n// module chunks = 0 1","\n\n    var OrdinalScale = require('../scale/Ordinal');\n    var IntervalScale = require('../scale/Interval');\n    require('../scale/Time');\n    require('../scale/Log');\n    var Scale = require('../scale/Scale');\n\n    var numberUtil = require('../util/number');\n    var zrUtil = require('zrender/lib/core/util');\n    var textContain = require('zrender/lib/contain/text');\n    var axisHelper = {};\n\n    /**\n     * Get axis scale extent before niced.\n     * Item of returned array can only be number (including Infinity and NaN).\n     */\n    axisHelper.getScaleExtent = function (axis, model) {\n        var scale = axis.scale;\n        var scaleType = scale.type;\n\n        var min = model.getMin();\n        var max = model.getMax();\n        var fixMin = min != null;\n        var fixMax = max != null;\n        var originalExtent = scale.getExtent();\n\n        var axisDataLen;\n        var boundaryGap;\n        var span;\n        if (scaleType === 'ordinal') {\n            axisDataLen = (model.get('data') || []).length;\n        }\n        else {\n            boundaryGap = model.get('boundaryGap');\n            if (!zrUtil.isArray(boundaryGap)) {\n                boundaryGap = [boundaryGap || 0, boundaryGap || 0];\n            }\n            boundaryGap[0] = numberUtil.parsePercent(boundaryGap[0], 1);\n            boundaryGap[1] = numberUtil.parsePercent(boundaryGap[1], 1);\n            span = originalExtent[1] - originalExtent[0];\n        }\n\n        if (min == null) {\n            min = scaleType === 'ordinal'\n                ? (axisDataLen ? 0 : NaN)\n                : originalExtent[0] - boundaryGap[0] * span;\n        }\n        if (max == null) {\n            max = scaleType === 'ordinal'\n                ? (axisDataLen ? axisDataLen - 1 : NaN)\n                : originalExtent[1] + boundaryGap[1] * span;\n        }\n\n        if (min === 'dataMin') {\n            min = originalExtent[0];\n        }\n        if (max === 'dataMax') {\n            max = originalExtent[1];\n        }\n\n        (min == null || !isFinite(min)) && (min = NaN);\n        (max == null || !isFinite(max)) && (max = NaN);\n\n        axis.setBlank(zrUtil.eqNaN(min) || zrUtil.eqNaN(max));\n\n        // Evaluate if axis needs cross zero\n        if (model.getNeedCrossZero()) {\n            // Axis is over zero and min is not set\n            if (min > 0 && max > 0 && !fixMin) {\n                min = 0;\n            }\n            // Axis is under zero and max is not set\n            if (min < 0 && max < 0 && !fixMax) {\n                max = 0;\n            }\n        }\n\n        return [min, max];\n    };\n\n    axisHelper.niceScaleExtent = function (axis, model) {\n        var scale = axis.scale;\n        var extent = axisHelper.getScaleExtent(axis, model);\n        var fixMin = model.getMin() != null;\n        var fixMax = model.getMax() != null;\n        var splitNumber = model.get('splitNumber');\n\n        if (scale.type === 'log') {\n            scale.base = model.get('logBase');\n        }\n\n        scale.setExtent(extent[0], extent[1]);\n        scale.niceExtent(splitNumber, fixMin, fixMax);\n\n        // Use minInterval to constraint the calculated interval.\n        // If calculated interval is less than minInterval. increase the interval quantity until\n        // it is larger than minInterval.\n        // For example:\n        //  minInterval is 1, calculated interval is 0.2, so increase it to be 1. In this way we can get\n        //  an integer axis.\n        var minInterval = model.get('minInterval');\n        if (isFinite(minInterval) && !fixMin && !fixMax && scale.type === 'interval') {\n            var interval = scale.getInterval();\n            var intervalScale = Math.max(Math.abs(interval), minInterval) / interval;\n            // while (interval < minInterval) {\n            //     var quantity = numberUtil.quantity(interval);\n            //     interval = quantity * 10;\n            //     scaleQuantity *= 10;\n            // }\n            extent = scale.getExtent();\n            var origin = (extent[1] + extent[0]) / 2;\n            scale.setExtent(\n                intervalScale * (extent[0] - origin) + origin,\n                intervalScale * (extent[1] - origin) + origin\n            );\n            scale.niceExtent(splitNumber);\n        }\n\n        // If some one specified the min, max. And the default calculated interval\n        // is not good enough. He can specify the interval. It is often appeared\n        // in angle axis with angle 0 - 360. Interval calculated in interval scale is hard\n        // to be 60.\n        // FIXME\n        var interval = model.get('interval');\n        if (interval != null) {\n            scale.setInterval && scale.setInterval(interval);\n        }\n    };\n\n    /**\n     * @param {module:echarts/model/Model} model\n     * @param {string} [axisType] Default retrieve from model.type\n     * @return {module:echarts/scale/*}\n     */\n    axisHelper.createScaleByModel = function(model, axisType) {\n        axisType = axisType || model.get('type');\n        if (axisType) {\n            switch (axisType) {\n                // Buildin scale\n                case 'category':\n                    return new OrdinalScale(\n                        model.getCategories(), [Infinity, -Infinity]\n                    );\n                case 'value':\n                    return new IntervalScale();\n                // Extended scale, like time and log\n                default:\n                    return (Scale.getClass(axisType) || IntervalScale).create(model);\n            }\n        }\n    };\n\n    /**\n     * Check if the axis corss 0\n     */\n    axisHelper.ifAxisCrossZero = function (axis) {\n        var dataExtent = axis.scale.getExtent();\n        var min = dataExtent[0];\n        var max = dataExtent[1];\n        return !((min > 0 && max > 0) || (min < 0 && max < 0));\n    };\n\n    /**\n     * @param {Array.<number>} tickCoords In axis self coordinate.\n     * @param {Array.<string>} labels\n     * @param {string} font\n     * @param {boolean} isAxisHorizontal\n     * @return {number}\n     */\n    axisHelper.getAxisLabelInterval = function (tickCoords, labels, font, isAxisHorizontal) {\n        // FIXME\n        // 不同角的axis和label，不只是horizontal和vertical.\n\n        var textSpaceTakenRect;\n        var autoLabelInterval = 0;\n        var accumulatedLabelInterval = 0;\n\n        var step = 1;\n        if (labels.length > 40) {\n            // Simple optimization for large amount of labels\n            step = Math.floor(labels.length / 40);\n        }\n\n        for (var i = 0; i < tickCoords.length; i += step) {\n            var tickCoord = tickCoords[i];\n            var rect = textContain.getBoundingRect(\n                labels[i], font, 'center', 'top'\n            );\n            rect[isAxisHorizontal ? 'x' : 'y'] += tickCoord;\n            // FIXME Magic number 1.5\n            rect[isAxisHorizontal ? 'width' : 'height'] *= 1.3;\n            if (!textSpaceTakenRect) {\n                textSpaceTakenRect = rect.clone();\n            }\n            // There is no space for current label;\n            else if (textSpaceTakenRect.intersect(rect)) {\n                accumulatedLabelInterval++;\n                autoLabelInterval = Math.max(autoLabelInterval, accumulatedLabelInterval);\n            }\n            else {\n                textSpaceTakenRect.union(rect);\n                // Reset\n                accumulatedLabelInterval = 0;\n            }\n        }\n        if (autoLabelInterval === 0 && step > 1) {\n            return step;\n        }\n        return (autoLabelInterval + 1) * step - 1;\n    };\n\n    /**\n     * @param {Object} axis\n     * @param {Function} labelFormatter\n     * @return {Array.<string>}\n     */\n    axisHelper.getFormattedLabels = function (axis, labelFormatter) {\n        var scale = axis.scale;\n        var labels = scale.getTicksLabels();\n        var ticks = scale.getTicks();\n        if (typeof labelFormatter === 'string') {\n            labelFormatter = (function (tpl) {\n                return function (val) {\n                    return tpl.replace('{value}', val != null ? val : '');\n                };\n            })(labelFormatter);\n            // Consider empty array\n            return zrUtil.map(labels, labelFormatter);\n        }\n        else if (typeof labelFormatter === 'function') {\n            return zrUtil.map(ticks, function (tick, idx) {\n                return labelFormatter(\n                    axis.type === 'category' ? scale.getLabel(tick) : tick,\n                    idx\n                );\n            }, this);\n        }\n        else {\n            return labels;\n        }\n    };\n\n    module.exports = axisHelper;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/coord/axisHelper.js\n// module id = 494\n// module chunks = 0 1","/**\n * Interval scale\n * @module echarts/scale/Interval\n */\n\n\n\n    var numberUtil = require('../util/number');\n    var formatUtil = require('../util/format');\n    var Scale = require('./Scale');\n\n    var mathFloor = Math.floor;\n    var mathCeil = Math.ceil;\n\n    var getPrecisionSafe = numberUtil.getPrecisionSafe;\n    var roundingErrorFix = numberUtil.round;\n    /**\n     * @alias module:echarts/coord/scale/Interval\n     * @constructor\n     */\n    var IntervalScale = Scale.extend({\n\n        type: 'interval',\n\n        _interval: 0,\n\n        setExtent: function (start, end) {\n            var thisExtent = this._extent;\n            //start,end may be a Number like '25',so...\n            if (!isNaN(start)) {\n                thisExtent[0] = parseFloat(start);\n            }\n            if (!isNaN(end)) {\n                thisExtent[1] = parseFloat(end);\n            }\n        },\n\n        unionExtent: function (other) {\n            var extent = this._extent;\n            other[0] < extent[0] && (extent[0] = other[0]);\n            other[1] > extent[1] && (extent[1] = other[1]);\n\n            // unionExtent may called by it's sub classes\n            IntervalScale.prototype.setExtent.call(this, extent[0], extent[1]);\n        },\n        /**\n         * Get interval\n         */\n        getInterval: function () {\n            if (!this._interval) {\n                this.niceTicks();\n            }\n            return this._interval;\n        },\n\n        /**\n         * Set interval\n         */\n        setInterval: function (interval) {\n            this._interval = interval;\n            // Dropped auto calculated niceExtent and use user setted extent\n            // We assume user wan't to set both interval, min, max to get a better result\n            this._niceExtent = this._extent.slice();\n        },\n\n        /**\n         * @return {Array.<number>}\n         */\n        getTicks: function () {\n            if (!this._interval) {\n                this.niceTicks();\n            }\n            var interval = this._interval;\n            var extent = this._extent;\n            var ticks = [];\n\n            // Consider this case: using dataZoom toolbox, zoom and zoom.\n            var safeLimit = 10000;\n\n            if (interval) {\n                var niceExtent = this._niceExtent;\n                var precision = getPrecisionSafe(interval) + 2;\n\n                if (extent[0] < niceExtent[0]) {\n                    ticks.push(extent[0]);\n                }\n                var tick = niceExtent[0];\n\n                while (tick <= niceExtent[1]) {\n                    ticks.push(tick);\n                    // Avoid rounding error\n                    tick = roundingErrorFix(tick + interval, precision);\n                    if (ticks.length > safeLimit) {\n                        return [];\n                    }\n                }\n                // Consider this case: the last item of ticks is smaller\n                // than niceExtent[1] and niceExtent[1] === extent[1].\n                if (extent[1] > (ticks.length ? ticks[ticks.length - 1] : niceExtent[1])) {\n                    ticks.push(extent[1]);\n                }\n            }\n\n            return ticks;\n        },\n\n        /**\n         * @return {Array.<string>}\n         */\n        getTicksLabels: function () {\n            var labels = [];\n            var ticks = this.getTicks();\n            for (var i = 0; i < ticks.length; i++) {\n                labels.push(this.getLabel(ticks[i]));\n            }\n            return labels;\n        },\n\n        /**\n         * @param {number} n\n         * @return {number}\n         */\n        getLabel: function (data) {\n            return formatUtil.addCommas(data);\n        },\n\n        /**\n         * Update interval and extent of intervals for nice ticks\n         *\n         * @param {number} [splitNumber = 5] Desired number of ticks\n         */\n        niceTicks: function (splitNumber) {\n            splitNumber = splitNumber || 5;\n            var extent = this._extent;\n            var span = extent[1] - extent[0];\n            if (!isFinite(span)) {\n                return;\n            }\n            // User may set axis min 0 and data are all negative\n            // FIXME If it needs to reverse ?\n            if (span < 0) {\n                span = -span;\n                extent.reverse();\n            }\n\n            // From \"Nice Numbers for Graph Labels\" of Graphic Gems\n            // var niceSpan = numberUtil.nice(span, false);\n            var step = roundingErrorFix(\n                numberUtil.nice(span / splitNumber, true),\n                Math.max(\n                    getPrecisionSafe(extent[0]),\n                    getPrecisionSafe(extent[1])\n                // extent may be [0, 1], and step should have 1 more digits.\n                // To make it safe we add 2 more digits\n                ) + 2\n            );\n\n            var precision = getPrecisionSafe(step) + 2;\n            // Niced extent inside original extent\n            var niceExtent = [\n                roundingErrorFix(mathCeil(extent[0] / step) * step, precision),\n                roundingErrorFix(mathFloor(extent[1] / step) * step, precision)\n            ];\n\n            this._interval = step;\n            this._niceExtent = niceExtent;\n        },\n\n        /**\n         * Nice extent.\n         * @param {number} [splitNumber = 5] Given approx tick number\n         * @param {boolean} [fixMin=false]\n         * @param {boolean} [fixMax=false]\n         */\n        niceExtent: function (splitNumber, fixMin, fixMax) {\n            var extent = this._extent;\n            // If extent start and end are same, expand them\n            if (extent[0] === extent[1]) {\n                if (extent[0] !== 0) {\n                    // Expand extent\n                    var expandSize = extent[0];\n                    // In the fowllowing case\n                    //      Axis has been fixed max 100\n                    //      Plus data are all 100 and axis extent are [100, 100].\n                    // Extend to the both side will cause expanded max is larger than fixed max.\n                    // So only expand to the smaller side.\n                    if (!fixMax) {\n                        extent[1] += expandSize / 2;\n                        extent[0] -= expandSize / 2;\n                    }\n                    else {\n                        extent[0] -= expandSize / 2;\n                    }\n                }\n                else {\n                    extent[1] = 1;\n                }\n            }\n            var span = extent[1] - extent[0];\n            // If there are no data and extent are [Infinity, -Infinity]\n            if (!isFinite(span)) {\n                extent[0] = 0;\n                extent[1] = 1;\n            }\n\n            this.niceTicks(splitNumber);\n\n            // var extent = this._extent;\n            var interval = this._interval;\n\n            if (!fixMin) {\n                extent[0] = roundingErrorFix(mathFloor(extent[0] / interval) * interval);\n            }\n            if (!fixMax) {\n                extent[1] = roundingErrorFix(mathCeil(extent[1] / interval) * interval);\n            }\n        }\n    });\n\n    /**\n     * @return {module:echarts/scale/Time}\n     */\n    IntervalScale.create = function () {\n        return new IntervalScale();\n    };\n\n    module.exports = IntervalScale;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/scale/Interval.js\n// module id = 495\n// module chunks = 0 1","\n\n    var zrUtil = require('zrender/lib/core/util');\n    var clazz = require('./clazz');\n\n    var parseClassType = clazz.parseClassType;\n\n    var base = 0;\n\n    var componentUtil = {};\n\n    var DELIMITER = '_';\n\n    /**\n     * @public\n     * @param {string} type\n     * @return {string}\n     */\n    componentUtil.getUID = function (type) {\n        // Considering the case of crossing js context,\n        // use Math.random to make id as unique as possible.\n        return [(type || ''), base++, Math.random()].join(DELIMITER);\n    };\n\n    /**\n     * @inner\n     */\n    componentUtil.enableSubTypeDefaulter = function (entity) {\n\n        var subTypeDefaulters = {};\n\n        entity.registerSubTypeDefaulter = function (componentType, defaulter) {\n            componentType = parseClassType(componentType);\n            subTypeDefaulters[componentType.main] = defaulter;\n        };\n\n        entity.determineSubType = function (componentType, option) {\n            var type = option.type;\n            if (!type) {\n                var componentTypeMain = parseClassType(componentType).main;\n                if (entity.hasSubTypes(componentType) && subTypeDefaulters[componentTypeMain]) {\n                    type = subTypeDefaulters[componentTypeMain](option);\n                }\n            }\n            return type;\n        };\n\n        return entity;\n    };\n\n    /**\n     * Topological travel on Activity Network (Activity On Vertices).\n     * Dependencies is defined in Model.prototype.dependencies, like ['xAxis', 'yAxis'].\n     *\n     * If 'xAxis' or 'yAxis' is absent in componentTypeList, just ignore it in topology.\n     *\n     * If there is circle dependencey, Error will be thrown.\n     *\n     */\n    componentUtil.enableTopologicalTravel = function (entity, dependencyGetter) {\n\n        /**\n         * @public\n         * @param {Array.<string>} targetNameList Target Component type list.\n         *                                           Can be ['aa', 'bb', 'aa.xx']\n         * @param {Array.<string>} fullNameList By which we can build dependency graph.\n         * @param {Function} callback Params: componentType, dependencies.\n         * @param {Object} context Scope of callback.\n         */\n        entity.topologicalTravel = function (targetNameList, fullNameList, callback, context) {\n            if (!targetNameList.length) {\n                return;\n            }\n\n            var result = makeDepndencyGraph(fullNameList);\n            var graph = result.graph;\n            var stack = result.noEntryList;\n\n            var targetNameSet = {};\n            zrUtil.each(targetNameList, function (name) {\n                targetNameSet[name] = true;\n            });\n\n            while (stack.length) {\n                var currComponentType = stack.pop();\n                var currVertex = graph[currComponentType];\n                var isInTargetNameSet = !!targetNameSet[currComponentType];\n                if (isInTargetNameSet) {\n                    callback.call(context, currComponentType, currVertex.originalDeps.slice());\n                    delete targetNameSet[currComponentType];\n                }\n                zrUtil.each(\n                    currVertex.successor,\n                    isInTargetNameSet ? removeEdgeAndAdd : removeEdge\n                );\n            }\n\n            zrUtil.each(targetNameSet, function () {\n                throw new Error('Circle dependency may exists');\n            });\n\n            function removeEdge(succComponentType) {\n                graph[succComponentType].entryCount--;\n                if (graph[succComponentType].entryCount === 0) {\n                    stack.push(succComponentType);\n                }\n            }\n\n            // Consider this case: legend depends on series, and we call\n            // chart.setOption({series: [...]}), where only series is in option.\n            // If we do not have 'removeEdgeAndAdd', legendModel.mergeOption will\n            // not be called, but only sereis.mergeOption is called. Thus legend\n            // have no chance to update its local record about series (like which\n            // name of series is available in legend).\n            function removeEdgeAndAdd(succComponentType) {\n                targetNameSet[succComponentType] = true;\n                removeEdge(succComponentType);\n            }\n        };\n\n        /**\n         * DepndencyGraph: {Object}\n         * key: conponentType,\n         * value: {\n         *     successor: [conponentTypes...],\n         *     originalDeps: [conponentTypes...],\n         *     entryCount: {number}\n         * }\n         */\n        function makeDepndencyGraph(fullNameList) {\n            var graph = {};\n            var noEntryList = [];\n\n            zrUtil.each(fullNameList, function (name) {\n\n                var thisItem = createDependencyGraphItem(graph, name);\n                var originalDeps = thisItem.originalDeps = dependencyGetter(name);\n\n                var availableDeps = getAvailableDependencies(originalDeps, fullNameList);\n                thisItem.entryCount = availableDeps.length;\n                if (thisItem.entryCount === 0) {\n                    noEntryList.push(name);\n                }\n\n                zrUtil.each(availableDeps, function (dependentName) {\n                    if (zrUtil.indexOf(thisItem.predecessor, dependentName) < 0) {\n                        thisItem.predecessor.push(dependentName);\n                    }\n                    var thatItem = createDependencyGraphItem(graph, dependentName);\n                    if (zrUtil.indexOf(thatItem.successor, dependentName) < 0) {\n                        thatItem.successor.push(name);\n                    }\n                });\n            });\n\n            return {graph: graph, noEntryList: noEntryList};\n        }\n\n        function createDependencyGraphItem(graph, name) {\n            if (!graph[name]) {\n                graph[name] = {predecessor: [], successor: []};\n            }\n            return graph[name];\n        }\n\n        function getAvailableDependencies(originalDeps, fullNameList) {\n            var availableDeps = [];\n            zrUtil.each(originalDeps, function (dep) {\n                zrUtil.indexOf(fullNameList, dep) >= 0 && availableDeps.push(dep);\n            });\n            return availableDeps;\n        }\n    };\n\n    module.exports = componentUtil;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/util/component.js\n// module id = 496\n// module chunks = 0 1","// https://github.com/mziccard/node-timsort\nvar DEFAULT_MIN_MERGE = 32;\nvar DEFAULT_MIN_GALLOPING = 7;\nvar DEFAULT_TMP_STORAGE_LENGTH = 256;\n\nfunction minRunLength(n) {\n  var r = 0;\n\n  while (n >= DEFAULT_MIN_MERGE) {\n    r |= n & 1;\n    n >>= 1;\n  }\n\n  return n + r;\n}\n\nfunction makeAscendingRun(array, lo, hi, compare) {\n  var runHi = lo + 1;\n\n  if (runHi === hi) {\n    return 1;\n  }\n\n  if (compare(array[runHi++], array[lo]) < 0) {\n    while (runHi < hi && compare(array[runHi], array[runHi - 1]) < 0) {\n      runHi++;\n    }\n\n    reverseRun(array, lo, runHi);\n  } else {\n    while (runHi < hi && compare(array[runHi], array[runHi - 1]) >= 0) {\n      runHi++;\n    }\n  }\n\n  return runHi - lo;\n}\n\nfunction reverseRun(array, lo, hi) {\n  hi--;\n\n  while (lo < hi) {\n    var t = array[lo];\n    array[lo++] = array[hi];\n    array[hi--] = t;\n  }\n}\n\nfunction binaryInsertionSort(array, lo, hi, start, compare) {\n  if (start === lo) {\n    start++;\n  }\n\n  for (; start < hi; start++) {\n    var pivot = array[start];\n    var left = lo;\n    var right = start;\n    var mid;\n\n    while (left < right) {\n      mid = left + right >>> 1;\n\n      if (compare(pivot, array[mid]) < 0) {\n        right = mid;\n      } else {\n        left = mid + 1;\n      }\n    }\n\n    var n = start - left;\n\n    switch (n) {\n      case 3:\n        array[left + 3] = array[left + 2];\n\n      case 2:\n        array[left + 2] = array[left + 1];\n\n      case 1:\n        array[left + 1] = array[left];\n        break;\n\n      default:\n        while (n > 0) {\n          array[left + n] = array[left + n - 1];\n          n--;\n        }\n\n    }\n\n    array[left] = pivot;\n  }\n}\n\nfunction gallopLeft(value, array, start, length, hint, compare) {\n  var lastOffset = 0;\n  var maxOffset = 0;\n  var offset = 1;\n\n  if (compare(value, array[start + hint]) > 0) {\n    maxOffset = length - hint;\n\n    while (offset < maxOffset && compare(value, array[start + hint + offset]) > 0) {\n      lastOffset = offset;\n      offset = (offset << 1) + 1;\n\n      if (offset <= 0) {\n        offset = maxOffset;\n      }\n    }\n\n    if (offset > maxOffset) {\n      offset = maxOffset;\n    }\n\n    lastOffset += hint;\n    offset += hint;\n  } else {\n    maxOffset = hint + 1;\n\n    while (offset < maxOffset && compare(value, array[start + hint - offset]) <= 0) {\n      lastOffset = offset;\n      offset = (offset << 1) + 1;\n\n      if (offset <= 0) {\n        offset = maxOffset;\n      }\n    }\n\n    if (offset > maxOffset) {\n      offset = maxOffset;\n    }\n\n    var tmp = lastOffset;\n    lastOffset = hint - offset;\n    offset = hint - tmp;\n  }\n\n  lastOffset++;\n\n  while (lastOffset < offset) {\n    var m = lastOffset + (offset - lastOffset >>> 1);\n\n    if (compare(value, array[start + m]) > 0) {\n      lastOffset = m + 1;\n    } else {\n      offset = m;\n    }\n  }\n\n  return offset;\n}\n\nfunction gallopRight(value, array, start, length, hint, compare) {\n  var lastOffset = 0;\n  var maxOffset = 0;\n  var offset = 1;\n\n  if (compare(value, array[start + hint]) < 0) {\n    maxOffset = hint + 1;\n\n    while (offset < maxOffset && compare(value, array[start + hint - offset]) < 0) {\n      lastOffset = offset;\n      offset = (offset << 1) + 1;\n\n      if (offset <= 0) {\n        offset = maxOffset;\n      }\n    }\n\n    if (offset > maxOffset) {\n      offset = maxOffset;\n    }\n\n    var tmp = lastOffset;\n    lastOffset = hint - offset;\n    offset = hint - tmp;\n  } else {\n    maxOffset = length - hint;\n\n    while (offset < maxOffset && compare(value, array[start + hint + offset]) >= 0) {\n      lastOffset = offset;\n      offset = (offset << 1) + 1;\n\n      if (offset <= 0) {\n        offset = maxOffset;\n      }\n    }\n\n    if (offset > maxOffset) {\n      offset = maxOffset;\n    }\n\n    lastOffset += hint;\n    offset += hint;\n  }\n\n  lastOffset++;\n\n  while (lastOffset < offset) {\n    var m = lastOffset + (offset - lastOffset >>> 1);\n\n    if (compare(value, array[start + m]) < 0) {\n      offset = m;\n    } else {\n      lastOffset = m + 1;\n    }\n  }\n\n  return offset;\n}\n\nfunction TimSort(array, compare) {\n  var minGallop = DEFAULT_MIN_GALLOPING;\n  var length = 0;\n  var tmpStorageLength = DEFAULT_TMP_STORAGE_LENGTH;\n  var stackLength = 0;\n  var runStart;\n  var runLength;\n  var stackSize = 0;\n  length = array.length;\n\n  if (length < 2 * DEFAULT_TMP_STORAGE_LENGTH) {\n    tmpStorageLength = length >>> 1;\n  }\n\n  var tmp = [];\n  stackLength = length < 120 ? 5 : length < 1542 ? 10 : length < 119151 ? 19 : 40;\n  runStart = [];\n  runLength = [];\n\n  function pushRun(_runStart, _runLength) {\n    runStart[stackSize] = _runStart;\n    runLength[stackSize] = _runLength;\n    stackSize += 1;\n  }\n\n  function mergeRuns() {\n    while (stackSize > 1) {\n      var n = stackSize - 2;\n\n      if (n >= 1 && runLength[n - 1] <= runLength[n] + runLength[n + 1] || n >= 2 && runLength[n - 2] <= runLength[n] + runLength[n - 1]) {\n        if (runLength[n - 1] < runLength[n + 1]) {\n          n--;\n        }\n      } else if (runLength[n] > runLength[n + 1]) {\n        break;\n      }\n\n      mergeAt(n);\n    }\n  }\n\n  function forceMergeRuns() {\n    while (stackSize > 1) {\n      var n = stackSize - 2;\n\n      if (n > 0 && runLength[n - 1] < runLength[n + 1]) {\n        n--;\n      }\n\n      mergeAt(n);\n    }\n  }\n\n  function mergeAt(i) {\n    var start1 = runStart[i];\n    var length1 = runLength[i];\n    var start2 = runStart[i + 1];\n    var length2 = runLength[i + 1];\n    runLength[i] = length1 + length2;\n\n    if (i === stackSize - 3) {\n      runStart[i + 1] = runStart[i + 2];\n      runLength[i + 1] = runLength[i + 2];\n    }\n\n    stackSize--;\n    var k = gallopRight(array[start2], array, start1, length1, 0, compare);\n    start1 += k;\n    length1 -= k;\n\n    if (length1 === 0) {\n      return;\n    }\n\n    length2 = gallopLeft(array[start1 + length1 - 1], array, start2, length2, length2 - 1, compare);\n\n    if (length2 === 0) {\n      return;\n    }\n\n    if (length1 <= length2) {\n      mergeLow(start1, length1, start2, length2);\n    } else {\n      mergeHigh(start1, length1, start2, length2);\n    }\n  }\n\n  function mergeLow(start1, length1, start2, length2) {\n    var i = 0;\n\n    for (i = 0; i < length1; i++) {\n      tmp[i] = array[start1 + i];\n    }\n\n    var cursor1 = 0;\n    var cursor2 = start2;\n    var dest = start1;\n    array[dest++] = array[cursor2++];\n\n    if (--length2 === 0) {\n      for (i = 0; i < length1; i++) {\n        array[dest + i] = tmp[cursor1 + i];\n      }\n\n      return;\n    }\n\n    if (length1 === 1) {\n      for (i = 0; i < length2; i++) {\n        array[dest + i] = array[cursor2 + i];\n      }\n\n      array[dest + length2] = tmp[cursor1];\n      return;\n    }\n\n    var _minGallop = minGallop;\n    var count1, count2, exit;\n\n    while (1) {\n      count1 = 0;\n      count2 = 0;\n      exit = false;\n\n      do {\n        if (compare(array[cursor2], tmp[cursor1]) < 0) {\n          array[dest++] = array[cursor2++];\n          count2++;\n          count1 = 0;\n\n          if (--length2 === 0) {\n            exit = true;\n            break;\n          }\n        } else {\n          array[dest++] = tmp[cursor1++];\n          count1++;\n          count2 = 0;\n\n          if (--length1 === 1) {\n            exit = true;\n            break;\n          }\n        }\n      } while ((count1 | count2) < _minGallop);\n\n      if (exit) {\n        break;\n      }\n\n      do {\n        count1 = gallopRight(array[cursor2], tmp, cursor1, length1, 0, compare);\n\n        if (count1 !== 0) {\n          for (i = 0; i < count1; i++) {\n            array[dest + i] = tmp[cursor1 + i];\n          }\n\n          dest += count1;\n          cursor1 += count1;\n          length1 -= count1;\n\n          if (length1 <= 1) {\n            exit = true;\n            break;\n          }\n        }\n\n        array[dest++] = array[cursor2++];\n\n        if (--length2 === 0) {\n          exit = true;\n          break;\n        }\n\n        count2 = gallopLeft(tmp[cursor1], array, cursor2, length2, 0, compare);\n\n        if (count2 !== 0) {\n          for (i = 0; i < count2; i++) {\n            array[dest + i] = array[cursor2 + i];\n          }\n\n          dest += count2;\n          cursor2 += count2;\n          length2 -= count2;\n\n          if (length2 === 0) {\n            exit = true;\n            break;\n          }\n        }\n\n        array[dest++] = tmp[cursor1++];\n\n        if (--length1 === 1) {\n          exit = true;\n          break;\n        }\n\n        _minGallop--;\n      } while (count1 >= DEFAULT_MIN_GALLOPING || count2 >= DEFAULT_MIN_GALLOPING);\n\n      if (exit) {\n        break;\n      }\n\n      if (_minGallop < 0) {\n        _minGallop = 0;\n      }\n\n      _minGallop += 2;\n    }\n\n    minGallop = _minGallop;\n    minGallop < 1 && (minGallop = 1);\n\n    if (length1 === 1) {\n      for (i = 0; i < length2; i++) {\n        array[dest + i] = array[cursor2 + i];\n      }\n\n      array[dest + length2] = tmp[cursor1];\n    } else if (length1 === 0) {\n      throw new Error(); // throw new Error('mergeLow preconditions were not respected');\n    } else {\n      for (i = 0; i < length1; i++) {\n        array[dest + i] = tmp[cursor1 + i];\n      }\n    }\n  }\n\n  function mergeHigh(start1, length1, start2, length2) {\n    var i = 0;\n\n    for (i = 0; i < length2; i++) {\n      tmp[i] = array[start2 + i];\n    }\n\n    var cursor1 = start1 + length1 - 1;\n    var cursor2 = length2 - 1;\n    var dest = start2 + length2 - 1;\n    var customCursor = 0;\n    var customDest = 0;\n    array[dest--] = array[cursor1--];\n\n    if (--length1 === 0) {\n      customCursor = dest - (length2 - 1);\n\n      for (i = 0; i < length2; i++) {\n        array[customCursor + i] = tmp[i];\n      }\n\n      return;\n    }\n\n    if (length2 === 1) {\n      dest -= length1;\n      cursor1 -= length1;\n      customDest = dest + 1;\n      customCursor = cursor1 + 1;\n\n      for (i = length1 - 1; i >= 0; i--) {\n        array[customDest + i] = array[customCursor + i];\n      }\n\n      array[dest] = tmp[cursor2];\n      return;\n    }\n\n    var _minGallop = minGallop;\n\n    while (true) {\n      var count1 = 0;\n      var count2 = 0;\n      var exit = false;\n\n      do {\n        if (compare(tmp[cursor2], array[cursor1]) < 0) {\n          array[dest--] = array[cursor1--];\n          count1++;\n          count2 = 0;\n\n          if (--length1 === 0) {\n            exit = true;\n            break;\n          }\n        } else {\n          array[dest--] = tmp[cursor2--];\n          count2++;\n          count1 = 0;\n\n          if (--length2 === 1) {\n            exit = true;\n            break;\n          }\n        }\n      } while ((count1 | count2) < _minGallop);\n\n      if (exit) {\n        break;\n      }\n\n      do {\n        count1 = length1 - gallopRight(tmp[cursor2], array, start1, length1, length1 - 1, compare);\n\n        if (count1 !== 0) {\n          dest -= count1;\n          cursor1 -= count1;\n          length1 -= count1;\n          customDest = dest + 1;\n          customCursor = cursor1 + 1;\n\n          for (i = count1 - 1; i >= 0; i--) {\n            array[customDest + i] = array[customCursor + i];\n          }\n\n          if (length1 === 0) {\n            exit = true;\n            break;\n          }\n        }\n\n        array[dest--] = tmp[cursor2--];\n\n        if (--length2 === 1) {\n          exit = true;\n          break;\n        }\n\n        count2 = length2 - gallopLeft(array[cursor1], tmp, 0, length2, length2 - 1, compare);\n\n        if (count2 !== 0) {\n          dest -= count2;\n          cursor2 -= count2;\n          length2 -= count2;\n          customDest = dest + 1;\n          customCursor = cursor2 + 1;\n\n          for (i = 0; i < count2; i++) {\n            array[customDest + i] = tmp[customCursor + i];\n          }\n\n          if (length2 <= 1) {\n            exit = true;\n            break;\n          }\n        }\n\n        array[dest--] = array[cursor1--];\n\n        if (--length1 === 0) {\n          exit = true;\n          break;\n        }\n\n        _minGallop--;\n      } while (count1 >= DEFAULT_MIN_GALLOPING || count2 >= DEFAULT_MIN_GALLOPING);\n\n      if (exit) {\n        break;\n      }\n\n      if (_minGallop < 0) {\n        _minGallop = 0;\n      }\n\n      _minGallop += 2;\n    }\n\n    minGallop = _minGallop;\n\n    if (minGallop < 1) {\n      minGallop = 1;\n    }\n\n    if (length2 === 1) {\n      dest -= length1;\n      cursor1 -= length1;\n      customDest = dest + 1;\n      customCursor = cursor1 + 1;\n\n      for (i = length1 - 1; i >= 0; i--) {\n        array[customDest + i] = array[customCursor + i];\n      }\n\n      array[dest] = tmp[cursor2];\n    } else if (length2 === 0) {\n      throw new Error(); // throw new Error('mergeHigh preconditions were not respected');\n    } else {\n      customCursor = dest - (length2 - 1);\n\n      for (i = 0; i < length2; i++) {\n        array[customCursor + i] = tmp[i];\n      }\n    }\n  }\n\n  this.mergeRuns = mergeRuns;\n  this.forceMergeRuns = forceMergeRuns;\n  this.pushRun = pushRun;\n}\n\nfunction sort(array, compare, lo, hi) {\n  if (!lo) {\n    lo = 0;\n  }\n\n  if (!hi) {\n    hi = array.length;\n  }\n\n  var remaining = hi - lo;\n\n  if (remaining < 2) {\n    return;\n  }\n\n  var runLength = 0;\n\n  if (remaining < DEFAULT_MIN_MERGE) {\n    runLength = makeAscendingRun(array, lo, hi, compare);\n    binaryInsertionSort(array, lo, hi, lo + runLength, compare);\n    return;\n  }\n\n  var ts = new TimSort(array, compare);\n  var minRun = minRunLength(remaining);\n\n  do {\n    runLength = makeAscendingRun(array, lo, hi, compare);\n\n    if (runLength < minRun) {\n      var force = remaining;\n\n      if (force > minRun) {\n        force = minRun;\n      }\n\n      binaryInsertionSort(array, lo, lo + force, lo + runLength, compare);\n      runLength = force;\n    }\n\n    ts.pushRun(lo, runLength);\n    ts.mergeRuns();\n    remaining -= runLength;\n    lo += runLength;\n  } while (remaining !== 0);\n\n  ts.forceMergeRuns();\n}\n\nmodule.exports = sort;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/core/timsort.js\n// module id = 497\n// module chunks = 0 1","var Pattern = function (image, repeat) {\n  // Should do nothing more in this constructor. Because gradient can be\n  // declard by `color: {image: ...}`, where this constructor will not be called.\n  this.image = image;\n  this.repeat = repeat; // Can be cloned\n\n  this.type = 'pattern';\n};\n\nPattern.prototype.getCanvasPattern = function (ctx) {\n  return ctx.createPattern(this.image, this.repeat || 'repeat');\n};\n\nvar _default = Pattern;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/Pattern.js\n// module id = 498\n// module chunks = 0 1","var LRU = require(\"../../core/LRU\");\n\nvar globalImageCache = new LRU(50);\n/**\n * @param {string|HTMLImageElement|HTMLCanvasElement|Canvas} newImageOrSrc\n * @return {HTMLImageElement|HTMLCanvasElement|Canvas} image\n */\n\nfunction findExistImage(newImageOrSrc) {\n  if (typeof newImageOrSrc === 'string') {\n    var cachedImgObj = globalImageCache.get(newImageOrSrc);\n    return cachedImgObj && cachedImgObj.image;\n  } else {\n    return newImageOrSrc;\n  }\n}\n/**\n * Caution: User should cache loaded images, but not just count on LRU.\n * Consider if required images more than LRU size, will dead loop occur?\n *\n * @param {string|HTMLImageElement|HTMLCanvasElement|Canvas} newImageOrSrc\n * @param {HTMLImageElement|HTMLCanvasElement|Canvas} image Existent image.\n * @param {module:zrender/Element} [hostEl] For calling `dirty`.\n * @param {Function} [cb] params: (image, cbPayload)\n * @param {Object} [cbPayload] Payload on cb calling.\n * @return {HTMLImageElement|HTMLCanvasElement|Canvas} image\n */\n\n\nfunction createOrUpdateImage(newImageOrSrc, image, hostEl, cb, cbPayload) {\n  if (!newImageOrSrc) {\n    return image;\n  } else if (typeof newImageOrSrc === 'string') {\n    // Image should not be loaded repeatly.\n    if (image && image.__zrImageSrc === newImageOrSrc || !hostEl) {\n      return image;\n    } // Only when there is no existent image or existent image src\n    // is different, this method is responsible for load.\n\n\n    var cachedImgObj = globalImageCache.get(newImageOrSrc);\n    var pendingWrap = {\n      hostEl: hostEl,\n      cb: cb,\n      cbPayload: cbPayload\n    };\n\n    if (cachedImgObj) {\n      image = cachedImgObj.image;\n      !isImageReady(image) && cachedImgObj.pending.push(pendingWrap);\n    } else {\n      !image && (image = new Image());\n      image.onload = imageOnLoad;\n      globalImageCache.put(newImageOrSrc, image.__cachedImgObj = {\n        image: image,\n        pending: [pendingWrap]\n      });\n      image.src = image.__zrImageSrc = newImageOrSrc;\n    }\n\n    return image;\n  } // newImageOrSrc is an HTMLImageElement or HTMLCanvasElement or Canvas\n  else {\n      return newImageOrSrc;\n    }\n}\n\nfunction imageOnLoad() {\n  var cachedImgObj = this.__cachedImgObj;\n  this.onload = this.__cachedImgObj = null;\n\n  for (var i = 0; i < cachedImgObj.pending.length; i++) {\n    var pendingWrap = cachedImgObj.pending[i];\n    var cb = pendingWrap.cb;\n    cb && cb(this, pendingWrap.cbPayload);\n    pendingWrap.hostEl.dirty();\n  }\n\n  cachedImgObj.pending.length = 0;\n}\n\nfunction isImageReady(image) {\n  return image && image.width && image.height;\n}\n\nexports.findExistImage = findExistImage;\nexports.createOrUpdateImage = createOrUpdateImage;\nexports.isImageReady = isImageReady;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/helper/image.js\n// module id = 499\n// module chunks = 0 1","var svgURI = 'http://www.w3.org/2000/svg';\n\nfunction createElement(name) {\n  return document.createElementNS(svgURI, name);\n}\n\nexports.createElement = createElement;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/svg/core.js\n// module id = 500\n// module chunks = 0 1","var _core = require(\"./core\");\n\nvar createElement = _core.createElement;\n\nvar PathProxy = require(\"../core/PathProxy\");\n\nvar BoundingRect = require(\"../core/BoundingRect\");\n\nvar textContain = require(\"../contain/text\");\n\nvar textHelper = require(\"../graphic/helper/text\");\n\nvar Text = require(\"../graphic/Text\");\n\n// TODO\n// 1. shadow\n// 2. Image: sx, sy, sw, sh\nvar CMD = PathProxy.CMD;\nvar arrayJoin = Array.prototype.join;\nvar NONE = 'none';\nvar mathRound = Math.round;\nvar mathSin = Math.sin;\nvar mathCos = Math.cos;\nvar PI = Math.PI;\nvar PI2 = Math.PI * 2;\nvar degree = 180 / PI;\nvar EPSILON = 1e-4;\n\nfunction round4(val) {\n  return mathRound(val * 1e4) / 1e4;\n}\n\nfunction isAroundZero(val) {\n  return val < EPSILON && val > -EPSILON;\n}\n\nfunction pathHasFill(style, isText) {\n  var fill = isText ? style.textFill : style.fill;\n  return fill != null && fill !== NONE;\n}\n\nfunction pathHasStroke(style, isText) {\n  var stroke = isText ? style.textStroke : style.stroke;\n  return stroke != null && stroke !== NONE;\n}\n\nfunction setTransform(svgEl, m) {\n  if (m) {\n    attr(svgEl, 'transform', 'matrix(' + arrayJoin.call(m, ',') + ')');\n  }\n}\n\nfunction attr(el, key, val) {\n  if (!val || val.type !== 'linear' && val.type !== 'radial') {\n    // Don't set attribute for gradient, since it need new dom nodes\n    el.setAttribute(key, val);\n  }\n}\n\nfunction attrXLink(el, key, val) {\n  el.setAttributeNS('http://www.w3.org/1999/xlink', key, val);\n}\n\nfunction bindStyle(svgEl, style, isText) {\n  if (pathHasFill(style, isText)) {\n    var fill = isText ? style.textFill : style.fill;\n    fill = fill === 'transparent' ? NONE : fill;\n    /**\n     * FIXME:\n     * This is a temporary fix for Chrome's clipping bug\n     * that happens when a clip-path is referring another one.\n     * This fix should be used before Chrome's bug is fixed.\n     * For an element that has clip-path, and fill is none,\n     * set it to be \"rgba(0, 0, 0, 0.002)\" will hide the element.\n     * Otherwise, it will show black fill color.\n     * 0.002 is used because this won't work for alpha values smaller\n     * than 0.002.\n     *\n     * See\n     * https://bugs.chromium.org/p/chromium/issues/detail?id=659790\n     * for more information.\n     */\n\n    if (svgEl.getAttribute('clip-path') !== 'none' && fill === NONE) {\n      fill = 'rgba(0, 0, 0, 0.002)';\n    }\n\n    attr(svgEl, 'fill', fill);\n    attr(svgEl, 'fill-opacity', style.opacity);\n  } else {\n    attr(svgEl, 'fill', NONE);\n  }\n\n  if (pathHasStroke(style, isText)) {\n    var stroke = isText ? style.textStroke : style.stroke;\n    stroke = stroke === 'transparent' ? NONE : stroke;\n    attr(svgEl, 'stroke', stroke);\n    var strokeWidth = isText ? style.textStrokeWidth : style.lineWidth;\n    var strokeScale = style.strokeNoScale ? style.host.getLineScale() : 1;\n    attr(svgEl, 'stroke-width', strokeWidth / strokeScale);\n    attr(svgEl, 'paint-order', 'stroke');\n    attr(svgEl, 'stroke-opacity', style.opacity);\n    var lineDash = style.lineDash;\n\n    if (lineDash) {\n      attr(svgEl, 'stroke-dasharray', style.lineDash.join(','));\n      attr(svgEl, 'stroke-dashoffset', mathRound(style.lineDashOffset || 0));\n    } else {\n      attr(svgEl, 'stroke-dasharray', '');\n    } // PENDING\n\n\n    style.lineCap && attr(svgEl, 'stroke-linecap', style.lineCap);\n    style.lineJoin && attr(svgEl, 'stroke-linejoin', style.lineJoin);\n    style.miterLimit && attr(svgEl, 'stroke-miterlimit', style.miterLimit);\n  } else {\n    attr(svgEl, 'stroke', NONE);\n  }\n}\n/***************************************************\n * PATH\n **************************************************/\n\n\nfunction pathDataToString(path) {\n  var str = [];\n  var data = path.data;\n  var dataLength = path.len();\n\n  for (var i = 0; i < dataLength;) {\n    var cmd = data[i++];\n    var cmdStr = '';\n    var nData = 0;\n\n    switch (cmd) {\n      case CMD.M:\n        cmdStr = 'M';\n        nData = 2;\n        break;\n\n      case CMD.L:\n        cmdStr = 'L';\n        nData = 2;\n        break;\n\n      case CMD.Q:\n        cmdStr = 'Q';\n        nData = 4;\n        break;\n\n      case CMD.C:\n        cmdStr = 'C';\n        nData = 6;\n        break;\n\n      case CMD.A:\n        var cx = data[i++];\n        var cy = data[i++];\n        var rx = data[i++];\n        var ry = data[i++];\n        var theta = data[i++];\n        var dTheta = data[i++];\n        var psi = data[i++];\n        var clockwise = data[i++];\n        var dThetaPositive = Math.abs(dTheta);\n        var isCircle = isAroundZero(dThetaPositive % PI2) && !isAroundZero(dThetaPositive);\n        var large = false;\n\n        if (dThetaPositive >= PI2) {\n          large = true;\n        } else if (isAroundZero(dThetaPositive)) {\n          large = false;\n        } else {\n          large = (dTheta > -PI && dTheta < 0 || dTheta > PI) === !!clockwise;\n        }\n\n        var x0 = round4(cx + rx * mathCos(theta));\n        var y0 = round4(cy + ry * mathSin(theta)); // It will not draw if start point and end point are exactly the same\n        // We need to shift the end point with a small value\n        // FIXME A better way to draw circle ?\n\n        if (isCircle) {\n          if (clockwise) {\n            dTheta = PI2 - 1e-4;\n          } else {\n            dTheta = -PI2 + 1e-4;\n          }\n\n          large = true;\n\n          if (i === 9) {\n            // Move to (x0, y0) only when CMD.A comes at the\n            // first position of a shape.\n            // For instance, when drawing a ring, CMD.A comes\n            // after CMD.M, so it's unnecessary to move to\n            // (x0, y0).\n            str.push('M', x0, y0);\n          }\n        }\n\n        var x = round4(cx + rx * mathCos(theta + dTheta));\n        var y = round4(cy + ry * mathSin(theta + dTheta)); // FIXME Ellipse\n\n        str.push('A', round4(rx), round4(ry), mathRound(psi * degree), +large, +clockwise, x, y);\n        break;\n\n      case CMD.Z:\n        cmdStr = 'Z';\n        break;\n\n      case CMD.R:\n        var x = round4(data[i++]);\n        var y = round4(data[i++]);\n        var w = round4(data[i++]);\n        var h = round4(data[i++]);\n        str.push('M', x, y, 'L', x + w, y, 'L', x + w, y + h, 'L', x, y + h, 'L', x, y);\n        break;\n    }\n\n    cmdStr && str.push(cmdStr);\n\n    for (var j = 0; j < nData; j++) {\n      // PENDING With scale\n      str.push(round4(data[i++]));\n    }\n  }\n\n  return str.join(' ');\n}\n\nvar svgPath = {};\n\nsvgPath.brush = function (el) {\n  var style = el.style;\n  var svgEl = el.__svgEl;\n\n  if (!svgEl) {\n    svgEl = createElement('path');\n    el.__svgEl = svgEl;\n  }\n\n  if (!el.path) {\n    el.createPathProxy();\n  }\n\n  var path = el.path;\n\n  if (el.__dirtyPath) {\n    path.beginPath();\n    el.buildPath(path, el.shape);\n    el.__dirtyPath = false;\n    var pathStr = pathDataToString(path);\n\n    if (pathStr.indexOf('NaN') < 0) {\n      // Ignore illegal path, which may happen such in out-of-range\n      // data in Calendar series.\n      attr(svgEl, 'd', pathStr);\n    }\n  }\n\n  bindStyle(svgEl, style);\n  setTransform(svgEl, el.transform);\n\n  if (style.text != null) {\n    svgTextDrawRectText(el, el.getBoundingRect());\n  }\n};\n/***************************************************\n * IMAGE\n **************************************************/\n\n\nvar svgImage = {};\n\nsvgImage.brush = function (el) {\n  var style = el.style;\n  var image = style.image;\n\n  if (image instanceof HTMLImageElement) {\n    var src = image.src;\n    image = src;\n  }\n\n  if (!image) {\n    return;\n  }\n\n  var x = style.x || 0;\n  var y = style.y || 0;\n  var dw = style.width;\n  var dh = style.height;\n  var svgEl = el.__svgEl;\n\n  if (!svgEl) {\n    svgEl = createElement('image');\n    el.__svgEl = svgEl;\n  }\n\n  if (image !== el.__imageSrc) {\n    attrXLink(svgEl, 'href', image); // Caching image src\n\n    el.__imageSrc = image;\n  }\n\n  attr(svgEl, 'width', dw);\n  attr(svgEl, 'height', dh);\n  attr(svgEl, 'x', x);\n  attr(svgEl, 'y', y);\n  setTransform(svgEl, el.transform);\n\n  if (style.text != null) {\n    svgTextDrawRectText(el, el.getBoundingRect());\n  }\n};\n/***************************************************\n * TEXT\n **************************************************/\n\n\nvar svgText = {};\nvar tmpRect = new BoundingRect();\n\nvar svgTextDrawRectText = function (el, rect, textRect) {\n  var style = el.style;\n  el.__dirty && textHelper.normalizeTextStyle(style, true);\n  var text = style.text; // Convert to string\n\n  if (text == null) {\n    // Draw no text only when text is set to null, but not ''\n    return;\n  } else {\n    text += '';\n  }\n\n  var textSvgEl = el.__textSvgEl;\n\n  if (!textSvgEl) {\n    textSvgEl = createElement('text');\n    el.__textSvgEl = textSvgEl;\n  }\n\n  bindStyle(textSvgEl, style, true);\n\n  if (el instanceof Text || el.style.transformText) {\n    // Transform text with element\n    setTransform(textSvgEl, el.transform);\n  } else {\n    if (el.transform) {\n      tmpRect.copy(rect);\n      tmpRect.applyTransform(el.transform);\n      rect = tmpRect;\n    } else {\n      var pos = el.transformCoordToGlobal(rect.x, rect.y);\n      rect.x = pos[0];\n      rect.y = pos[1];\n    }\n  }\n\n  var x;\n  var y;\n  var textPosition = style.textPosition;\n  var distance = style.textDistance;\n  var align = style.textAlign || 'left';\n\n  if (typeof style.fontSize === 'number') {\n    style.fontSize += 'px';\n  }\n\n  var font = style.font || [style.fontStyle || '', style.fontWeight || '', style.fontSize || '', style.fontFamily || ''].join(' ') || textContain.DEFAULT_FONT;\n  var verticalAlign = getVerticalAlignForSvg(style.textVerticalAlign);\n  textRect = textContain.getBoundingRect(text, font, align, verticalAlign);\n  var lineHeight = textRect.lineHeight; // Text position represented by coord\n\n  if (textPosition instanceof Array) {\n    x = rect.x + textPosition[0];\n    y = rect.y + textPosition[1];\n  } else {\n    var newPos = textContain.adjustTextPositionOnRect(textPosition, rect, distance);\n    x = newPos.x;\n    y = newPos.y;\n    verticalAlign = getVerticalAlignForSvg(newPos.textVerticalAlign);\n    align = newPos.textAlign;\n  }\n\n  attr(textSvgEl, 'alignment-baseline', verticalAlign);\n\n  if (font) {\n    textSvgEl.style.font = font;\n  }\n\n  var textPadding = style.textPadding; // Make baseline top\n\n  attr(textSvgEl, 'x', x);\n  attr(textSvgEl, 'y', y);\n  var textLines = text.split('\\n');\n  var nTextLines = textLines.length;\n  var textAnchor = align; // PENDING\n\n  if (textAnchor === 'left') {\n    textAnchor = 'start';\n    textPadding && (x += textPadding[3]);\n  } else if (textAnchor === 'right') {\n    textAnchor = 'end';\n    textPadding && (x -= textPadding[1]);\n  } else if (textAnchor === 'center') {\n    textAnchor = 'middle';\n    textPadding && (x += (textPadding[3] - textPadding[1]) / 2);\n  }\n\n  var dy = 0;\n\n  if (verticalAlign === 'baseline') {\n    dy = -textRect.height + lineHeight;\n    textPadding && (dy -= textPadding[2]);\n  } else if (verticalAlign === 'middle') {\n    dy = (-textRect.height + lineHeight) / 2;\n    textPadding && (y += (textPadding[0] - textPadding[2]) / 2);\n  } else {\n    textPadding && (dy += textPadding[0]);\n  } // Font may affect position of each tspan elements\n\n\n  if (el.__text !== text || el.__textFont !== font) {\n    var tspanList = el.__tspanList || [];\n    el.__tspanList = tspanList;\n\n    for (var i = 0; i < nTextLines; i++) {\n      // Using cached tspan elements\n      var tspan = tspanList[i];\n\n      if (!tspan) {\n        tspan = tspanList[i] = createElement('tspan');\n        textSvgEl.appendChild(tspan);\n        attr(tspan, 'alignment-baseline', verticalAlign);\n        attr(tspan, 'text-anchor', textAnchor);\n      } else {\n        tspan.innerHTML = '';\n      }\n\n      attr(tspan, 'x', x);\n      attr(tspan, 'y', y + i * lineHeight + dy);\n      tspan.appendChild(document.createTextNode(textLines[i]));\n    } // Remove unsed tspan elements\n\n\n    for (; i < tspanList.length; i++) {\n      textSvgEl.removeChild(tspanList[i]);\n    }\n\n    tspanList.length = nTextLines;\n    el.__text = text;\n    el.__textFont = font;\n  } else if (el.__tspanList.length) {\n    // Update span x and y\n    var len = el.__tspanList.length;\n\n    for (var i = 0; i < len; ++i) {\n      var tspan = el.__tspanList[i];\n\n      if (tspan) {\n        attr(tspan, 'x', x);\n        attr(tspan, 'y', y + i * lineHeight + dy);\n      }\n    }\n  }\n};\n\nfunction getVerticalAlignForSvg(verticalAlign) {\n  if (verticalAlign === 'middle') {\n    return 'middle';\n  } else if (verticalAlign === 'bottom') {\n    return 'baseline';\n  } else {\n    return 'hanging';\n  }\n}\n\nsvgText.drawRectText = svgTextDrawRectText;\n\nsvgText.brush = function (el) {\n  var style = el.style;\n\n  if (style.text != null) {\n    // 强制设置 textPosition\n    style.textPosition = [0, 0];\n    svgTextDrawRectText(el, {\n      x: style.x || 0,\n      y: style.y || 0,\n      width: 0,\n      height: 0\n    }, el.getBoundingRect());\n  }\n};\n\nexports.path = svgPath;\nexports.image = svgImage;\nexports.text = svgText;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/svg/graphic.js\n// module id = 501\n// module chunks = 0 1","var guid = require(\"./core/guid\");\n\nvar env = require(\"./core/env\");\n\nvar zrUtil = require(\"./core/util\");\n\nvar Handler = require(\"./Handler\");\n\nvar Storage = require(\"./Storage\");\n\nvar Painter = require(\"./Painter\");\n\nvar Animation = require(\"./animation/Animation\");\n\nvar HandlerProxy = require(\"./dom/HandlerProxy\");\n\n/*!\n* ZRender, a high performance 2d drawing library.\n*\n* Copyright (c) 2013, Baidu Inc.\n* All rights reserved.\n*\n* LICENSE\n* https://github.com/ecomfe/zrender/blob/master/LICENSE.txt\n*/\nvar useVML = !env.canvasSupported;\nvar painterCtors = {\n  canvas: Painter\n};\nvar instances = {}; // ZRender实例map索引\n\n/**\n * @type {string}\n */\n\nvar version = '3.7.4';\n/**\n * Initializing a zrender instance\n * @param {HTMLElement} dom\n * @param {Object} opts\n * @param {string} [opts.renderer='canvas'] 'canvas' or 'svg'\n * @param {number} [opts.devicePixelRatio]\n * @param {number|string} [opts.width] Can be 'auto' (the same as null/undefined)\n * @param {number|string} [opts.height] Can be 'auto' (the same as null/undefined)\n * @return {module:zrender/ZRender}\n */\n\nfunction init(dom, opts) {\n  var zr = new ZRender(guid(), dom, opts);\n  instances[zr.id] = zr;\n  return zr;\n}\n/**\n * Dispose zrender instance\n * @param {module:zrender/ZRender} zr\n */\n\n\nfunction dispose(zr) {\n  if (zr) {\n    zr.dispose();\n  } else {\n    for (var key in instances) {\n      if (instances.hasOwnProperty(key)) {\n        instances[key].dispose();\n      }\n    }\n\n    instances = {};\n  }\n\n  return this;\n}\n/**\n * Get zrender instance by id\n * @param {string} id zrender instance id\n * @return {module:zrender/ZRender}\n */\n\n\nfunction getInstance(id) {\n  return instances[id];\n}\n\nfunction registerPainter(name, Ctor) {\n  painterCtors[name] = Ctor;\n}\n\nfunction delInstance(id) {\n  delete instances[id];\n}\n/**\n * @module zrender/ZRender\n */\n\n/**\n * @constructor\n * @alias module:zrender/ZRender\n * @param {string} id\n * @param {HTMLElement} dom\n * @param {Object} opts\n * @param {string} [opts.renderer='canvas'] 'canvas' or 'svg'\n * @param {number} [opts.devicePixelRatio]\n * @param {number} [opts.width] Can be 'auto' (the same as null/undefined)\n * @param {number} [opts.height] Can be 'auto' (the same as null/undefined)\n */\n\n\nvar ZRender = function (id, dom, opts) {\n  opts = opts || {};\n  /**\n   * @type {HTMLDomElement}\n   */\n\n  this.dom = dom;\n  /**\n   * @type {string}\n   */\n\n  this.id = id;\n  var self = this;\n  var storage = new Storage();\n  var rendererType = opts.renderer; // TODO WebGL\n\n  if (useVML) {\n    if (!painterCtors.vml) {\n      throw new Error('You need to require \\'zrender/vml/vml\\' to support IE8');\n    }\n\n    rendererType = 'vml';\n  } else if (!rendererType || !painterCtors[rendererType]) {\n    rendererType = 'canvas';\n  }\n\n  var painter = new painterCtors[rendererType](dom, storage, opts);\n  this.storage = storage;\n  this.painter = painter;\n  var handerProxy = !env.node ? new HandlerProxy(painter.getViewportRoot()) : null;\n  this.handler = new Handler(storage, painter, handerProxy, painter.root);\n  /**\n   * @type {module:zrender/animation/Animation}\n   */\n\n  this.animation = new Animation({\n    stage: {\n      update: zrUtil.bind(this.flush, this)\n    }\n  });\n  this.animation.start();\n  /**\n   * @type {boolean}\n   * @private\n   */\n\n  this._needsRefresh; // 修改 storage.delFromStorage, 每次删除元素之前删除动画\n  // FIXME 有点ugly\n\n  var oldDelFromStorage = storage.delFromStorage;\n  var oldAddToStorage = storage.addToStorage;\n\n  storage.delFromStorage = function (el) {\n    oldDelFromStorage.call(storage, el);\n    el && el.removeSelfFromZr(self);\n  };\n\n  storage.addToStorage = function (el) {\n    oldAddToStorage.call(storage, el);\n    el.addSelfToZr(self);\n  };\n};\n\nZRender.prototype = {\n  constructor: ZRender,\n\n  /**\n   * 获取实例唯一标识\n   * @return {string}\n   */\n  getId: function () {\n    return this.id;\n  },\n\n  /**\n   * 添加元素\n   * @param  {module:zrender/Element} el\n   */\n  add: function (el) {\n    this.storage.addRoot(el);\n    this._needsRefresh = true;\n  },\n\n  /**\n   * 删除元素\n   * @param  {module:zrender/Element} el\n   */\n  remove: function (el) {\n    this.storage.delRoot(el);\n    this._needsRefresh = true;\n  },\n\n  /**\n   * Change configuration of layer\n   * @param {string} zLevel\n   * @param {Object} config\n   * @param {string} [config.clearColor=0] Clear color\n   * @param {string} [config.motionBlur=false] If enable motion blur\n   * @param {number} [config.lastFrameAlpha=0.7] Motion blur factor. Larger value cause longer trailer\n  */\n  configLayer: function (zLevel, config) {\n    this.painter.configLayer(zLevel, config);\n    this._needsRefresh = true;\n  },\n\n  /**\n   * Repaint the canvas immediately\n   */\n  refreshImmediately: function () {\n    // var start = new Date();\n    // Clear needsRefresh ahead to avoid something wrong happens in refresh\n    // Or it will cause zrender refreshes again and again.\n    this._needsRefresh = false;\n    this.painter.refresh();\n    /**\n     * Avoid trigger zr.refresh in Element#beforeUpdate hook\n     */\n\n    this._needsRefresh = false; // var end = new Date();\n    // var log = document.getElementById('log');\n    // if (log) {\n    //     log.innerHTML = log.innerHTML + '<br>' + (end - start);\n    // }\n  },\n\n  /**\n   * Mark and repaint the canvas in the next frame of browser\n   */\n  refresh: function () {\n    this._needsRefresh = true;\n  },\n\n  /**\n   * Perform all refresh\n   */\n  flush: function () {\n    if (this._needsRefresh) {\n      this.refreshImmediately();\n    }\n\n    if (this._needsRefreshHover) {\n      this.refreshHoverImmediately();\n    }\n  },\n\n  /**\n   * Add element to hover layer\n   * @param  {module:zrender/Element} el\n   * @param {Object} style\n   */\n  addHover: function (el, style) {\n    if (this.painter.addHover) {\n      this.painter.addHover(el, style);\n      this.refreshHover();\n    }\n  },\n\n  /**\n   * Add element from hover layer\n   * @param  {module:zrender/Element} el\n   */\n  removeHover: function (el) {\n    if (this.painter.removeHover) {\n      this.painter.removeHover(el);\n      this.refreshHover();\n    }\n  },\n\n  /**\n   * Clear all hover elements in hover layer\n   * @param  {module:zrender/Element} el\n   */\n  clearHover: function () {\n    if (this.painter.clearHover) {\n      this.painter.clearHover();\n      this.refreshHover();\n    }\n  },\n\n  /**\n   * Refresh hover in next frame\n   */\n  refreshHover: function () {\n    this._needsRefreshHover = true;\n  },\n\n  /**\n   * Refresh hover immediately\n   */\n  refreshHoverImmediately: function () {\n    this._needsRefreshHover = false;\n    this.painter.refreshHover && this.painter.refreshHover();\n  },\n\n  /**\n   * Resize the canvas.\n   * Should be invoked when container size is changed\n   * @param {Object} [opts]\n   * @param {number|string} [opts.width] Can be 'auto' (the same as null/undefined)\n   * @param {number|string} [opts.height] Can be 'auto' (the same as null/undefined)\n   */\n  resize: function (opts) {\n    opts = opts || {};\n    this.painter.resize(opts.width, opts.height);\n    this.handler.resize();\n  },\n\n  /**\n   * Stop and clear all animation immediately\n   */\n  clearAnimation: function () {\n    this.animation.clear();\n  },\n\n  /**\n   * Get container width\n   */\n  getWidth: function () {\n    return this.painter.getWidth();\n  },\n\n  /**\n   * Get container height\n   */\n  getHeight: function () {\n    return this.painter.getHeight();\n  },\n\n  /**\n   * Export the canvas as Base64 URL\n   * @param {string} type\n   * @param {string} [backgroundColor='#fff']\n   * @return {string} Base64 URL\n   */\n  // toDataURL: function(type, backgroundColor) {\n  //     return this.painter.getRenderedCanvas({\n  //         backgroundColor: backgroundColor\n  //     }).toDataURL(type);\n  // },\n\n  /**\n   * Converting a path to image.\n   * It has much better performance of drawing image rather than drawing a vector path.\n   * @param {module:zrender/graphic/Path} e\n   * @param {number} width\n   * @param {number} height\n   */\n  pathToImage: function (e, dpr) {\n    return this.painter.pathToImage(e, dpr);\n  },\n\n  /**\n   * Set default cursor\n   * @param {string} [cursorStyle='default'] 例如 crosshair\n   */\n  setCursorStyle: function (cursorStyle) {\n    this.handler.setCursorStyle(cursorStyle);\n  },\n\n  /**\n   * Find hovered element\n   * @param {number} x\n   * @param {number} y\n   * @return {Object} {target, topTarget}\n   */\n  findHover: function (x, y) {\n    return this.handler.findHover(x, y);\n  },\n\n  /**\n   * Bind event\n   *\n   * @param {string} eventName Event name\n   * @param {Function} eventHandler Handler function\n   * @param {Object} [context] Context object\n   */\n  on: function (eventName, eventHandler, context) {\n    this.handler.on(eventName, eventHandler, context);\n  },\n\n  /**\n   * Unbind event\n   * @param {string} eventName Event name\n   * @param {Function} [eventHandler] Handler function\n   */\n  off: function (eventName, eventHandler) {\n    this.handler.off(eventName, eventHandler);\n  },\n\n  /**\n   * Trigger event manually\n   *\n   * @param {string} eventName Event name\n   * @param {event=} event Event object\n   */\n  trigger: function (eventName, event) {\n    this.handler.trigger(eventName, event);\n  },\n\n  /**\n   * Clear all objects and the canvas.\n   */\n  clear: function () {\n    this.storage.delRoot();\n    this.painter.clear();\n  },\n\n  /**\n   * Dispose self.\n   */\n  dispose: function () {\n    this.animation.stop();\n    this.clear();\n    this.storage.dispose();\n    this.painter.dispose();\n    this.handler.dispose();\n    this.animation = this.storage = this.painter = this.handler = null;\n    delInstance(this.id);\n  }\n};\nexports.version = version;\nexports.init = init;\nexports.dispose = dispose;\nexports.getInstance = getInstance;\nexports.registerPainter = registerPainter;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/zrender.js\n// module id = 502\n// module chunks = 0 1","'use strict';\n\n\n    var zrUtil = require('zrender/lib/core/util');\n    var formatUtil = require('../util/format');\n    var classUtil = require('../util/clazz');\n    var modelUtil = require('../util/model');\n    var ComponentModel = require('./Component');\n    var colorPaletteMixin = require('./mixin/colorPalette');\n    var env = require('zrender/lib/core/env');\n    var layout = require('../util/layout');\n\n    var set = classUtil.set;\n    var get = classUtil.get;\n    var encodeHTML = formatUtil.encodeHTML;\n    var addCommas = formatUtil.addCommas;\n\n    var SeriesModel = ComponentModel.extend({\n\n        type: 'series.__base__',\n\n        /**\n         * @readOnly\n         */\n        seriesIndex: 0,\n\n        // coodinateSystem will be injected in the echarts/CoordinateSystem\n        coordinateSystem: null,\n\n        /**\n         * @type {Object}\n         * @protected\n         */\n        defaultOption: null,\n\n        /**\n         * Data provided for legend\n         * @type {Function}\n         */\n        // PENDING\n        legendDataProvider: null,\n\n        /**\n         * Access path of color for visual\n         */\n        visualColorAccessPath: 'itemStyle.normal.color',\n\n        /**\n         * Support merge layout params.\n         * Only support 'box' now (left/right/top/bottom/width/height).\n         * @type {string|Object} Object can be {ignoreSize: true}\n         * @readOnly\n         */\n        layoutMode: null,\n\n        init: function (option, parentModel, ecModel, extraOpt) {\n\n            /**\n             * @type {number}\n             * @readOnly\n             */\n            this.seriesIndex = this.componentIndex;\n\n            this.mergeDefaultAndTheme(option, ecModel);\n\n            /**\n             * @type {module:echarts/data/List|module:echarts/data/Tree|module:echarts/data/Graph}\n             * @private\n             */\n            set(this, 'dataBeforeProcessed', this.getInitialData(option, ecModel));\n\n            // If we reverse the order (make data firstly, and then make\n            // dataBeforeProcessed by cloneShallow), cloneShallow will\n            // cause data.graph.data !== data when using\n            // module:echarts/data/Graph or module:echarts/data/Tree.\n            // See module:echarts/data/helper/linkList\n            this.restoreData();\n        },\n\n        /**\n         * Util for merge default and theme to option\n         * @param  {Object} option\n         * @param  {module:echarts/model/Global} ecModel\n         */\n        mergeDefaultAndTheme: function (option, ecModel) {\n            var layoutMode = this.layoutMode;\n            var inputPositionParams = layoutMode\n                ? layout.getLayoutParams(option) : {};\n\n            zrUtil.merge(\n                option,\n                ecModel.getTheme().get(this.subType)\n            );\n            zrUtil.merge(option, this.getDefaultOption());\n\n            // Default label emphasis `position` and `show`\n            // FIXME Set label in mergeOption\n            modelUtil.defaultEmphasis(option.label, modelUtil.LABEL_OPTIONS);\n\n            this.fillDataTextStyle(option.data);\n\n            if (layoutMode) {\n                layout.mergeLayoutParam(option, inputPositionParams, layoutMode);\n            }\n        },\n\n        mergeOption: function (newSeriesOption, ecModel) {\n            newSeriesOption = zrUtil.merge(this.option, newSeriesOption, true);\n            this.fillDataTextStyle(newSeriesOption.data);\n\n            var layoutMode = this.layoutMode;\n            if (layoutMode) {\n                layout.mergeLayoutParam(this.option, newSeriesOption, layoutMode);\n            }\n\n            var data = this.getInitialData(newSeriesOption, ecModel);\n            // TODO Merge data?\n            if (data) {\n                set(this, 'data', data);\n                set(this, 'dataBeforeProcessed', data.cloneShallow());\n            }\n        },\n\n        fillDataTextStyle: function (data) {\n            // Default data label emphasis `position` and `show`\n            // FIXME Tree structure data ?\n            // FIXME Performance ?\n            if (data) {\n                for (var i = 0; i < data.length; i++) {\n                    if (data[i] && data[i].label) {\n                        modelUtil.defaultEmphasis(data[i].label, modelUtil.LABEL_OPTIONS);\n                    }\n                }\n            }\n        },\n\n        /**\n         * Init a data structure from data related option in series\n         * Must be overwritten\n         */\n        getInitialData: function () {},\n\n        /**\n         * @param {string} [dataType]\n         * @return {module:echarts/data/List}\n         */\n        getData: function (dataType) {\n            var data = get(this, 'data');\n            return dataType == null ? data : data.getLinkedData(dataType);\n        },\n\n        /**\n         * @param {module:echarts/data/List} data\n         */\n        setData: function (data) {\n            set(this, 'data', data);\n        },\n\n        /**\n         * Get data before processed\n         * @return {module:echarts/data/List}\n         */\n        getRawData: function () {\n            return get(this, 'dataBeforeProcessed');\n        },\n\n        /**\n         * Coord dimension to data dimension.\n         *\n         * By default the result is the same as dimensions of series data.\n         * But in some series data dimensions are different from coord dimensions (i.e.\n         * candlestick and boxplot). Override this method to handle those cases.\n         *\n         * Coord dimension to data dimension can be one-to-many\n         *\n         * @param {string} coordDim\n         * @return {Array.<string>} dimensions on the axis.\n         */\n        coordDimToDataDim: function (coordDim) {\n            return [coordDim];\n        },\n\n        /**\n         * Convert data dimension to coord dimension.\n         *\n         * @param {string|number} dataDim\n         * @return {string}\n         */\n        dataDimToCoordDim: function (dataDim) {\n            return dataDim;\n        },\n\n        /**\n         * Get base axis if has coordinate system and has axis.\n         * By default use coordSys.getBaseAxis();\n         * Can be overrided for some chart.\n         * @return {type} description\n         */\n        getBaseAxis: function () {\n            var coordSys = this.coordinateSystem;\n            return coordSys && coordSys.getBaseAxis && coordSys.getBaseAxis();\n        },\n\n        // FIXME\n        /**\n         * Default tooltip formatter\n         *\n         * @param {number} dataIndex\n         * @param {boolean} [multipleSeries=false]\n         * @param {number} [dataType]\n         */\n        formatTooltip: function (dataIndex, multipleSeries, dataType) {\n            function formatArrayValue(value) {\n                var result = [];\n\n                zrUtil.each(value, function (val, idx) {\n                    var dimInfo = data.getDimensionInfo(idx);\n                    var dimType = dimInfo && dimInfo.type;\n                    var valStr;\n\n                    if (dimType === 'ordinal') {\n                        valStr = val + '';\n                    }\n                    else if (dimType === 'time') {\n                        valStr = multipleSeries ? '' : formatUtil.formatTime('yyyy/MM/dd hh:mm:ss', val);\n                    }\n                    else {\n                        valStr = addCommas(val);\n                    }\n\n                    valStr && result.push(valStr);\n                });\n\n                return result.join(', ');\n            }\n\n            var data = get(this, 'data');\n\n            var value = this.getRawValue(dataIndex);\n            var formattedValue = encodeHTML(\n                zrUtil.isArray(value) ? formatArrayValue(value) : addCommas(value)\n            );\n            var name = data.getName(dataIndex);\n\n            var color = data.getItemVisual(dataIndex, 'color');\n            if (zrUtil.isObject(color) && color.colorStops) {\n                color = (color.colorStops[0] || {}).color;\n            }\n            color = color || 'transparent';\n\n            var colorEl = '<span style=\"display:inline-block;margin-right:5px;'\n                + 'border-radius:10px;width:9px;height:9px;background-color:' + encodeHTML(color) + '\"></span>';\n\n            var seriesName = this.name;\n            // FIXME\n            if (seriesName === '\\0-') {\n                // Not show '-'\n                seriesName = '';\n            }\n            return !multipleSeries\n                ? ((seriesName && encodeHTML(seriesName) + '<br />') + colorEl\n                    + (name\n                        ? encodeHTML(name) + ' : ' + formattedValue\n                        : formattedValue\n                    )\n                  )\n                : (colorEl + encodeHTML(this.name) + ' : ' + formattedValue);\n        },\n\n        /**\n         * @return {boolean}\n         */\n        isAnimationEnabled: function () {\n            if (env.node) {\n                return false;\n            }\n\n            var animationEnabled = this.getShallow('animation');\n            if (animationEnabled) {\n                if (this.getData().count() > this.getShallow('animationThreshold')) {\n                    animationEnabled = false;\n                }\n            }\n            return animationEnabled;\n        },\n\n        restoreData: function () {\n            set(this, 'data', get(this, 'dataBeforeProcessed').cloneShallow());\n        },\n\n        getColorFromPalette: function (name, scope) {\n            var ecModel = this.ecModel;\n            // PENDING\n            var color = colorPaletteMixin.getColorFromPalette.call(this, name, scope);\n            if (!color) {\n                color = ecModel.getColorFromPalette(name, scope);\n            }\n            return color;\n        },\n\n        /**\n         * Get data indices for show tooltip content. See tooltip.\n         * @abstract\n         * @param {Array.<string>|string} dim\n         * @param {Array.<number>} value\n         * @param {module:echarts/coord/single/SingleAxis} baseAxis\n         * @return {Array.<number>} data indices.\n         */\n        getAxisTooltipDataIndex: null,\n\n        /**\n         * See tooltip.\n         * @abstract\n         * @param {number} dataIndex\n         * @return {Array.<number>} Point of tooltip. null/undefined can be returned.\n         */\n        getTooltipPosition: null\n    });\n\n    zrUtil.mixin(SeriesModel, modelUtil.dataFormatMixin);\n    zrUtil.mixin(SeriesModel, colorPaletteMixin);\n\n    module.exports = SeriesModel;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/model/Series.js\n// module id = 503\n// module chunks = 0 1","/**\n * @module echarts/chart/helper/Symbol\n */\n\n\n    var zrUtil = require('zrender/lib/core/util');\n    var symbolUtil = require('../../util/symbol');\n    var graphic = require('../../util/graphic');\n    var numberUtil = require('../../util/number');\n\n    function getSymbolSize(data, idx) {\n        var symbolSize = data.getItemVisual(idx, 'symbolSize');\n        return symbolSize instanceof Array\n            ? symbolSize.slice()\n            : [+symbolSize, +symbolSize];\n    }\n\n    function getScale(symbolSize) {\n        return [symbolSize[0] / 2, symbolSize[1] / 2];\n    }\n\n    /**\n     * @constructor\n     * @alias {module:echarts/chart/helper/Symbol}\n     * @param {module:echarts/data/List} data\n     * @param {number} idx\n     * @extends {module:zrender/graphic/Group}\n     */\n    function Symbol(data, idx, seriesScope) {\n        graphic.Group.call(this);\n\n        this.updateData(data, idx, seriesScope);\n    }\n\n    var symbolProto = Symbol.prototype;\n\n    function driftSymbol(dx, dy) {\n        this.parent.drift(dx, dy);\n    }\n\n    symbolProto._createSymbol = function (symbolType, data, idx, symbolSize) {\n        // Remove paths created before\n        this.removeAll();\n\n        var seriesModel = data.hostModel;\n        var color = data.getItemVisual(idx, 'color');\n\n        // var symbolPath = symbolUtil.createSymbol(\n        //     symbolType, -0.5, -0.5, 1, 1, color\n        // );\n        // If width/height are set too small (e.g., set to 1) on ios10\n        // and macOS Sierra, a circle stroke become a rect, no matter what\n        // the scale is set. So we set width/height as 2. See #4150.\n        var symbolPath = symbolUtil.createSymbol(\n            symbolType, -1, -1, 2, 2, color\n        );\n\n        symbolPath.attr({\n            z2: 100,\n            culling: true,\n            scale: [0, 0]\n        });\n        // Rewrite drift method\n        symbolPath.drift = driftSymbol;\n\n        graphic.initProps(symbolPath, {\n            scale: getScale(symbolSize)\n        }, seriesModel, idx);\n        this._symbolType = symbolType;\n\n        this.add(symbolPath);\n    };\n\n    /**\n     * Stop animation\n     * @param {boolean} toLastFrame\n     */\n    symbolProto.stopSymbolAnimation = function (toLastFrame) {\n        this.childAt(0).stopAnimation(toLastFrame);\n    };\n\n    /**\n     * Get symbol path element\n     */\n    symbolProto.getSymbolPath = function () {\n        return this.childAt(0);\n    };\n\n    /**\n     * Get scale(aka, current symbol size).\n     * Including the change caused by animation\n     */\n    symbolProto.getScale = function () {\n        return this.childAt(0).scale;\n    };\n\n    /**\n     * Highlight symbol\n     */\n    symbolProto.highlight = function () {\n        this.childAt(0).trigger('emphasis');\n    };\n\n    /**\n     * Downplay symbol\n     */\n    symbolProto.downplay = function () {\n        this.childAt(0).trigger('normal');\n    };\n\n    /**\n     * @param {number} zlevel\n     * @param {number} z\n     */\n    symbolProto.setZ = function (zlevel, z) {\n        var symbolPath = this.childAt(0);\n        symbolPath.zlevel = zlevel;\n        symbolPath.z = z;\n    };\n\n    symbolProto.setDraggable = function (draggable) {\n        var symbolPath = this.childAt(0);\n        symbolPath.draggable = draggable;\n        symbolPath.cursor = draggable ? 'move' : 'pointer';\n    };\n\n    /**\n     * Update symbol properties\n     * @param  {module:echarts/data/List} data\n     * @param  {number} idx\n     */\n    symbolProto.updateData = function (data, idx, seriesScope) {\n        this.silent = false;\n\n        var symbolType = data.getItemVisual(idx, 'symbol') || 'circle';\n        var seriesModel = data.hostModel;\n        var symbolSize = getSymbolSize(data, idx);\n\n        if (symbolType !== this._symbolType) {\n            this._createSymbol(symbolType, data, idx, symbolSize);\n        }\n        else {\n            var symbolPath = this.childAt(0);\n            graphic.updateProps(symbolPath, {\n                scale: getScale(symbolSize)\n            }, seriesModel, idx);\n        }\n        this._updateCommon(data, idx, symbolSize, seriesScope);\n        this._seriesModel = seriesModel;\n    };\n\n    // Update common properties\n    var normalStyleAccessPath = ['itemStyle', 'normal'];\n    var emphasisStyleAccessPath = ['itemStyle', 'emphasis'];\n    var normalLabelAccessPath = ['label', 'normal'];\n    var emphasisLabelAccessPath = ['label', 'emphasis'];\n\n    symbolProto._updateCommon = function (data, idx, symbolSize, seriesScope) {\n        var symbolPath = this.childAt(0);\n        var seriesModel = data.hostModel;\n        var color = data.getItemVisual(idx, 'color');\n\n        // Reset style\n        if (symbolPath.type !== 'image') {\n            symbolPath.useStyle({\n                strokeNoScale: true\n            });\n        }\n\n        seriesScope = seriesScope || null;\n\n        var itemStyle = seriesScope && seriesScope.itemStyle;\n        var hoverItemStyle = seriesScope && seriesScope.hoverItemStyle;\n        var symbolRotate = seriesScope && seriesScope.symbolRotate;\n        var symbolOffset = seriesScope && seriesScope.symbolOffset;\n        var labelModel = seriesScope && seriesScope.labelModel;\n        var hoverLabelModel = seriesScope && seriesScope.hoverLabelModel;\n        var hoverAnimation = seriesScope && seriesScope.hoverAnimation;\n\n        if (!seriesScope || data.hasItemOption) {\n            var itemModel = data.getItemModel(idx);\n\n            // Color must be excluded.\n            // Because symbol provide setColor individually to set fill and stroke\n            itemStyle = itemModel.getModel(normalStyleAccessPath).getItemStyle(['color']);\n            hoverItemStyle = itemModel.getModel(emphasisStyleAccessPath).getItemStyle();\n\n            symbolRotate = itemModel.getShallow('symbolRotate');\n            symbolOffset = itemModel.getShallow('symbolOffset');\n\n            labelModel = itemModel.getModel(normalLabelAccessPath);\n            hoverLabelModel = itemModel.getModel(emphasisLabelAccessPath);\n            hoverAnimation = itemModel.getShallow('hoverAnimation');\n        }\n        else {\n            hoverItemStyle = zrUtil.extend({}, hoverItemStyle);\n        }\n\n        var elStyle = symbolPath.style;\n\n        symbolPath.attr('rotation', (symbolRotate || 0) * Math.PI / 180 || 0);\n\n        if (symbolOffset) {\n            symbolPath.attr('position', [\n                numberUtil.parsePercent(symbolOffset[0], symbolSize[0]),\n                numberUtil.parsePercent(symbolOffset[1], symbolSize[1])\n            ]);\n        }\n\n        // PENDING setColor before setStyle!!!\n        symbolPath.setColor(color);\n\n        symbolPath.setStyle(itemStyle);\n\n        var opacity = data.getItemVisual(idx, 'opacity');\n        if (opacity != null) {\n            elStyle.opacity = opacity;\n        }\n\n        // Get last value dim\n        var dimensions = data.dimensions.slice();\n        var valueDim;\n        var dataType;\n        while (dimensions.length && (\n            valueDim = dimensions.pop(),\n            dataType = data.getDimensionInfo(valueDim).type,\n            dataType === 'ordinal' || dataType === 'time'\n        )) {} // jshint ignore:line\n\n        if (valueDim != null && labelModel.getShallow('show')) {\n            graphic.setText(elStyle, labelModel, color);\n            elStyle.text = zrUtil.retrieve(\n                seriesModel.getFormattedLabel(idx, 'normal'),\n                data.get(valueDim, idx)\n            );\n        }\n        else {\n            elStyle.text = '';\n        }\n\n        if (valueDim != null && hoverLabelModel.getShallow('show')) {\n            graphic.setText(hoverItemStyle, hoverLabelModel, color);\n            hoverItemStyle.text = zrUtil.retrieve(\n                seriesModel.getFormattedLabel(idx, 'emphasis'),\n                data.get(valueDim, idx)\n            );\n        }\n        else {\n            hoverItemStyle.text = '';\n        }\n\n        symbolPath.off('mouseover')\n            .off('mouseout')\n            .off('emphasis')\n            .off('normal');\n\n        symbolPath.hoverStyle = hoverItemStyle;\n\n        graphic.setHoverStyle(symbolPath);\n\n        var scale = getScale(symbolSize);\n\n        if (hoverAnimation && seriesModel.isAnimationEnabled()) {\n            var onEmphasis = function() {\n                var ratio = scale[1] / scale[0];\n                this.animateTo({\n                    scale: [\n                        Math.max(scale[0] * 1.1, scale[0] + 3),\n                        Math.max(scale[1] * 1.1, scale[1] + 3 * ratio)\n                    ]\n                }, 400, 'elasticOut');\n            };\n            var onNormal = function() {\n                this.animateTo({\n                    scale: scale\n                }, 400, 'elasticOut');\n            };\n            symbolPath.on('mouseover', onEmphasis)\n                .on('mouseout', onNormal)\n                .on('emphasis', onEmphasis)\n                .on('normal', onNormal);\n        }\n    };\n\n    symbolProto.fadeOut = function (cb) {\n        var symbolPath = this.childAt(0);\n        // Avoid mistaken hover when fading out\n        this.silent = true;\n        // Not show text when animating\n        symbolPath.style.text = '';\n        graphic.updateProps(symbolPath, {\n            scale: [0, 0]\n        }, this._seriesModel, this.dataIndex, cb);\n    };\n\n    zrUtil.inherits(Symbol, graphic.Group);\n\n    module.exports = Symbol;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/chart/helper/Symbol.js\n// module id = 504\n// module chunks = 0 1","'use strict';\n\n\n    var ComponentModel = require('../../model/Component');\n    var zrUtil = require('zrender/lib/core/util');\n    var axisModelCreator = require('../axisModelCreator');\n\n    var AxisModel = ComponentModel.extend({\n\n        type: 'cartesian2dAxis',\n\n        /**\n         * @type {module:echarts/coord/cartesian/Axis2D}\n         */\n        axis: null,\n\n        /**\n         * @override\n         */\n        init: function () {\n            AxisModel.superApply(this, 'init', arguments);\n            this.resetRange();\n        },\n\n        /**\n         * @override\n         */\n        mergeOption: function () {\n            AxisModel.superApply(this, 'mergeOption', arguments);\n            this.resetRange();\n        },\n\n        /**\n         * @override\n         */\n        restoreData: function () {\n            AxisModel.superApply(this, 'restoreData', arguments);\n            this.resetRange();\n        },\n\n        /**\n         * @override\n         * @return {module:echarts/model/Component}\n         */\n        getCoordSysModel: function () {\n            return this.ecModel.queryComponents({\n                mainType: 'grid',\n                index: this.option.gridIndex,\n                id: this.option.gridId\n            })[0];\n        }\n\n    });\n\n    function getAxisType(axisDim, option) {\n        // Default axis with data is category axis\n        return option.type || (option.data ? 'category' : 'value');\n    }\n\n    zrUtil.merge(AxisModel.prototype, require('../axisModelCommonMixin'));\n\n    var extraOption = {\n        // gridIndex: 0,\n        // gridId: '',\n\n        // Offset is for multiple axis on the same position\n        offset: 0\n    };\n\n    axisModelCreator('x', AxisModel, getAxisType, extraOption);\n    axisModelCreator('y', AxisModel, getAxisType, extraOption);\n\n    module.exports = AxisModel;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/coord/cartesian/AxisModel.js\n// module id = 505\n// module chunks = 0 1","/**\n * List for data storage\n * @module echarts/data/List\n */\n\n\n    var UNDEFINED = 'undefined';\n    var globalObj = typeof window === 'undefined' ? global : window;\n    var Float64Array = typeof globalObj.Float64Array === UNDEFINED\n        ? Array : globalObj.Float64Array;\n    var Int32Array = typeof globalObj.Int32Array === UNDEFINED\n        ? Array : globalObj.Int32Array;\n\n    var dataCtors = {\n        'float': Float64Array,\n        'int': Int32Array,\n        // Ordinal data type can be string or int\n        'ordinal': Array,\n        'number': Array,\n        'time': Array\n    };\n\n    var Model = require('../model/Model');\n    var DataDiffer = require('./DataDiffer');\n\n    var zrUtil = require('zrender/lib/core/util');\n    var modelUtil = require('../util/model');\n    var isObject = zrUtil.isObject;\n\n    var TRANSFERABLE_PROPERTIES = [\n        'stackedOn', 'hasItemOption', '_nameList', '_idList', '_rawData'\n    ];\n\n    var transferProperties = function (a, b) {\n        zrUtil.each(TRANSFERABLE_PROPERTIES.concat(b.__wrappedMethods || []), function (propName) {\n            if (b.hasOwnProperty(propName)) {\n                a[propName] = b[propName];\n            }\n        });\n\n        a.__wrappedMethods = b.__wrappedMethods;\n    };\n\n    /**\n     * @constructor\n     * @alias module:echarts/data/List\n     *\n     * @param {Array.<string>} dimensions\n     *        Dimensions should be concrete names like x, y, z, lng, lat, angle, radius\n     * @param {module:echarts/model/Model} hostModel\n     */\n    var List = function (dimensions, hostModel) {\n\n        dimensions = dimensions || ['x', 'y'];\n\n        var dimensionInfos = {};\n        var dimensionNames = [];\n        for (var i = 0; i < dimensions.length; i++) {\n            var dimensionName;\n            var dimensionInfo = {};\n            if (typeof dimensions[i] === 'string') {\n                dimensionName = dimensions[i];\n                dimensionInfo = {\n                    name: dimensionName,\n                    stackable: false,\n                    // Type can be 'float', 'int', 'number'\n                    // Default is number, Precision of float may not enough\n                    type: 'number'\n                };\n            }\n            else {\n                dimensionInfo = dimensions[i];\n                dimensionName = dimensionInfo.name;\n                dimensionInfo.type = dimensionInfo.type || 'number';\n            }\n            dimensionNames.push(dimensionName);\n            dimensionInfos[dimensionName] = dimensionInfo;\n        }\n        /**\n         * @readOnly\n         * @type {Array.<string>}\n         */\n        this.dimensions = dimensionNames;\n\n        /**\n         * Infomation of each data dimension, like data type.\n         * @type {Object}\n         */\n        this._dimensionInfos = dimensionInfos;\n\n        /**\n         * @type {module:echarts/model/Model}\n         */\n        this.hostModel = hostModel;\n\n        /**\n         * @type {module:echarts/model/Model}\n         */\n        this.dataType;\n\n        /**\n         * Indices stores the indices of data subset after filtered.\n         * This data subset will be used in chart.\n         * @type {Array.<number>}\n         * @readOnly\n         */\n        this.indices = [];\n\n        /**\n         * Data storage\n         * @type {Object.<key, TypedArray|Array>}\n         * @private\n         */\n        this._storage = {};\n\n        /**\n         * @type {Array.<string>}\n         */\n        this._nameList = [];\n        /**\n         * @type {Array.<string>}\n         */\n        this._idList = [];\n        /**\n         * Models of data option is stored sparse for optimizing memory cost\n         * @type {Array.<module:echarts/model/Model>}\n         * @private\n         */\n        this._optionModels = [];\n\n        /**\n         * @param {module:echarts/data/List}\n         */\n        this.stackedOn = null;\n\n        /**\n         * Global visual properties after visual coding\n         * @type {Object}\n         * @private\n         */\n        this._visual = {};\n\n        /**\n         * Globel layout properties.\n         * @type {Object}\n         * @private\n         */\n        this._layout = {};\n\n        /**\n         * Item visual properties after visual coding\n         * @type {Array.<Object>}\n         * @private\n         */\n        this._itemVisuals = [];\n\n        /**\n         * Item layout properties after layout\n         * @type {Array.<Object>}\n         * @private\n         */\n        this._itemLayouts = [];\n\n        /**\n         * Graphic elemnents\n         * @type {Array.<module:zrender/Element>}\n         * @private\n         */\n        this._graphicEls = [];\n\n        /**\n         * @type {Array.<Array|Object>}\n         * @private\n         */\n        this._rawData;\n\n        /**\n         * @type {Object}\n         * @private\n         */\n        this._extent;\n    };\n\n    var listProto = List.prototype;\n\n    listProto.type = 'list';\n    /**\n     * If each data item has it's own option\n     * @type {boolean}\n     */\n    listProto.hasItemOption = true;\n\n    /**\n     * Get dimension name\n     * @param {string|number} dim\n     *        Dimension can be concrete names like x, y, z, lng, lat, angle, radius\n     *        Or a ordinal number. For example getDimensionInfo(0) will return 'x' or 'lng' or 'radius'\n     * @return {string} Concrete dim name.\n     */\n    listProto.getDimension = function (dim) {\n        if (!isNaN(dim)) {\n            dim = this.dimensions[dim] || dim;\n        }\n        return dim;\n    };\n    /**\n     * Get type and stackable info of particular dimension\n     * @param {string|number} dim\n     *        Dimension can be concrete names like x, y, z, lng, lat, angle, radius\n     *        Or a ordinal number. For example getDimensionInfo(0) will return 'x' or 'lng' or 'radius'\n     */\n    listProto.getDimensionInfo = function (dim) {\n        return zrUtil.clone(this._dimensionInfos[this.getDimension(dim)]);\n    };\n\n    /**\n     * Initialize from data\n     * @param {Array.<Object|number|Array>} data\n     * @param {Array.<string>} [nameList]\n     * @param {Function} [dimValueGetter] (dataItem, dimName, dataIndex, dimIndex) => number\n     */\n    listProto.initData = function (data, nameList, dimValueGetter) {\n        data = data || [];\n\n        if (__DEV__) {\n            if (!zrUtil.isArray(data)) {\n                throw new Error('Invalid data.');\n            }\n        }\n\n        this._rawData = data;\n\n        // Clear\n        var storage = this._storage = {};\n        var indices = this.indices = [];\n\n        var dimensions = this.dimensions;\n        var size = data.length;\n        var dimensionInfoMap = this._dimensionInfos;\n\n        var idList = [];\n        var nameRepeatCount = {};\n\n        nameList = nameList || [];\n\n        // Init storage\n        for (var i = 0; i < dimensions.length; i++) {\n            var dimInfo = dimensionInfoMap[dimensions[i]];\n            var DataCtor = dataCtors[dimInfo.type];\n            storage[dimensions[i]] = new DataCtor(size);\n        }\n\n        var self = this;\n        if (!dimValueGetter) {\n            self.hasItemOption = false;\n        }\n        // Default dim value getter\n        dimValueGetter = dimValueGetter || function (dataItem, dimName, dataIndex, dimIndex) {\n            var value = modelUtil.getDataItemValue(dataItem);\n            // If any dataItem is like { value: 10 }\n            if (modelUtil.isDataItemOption(dataItem)) {\n                self.hasItemOption = true;\n            }\n            return modelUtil.converDataValue(\n                (value instanceof Array)\n                    ? value[dimIndex]\n                    // If value is a single number or something else not array.\n                    : value,\n                dimensionInfoMap[dimName]\n            );\n        };\n\n        for (var idx = 0; idx < data.length; idx++) {\n            var dataItem = data[idx];\n            // Each data item is value\n            // [1, 2]\n            // 2\n            // Bar chart, line chart which uses category axis\n            // only gives the 'y' value. 'x' value is the indices of cateogry\n            // Use a tempValue to normalize the value to be a (x, y) value\n\n            // Store the data by dimensions\n            for (var k = 0; k < dimensions.length; k++) {\n                var dim = dimensions[k];\n                var dimStorage = storage[dim];\n                // PENDING NULL is empty or zero\n                dimStorage[idx] = dimValueGetter(dataItem, dim, idx, k);\n            }\n\n            indices.push(idx);\n        }\n\n        // Use the name in option and create id\n        for (var i = 0; i < data.length; i++) {\n            if (!nameList[i]) {\n                if (data[i] && data[i].name != null) {\n                    nameList[i] = data[i].name;\n                }\n            }\n            var name = nameList[i] || '';\n            // Try using the id in option\n            var id = data[i] && data[i].id;\n\n            if (!id && name) {\n                // Use name as id and add counter to avoid same name\n                nameRepeatCount[name] = nameRepeatCount[name] || 0;\n                id = name;\n                if (nameRepeatCount[name] > 0) {\n                    id += '__ec__' + nameRepeatCount[name];\n                }\n                nameRepeatCount[name]++;\n            }\n            id && (idList[i] = id);\n        }\n\n        this._nameList = nameList;\n        this._idList = idList;\n    };\n\n    /**\n     * @return {number}\n     */\n    listProto.count = function () {\n        return this.indices.length;\n    };\n\n    /**\n     * Get value. Return NaN if idx is out of range.\n     * @param {string} dim Dim must be concrete name.\n     * @param {number} idx\n     * @param {boolean} stack\n     * @return {number}\n     */\n    listProto.get = function (dim, idx, stack) {\n        var storage = this._storage;\n        var dataIndex = this.indices[idx];\n\n        // If value not exists\n        if (dataIndex == null) {\n            return NaN;\n        }\n\n        var value = storage[dim] && storage[dim][dataIndex];\n        // FIXME ordinal data type is not stackable\n        if (stack) {\n            var dimensionInfo = this._dimensionInfos[dim];\n            if (dimensionInfo && dimensionInfo.stackable) {\n                var stackedOn = this.stackedOn;\n                while (stackedOn) {\n                    // Get no stacked data of stacked on\n                    var stackedValue = stackedOn.get(dim, idx);\n                    // Considering positive stack, negative stack and empty data\n                    if ((value >= 0 && stackedValue > 0)  // Positive stack\n                        || (value <= 0 && stackedValue < 0) // Negative stack\n                    ) {\n                        value += stackedValue;\n                    }\n                    stackedOn = stackedOn.stackedOn;\n                }\n            }\n        }\n        return value;\n    };\n\n    /**\n     * Get value for multi dimensions.\n     * @param {Array.<string>} [dimensions] If ignored, using all dimensions.\n     * @param {number} idx\n     * @param {boolean} stack\n     * @return {number}\n     */\n    listProto.getValues = function (dimensions, idx, stack) {\n        var values = [];\n\n        if (!zrUtil.isArray(dimensions)) {\n            stack = idx;\n            idx = dimensions;\n            dimensions = this.dimensions;\n        }\n\n        for (var i = 0, len = dimensions.length; i < len; i++) {\n            values.push(this.get(dimensions[i], idx, stack));\n        }\n\n        return values;\n    };\n\n    /**\n     * If value is NaN. Inlcuding '-'\n     * @param {string} dim\n     * @param {number} idx\n     * @return {number}\n     */\n    listProto.hasValue = function (idx) {\n        var dimensions = this.dimensions;\n        var dimensionInfos = this._dimensionInfos;\n        for (var i = 0, len = dimensions.length; i < len; i++) {\n            if (\n                // Ordinal type can be string or number\n                dimensionInfos[dimensions[i]].type !== 'ordinal'\n                && isNaN(this.get(dimensions[i], idx))\n            ) {\n                return false;\n            }\n        }\n        return true;\n    };\n\n    /**\n     * Get extent of data in one dimension\n     * @param {string} dim\n     * @param {boolean} stack\n     * @param {Function} filter\n     */\n    listProto.getDataExtent = function (dim, stack, filter) {\n        dim = this.getDimension(dim);\n        var dimData = this._storage[dim];\n        var dimInfo = this.getDimensionInfo(dim);\n        stack = (dimInfo && dimInfo.stackable) && stack;\n        var dimExtent = (this._extent || (this._extent = {}))[dim + (!!stack)];\n        var value;\n        if (dimExtent) {\n            return dimExtent;\n        }\n        // var dimInfo = this._dimensionInfos[dim];\n        if (dimData) {\n            var min = Infinity;\n            var max = -Infinity;\n            // var isOrdinal = dimInfo.type === 'ordinal';\n            for (var i = 0, len = this.count(); i < len; i++) {\n                value = this.get(dim, i, stack);\n                // FIXME\n                // if (isOrdinal && typeof value === 'string') {\n                //     value = zrUtil.indexOf(dimData, value);\n                // }\n                if (!filter || filter(value, dim, i)) {\n                    value < min && (min = value);\n                    value > max && (max = value);\n                }\n            }\n            return (this._extent[dim + !!stack] = [min, max]);\n        }\n        else {\n            return [Infinity, -Infinity];\n        }\n    };\n\n    /**\n     * Get sum of data in one dimension\n     * @param {string} dim\n     * @param {boolean} stack\n     */\n    listProto.getSum = function (dim, stack) {\n        var dimData = this._storage[dim];\n        var sum = 0;\n        if (dimData) {\n            for (var i = 0, len = this.count(); i < len; i++) {\n                var value = this.get(dim, i, stack);\n                if (!isNaN(value)) {\n                    sum += value;\n                }\n            }\n        }\n        return sum;\n    };\n\n    /**\n     * Retreive the index with given value\n     * @param {number} idx\n     * @param {number} value\n     * @return {number}\n     */\n    // FIXME Precision of float value\n    listProto.indexOf = function (dim, value) {\n        var storage = this._storage;\n        var dimData = storage[dim];\n        var indices = this.indices;\n\n        if (dimData) {\n            for (var i = 0, len = indices.length; i < len; i++) {\n                var rawIndex = indices[i];\n                if (dimData[rawIndex] === value) {\n                    return i;\n                }\n            }\n        }\n        return -1;\n    };\n\n    /**\n     * Retreive the index with given name\n     * @param {number} idx\n     * @param {number} name\n     * @return {number}\n     */\n    listProto.indexOfName = function (name) {\n        var indices = this.indices;\n        var nameList = this._nameList;\n\n        for (var i = 0, len = indices.length; i < len; i++) {\n            var rawIndex = indices[i];\n            if (nameList[rawIndex] === name) {\n                return i;\n            }\n        }\n\n        return -1;\n    };\n\n    /**\n     * Retreive the index with given raw data index\n     * @param {number} idx\n     * @param {number} name\n     * @return {number}\n     */\n    listProto.indexOfRawIndex = function (rawIndex) {\n        // Indices are ascending\n        var indices = this.indices;\n\n        // If rawIndex === dataIndex\n        var rawDataIndex = indices[rawIndex];\n        if (rawDataIndex != null && rawDataIndex === rawIndex) {\n            return rawIndex;\n        }\n\n        var left = 0;\n        var right = indices.length - 1;\n        while (left <= right) {\n            var mid = (left + right) / 2 | 0;\n            if (indices[mid] < rawIndex) {\n                left = mid + 1;\n            }\n            else if (indices[mid] > rawIndex) {\n                right = mid - 1;\n            }\n            else {\n                return mid;\n            }\n        }\n        return -1;\n    };\n\n    /**\n     * Retreive the index of nearest value\n     * @param {string} dim\n     * @param {number} value\n     * @param {boolean} stack If given value is after stacked\n     * @param {number} [maxDistance=Infinity]\n     * @return {number}\n     */\n    listProto.indexOfNearest = function (dim, value, stack, maxDistance) {\n        var storage = this._storage;\n        var dimData = storage[dim];\n\n        if (maxDistance == null) {\n            maxDistance = Infinity;\n        }\n\n        var nearestIdx = -1;\n        if (dimData) {\n            var minDist = Number.MAX_VALUE;\n            for (var i = 0, len = this.count(); i < len; i++) {\n                var diff = value - this.get(dim, i, stack);\n                var dist = Math.abs(diff);\n                if (\n                    diff <= maxDistance\n                    && (dist < minDist\n                        // For the case of two data are same on xAxis, which has sequence data.\n                        // Show the nearest index\n                        // https://github.com/ecomfe/echarts/issues/2869\n                        || (dist === minDist && diff > 0)\n                    )\n                ) {\n                    minDist = dist;\n                    nearestIdx = i;\n                }\n            }\n        }\n        return nearestIdx;\n    };\n\n    /**\n     * Get raw data index\n     * @param {number} idx\n     * @return {number}\n     */\n    listProto.getRawIndex = function (idx) {\n        var rawIdx = this.indices[idx];\n        return rawIdx == null ? -1 : rawIdx;\n    };\n\n    /**\n     * Get raw data item\n     * @param {number} idx\n     * @return {number}\n     */\n    listProto.getRawDataItem = function (idx) {\n        return this._rawData[this.getRawIndex(idx)];\n    };\n\n    /**\n     * @param {number} idx\n     * @param {boolean} [notDefaultIdx=false]\n     * @return {string}\n     */\n    listProto.getName = function (idx) {\n        return this._nameList[this.indices[idx]] || '';\n    };\n\n    /**\n     * @param {number} idx\n     * @param {boolean} [notDefaultIdx=false]\n     * @return {string}\n     */\n    listProto.getId = function (idx) {\n        return this._idList[this.indices[idx]] || (this.getRawIndex(idx) + '');\n    };\n\n\n    function normalizeDimensions(dimensions) {\n        if (!zrUtil.isArray(dimensions)) {\n            dimensions = [dimensions];\n        }\n        return dimensions;\n    }\n\n    /**\n     * Data iteration\n     * @param {string|Array.<string>}\n     * @param {Function} cb\n     * @param {boolean} [stack=false]\n     * @param {*} [context=this]\n     *\n     * @example\n     *  list.each('x', function (x, idx) {});\n     *  list.each(['x', 'y'], function (x, y, idx) {});\n     *  list.each(function (idx) {})\n     */\n    listProto.each = function (dims, cb, stack, context) {\n        if (typeof dims === 'function') {\n            context = stack;\n            stack = cb;\n            cb = dims;\n            dims = [];\n        }\n\n        dims = zrUtil.map(normalizeDimensions(dims), this.getDimension, this);\n\n        var value = [];\n        var dimSize = dims.length;\n        var indices = this.indices;\n\n        context = context || this;\n\n        for (var i = 0; i < indices.length; i++) {\n            // Simple optimization\n            switch (dimSize) {\n                case 0:\n                    cb.call(context, i);\n                    break;\n                case 1:\n                    cb.call(context, this.get(dims[0], i, stack), i);\n                    break;\n                case 2:\n                    cb.call(context, this.get(dims[0], i, stack), this.get(dims[1], i, stack), i);\n                    break;\n                default:\n                    for (var k = 0; k < dimSize; k++) {\n                        value[k] = this.get(dims[k], i, stack);\n                    }\n                    // Index\n                    value[k] = i;\n                    cb.apply(context, value);\n            }\n        }\n    };\n\n    /**\n     * Data filter\n     * @param {string|Array.<string>}\n     * @param {Function} cb\n     * @param {boolean} [stack=false]\n     * @param {*} [context=this]\n     */\n    listProto.filterSelf = function (dimensions, cb, stack, context) {\n        if (typeof dimensions === 'function') {\n            context = stack;\n            stack = cb;\n            cb = dimensions;\n            dimensions = [];\n        }\n\n        dimensions = zrUtil.map(\n            normalizeDimensions(dimensions), this.getDimension, this\n        );\n\n        var newIndices = [];\n        var value = [];\n        var dimSize = dimensions.length;\n        var indices = this.indices;\n\n        context = context || this;\n\n        for (var i = 0; i < indices.length; i++) {\n            var keep;\n            // Simple optimization\n            if (dimSize === 1) {\n                keep = cb.call(\n                    context, this.get(dimensions[0], i, stack), i\n                );\n            }\n            else {\n                for (var k = 0; k < dimSize; k++) {\n                    value[k] = this.get(dimensions[k], i, stack);\n                }\n                value[k] = i;\n                keep = cb.apply(context, value);\n            }\n            if (keep) {\n                newIndices.push(indices[i]);\n            }\n        }\n\n        this.indices = newIndices;\n\n        // Reset data extent\n        this._extent = {};\n\n        return this;\n    };\n\n    /**\n     * Data mapping to a plain array\n     * @param {string|Array.<string>} [dimensions]\n     * @param {Function} cb\n     * @param {boolean} [stack=false]\n     * @param {*} [context=this]\n     * @return {Array}\n     */\n    listProto.mapArray = function (dimensions, cb, stack, context) {\n        if (typeof dimensions === 'function') {\n            context = stack;\n            stack = cb;\n            cb = dimensions;\n            dimensions = [];\n        }\n\n        var result = [];\n        this.each(dimensions, function () {\n            result.push(cb && cb.apply(this, arguments));\n        }, stack, context);\n        return result;\n    };\n\n    function cloneListForMapAndSample(original, excludeDimensions) {\n        var allDimensions = original.dimensions;\n        var list = new List(\n            zrUtil.map(allDimensions, original.getDimensionInfo, original),\n            original.hostModel\n        );\n        // FIXME If needs stackedOn, value may already been stacked\n        transferProperties(list, original);\n\n        var storage = list._storage = {};\n        var originalStorage = original._storage;\n        // Init storage\n        for (var i = 0; i < allDimensions.length; i++) {\n            var dim = allDimensions[i];\n            var dimStore = originalStorage[dim];\n            if (zrUtil.indexOf(excludeDimensions, dim) >= 0) {\n                storage[dim] = new dimStore.constructor(\n                    originalStorage[dim].length\n                );\n            }\n            else {\n                // Direct reference for other dimensions\n                storage[dim] = originalStorage[dim];\n            }\n        }\n        return list;\n    }\n\n    /**\n     * Data mapping to a new List with given dimensions\n     * @param {string|Array.<string>} dimensions\n     * @param {Function} cb\n     * @param {boolean} [stack=false]\n     * @param {*} [context=this]\n     * @return {Array}\n     */\n    listProto.map = function (dimensions, cb, stack, context) {\n        dimensions = zrUtil.map(\n            normalizeDimensions(dimensions), this.getDimension, this\n        );\n\n        var list = cloneListForMapAndSample(this, dimensions);\n        // Following properties are all immutable.\n        // So we can reference to the same value\n        var indices = list.indices = this.indices;\n\n        var storage = list._storage;\n\n        var tmpRetValue = [];\n        this.each(dimensions, function () {\n            var idx = arguments[arguments.length - 1];\n            var retValue = cb && cb.apply(this, arguments);\n            if (retValue != null) {\n                // a number\n                if (typeof retValue === 'number') {\n                    tmpRetValue[0] = retValue;\n                    retValue = tmpRetValue;\n                }\n                for (var i = 0; i < retValue.length; i++) {\n                    var dim = dimensions[i];\n                    var dimStore = storage[dim];\n                    var rawIdx = indices[idx];\n                    if (dimStore) {\n                        dimStore[rawIdx] = retValue[i];\n                    }\n                }\n            }\n        }, stack, context);\n\n        return list;\n    };\n\n    /**\n     * Large data down sampling on given dimension\n     * @param {string} dimension\n     * @param {number} rate\n     * @param {Function} sampleValue\n     * @param {Function} sampleIndex Sample index for name and id\n     */\n    listProto.downSample = function (dimension, rate, sampleValue, sampleIndex) {\n        var list = cloneListForMapAndSample(this, [dimension]);\n        var storage = this._storage;\n        var targetStorage = list._storage;\n\n        var originalIndices = this.indices;\n        var indices = list.indices = [];\n\n        var frameValues = [];\n        var frameIndices = [];\n        var frameSize = Math.floor(1 / rate);\n\n        var dimStore = targetStorage[dimension];\n        var len = this.count();\n        // Copy data from original data\n        for (var i = 0; i < storage[dimension].length; i++) {\n            targetStorage[dimension][i] = storage[dimension][i];\n        }\n        for (var i = 0; i < len; i += frameSize) {\n            // Last frame\n            if (frameSize > len - i) {\n                frameSize = len - i;\n                frameValues.length = frameSize;\n            }\n            for (var k = 0; k < frameSize; k++) {\n                var idx = originalIndices[i + k];\n                frameValues[k] = dimStore[idx];\n                frameIndices[k] = idx;\n            }\n            var value = sampleValue(frameValues);\n            var idx = frameIndices[sampleIndex(frameValues, value) || 0];\n            // Only write value on the filtered data\n            dimStore[idx] = value;\n            indices.push(idx);\n        }\n\n        return list;\n    };\n\n    /**\n     * Get model of one data item.\n     *\n     * @param {number} idx\n     */\n    // FIXME Model proxy ?\n    listProto.getItemModel = function (idx) {\n        var hostModel = this.hostModel;\n        idx = this.indices[idx];\n        return new Model(this._rawData[idx], hostModel, hostModel && hostModel.ecModel);\n    };\n\n    /**\n     * Create a data differ\n     * @param {module:echarts/data/List} otherList\n     * @return {module:echarts/data/DataDiffer}\n     */\n    listProto.diff = function (otherList) {\n        var idList = this._idList;\n        var otherIdList = otherList && otherList._idList;\n        var val;\n        // Use prefix to avoid index to be the same as otherIdList[idx],\n        // which will cause weird udpate animation.\n        var prefix = 'e\\0\\0';\n\n        return new DataDiffer(\n            otherList ? otherList.indices : [],\n            this.indices,\n            function (idx) {\n                return (val = otherIdList[idx]) != null ? val : prefix + idx;\n            },\n            function (idx) {\n                return (val = idList[idx]) != null ? val : prefix + idx;\n            }\n        );\n    };\n    /**\n     * Get visual property.\n     * @param {string} key\n     */\n    listProto.getVisual = function (key) {\n        var visual = this._visual;\n        return visual && visual[key];\n    };\n\n    /**\n     * Set visual property\n     * @param {string|Object} key\n     * @param {*} [value]\n     *\n     * @example\n     *  setVisual('color', color);\n     *  setVisual({\n     *      'color': color\n     *  });\n     */\n    listProto.setVisual = function (key, val) {\n        if (isObject(key)) {\n            for (var name in key) {\n                if (key.hasOwnProperty(name)) {\n                    this.setVisual(name, key[name]);\n                }\n            }\n            return;\n        }\n        this._visual = this._visual || {};\n        this._visual[key] = val;\n    };\n\n    /**\n     * Set layout property.\n     * @param {string} key\n     * @param {*} [val]\n     */\n    listProto.setLayout = function (key, val) {\n        if (isObject(key)) {\n            for (var name in key) {\n                if (key.hasOwnProperty(name)) {\n                    this.setLayout(name, key[name]);\n                }\n            }\n            return;\n        }\n        this._layout[key] = val;\n    };\n\n    /**\n     * Get layout property.\n     * @param  {string} key.\n     * @return {*}\n     */\n    listProto.getLayout = function (key) {\n        return this._layout[key];\n    };\n\n    /**\n     * Get layout of single data item\n     * @param {number} idx\n     */\n    listProto.getItemLayout = function (idx) {\n        return this._itemLayouts[idx];\n    };\n\n    /**\n     * Set layout of single data item\n     * @param {number} idx\n     * @param {Object} layout\n     * @param {boolean=} [merge=false]\n     */\n    listProto.setItemLayout = function (idx, layout, merge) {\n        this._itemLayouts[idx] = merge\n            ? zrUtil.extend(this._itemLayouts[idx] || {}, layout)\n            : layout;\n    };\n\n    /**\n     * Clear all layout of single data item\n     */\n    listProto.clearItemLayouts = function () {\n        this._itemLayouts.length = 0;\n    };\n\n    /**\n     * Get visual property of single data item\n     * @param {number} idx\n     * @param {string} key\n     * @param {boolean} ignoreParent\n     */\n    listProto.getItemVisual = function (idx, key, ignoreParent) {\n        var itemVisual = this._itemVisuals[idx];\n        var val = itemVisual && itemVisual[key];\n        if (val == null && !ignoreParent) {\n            // Use global visual property\n            return this.getVisual(key);\n        }\n        return val;\n    };\n\n    /**\n     * Set visual property of single data item\n     *\n     * @param {number} idx\n     * @param {string|Object} key\n     * @param {*} [value]\n     *\n     * @example\n     *  setItemVisual(0, 'color', color);\n     *  setItemVisual(0, {\n     *      'color': color\n     *  });\n     */\n    listProto.setItemVisual = function (idx, key, value) {\n        var itemVisual = this._itemVisuals[idx] || {};\n        this._itemVisuals[idx] = itemVisual;\n\n        if (isObject(key)) {\n            for (var name in key) {\n                if (key.hasOwnProperty(name)) {\n                    itemVisual[name] = key[name];\n                }\n            }\n            return;\n        }\n        itemVisual[key] = value;\n    };\n\n    /**\n     * Clear itemVisuals and list visual.\n     */\n    listProto.clearAllVisual = function () {\n        this._visual = {};\n        this._itemVisuals = [];\n    };\n\n    var setItemDataAndSeriesIndex = function (child) {\n        child.seriesIndex = this.seriesIndex;\n        child.dataIndex = this.dataIndex;\n        child.dataType = this.dataType;\n    };\n    /**\n     * Set graphic element relative to data. It can be set as null\n     * @param {number} idx\n     * @param {module:zrender/Element} [el]\n     */\n    listProto.setItemGraphicEl = function (idx, el) {\n        var hostModel = this.hostModel;\n\n        if (el) {\n            // Add data index and series index for indexing the data by element\n            // Useful in tooltip\n            el.dataIndex = idx;\n            el.dataType = this.dataType;\n            el.seriesIndex = hostModel && hostModel.seriesIndex;\n            if (el.type === 'group') {\n                el.traverse(setItemDataAndSeriesIndex, el);\n            }\n        }\n\n        this._graphicEls[idx] = el;\n    };\n\n    /**\n     * @param {number} idx\n     * @return {module:zrender/Element}\n     */\n    listProto.getItemGraphicEl = function (idx) {\n        return this._graphicEls[idx];\n    };\n\n    /**\n     * @param {Function} cb\n     * @param {*} context\n     */\n    listProto.eachItemGraphicEl = function (cb, context) {\n        zrUtil.each(this._graphicEls, function (el, idx) {\n            if (el) {\n                cb && cb.call(context, el, idx);\n            }\n        });\n    };\n\n    /**\n     * Shallow clone a new list except visual and layout properties, and graph elements.\n     * New list only change the indices.\n     */\n    listProto.cloneShallow = function () {\n        var dimensionInfoList = zrUtil.map(this.dimensions, this.getDimensionInfo, this);\n        var list = new List(dimensionInfoList, this.hostModel);\n\n        // FIXME\n        list._storage = this._storage;\n\n        transferProperties(list, this);\n\n\n        // Clone will not change the data extent and indices\n        list.indices = this.indices.slice();\n\n        if (this._extent) {\n            list._extent = zrUtil.extend({}, this._extent);\n        }\n\n        return list;\n    };\n\n    /**\n     * Wrap some method to add more feature\n     * @param {string} methodName\n     * @param {Function} injectFunction\n     */\n    listProto.wrapMethod = function (methodName, injectFunction) {\n        var originalMethod = this[methodName];\n        if (typeof originalMethod !== 'function') {\n            return;\n        }\n        this.__wrappedMethods = this.__wrappedMethods || [];\n        this.__wrappedMethods.push(methodName);\n        this[methodName] = function () {\n            var res = originalMethod.apply(this, arguments);\n            return injectFunction.apply(this, [res].concat(zrUtil.slice(arguments)));\n        };\n    };\n\n    // Methods that create a new list based on this list should be listed here.\n    // Notice that those method should `RETURN` the new list.\n    listProto.TRANSFERABLE_METHODS = ['cloneShallow', 'downSample', 'map'];\n    // Methods that change indices of this list should be listed here.\n    listProto.CHANGABLE_METHODS = ['filterSelf'];\n\n    module.exports = List;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/data/List.js\n// module id = 506\n// module chunks = 0 1","\n\n    var classUtil = require('../../util/clazz');\n    var set = classUtil.set;\n    var get = classUtil.get;\n\n    module.exports = {\n        clearColorPalette: function () {\n            set(this, 'colorIdx', 0);\n            set(this, 'colorNameMap', {});\n        },\n\n        getColorFromPalette: function (name, scope) {\n            scope = scope || this;\n            var colorIdx = get(scope, 'colorIdx') || 0;\n            var colorNameMap = get(scope, 'colorNameMap') || set(scope, 'colorNameMap', {});\n            if (colorNameMap[name]) {\n                return colorNameMap[name];\n            }\n            var colorPalette = this.get('color', true) || [];\n            if (!colorPalette.length) {\n                return;\n            }\n\n            var color = colorPalette[colorIdx];\n            if (name) {\n                colorNameMap[name] = color;\n            }\n            set(scope, 'colorIdx', (colorIdx + 1) % colorPalette.length);\n\n            return color;\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/model/mixin/colorPalette.js\n// module id = 507\n// module chunks = 0 1","'use strict';\n// Symbol factory\n\n\n    var graphic = require('./graphic');\n    var BoundingRect = require('zrender/lib/core/BoundingRect');\n\n    /**\n     * Triangle shape\n     * @inner\n     */\n    var Triangle = graphic.extendShape({\n        type: 'triangle',\n        shape: {\n            cx: 0,\n            cy: 0,\n            width: 0,\n            height: 0\n        },\n        buildPath: function (path, shape) {\n            var cx = shape.cx;\n            var cy = shape.cy;\n            var width = shape.width / 2;\n            var height = shape.height / 2;\n            path.moveTo(cx, cy - height);\n            path.lineTo(cx + width, cy + height);\n            path.lineTo(cx - width, cy + height);\n            path.closePath();\n        }\n    });\n    /**\n     * Diamond shape\n     * @inner\n     */\n    var Diamond = graphic.extendShape({\n        type: 'diamond',\n        shape: {\n            cx: 0,\n            cy: 0,\n            width: 0,\n            height: 0\n        },\n        buildPath: function (path, shape) {\n            var cx = shape.cx;\n            var cy = shape.cy;\n            var width = shape.width / 2;\n            var height = shape.height / 2;\n            path.moveTo(cx, cy - height);\n            path.lineTo(cx + width, cy);\n            path.lineTo(cx, cy + height);\n            path.lineTo(cx - width, cy);\n            path.closePath();\n        }\n    });\n\n    /**\n     * Pin shape\n     * @inner\n     */\n    var Pin = graphic.extendShape({\n        type: 'pin',\n        shape: {\n            // x, y on the cusp\n            x: 0,\n            y: 0,\n            width: 0,\n            height: 0\n        },\n\n        buildPath: function (path, shape) {\n            var x = shape.x;\n            var y = shape.y;\n            var w = shape.width / 5 * 3;\n            // Height must be larger than width\n            var h = Math.max(w, shape.height);\n            var r = w / 2;\n\n            // Dist on y with tangent point and circle center\n            var dy = r * r / (h - r);\n            var cy = y - h + r + dy;\n            var angle = Math.asin(dy / r);\n            // Dist on x with tangent point and circle center\n            var dx = Math.cos(angle) * r;\n\n            var tanX = Math.sin(angle);\n            var tanY = Math.cos(angle);\n\n            path.arc(\n                x, cy, r,\n                Math.PI - angle,\n                Math.PI * 2 + angle\n            );\n\n            var cpLen = r * 0.6;\n            var cpLen2 = r * 0.7;\n            path.bezierCurveTo(\n                x + dx - tanX * cpLen, cy + dy + tanY * cpLen,\n                x, y - cpLen2,\n                x, y\n            );\n            path.bezierCurveTo(\n                x, y - cpLen2,\n                x - dx + tanX * cpLen, cy + dy + tanY * cpLen,\n                x - dx, cy + dy\n            );\n            path.closePath();\n        }\n    });\n\n    /**\n     * Arrow shape\n     * @inner\n     */\n    var Arrow = graphic.extendShape({\n\n        type: 'arrow',\n\n        shape: {\n            x: 0,\n            y: 0,\n            width: 0,\n            height: 0\n        },\n\n        buildPath: function (ctx, shape) {\n            var height = shape.height;\n            var width = shape.width;\n            var x = shape.x;\n            var y = shape.y;\n            var dx = width / 3 * 2;\n            ctx.moveTo(x, y);\n            ctx.lineTo(x + dx, y + height);\n            ctx.lineTo(x, y + height / 4 * 3);\n            ctx.lineTo(x - dx, y + height);\n            ctx.lineTo(x, y);\n            ctx.closePath();\n        }\n    });\n\n    /**\n     * Map of path contructors\n     * @type {Object.<string, module:zrender/graphic/Path>}\n     */\n    var symbolCtors = {\n        line: graphic.Line,\n\n        rect: graphic.Rect,\n\n        roundRect: graphic.Rect,\n\n        square: graphic.Rect,\n\n        circle: graphic.Circle,\n\n        diamond: Diamond,\n\n        pin: Pin,\n\n        arrow: Arrow,\n\n        triangle: Triangle\n    };\n\n    var symbolShapeMakers = {\n\n        line: function (x, y, w, h, shape) {\n            // FIXME\n            shape.x1 = x;\n            shape.y1 = y + h / 2;\n            shape.x2 = x + w;\n            shape.y2 = y + h / 2;\n        },\n\n        rect: function (x, y, w, h, shape) {\n            shape.x = x;\n            shape.y = y;\n            shape.width = w;\n            shape.height = h;\n        },\n\n        roundRect: function (x, y, w, h, shape) {\n            shape.x = x;\n            shape.y = y;\n            shape.width = w;\n            shape.height = h;\n            shape.r = Math.min(w, h) / 4;\n        },\n\n        square: function (x, y, w, h, shape) {\n            var size = Math.min(w, h);\n            shape.x = x;\n            shape.y = y;\n            shape.width = size;\n            shape.height = size;\n        },\n\n        circle: function (x, y, w, h, shape) {\n            // Put circle in the center of square\n            shape.cx = x + w / 2;\n            shape.cy = y + h / 2;\n            shape.r = Math.min(w, h) / 2;\n        },\n\n        diamond: function (x, y, w, h, shape) {\n            shape.cx = x + w / 2;\n            shape.cy = y + h / 2;\n            shape.width = w;\n            shape.height = h;\n        },\n\n        pin: function (x, y, w, h, shape) {\n            shape.x = x + w / 2;\n            shape.y = y + h / 2;\n            shape.width = w;\n            shape.height = h;\n        },\n\n        arrow: function (x, y, w, h, shape) {\n            shape.x = x + w / 2;\n            shape.y = y + h / 2;\n            shape.width = w;\n            shape.height = h;\n        },\n\n        triangle: function (x, y, w, h, shape) {\n            shape.cx = x + w / 2;\n            shape.cy = y + h / 2;\n            shape.width = w;\n            shape.height = h;\n        }\n    };\n\n    var symbolBuildProxies = {};\n    for (var name in symbolCtors) {\n        if (symbolCtors.hasOwnProperty(name)) {\n            symbolBuildProxies[name] = new symbolCtors[name]();\n        }\n    }\n\n    var Symbol = graphic.extendShape({\n\n        type: 'symbol',\n\n        shape: {\n            symbolType: '',\n            x: 0,\n            y: 0,\n            width: 0,\n            height: 0\n        },\n\n        beforeBrush: function () {\n            var style = this.style;\n            var shape = this.shape;\n            // FIXME\n            if (shape.symbolType === 'pin' && style.textPosition === 'inside') {\n                style.textPosition = ['50%', '40%'];\n                style.textAlign = 'center';\n                style.textVerticalAlign = 'middle';\n            }\n        },\n\n        buildPath: function (ctx, shape, inBundle) {\n            var symbolType = shape.symbolType;\n            var proxySymbol = symbolBuildProxies[symbolType];\n            if (shape.symbolType !== 'none') {\n                if (!proxySymbol) {\n                    // Default rect\n                    symbolType = 'rect';\n                    proxySymbol = symbolBuildProxies[symbolType];\n                }\n                symbolShapeMakers[symbolType](\n                    shape.x, shape.y, shape.width, shape.height, proxySymbol.shape\n                );\n                proxySymbol.buildPath(ctx, proxySymbol.shape, inBundle);\n            }\n        }\n    });\n\n    // Provide setColor helper method to avoid determine if set the fill or stroke outside\n    var symbolPathSetColor = function (color) {\n        if (this.type !== 'image') {\n            var symbolStyle = this.style;\n            var symbolShape = this.shape;\n            if (symbolShape && symbolShape.symbolType === 'line') {\n                symbolStyle.stroke = color;\n            }\n            else if (this.__isEmptyBrush) {\n                symbolStyle.stroke = color;\n                symbolStyle.fill = '#fff';\n            }\n            else {\n                // FIXME 判断图形默认是填充还是描边，使用 onlyStroke ?\n                symbolStyle.fill && (symbolStyle.fill = color);\n                symbolStyle.stroke && (symbolStyle.stroke = color);\n            }\n            this.dirty(false);\n        }\n    };\n\n    var symbolUtil = {\n        /**\n         * Create a symbol element with given symbol configuration: shape, x, y, width, height, color\n         * @param {string} symbolType\n         * @param {number} x\n         * @param {number} y\n         * @param {number} w\n         * @param {number} h\n         * @param {string} color\n         */\n        createSymbol: function (symbolType, x, y, w, h, color) {\n            var isEmpty = symbolType.indexOf('empty') === 0;\n            if (isEmpty) {\n                symbolType = symbolType.substr(5, 1).toLowerCase() + symbolType.substr(6);\n            }\n            var symbolPath;\n\n            if (symbolType.indexOf('image://') === 0) {\n                symbolPath = new graphic.Image({\n                    style: {\n                        image: symbolType.slice(8),\n                        x: x,\n                        y: y,\n                        width: w,\n                        height: h\n                    }\n                });\n            }\n            else if (symbolType.indexOf('path://') === 0) {\n                symbolPath = graphic.makePath(symbolType.slice(7), {}, new BoundingRect(x, y, w, h));\n            }\n            else {\n                symbolPath = new Symbol({\n                    shape: {\n                        symbolType: symbolType,\n                        x: x,\n                        y: y,\n                        width: w,\n                        height: h\n                    }\n                });\n            }\n\n            symbolPath.__isEmptyBrush = isEmpty;\n\n            symbolPath.setColor = symbolPathSetColor;\n\n            symbolPath.setColor(color);\n\n            return symbolPath;\n        }\n    };\n\n    module.exports = symbolUtil;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/util/symbol.js\n// module id = 508\n// module chunks = 0 1","\n\n    var lib = {};\n\n    var ORIGIN_METHOD = '\\0__throttleOriginMethod';\n    var RATE = '\\0__throttleRate';\n    var THROTTLE_TYPE = '\\0__throttleType';\n\n    /**\n     * @public\n     * @param {(Function)} fn\n     * @param {number} [delay=0] Unit: ms.\n     * @param {boolean} [debounce=false]\n     *        true: If call interval less than `delay`, only the last call works.\n     *        false: If call interval less than `delay, call works on fixed rate.\n     * @return {(Function)} throttled fn.\n     */\n    lib.throttle = function (fn, delay, debounce) {\n\n        var currCall;\n        var lastCall = 0;\n        var lastExec = 0;\n        var timer = null;\n        var diff;\n        var scope;\n        var args;\n\n        delay = delay || 0;\n\n        function exec() {\n            lastExec = (new Date()).getTime();\n            timer = null;\n            fn.apply(scope, args || []);\n        }\n\n        var cb = function () {\n            currCall = (new Date()).getTime();\n            scope = this;\n            args = arguments;\n            diff = currCall - (debounce ? lastCall : lastExec) - delay;\n\n            clearTimeout(timer);\n\n            if (debounce) {\n                timer = setTimeout(exec, delay);\n            }\n            else {\n                if (diff >= 0) {\n                    exec();\n                }\n                else {\n                    timer = setTimeout(exec, -diff);\n                }\n            }\n\n            lastCall = currCall;\n        };\n\n        /**\n         * Clear throttle.\n         * @public\n         */\n        cb.clear = function () {\n            if (timer) {\n                clearTimeout(timer);\n                timer = null;\n            }\n        };\n\n        return cb;\n    };\n\n    /**\n     * Create throttle method or update throttle rate.\n     *\n     * @example\n     * ComponentView.prototype.render = function () {\n     *     ...\n     *     throttle.createOrUpdate(\n     *         this,\n     *         '_dispatchAction',\n     *         this.model.get('throttle'),\n     *         'fixRate'\n     *     );\n     * };\n     * ComponentView.prototype.remove = function () {\n     *     throttle.clear(this, '_dispatchAction');\n     * };\n     * ComponentView.prototype.dispose = function () {\n     *     throttle.clear(this, '_dispatchAction');\n     * };\n     *\n     * @public\n     * @param {Object} obj\n     * @param {string} fnAttr\n     * @param {number} [rate]\n     * @param {string} [throttleType='fixRate'] 'fixRate' or 'debounce'\n     * @return {Function} throttled function.\n     */\n    lib.createOrUpdate = function (obj, fnAttr, rate, throttleType) {\n        var fn = obj[fnAttr];\n\n        if (!fn) {\n            return;\n        }\n\n        var originFn = fn[ORIGIN_METHOD] || fn;\n        var lastThrottleType = fn[THROTTLE_TYPE];\n        var lastRate = fn[RATE];\n\n        if (lastRate !== rate || lastThrottleType !== throttleType) {\n            if (rate == null || !throttleType) {\n                return (obj[fnAttr] = originFn);\n            }\n\n            fn = obj[fnAttr] = lib.throttle(\n                originFn, rate, throttleType === 'debounce'\n            );\n            fn[ORIGIN_METHOD] = originFn;\n            fn[THROTTLE_TYPE] = throttleType;\n            fn[RATE] = rate;\n        }\n\n        return fn;\n    };\n\n    /**\n     * Clear throttle. Example see throttle.createOrUpdate.\n     *\n     * @public\n     * @param {Object} obj\n     * @param {string} fnAttr\n     */\n    lib.clear = function (obj, fnAttr) {\n        var fn = obj[fnAttr];\n        if (fn && fn[ORIGIN_METHOD]) {\n            obj[fnAttr] = fn[ORIGIN_METHOD];\n        }\n    };\n\n    module.exports = lib;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/util/throttle.js\n// module id = 509\n// module chunks = 0 1","\n\n    var Group = require('zrender/lib/container/Group');\n    var componentUtil = require('../util/component');\n    var clazzUtil = require('../util/clazz');\n    var modelUtil = require('../util/model');\n    var zrUtil = require('zrender/lib/core/util');\n\n    function Chart() {\n\n        /**\n         * @type {module:zrender/container/Group}\n         * @readOnly\n         */\n        this.group = new Group();\n\n        /**\n         * @type {string}\n         * @readOnly\n         */\n        this.uid = componentUtil.getUID('viewChart');\n    }\n\n    Chart.prototype = {\n\n        type: 'chart',\n\n        /**\n         * Init the chart\n         * @param  {module:echarts/model/Global} ecModel\n         * @param  {module:echarts/ExtensionAPI} api\n         */\n        init: function (ecModel, api) {},\n\n        /**\n         * Render the chart\n         * @param  {module:echarts/model/Series} seriesModel\n         * @param  {module:echarts/model/Global} ecModel\n         * @param  {module:echarts/ExtensionAPI} api\n         * @param  {Object} payload\n         */\n        render: function (seriesModel, ecModel, api, payload) {},\n\n        /**\n         * Highlight series or specified data item\n         * @param  {module:echarts/model/Series} seriesModel\n         * @param  {module:echarts/model/Global} ecModel\n         * @param  {module:echarts/ExtensionAPI} api\n         * @param  {Object} payload\n         */\n        highlight: function (seriesModel, ecModel, api, payload) {\n            toggleHighlight(seriesModel.getData(), payload, 'emphasis');\n        },\n\n        /**\n         * Downplay series or specified data item\n         * @param  {module:echarts/model/Series} seriesModel\n         * @param  {module:echarts/model/Global} ecModel\n         * @param  {module:echarts/ExtensionAPI} api\n         * @param  {Object} payload\n         */\n        downplay: function (seriesModel, ecModel, api, payload) {\n            toggleHighlight(seriesModel.getData(), payload, 'normal');\n        },\n\n        /**\n         * Remove self\n         * @param  {module:echarts/model/Global} ecModel\n         * @param  {module:echarts/ExtensionAPI} api\n         */\n        remove: function (ecModel, api) {\n            this.group.removeAll();\n        },\n\n        /**\n         * Dispose self\n         * @param  {module:echarts/model/Global} ecModel\n         * @param  {module:echarts/ExtensionAPI} api\n         */\n        dispose: function () {}\n\n        /**\n         * The view contains the given point.\n         * @interface\n         * @param {Array.<number>} point\n         * @return {boolean}\n         */\n        // containPoint: function () {}\n\n    };\n\n    var chartProto = Chart.prototype;\n    chartProto.updateView\n        = chartProto.updateLayout\n        = chartProto.updateVisual\n        = function (seriesModel, ecModel, api, payload) {\n            this.render(seriesModel, ecModel, api, payload);\n        };\n\n    /**\n     * Set state of single element\n     * @param  {module:zrender/Element} el\n     * @param  {string} state\n     */\n    function elSetState(el, state) {\n        if (el) {\n            el.trigger(state);\n            if (el.type === 'group') {\n                for (var i = 0; i < el.childCount(); i++) {\n                    elSetState(el.childAt(i), state);\n                }\n            }\n        }\n    }\n    /**\n     * @param  {module:echarts/data/List} data\n     * @param  {Object} payload\n     * @param  {string} state 'normal'|'emphasis'\n     * @inner\n     */\n    function toggleHighlight(data, payload, state) {\n        var dataIndex = modelUtil.queryDataIndex(data, payload);\n\n        if (dataIndex != null) {\n            zrUtil.each(modelUtil.normalizeToArray(dataIndex), function (dataIdx) {\n                elSetState(data.getItemGraphicEl(dataIdx), state);\n            });\n        }\n        else {\n            data.eachItemGraphicEl(function (el) {\n                elSetState(el, state);\n            });\n        }\n    }\n\n    // Enable Chart.extend.\n    clazzUtil.enableClassExtend(Chart, ['dispose']);\n\n    // Add capability of registerClass, getClass, hasClass, registerSubTypeDefaulter and so on.\n    clazzUtil.enableClassManagement(Chart, {registerWhenExtend: true});\n\n    module.exports = Chart;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/view/Chart.js\n// module id = 510\n// module chunks = 0 1","var guid = require(\"./core/guid\");\n\nvar Eventful = require(\"./mixin/Eventful\");\n\nvar Transformable = require(\"./mixin/Transformable\");\n\nvar Animatable = require(\"./mixin/Animatable\");\n\nvar zrUtil = require(\"./core/util\");\n\n/**\n * @alias module:zrender/Element\n * @constructor\n * @extends {module:zrender/mixin/Animatable}\n * @extends {module:zrender/mixin/Transformable}\n * @extends {module:zrender/mixin/Eventful}\n */\nvar Element = function (opts) {\n  // jshint ignore:line\n  Transformable.call(this, opts);\n  Eventful.call(this, opts);\n  Animatable.call(this, opts);\n  /**\n   * 画布元素ID\n   * @type {string}\n   */\n\n  this.id = opts.id || guid();\n};\n\nElement.prototype = {\n  /**\n   * 元素类型\n   * Element type\n   * @type {string}\n   */\n  type: 'element',\n\n  /**\n   * 元素名字\n   * Element name\n   * @type {string}\n   */\n  name: '',\n\n  /**\n   * ZRender 实例对象，会在 element 添加到 zrender 实例中后自动赋值\n   * ZRender instance will be assigned when element is associated with zrender\n   * @name module:/zrender/Element#__zr\n   * @type {module:zrender/ZRender}\n   */\n  __zr: null,\n\n  /**\n   * 图形是否忽略，为true时忽略图形的绘制以及事件触发\n   * If ignore drawing and events of the element object\n   * @name module:/zrender/Element#ignore\n   * @type {boolean}\n   * @default false\n   */\n  ignore: false,\n\n  /**\n   * 用于裁剪的路径(shape)，所有 Group 内的路径在绘制时都会被这个路径裁剪\n   * 该路径会继承被裁减对象的变换\n   * @type {module:zrender/graphic/Path}\n   * @see http://www.w3.org/TR/2dcontext/#clipping-region\n   * @readOnly\n   */\n  clipPath: null,\n\n  /**\n   * Drift element\n   * @param  {number} dx dx on the global space\n   * @param  {number} dy dy on the global space\n   */\n  drift: function (dx, dy) {\n    switch (this.draggable) {\n      case 'horizontal':\n        dy = 0;\n        break;\n\n      case 'vertical':\n        dx = 0;\n        break;\n    }\n\n    var m = this.transform;\n\n    if (!m) {\n      m = this.transform = [1, 0, 0, 1, 0, 0];\n    }\n\n    m[4] += dx;\n    m[5] += dy;\n    this.decomposeTransform();\n    this.dirty(false);\n  },\n\n  /**\n   * Hook before update\n   */\n  beforeUpdate: function () {},\n\n  /**\n   * Hook after update\n   */\n  afterUpdate: function () {},\n\n  /**\n   * Update each frame\n   */\n  update: function () {\n    this.updateTransform();\n  },\n\n  /**\n   * @param  {Function} cb\n   * @param  {}   context\n   */\n  traverse: function (cb, context) {},\n\n  /**\n   * @protected\n   */\n  attrKV: function (key, value) {\n    if (key === 'position' || key === 'scale' || key === 'origin') {\n      // Copy the array\n      if (value) {\n        var target = this[key];\n\n        if (!target) {\n          target = this[key] = [];\n        }\n\n        target[0] = value[0];\n        target[1] = value[1];\n      }\n    } else {\n      this[key] = value;\n    }\n  },\n\n  /**\n   * Hide the element\n   */\n  hide: function () {\n    this.ignore = true;\n    this.__zr && this.__zr.refresh();\n  },\n\n  /**\n   * Show the element\n   */\n  show: function () {\n    this.ignore = false;\n    this.__zr && this.__zr.refresh();\n  },\n\n  /**\n   * @param {string|Object} key\n   * @param {*} value\n   */\n  attr: function (key, value) {\n    if (typeof key === 'string') {\n      this.attrKV(key, value);\n    } else if (zrUtil.isObject(key)) {\n      for (var name in key) {\n        if (key.hasOwnProperty(name)) {\n          this.attrKV(name, key[name]);\n        }\n      }\n    }\n\n    this.dirty(false);\n    return this;\n  },\n\n  /**\n   * @param {module:zrender/graphic/Path} clipPath\n   */\n  setClipPath: function (clipPath) {\n    var zr = this.__zr;\n\n    if (zr) {\n      clipPath.addSelfToZr(zr);\n    } // Remove previous clip path\n\n\n    if (this.clipPath && this.clipPath !== clipPath) {\n      this.removeClipPath();\n    }\n\n    this.clipPath = clipPath;\n    clipPath.__zr = zr;\n    clipPath.__clipTarget = this;\n    this.dirty(false);\n  },\n\n  /**\n   */\n  removeClipPath: function () {\n    var clipPath = this.clipPath;\n\n    if (clipPath) {\n      if (clipPath.__zr) {\n        clipPath.removeSelfFromZr(clipPath.__zr);\n      }\n\n      clipPath.__zr = null;\n      clipPath.__clipTarget = null;\n      this.clipPath = null;\n      this.dirty(false);\n    }\n  },\n\n  /**\n   * Add self from zrender instance.\n   * Not recursively because it will be invoked when element added to storage.\n   * @param {module:zrender/ZRender} zr\n   */\n  addSelfToZr: function (zr) {\n    this.__zr = zr; // 添加动画\n\n    var animators = this.animators;\n\n    if (animators) {\n      for (var i = 0; i < animators.length; i++) {\n        zr.animation.addAnimator(animators[i]);\n      }\n    }\n\n    if (this.clipPath) {\n      this.clipPath.addSelfToZr(zr);\n    }\n  },\n\n  /**\n   * Remove self from zrender instance.\n   * Not recursively because it will be invoked when element added to storage.\n   * @param {module:zrender/ZRender} zr\n   */\n  removeSelfFromZr: function (zr) {\n    this.__zr = null; // 移除动画\n\n    var animators = this.animators;\n\n    if (animators) {\n      for (var i = 0; i < animators.length; i++) {\n        zr.animation.removeAnimator(animators[i]);\n      }\n    }\n\n    if (this.clipPath) {\n      this.clipPath.removeSelfFromZr(zr);\n    }\n  }\n};\nzrUtil.mixin(Element, Animatable);\nzrUtil.mixin(Element, Transformable);\nzrUtil.mixin(Element, Eventful);\nvar _default = Element;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/Element.js\n// module id = 511\n// module chunks = 0 1","var Clip = require(\"./Clip\");\n\nvar color = require(\"../tool/color\");\n\nvar _util = require(\"../core/util\");\n\nvar isArrayLike = _util.isArrayLike;\n\n/**\n * @module echarts/animation/Animator\n */\nvar arraySlice = Array.prototype.slice;\n\nfunction defaultGetter(target, key) {\n  return target[key];\n}\n\nfunction defaultSetter(target, key, value) {\n  target[key] = value;\n}\n/**\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} percent\n * @return {number}\n */\n\n\nfunction interpolateNumber(p0, p1, percent) {\n  return (p1 - p0) * percent + p0;\n}\n/**\n * @param  {string} p0\n * @param  {string} p1\n * @param  {number} percent\n * @return {string}\n */\n\n\nfunction interpolateString(p0, p1, percent) {\n  return percent > 0.5 ? p1 : p0;\n}\n/**\n * @param  {Array} p0\n * @param  {Array} p1\n * @param  {number} percent\n * @param  {Array} out\n * @param  {number} arrDim\n */\n\n\nfunction interpolateArray(p0, p1, percent, out, arrDim) {\n  var len = p0.length;\n\n  if (arrDim == 1) {\n    for (var i = 0; i < len; i++) {\n      out[i] = interpolateNumber(p0[i], p1[i], percent);\n    }\n  } else {\n    var len2 = len && p0[0].length;\n\n    for (var i = 0; i < len; i++) {\n      for (var j = 0; j < len2; j++) {\n        out[i][j] = interpolateNumber(p0[i][j], p1[i][j], percent);\n      }\n    }\n  }\n} // arr0 is source array, arr1 is target array.\n// Do some preprocess to avoid error happened when interpolating from arr0 to arr1\n\n\nfunction fillArr(arr0, arr1, arrDim) {\n  var arr0Len = arr0.length;\n  var arr1Len = arr1.length;\n\n  if (arr0Len !== arr1Len) {\n    // FIXME Not work for TypedArray\n    var isPreviousLarger = arr0Len > arr1Len;\n\n    if (isPreviousLarger) {\n      // Cut the previous\n      arr0.length = arr1Len;\n    } else {\n      // Fill the previous\n      for (var i = arr0Len; i < arr1Len; i++) {\n        arr0.push(arrDim === 1 ? arr1[i] : arraySlice.call(arr1[i]));\n      }\n    }\n  } // Handling NaN value\n\n\n  var len2 = arr0[0] && arr0[0].length;\n\n  for (var i = 0; i < arr0.length; i++) {\n    if (arrDim === 1) {\n      if (isNaN(arr0[i])) {\n        arr0[i] = arr1[i];\n      }\n    } else {\n      for (var j = 0; j < len2; j++) {\n        if (isNaN(arr0[i][j])) {\n          arr0[i][j] = arr1[i][j];\n        }\n      }\n    }\n  }\n}\n/**\n * @param  {Array} arr0\n * @param  {Array} arr1\n * @param  {number} arrDim\n * @return {boolean}\n */\n\n\nfunction isArraySame(arr0, arr1, arrDim) {\n  if (arr0 === arr1) {\n    return true;\n  }\n\n  var len = arr0.length;\n\n  if (len !== arr1.length) {\n    return false;\n  }\n\n  if (arrDim === 1) {\n    for (var i = 0; i < len; i++) {\n      if (arr0[i] !== arr1[i]) {\n        return false;\n      }\n    }\n  } else {\n    var len2 = arr0[0].length;\n\n    for (var i = 0; i < len; i++) {\n      for (var j = 0; j < len2; j++) {\n        if (arr0[i][j] !== arr1[i][j]) {\n          return false;\n        }\n      }\n    }\n  }\n\n  return true;\n}\n/**\n * Catmull Rom interpolate array\n * @param  {Array} p0\n * @param  {Array} p1\n * @param  {Array} p2\n * @param  {Array} p3\n * @param  {number} t\n * @param  {number} t2\n * @param  {number} t3\n * @param  {Array} out\n * @param  {number} arrDim\n */\n\n\nfunction catmullRomInterpolateArray(p0, p1, p2, p3, t, t2, t3, out, arrDim) {\n  var len = p0.length;\n\n  if (arrDim == 1) {\n    for (var i = 0; i < len; i++) {\n      out[i] = catmullRomInterpolate(p0[i], p1[i], p2[i], p3[i], t, t2, t3);\n    }\n  } else {\n    var len2 = p0[0].length;\n\n    for (var i = 0; i < len; i++) {\n      for (var j = 0; j < len2; j++) {\n        out[i][j] = catmullRomInterpolate(p0[i][j], p1[i][j], p2[i][j], p3[i][j], t, t2, t3);\n      }\n    }\n  }\n}\n/**\n * Catmull Rom interpolate number\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} p3\n * @param  {number} t\n * @param  {number} t2\n * @param  {number} t3\n * @return {number}\n */\n\n\nfunction catmullRomInterpolate(p0, p1, p2, p3, t, t2, t3) {\n  var v0 = (p2 - p0) * 0.5;\n  var v1 = (p3 - p1) * 0.5;\n  return (2 * (p1 - p2) + v0 + v1) * t3 + (-3 * (p1 - p2) - 2 * v0 - v1) * t2 + v0 * t + p1;\n}\n\nfunction cloneValue(value) {\n  if (isArrayLike(value)) {\n    var len = value.length;\n\n    if (isArrayLike(value[0])) {\n      var ret = [];\n\n      for (var i = 0; i < len; i++) {\n        ret.push(arraySlice.call(value[i]));\n      }\n\n      return ret;\n    }\n\n    return arraySlice.call(value);\n  }\n\n  return value;\n}\n\nfunction rgba2String(rgba) {\n  rgba[0] = Math.floor(rgba[0]);\n  rgba[1] = Math.floor(rgba[1]);\n  rgba[2] = Math.floor(rgba[2]);\n  return 'rgba(' + rgba.join(',') + ')';\n}\n\nfunction getArrayDim(keyframes) {\n  var lastValue = keyframes[keyframes.length - 1].value;\n  return isArrayLike(lastValue && lastValue[0]) ? 2 : 1;\n}\n\nfunction createTrackClip(animator, easing, oneTrackDone, keyframes, propName, forceAnimate) {\n  var getter = animator._getter;\n  var setter = animator._setter;\n  var useSpline = easing === 'spline';\n  var trackLen = keyframes.length;\n\n  if (!trackLen) {\n    return;\n  } // Guess data type\n\n\n  var firstVal = keyframes[0].value;\n  var isValueArray = isArrayLike(firstVal);\n  var isValueColor = false;\n  var isValueString = false; // For vertices morphing\n\n  var arrDim = isValueArray ? getArrayDim(keyframes) : 0;\n  var trackMaxTime; // Sort keyframe as ascending\n\n  keyframes.sort(function (a, b) {\n    return a.time - b.time;\n  });\n  trackMaxTime = keyframes[trackLen - 1].time; // Percents of each keyframe\n\n  var kfPercents = []; // Value of each keyframe\n\n  var kfValues = [];\n  var prevValue = keyframes[0].value;\n  var isAllValueEqual = true;\n\n  for (var i = 0; i < trackLen; i++) {\n    kfPercents.push(keyframes[i].time / trackMaxTime); // Assume value is a color when it is a string\n\n    var value = keyframes[i].value; // Check if value is equal, deep check if value is array\n\n    if (!(isValueArray && isArraySame(value, prevValue, arrDim) || !isValueArray && value === prevValue)) {\n      isAllValueEqual = false;\n    }\n\n    prevValue = value; // Try converting a string to a color array\n\n    if (typeof value == 'string') {\n      var colorArray = color.parse(value);\n\n      if (colorArray) {\n        value = colorArray;\n        isValueColor = true;\n      } else {\n        isValueString = true;\n      }\n    }\n\n    kfValues.push(value);\n  }\n\n  if (!forceAnimate && isAllValueEqual) {\n    return;\n  }\n\n  var lastValue = kfValues[trackLen - 1]; // Polyfill array and NaN value\n\n  for (var i = 0; i < trackLen - 1; i++) {\n    if (isValueArray) {\n      fillArr(kfValues[i], lastValue, arrDim);\n    } else {\n      if (isNaN(kfValues[i]) && !isNaN(lastValue) && !isValueString && !isValueColor) {\n        kfValues[i] = lastValue;\n      }\n    }\n  }\n\n  isValueArray && fillArr(getter(animator._target, propName), lastValue, arrDim); // Cache the key of last frame to speed up when\n  // animation playback is sequency\n\n  var lastFrame = 0;\n  var lastFramePercent = 0;\n  var start;\n  var w;\n  var p0;\n  var p1;\n  var p2;\n  var p3;\n\n  if (isValueColor) {\n    var rgba = [0, 0, 0, 0];\n  }\n\n  var onframe = function (target, percent) {\n    // Find the range keyframes\n    // kf1-----kf2---------current--------kf3\n    // find kf2 and kf3 and do interpolation\n    var frame; // In the easing function like elasticOut, percent may less than 0\n\n    if (percent < 0) {\n      frame = 0;\n    } else if (percent < lastFramePercent) {\n      // Start from next key\n      // PENDING start from lastFrame ?\n      start = Math.min(lastFrame + 1, trackLen - 1);\n\n      for (frame = start; frame >= 0; frame--) {\n        if (kfPercents[frame] <= percent) {\n          break;\n        }\n      } // PENDING really need to do this ?\n\n\n      frame = Math.min(frame, trackLen - 2);\n    } else {\n      for (frame = lastFrame; frame < trackLen; frame++) {\n        if (kfPercents[frame] > percent) {\n          break;\n        }\n      }\n\n      frame = Math.min(frame - 1, trackLen - 2);\n    }\n\n    lastFrame = frame;\n    lastFramePercent = percent;\n    var range = kfPercents[frame + 1] - kfPercents[frame];\n\n    if (range === 0) {\n      return;\n    } else {\n      w = (percent - kfPercents[frame]) / range;\n    }\n\n    if (useSpline) {\n      p1 = kfValues[frame];\n      p0 = kfValues[frame === 0 ? frame : frame - 1];\n      p2 = kfValues[frame > trackLen - 2 ? trackLen - 1 : frame + 1];\n      p3 = kfValues[frame > trackLen - 3 ? trackLen - 1 : frame + 2];\n\n      if (isValueArray) {\n        catmullRomInterpolateArray(p0, p1, p2, p3, w, w * w, w * w * w, getter(target, propName), arrDim);\n      } else {\n        var value;\n\n        if (isValueColor) {\n          value = catmullRomInterpolateArray(p0, p1, p2, p3, w, w * w, w * w * w, rgba, 1);\n          value = rgba2String(rgba);\n        } else if (isValueString) {\n          // String is step(0.5)\n          return interpolateString(p1, p2, w);\n        } else {\n          value = catmullRomInterpolate(p0, p1, p2, p3, w, w * w, w * w * w);\n        }\n\n        setter(target, propName, value);\n      }\n    } else {\n      if (isValueArray) {\n        interpolateArray(kfValues[frame], kfValues[frame + 1], w, getter(target, propName), arrDim);\n      } else {\n        var value;\n\n        if (isValueColor) {\n          interpolateArray(kfValues[frame], kfValues[frame + 1], w, rgba, 1);\n          value = rgba2String(rgba);\n        } else if (isValueString) {\n          // String is step(0.5)\n          return interpolateString(kfValues[frame], kfValues[frame + 1], w);\n        } else {\n          value = interpolateNumber(kfValues[frame], kfValues[frame + 1], w);\n        }\n\n        setter(target, propName, value);\n      }\n    }\n  };\n\n  var clip = new Clip({\n    target: animator._target,\n    life: trackMaxTime,\n    loop: animator._loop,\n    delay: animator._delay,\n    onframe: onframe,\n    ondestroy: oneTrackDone\n  });\n\n  if (easing && easing !== 'spline') {\n    clip.easing = easing;\n  }\n\n  return clip;\n}\n/**\n * @alias module:zrender/animation/Animator\n * @constructor\n * @param {Object} target\n * @param {boolean} loop\n * @param {Function} getter\n * @param {Function} setter\n */\n\n\nvar Animator = function (target, loop, getter, setter) {\n  this._tracks = {};\n  this._target = target;\n  this._loop = loop || false;\n  this._getter = getter || defaultGetter;\n  this._setter = setter || defaultSetter;\n  this._clipCount = 0;\n  this._delay = 0;\n  this._doneList = [];\n  this._onframeList = [];\n  this._clipList = [];\n};\n\nAnimator.prototype = {\n  /**\n   * 设置动画关键帧\n   * @param  {number} time 关键帧时间，单位是ms\n   * @param  {Object} props 关键帧的属性值，key-value表示\n   * @return {module:zrender/animation/Animator}\n   */\n  when: function (time\n  /* ms */\n  , props) {\n    var tracks = this._tracks;\n\n    for (var propName in props) {\n      if (!props.hasOwnProperty(propName)) {\n        continue;\n      }\n\n      if (!tracks[propName]) {\n        tracks[propName] = []; // Invalid value\n\n        var value = this._getter(this._target, propName);\n\n        if (value == null) {\n          // zrLog('Invalid property ' + propName);\n          continue;\n        } // If time is 0\n        //  Then props is given initialize value\n        // Else\n        //  Initialize value from current prop value\n\n\n        if (time !== 0) {\n          tracks[propName].push({\n            time: 0,\n            value: cloneValue(value)\n          });\n        }\n      }\n\n      tracks[propName].push({\n        time: time,\n        value: props[propName]\n      });\n    }\n\n    return this;\n  },\n\n  /**\n   * 添加动画每一帧的回调函数\n   * @param  {Function} callback\n   * @return {module:zrender/animation/Animator}\n   */\n  during: function (callback) {\n    this._onframeList.push(callback);\n\n    return this;\n  },\n  pause: function () {\n    for (var i = 0; i < this._clipList.length; i++) {\n      this._clipList[i].pause();\n    }\n\n    this._paused = true;\n  },\n  resume: function () {\n    for (var i = 0; i < this._clipList.length; i++) {\n      this._clipList[i].resume();\n    }\n\n    this._paused = false;\n  },\n  isPaused: function () {\n    return !!this._paused;\n  },\n  _doneCallback: function () {\n    // Clear all tracks\n    this._tracks = {}; // Clear all clips\n\n    this._clipList.length = 0;\n    var doneList = this._doneList;\n    var len = doneList.length;\n\n    for (var i = 0; i < len; i++) {\n      doneList[i].call(this);\n    }\n  },\n\n  /**\n   * 开始执行动画\n   * @param  {string|Function} [easing]\n   *         动画缓动函数，详见{@link module:zrender/animation/easing}\n   * @param  {boolean} forceAnimate\n   * @return {module:zrender/animation/Animator}\n   */\n  start: function (easing, forceAnimate) {\n    var self = this;\n    var clipCount = 0;\n\n    var oneTrackDone = function () {\n      clipCount--;\n\n      if (!clipCount) {\n        self._doneCallback();\n      }\n    };\n\n    var lastClip;\n\n    for (var propName in this._tracks) {\n      if (!this._tracks.hasOwnProperty(propName)) {\n        continue;\n      }\n\n      var clip = createTrackClip(this, easing, oneTrackDone, this._tracks[propName], propName, forceAnimate);\n\n      if (clip) {\n        this._clipList.push(clip);\n\n        clipCount++; // If start after added to animation\n\n        if (this.animation) {\n          this.animation.addClip(clip);\n        }\n\n        lastClip = clip;\n      }\n    } // Add during callback on the last clip\n\n\n    if (lastClip) {\n      var oldOnFrame = lastClip.onframe;\n\n      lastClip.onframe = function (target, percent) {\n        oldOnFrame(target, percent);\n\n        for (var i = 0; i < self._onframeList.length; i++) {\n          self._onframeList[i](target, percent);\n        }\n      };\n    } // This optimization will help the case that in the upper application\n    // the view may be refreshed frequently, where animation will be\n    // called repeatly but nothing changed.\n\n\n    if (!clipCount) {\n      this._doneCallback();\n    }\n\n    return this;\n  },\n\n  /**\n   * 停止动画\n   * @param {boolean} forwardToLast If move to last frame before stop\n   */\n  stop: function (forwardToLast) {\n    var clipList = this._clipList;\n    var animation = this.animation;\n\n    for (var i = 0; i < clipList.length; i++) {\n      var clip = clipList[i];\n\n      if (forwardToLast) {\n        // Move to last frame before stop\n        clip.onframe(this._target, 1);\n      }\n\n      animation && animation.removeClip(clip);\n    }\n\n    clipList.length = 0;\n  },\n\n  /**\n   * 设置动画延迟开始的时间\n   * @param  {number} time 单位ms\n   * @return {module:zrender/animation/Animator}\n   */\n  delay: function (time) {\n    this._delay = time;\n    return this;\n  },\n\n  /**\n   * 添加动画结束的回调\n   * @param  {Function} cb\n   * @return {module:zrender/animation/Animator}\n   */\n  done: function (cb) {\n    if (cb) {\n      this._doneList.push(cb);\n    }\n\n    return this;\n  },\n\n  /**\n   * @return {Array.<module:zrender/animation/Clip>}\n   */\n  getClips: function () {\n    return this._clipList;\n  }\n};\nvar _default = Animator;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/animation/Animator.js\n// module id = 512\n// module chunks = 0 1","var _default = typeof window !== 'undefined' && (window.requestAnimationFrame && window.requestAnimationFrame.bind(window) || // https://github.com/ecomfe/zrender/issues/189#issuecomment-224919809\nwindow.msRequestAnimationFrame && window.msRequestAnimationFrame.bind(window) || window.mozRequestAnimationFrame || window.webkitRequestAnimationFrame) || function (func) {\n  setTimeout(func, 16);\n};\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/animation/requestAnimationFrame.js\n// module id = 513\n// module chunks = 0 1","var PI2 = Math.PI * 2;\n\nfunction normalizeRadian(angle) {\n  angle %= PI2;\n\n  if (angle < 0) {\n    angle += PI2;\n  }\n\n  return angle;\n}\n\nexports.normalizeRadian = normalizeRadian;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/contain/util.js\n// module id = 514\n// module chunks = 0 1","// Simple LRU cache use doubly linked list\n// @module zrender/core/LRU\n\n/**\n * Simple double linked list. Compared with array, it has O(1) remove operation.\n * @constructor\n */\nvar LinkedList = function () {\n  /**\n   * @type {module:zrender/core/LRU~Entry}\n   */\n  this.head = null;\n  /**\n   * @type {module:zrender/core/LRU~Entry}\n   */\n\n  this.tail = null;\n  this._len = 0;\n};\n\nvar linkedListProto = LinkedList.prototype;\n/**\n * Insert a new value at the tail\n * @param  {} val\n * @return {module:zrender/core/LRU~Entry}\n */\n\nlinkedListProto.insert = function (val) {\n  var entry = new Entry(val);\n  this.insertEntry(entry);\n  return entry;\n};\n/**\n * Insert an entry at the tail\n * @param  {module:zrender/core/LRU~Entry} entry\n */\n\n\nlinkedListProto.insertEntry = function (entry) {\n  if (!this.head) {\n    this.head = this.tail = entry;\n  } else {\n    this.tail.next = entry;\n    entry.prev = this.tail;\n    entry.next = null;\n    this.tail = entry;\n  }\n\n  this._len++;\n};\n/**\n * Remove entry.\n * @param  {module:zrender/core/LRU~Entry} entry\n */\n\n\nlinkedListProto.remove = function (entry) {\n  var prev = entry.prev;\n  var next = entry.next;\n\n  if (prev) {\n    prev.next = next;\n  } else {\n    // Is head\n    this.head = next;\n  }\n\n  if (next) {\n    next.prev = prev;\n  } else {\n    // Is tail\n    this.tail = prev;\n  }\n\n  entry.next = entry.prev = null;\n  this._len--;\n};\n/**\n * @return {number}\n */\n\n\nlinkedListProto.len = function () {\n  return this._len;\n};\n/**\n * Clear list\n */\n\n\nlinkedListProto.clear = function () {\n  this.head = this.tail = null;\n  this._len = 0;\n};\n/**\n * @constructor\n * @param {} val\n */\n\n\nvar Entry = function (val) {\n  /**\n   * @type {}\n   */\n  this.value = val;\n  /**\n   * @type {module:zrender/core/LRU~Entry}\n   */\n\n  this.next;\n  /**\n   * @type {module:zrender/core/LRU~Entry}\n   */\n\n  this.prev;\n};\n/**\n * LRU Cache\n * @constructor\n * @alias module:zrender/core/LRU\n */\n\n\nvar LRU = function (maxSize) {\n  this._list = new LinkedList();\n  this._map = {};\n  this._maxSize = maxSize || 10;\n  this._lastRemovedEntry = null;\n};\n\nvar LRUProto = LRU.prototype;\n/**\n * @param  {string} key\n * @param  {} value\n * @return {} Removed value\n */\n\nLRUProto.put = function (key, value) {\n  var list = this._list;\n  var map = this._map;\n  var removed = null;\n\n  if (map[key] == null) {\n    var len = list.len(); // Reuse last removed entry\n\n    var entry = this._lastRemovedEntry;\n\n    if (len >= this._maxSize && len > 0) {\n      // Remove the least recently used\n      var leastUsedEntry = list.head;\n      list.remove(leastUsedEntry);\n      delete map[leastUsedEntry.key];\n      removed = leastUsedEntry.value;\n      this._lastRemovedEntry = leastUsedEntry;\n    }\n\n    if (entry) {\n      entry.value = value;\n    } else {\n      entry = new Entry(value);\n    }\n\n    entry.key = key;\n    list.insertEntry(entry);\n    map[key] = entry;\n  }\n\n  return removed;\n};\n/**\n * @param  {string} key\n * @return {}\n */\n\n\nLRUProto.get = function (key) {\n  var entry = this._map[key];\n  var list = this._list;\n\n  if (entry != null) {\n    // Put the latest used entry in the tail\n    if (entry !== list.tail) {\n      list.remove(entry);\n      list.insertEntry(entry);\n    }\n\n    return entry.value;\n  }\n};\n/**\n * Clear the cache\n */\n\n\nLRUProto.clear = function () {\n  this._list.clear();\n\n  this._map = {};\n};\n\nvar _default = LRU;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/core/LRU.js\n// module id = 515\n// module chunks = 0 1","/**\n * zrender: 生成唯一id\n *\n * @author errorrik (errorrik@gmail.com)\n */\nvar idStart = 0x0907;\n\nfunction _default() {\n  return idStart++;\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/core/guid.js\n// module id = 516\n// module chunks = 0 1","var Path = require(\"./Path\");\n\n// CompoundPath to improve performance\nvar _default = Path.extend({\n  type: 'compound',\n  shape: {\n    paths: null\n  },\n  _updatePathDirty: function () {\n    var dirtyPath = this.__dirtyPath;\n    var paths = this.shape.paths;\n\n    for (var i = 0; i < paths.length; i++) {\n      // Mark as dirty if any subpath is dirty\n      dirtyPath = dirtyPath || paths[i].__dirtyPath;\n    }\n\n    this.__dirtyPath = dirtyPath;\n    this.__dirty = this.__dirty || dirtyPath;\n  },\n  beforeBrush: function () {\n    this._updatePathDirty();\n\n    var paths = this.shape.paths || [];\n    var scale = this.getGlobalScale(); // Update path scale\n\n    for (var i = 0; i < paths.length; i++) {\n      if (!paths[i].path) {\n        paths[i].createPathProxy();\n      }\n\n      paths[i].path.setScale(scale[0], scale[1]);\n    }\n  },\n  buildPath: function (ctx, shape) {\n    var paths = shape.paths || [];\n\n    for (var i = 0; i < paths.length; i++) {\n      paths[i].buildPath(ctx, paths[i].shape, true);\n    }\n  },\n  afterBrush: function () {\n    var paths = this.shape.paths || [];\n\n    for (var i = 0; i < paths.length; i++) {\n      paths[i].__dirtyPath = false;\n    }\n  },\n  getBoundingRect: function () {\n    this._updatePathDirty();\n\n    return Path.prototype.getBoundingRect.call(this);\n  }\n});\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/CompoundPath.js\n// module id = 517\n// module chunks = 0 1","var zrUtil = require(\"../core/util\");\n\nvar Gradient = require(\"./Gradient\");\n\n/**\n * x, y, x2, y2 are all percent from 0 to 1\n * @param {number} [x=0]\n * @param {number} [y=0]\n * @param {number} [x2=1]\n * @param {number} [y2=0]\n * @param {Array.<Object>} colorStops\n * @param {boolean} [globalCoord=false]\n */\nvar LinearGradient = function (x, y, x2, y2, colorStops, globalCoord) {\n  // Should do nothing more in this constructor. Because gradient can be\n  // declard by `color: {type: 'linear', colorStops: ...}`, where\n  // this constructor will not be called.\n  this.x = x == null ? 0 : x;\n  this.y = y == null ? 0 : y;\n  this.x2 = x2 == null ? 1 : x2;\n  this.y2 = y2 == null ? 0 : y2; // Can be cloned\n\n  this.type = 'linear'; // If use global coord\n\n  this.global = globalCoord || false;\n  Gradient.call(this, colorStops);\n};\n\nLinearGradient.prototype = {\n  constructor: LinearGradient\n};\nzrUtil.inherits(LinearGradient, Gradient);\nvar _default = LinearGradient;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/LinearGradient.js\n// module id = 518\n// module chunks = 0 1","var zrUtil = require(\"../core/util\");\n\nvar Gradient = require(\"./Gradient\");\n\n/**\n * x, y, r are all percent from 0 to 1\n * @param {number} [x=0.5]\n * @param {number} [y=0.5]\n * @param {number} [r=0.5]\n * @param {Array.<Object>} [colorStops]\n * @param {boolean} [globalCoord=false]\n */\nvar RadialGradient = function (x, y, r, colorStops, globalCoord) {\n  // Should do nothing more in this constructor. Because gradient can be\n  // declard by `color: {type: 'radial', colorStops: ...}`, where\n  // this constructor will not be called.\n  this.x = x == null ? 0.5 : x;\n  this.y = y == null ? 0.5 : y;\n  this.r = r == null ? 0.5 : r; // Can be cloned\n\n  this.type = 'radial'; // If use global coord\n\n  this.global = globalCoord || false;\n  Gradient.call(this, colorStops);\n};\n\nRadialGradient.prototype = {\n  constructor: RadialGradient\n};\nzrUtil.inherits(RadialGradient, Gradient);\nvar _default = RadialGradient;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/RadialGradient.js\n// module id = 519\n// module chunks = 0 1","var STYLE_COMMON_PROPS = [['shadowBlur', 0], ['shadowOffsetX', 0], ['shadowOffsetY', 0], ['shadowColor', '#000'], ['lineCap', 'butt'], ['lineJoin', 'miter'], ['miterLimit', 10]]; // var SHADOW_PROPS = STYLE_COMMON_PROPS.slice(0, 4);\n// var LINE_PROPS = STYLE_COMMON_PROPS.slice(4);\n\nvar Style = function (opts, host) {\n  this.extendFrom(opts, false);\n  this.host = host;\n};\n\nfunction createLinearGradient(ctx, obj, rect) {\n  var x = obj.x == null ? 0 : obj.x;\n  var x2 = obj.x2 == null ? 1 : obj.x2;\n  var y = obj.y == null ? 0 : obj.y;\n  var y2 = obj.y2 == null ? 0 : obj.y2;\n\n  if (!obj.global) {\n    x = x * rect.width + rect.x;\n    x2 = x2 * rect.width + rect.x;\n    y = y * rect.height + rect.y;\n    y2 = y2 * rect.height + rect.y;\n  }\n\n  var canvasGradient = ctx.createLinearGradient(x, y, x2, y2);\n  return canvasGradient;\n}\n\nfunction createRadialGradient(ctx, obj, rect) {\n  var width = rect.width;\n  var height = rect.height;\n  var min = Math.min(width, height);\n  var x = obj.x == null ? 0.5 : obj.x;\n  var y = obj.y == null ? 0.5 : obj.y;\n  var r = obj.r == null ? 0.5 : obj.r;\n\n  if (!obj.global) {\n    x = x * width + rect.x;\n    y = y * height + rect.y;\n    r = r * min;\n  }\n\n  var canvasGradient = ctx.createRadialGradient(x, y, 0, x, y, r);\n  return canvasGradient;\n}\n\nStyle.prototype = {\n  constructor: Style,\n\n  /**\n   * @type {module:zrender/graphic/Displayable}\n   */\n  host: null,\n\n  /**\n   * @type {string}\n   */\n  fill: '#000',\n\n  /**\n   * @type {string}\n   */\n  stroke: null,\n\n  /**\n   * @type {number}\n   */\n  opacity: 1,\n\n  /**\n   * @type {Array.<number>}\n   */\n  lineDash: null,\n\n  /**\n   * @type {number}\n   */\n  lineDashOffset: 0,\n\n  /**\n   * @type {number}\n   */\n  shadowBlur: 0,\n\n  /**\n   * @type {number}\n   */\n  shadowOffsetX: 0,\n\n  /**\n   * @type {number}\n   */\n  shadowOffsetY: 0,\n\n  /**\n   * @type {number}\n   */\n  lineWidth: 1,\n\n  /**\n   * If stroke ignore scale\n   * @type {Boolean}\n   */\n  strokeNoScale: false,\n  // Bounding rect text configuration\n  // Not affected by element transform\n\n  /**\n   * @type {string}\n   */\n  text: null,\n\n  /**\n   * If `fontSize` or `fontFamily` exists, `font` will be reset by\n   * `fontSize`, `fontStyle`, `fontWeight`, `fontFamily`.\n   * So do not visit it directly in upper application (like echarts),\n   * but use `contain/text#makeFont` instead.\n   * @type {string}\n   */\n  font: null,\n\n  /**\n   * The same as font. Use font please.\n   * @deprecated\n   * @type {string}\n   */\n  textFont: null,\n\n  /**\n   * It helps merging respectively, rather than parsing an entire font string.\n   * @type {string}\n   */\n  fontStyle: null,\n\n  /**\n   * It helps merging respectively, rather than parsing an entire font string.\n   * @type {string}\n   */\n  fontWeight: null,\n\n  /**\n   * It helps merging respectively, rather than parsing an entire font string.\n   * Should be 12 but not '12px'.\n   * @type {number}\n   */\n  fontSize: null,\n\n  /**\n   * It helps merging respectively, rather than parsing an entire font string.\n   * @type {string}\n   */\n  fontFamily: null,\n\n  /**\n   * Reserved for special functinality, like 'hr'.\n   * @type {string}\n   */\n  textTag: null,\n\n  /**\n   * @type {string}\n   */\n  textFill: '#000',\n\n  /**\n   * @type {string}\n   */\n  textStroke: null,\n\n  /**\n   * @type {number}\n   */\n  textWidth: null,\n\n  /**\n   * Only for textBackground.\n   * @type {number}\n   */\n  textHeight: null,\n\n  /**\n   * textStroke may be set as some color as a default\n   * value in upper applicaion, where the default value\n   * of textStrokeWidth should be 0 to make sure that\n   * user can choose to do not use text stroke.\n   * @type {number}\n   */\n  textStrokeWidth: 0,\n\n  /**\n   * @type {number}\n   */\n  textLineHeight: null,\n\n  /**\n   * 'inside', 'left', 'right', 'top', 'bottom'\n   * [x, y]\n   * Based on x, y of rect.\n   * @type {string|Array.<number>}\n   * @default 'inside'\n   */\n  textPosition: 'inside',\n\n  /**\n   * If not specified, use the boundingRect of a `displayable`.\n   * @type {Object}\n   */\n  textRect: null,\n\n  /**\n   * [x, y]\n   * @type {Array.<number>}\n   */\n  textOffset: null,\n\n  /**\n   * @type {string}\n   */\n  textAlign: null,\n\n  /**\n   * @type {string}\n   */\n  textVerticalAlign: null,\n\n  /**\n   * @type {number}\n   */\n  textDistance: 5,\n\n  /**\n   * @type {string}\n   */\n  textShadowColor: 'transparent',\n\n  /**\n   * @type {number}\n   */\n  textShadowBlur: 0,\n\n  /**\n   * @type {number}\n   */\n  textShadowOffsetX: 0,\n\n  /**\n   * @type {number}\n   */\n  textShadowOffsetY: 0,\n\n  /**\n   * @type {string}\n   */\n  textBoxShadowColor: 'transparent',\n\n  /**\n   * @type {number}\n   */\n  textBoxShadowBlur: 0,\n\n  /**\n   * @type {number}\n   */\n  textBoxShadowOffsetX: 0,\n\n  /**\n   * @type {number}\n   */\n  textBoxShadowOffsetY: 0,\n\n  /**\n   * Whether transform text.\n   * Only useful in Path and Image element\n   * @type {boolean}\n   */\n  transformText: false,\n\n  /**\n   * Text rotate around position of Path or Image\n   * Only useful in Path and Image element and transformText is false.\n   */\n  textRotation: 0,\n\n  /**\n   * Text origin of text rotation, like [10, 40].\n   * Based on x, y of rect.\n   * Useful in label rotation of circular symbol.\n   * By default, this origin is textPosition.\n   * Can be 'center'.\n   * @type {string|Array.<number>}\n   */\n  textOrigin: null,\n\n  /**\n   * @type {string}\n   */\n  textBackgroundColor: null,\n\n  /**\n   * @type {string}\n   */\n  textBorderColor: null,\n\n  /**\n   * @type {number}\n   */\n  textBorderWidth: 0,\n\n  /**\n   * @type {number}\n   */\n  textBorderRadius: 0,\n\n  /**\n   * Can be `2` or `[2, 4]` or `[2, 3, 4, 5]`\n   * @type {number|Array.<number>}\n   */\n  textPadding: null,\n\n  /**\n   * Text styles for rich text.\n   * @type {Object}\n   */\n  rich: null,\n\n  /**\n   * {outerWidth, outerHeight, ellipsis, placeholder}\n   * @type {Object}\n   */\n  truncate: null,\n\n  /**\n   * https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/globalCompositeOperation\n   * @type {string}\n   */\n  blend: null,\n\n  /**\n   * @param {CanvasRenderingContext2D} ctx\n   */\n  bind: function (ctx, el, prevEl) {\n    var style = this;\n    var prevStyle = prevEl && prevEl.style;\n    var firstDraw = !prevStyle;\n\n    for (var i = 0; i < STYLE_COMMON_PROPS.length; i++) {\n      var prop = STYLE_COMMON_PROPS[i];\n      var styleName = prop[0];\n\n      if (firstDraw || style[styleName] !== prevStyle[styleName]) {\n        // FIXME Invalid property value will cause style leak from previous element.\n        ctx[styleName] = style[styleName] || prop[1];\n      }\n    }\n\n    if (firstDraw || style.fill !== prevStyle.fill) {\n      ctx.fillStyle = style.fill;\n    }\n\n    if (firstDraw || style.stroke !== prevStyle.stroke) {\n      ctx.strokeStyle = style.stroke;\n    }\n\n    if (firstDraw || style.opacity !== prevStyle.opacity) {\n      ctx.globalAlpha = style.opacity == null ? 1 : style.opacity;\n    }\n\n    if (firstDraw || style.blend !== prevStyle.blend) {\n      ctx.globalCompositeOperation = style.blend || 'source-over';\n    }\n\n    if (this.hasStroke()) {\n      var lineWidth = style.lineWidth;\n      ctx.lineWidth = lineWidth / (this.strokeNoScale && el && el.getLineScale ? el.getLineScale() : 1);\n    }\n  },\n  hasFill: function () {\n    var fill = this.fill;\n    return fill != null && fill !== 'none';\n  },\n  hasStroke: function () {\n    var stroke = this.stroke;\n    return stroke != null && stroke !== 'none' && this.lineWidth > 0;\n  },\n\n  /**\n   * Extend from other style\n   * @param {zrender/graphic/Style} otherStyle\n   * @param {boolean} overwrite true: overwrirte any way.\n   *                            false: overwrite only when !target.hasOwnProperty\n   *                            others: overwrite when property is not null/undefined.\n   */\n  extendFrom: function (otherStyle, overwrite) {\n    if (otherStyle) {\n      for (var name in otherStyle) {\n        if (otherStyle.hasOwnProperty(name) && (overwrite === true || (overwrite === false ? !this.hasOwnProperty(name) : otherStyle[name] != null))) {\n          this[name] = otherStyle[name];\n        }\n      }\n    }\n  },\n\n  /**\n   * Batch setting style with a given object\n   * @param {Object|string} obj\n   * @param {*} [obj]\n   */\n  set: function (obj, value) {\n    if (typeof obj === 'string') {\n      this[obj] = value;\n    } else {\n      this.extendFrom(obj, true);\n    }\n  },\n\n  /**\n   * Clone\n   * @return {zrender/graphic/Style} [description]\n   */\n  clone: function () {\n    var newStyle = new this.constructor();\n    newStyle.extendFrom(this, true);\n    return newStyle;\n  },\n  getGradient: function (ctx, obj, rect) {\n    var method = obj.type === 'radial' ? createRadialGradient : createLinearGradient;\n    var canvasGradient = method(ctx, obj, rect);\n    var colorStops = obj.colorStops;\n\n    for (var i = 0; i < colorStops.length; i++) {\n      canvasGradient.addColorStop(colorStops[i].offset, colorStops[i].color);\n    }\n\n    return canvasGradient;\n  }\n};\nvar styleProto = Style.prototype;\n\nfor (var i = 0; i < STYLE_COMMON_PROPS.length; i++) {\n  var prop = STYLE_COMMON_PROPS[i];\n\n  if (!(prop[0] in styleProto)) {\n    styleProto[prop[0]] = prop[1];\n  }\n} // Provide for others\n\n\nStyle.getGradient = styleProto.getGradient;\nvar _default = Style;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/Style.js\n// module id = 520\n// module chunks = 0 1","var smoothSpline = require(\"./smoothSpline\");\n\nvar smoothBezier = require(\"./smoothBezier\");\n\nfunction buildPath(ctx, shape, closePath) {\n  var points = shape.points;\n  var smooth = shape.smooth;\n\n  if (points && points.length >= 2) {\n    if (smooth && smooth !== 'spline') {\n      var controlPoints = smoothBezier(points, smooth, closePath, shape.smoothConstraint);\n      ctx.moveTo(points[0][0], points[0][1]);\n      var len = points.length;\n\n      for (var i = 0; i < (closePath ? len : len - 1); i++) {\n        var cp1 = controlPoints[i * 2];\n        var cp2 = controlPoints[i * 2 + 1];\n        var p = points[(i + 1) % len];\n        ctx.bezierCurveTo(cp1[0], cp1[1], cp2[0], cp2[1], p[0], p[1]);\n      }\n    } else {\n      if (smooth === 'spline') {\n        points = smoothSpline(points, closePath);\n      }\n\n      ctx.moveTo(points[0][0], points[0][1]);\n\n      for (var i = 1, l = points.length; i < l; i++) {\n        ctx.lineTo(points[i][0], points[i][1]);\n      }\n    }\n\n    closePath && ctx.closePath();\n  }\n}\n\nexports.buildPath = buildPath;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/helper/poly.js\n// module id = 521\n// module chunks = 0 1","function buildPath(ctx, shape) {\n  var x = shape.x;\n  var y = shape.y;\n  var width = shape.width;\n  var height = shape.height;\n  var r = shape.r;\n  var r1;\n  var r2;\n  var r3;\n  var r4; // Convert width and height to positive for better borderRadius\n\n  if (width < 0) {\n    x = x + width;\n    width = -width;\n  }\n\n  if (height < 0) {\n    y = y + height;\n    height = -height;\n  }\n\n  if (typeof r === 'number') {\n    r1 = r2 = r3 = r4 = r;\n  } else if (r instanceof Array) {\n    if (r.length === 1) {\n      r1 = r2 = r3 = r4 = r[0];\n    } else if (r.length === 2) {\n      r1 = r3 = r[0];\n      r2 = r4 = r[1];\n    } else if (r.length === 3) {\n      r1 = r[0];\n      r2 = r4 = r[1];\n      r3 = r[2];\n    } else {\n      r1 = r[0];\n      r2 = r[1];\n      r3 = r[2];\n      r4 = r[3];\n    }\n  } else {\n    r1 = r2 = r3 = r4 = 0;\n  }\n\n  var total;\n\n  if (r1 + r2 > width) {\n    total = r1 + r2;\n    r1 *= width / total;\n    r2 *= width / total;\n  }\n\n  if (r3 + r4 > width) {\n    total = r3 + r4;\n    r3 *= width / total;\n    r4 *= width / total;\n  }\n\n  if (r2 + r3 > height) {\n    total = r2 + r3;\n    r2 *= height / total;\n    r3 *= height / total;\n  }\n\n  if (r1 + r4 > height) {\n    total = r1 + r4;\n    r1 *= height / total;\n    r4 *= height / total;\n  }\n\n  ctx.moveTo(x + r1, y);\n  ctx.lineTo(x + width - r2, y);\n  r2 !== 0 && ctx.quadraticCurveTo(x + width, y, x + width, y + r2);\n  ctx.lineTo(x + width, y + height - r3);\n  r3 !== 0 && ctx.quadraticCurveTo(x + width, y + height, x + width - r3, y + height);\n  ctx.lineTo(x + r4, y + height);\n  r4 !== 0 && ctx.quadraticCurveTo(x, y + height, x, y + height - r4);\n  ctx.lineTo(x, y + r1);\n  r1 !== 0 && ctx.quadraticCurveTo(x, y, x + r1, y);\n}\n\nexports.buildPath = buildPath;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/helper/roundRect.js\n// module id = 522\n// module chunks = 0 1","var textHelper = require(\"../helper/text\");\n\nvar BoundingRect = require(\"../../core/BoundingRect\");\n\n/**\n * Mixin for drawing text in a element bounding rect\n * @module zrender/mixin/RectText\n */\nvar tmpRect = new BoundingRect();\n\nvar RectText = function () {};\n\nRectText.prototype = {\n  constructor: RectText,\n\n  /**\n   * Draw text in a rect with specified position.\n   * @param  {CanvasRenderingContext2D} ctx\n   * @param  {Object} rect Displayable rect\n   */\n  drawRectText: function (ctx, rect) {\n    var style = this.style;\n    rect = style.textRect || rect; // Optimize, avoid normalize every time.\n\n    this.__dirty && textHelper.normalizeTextStyle(style, true);\n    var text = style.text; // Convert to string\n\n    text != null && (text += '');\n\n    if (!textHelper.needDrawText(text, style)) {\n      return;\n    } // FIXME\n\n\n    ctx.save(); // Transform rect to view space\n\n    var transform = this.transform;\n\n    if (!style.transformText) {\n      if (transform) {\n        tmpRect.copy(rect);\n        tmpRect.applyTransform(transform);\n        rect = tmpRect;\n      }\n    } else {\n      this.setTransform(ctx);\n    } // transformText and textRotation can not be used at the same time.\n\n\n    textHelper.renderText(this, ctx, text, style, rect);\n    ctx.restore();\n  }\n};\nvar _default = RectText;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/mixin/RectText.js\n// module id = 523\n// module chunks = 0 1","var Path = require(\"../Path\");\n\n/**\n * 圆弧\n * @module zrender/graphic/shape/Arc\n */\nvar _default = Path.extend({\n  type: 'arc',\n  shape: {\n    cx: 0,\n    cy: 0,\n    r: 0,\n    startAngle: 0,\n    endAngle: Math.PI * 2,\n    clockwise: true\n  },\n  style: {\n    stroke: '#000',\n    fill: null\n  },\n  buildPath: function (ctx, shape) {\n    var x = shape.cx;\n    var y = shape.cy;\n    var r = Math.max(shape.r, 0);\n    var startAngle = shape.startAngle;\n    var endAngle = shape.endAngle;\n    var clockwise = shape.clockwise;\n    var unitX = Math.cos(startAngle);\n    var unitY = Math.sin(startAngle);\n    ctx.moveTo(unitX * r + x, unitY * r + y);\n    ctx.arc(x, y, r, startAngle, endAngle, !clockwise);\n  }\n});\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/shape/Arc.js\n// module id = 524\n// module chunks = 0 1","var Path = require(\"../Path\");\n\nvar vec2 = require(\"../../core/vector\");\n\nvar _curve = require(\"../../core/curve\");\n\nvar quadraticSubdivide = _curve.quadraticSubdivide;\nvar cubicSubdivide = _curve.cubicSubdivide;\nvar quadraticAt = _curve.quadraticAt;\nvar cubicAt = _curve.cubicAt;\nvar quadraticDerivativeAt = _curve.quadraticDerivativeAt;\nvar cubicDerivativeAt = _curve.cubicDerivativeAt;\n\n/**\n * 贝塞尔曲线\n * @module zrender/shape/BezierCurve\n */\nvar out = [];\n\nfunction someVectorAt(shape, t, isTangent) {\n  var cpx2 = shape.cpx2;\n  var cpy2 = shape.cpy2;\n\n  if (cpx2 === null || cpy2 === null) {\n    return [(isTangent ? cubicDerivativeAt : cubicAt)(shape.x1, shape.cpx1, shape.cpx2, shape.x2, t), (isTangent ? cubicDerivativeAt : cubicAt)(shape.y1, shape.cpy1, shape.cpy2, shape.y2, t)];\n  } else {\n    return [(isTangent ? quadraticDerivativeAt : quadraticAt)(shape.x1, shape.cpx1, shape.x2, t), (isTangent ? quadraticDerivativeAt : quadraticAt)(shape.y1, shape.cpy1, shape.y2, t)];\n  }\n}\n\nvar _default = Path.extend({\n  type: 'bezier-curve',\n  shape: {\n    x1: 0,\n    y1: 0,\n    x2: 0,\n    y2: 0,\n    cpx1: 0,\n    cpy1: 0,\n    // cpx2: 0,\n    // cpy2: 0\n    // Curve show percent, for animating\n    percent: 1\n  },\n  style: {\n    stroke: '#000',\n    fill: null\n  },\n  buildPath: function (ctx, shape) {\n    var x1 = shape.x1;\n    var y1 = shape.y1;\n    var x2 = shape.x2;\n    var y2 = shape.y2;\n    var cpx1 = shape.cpx1;\n    var cpy1 = shape.cpy1;\n    var cpx2 = shape.cpx2;\n    var cpy2 = shape.cpy2;\n    var percent = shape.percent;\n\n    if (percent === 0) {\n      return;\n    }\n\n    ctx.moveTo(x1, y1);\n\n    if (cpx2 == null || cpy2 == null) {\n      if (percent < 1) {\n        quadraticSubdivide(x1, cpx1, x2, percent, out);\n        cpx1 = out[1];\n        x2 = out[2];\n        quadraticSubdivide(y1, cpy1, y2, percent, out);\n        cpy1 = out[1];\n        y2 = out[2];\n      }\n\n      ctx.quadraticCurveTo(cpx1, cpy1, x2, y2);\n    } else {\n      if (percent < 1) {\n        cubicSubdivide(x1, cpx1, cpx2, x2, percent, out);\n        cpx1 = out[1];\n        cpx2 = out[2];\n        x2 = out[3];\n        cubicSubdivide(y1, cpy1, cpy2, y2, percent, out);\n        cpy1 = out[1];\n        cpy2 = out[2];\n        y2 = out[3];\n      }\n\n      ctx.bezierCurveTo(cpx1, cpy1, cpx2, cpy2, x2, y2);\n    }\n  },\n\n  /**\n   * Get point at percent\n   * @param  {number} t\n   * @return {Array.<number>}\n   */\n  pointAt: function (t) {\n    return someVectorAt(this.shape, t, false);\n  },\n\n  /**\n   * Get tangent at percent\n   * @param  {number} t\n   * @return {Array.<number>}\n   */\n  tangentAt: function (t) {\n    var p = someVectorAt(this.shape, t, true);\n    return vec2.normalize(p, p);\n  }\n});\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/shape/BezierCurve.js\n// module id = 525\n// module chunks = 0 1","var Path = require(\"../Path\");\n\n/**\n * 圆形\n * @module zrender/shape/Circle\n */\nvar _default = Path.extend({\n  type: 'circle',\n  shape: {\n    cx: 0,\n    cy: 0,\n    r: 0\n  },\n  buildPath: function (ctx, shape, inBundle) {\n    // Better stroking in ShapeBundle\n    // Always do it may have performence issue ( fill may be 2x more cost)\n    if (inBundle) {\n      ctx.moveTo(shape.cx + shape.r, shape.cy);\n    } // else {\n    //     if (ctx.allocate && !ctx.data.length) {\n    //         ctx.allocate(ctx.CMD_MEM_SIZE.A);\n    //     }\n    // }\n    // Better stroking in ShapeBundle\n    // ctx.moveTo(shape.cx + shape.r, shape.cy);\n\n\n    ctx.arc(shape.cx, shape.cy, shape.r, 0, Math.PI * 2, true);\n  }\n});\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/shape/Circle.js\n// module id = 526\n// module chunks = 0 1","var Path = require(\"../Path\");\n\n/**\n * 直线\n * @module zrender/graphic/shape/Line\n */\nvar _default = Path.extend({\n  type: 'line',\n  shape: {\n    // Start point\n    x1: 0,\n    y1: 0,\n    // End point\n    x2: 0,\n    y2: 0,\n    percent: 1\n  },\n  style: {\n    stroke: '#000',\n    fill: null\n  },\n  buildPath: function (ctx, shape) {\n    var x1 = shape.x1;\n    var y1 = shape.y1;\n    var x2 = shape.x2;\n    var y2 = shape.y2;\n    var percent = shape.percent;\n\n    if (percent === 0) {\n      return;\n    }\n\n    ctx.moveTo(x1, y1);\n\n    if (percent < 1) {\n      x2 = x1 * (1 - percent) + x2 * percent;\n      y2 = y1 * (1 - percent) + y2 * percent;\n    }\n\n    ctx.lineTo(x2, y2);\n  },\n\n  /**\n   * Get point at percent\n   * @param  {number} percent\n   * @return {Array.<number>}\n   */\n  pointAt: function (p) {\n    var shape = this.shape;\n    return [shape.x1 * (1 - p) + shape.x2 * p, shape.y1 * (1 - p) + shape.y2 * p];\n  }\n});\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/shape/Line.js\n// module id = 527\n// module chunks = 0 1","var Path = require(\"../Path\");\n\nvar polyHelper = require(\"../helper/poly\");\n\n/**\n * 多边形\n * @module zrender/shape/Polygon\n */\nvar _default = Path.extend({\n  type: 'polygon',\n  shape: {\n    points: null,\n    smooth: false,\n    smoothConstraint: null\n  },\n  buildPath: function (ctx, shape) {\n    polyHelper.buildPath(ctx, shape, true);\n  }\n});\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/shape/Polygon.js\n// module id = 528\n// module chunks = 0 1","var Path = require(\"../Path\");\n\nvar polyHelper = require(\"../helper/poly\");\n\n/**\n * @module zrender/graphic/shape/Polyline\n */\nvar _default = Path.extend({\n  type: 'polyline',\n  shape: {\n    points: null,\n    smooth: false,\n    smoothConstraint: null\n  },\n  style: {\n    stroke: '#000',\n    fill: null\n  },\n  buildPath: function (ctx, shape) {\n    polyHelper.buildPath(ctx, shape, false);\n  }\n});\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/shape/Polyline.js\n// module id = 529\n// module chunks = 0 1","var Path = require(\"../Path\");\n\nvar roundRectHelper = require(\"../helper/roundRect\");\n\n/**\n * 矩形\n * @module zrender/graphic/shape/Rect\n */\nvar _default = Path.extend({\n  type: 'rect',\n  shape: {\n    // 左上、右上、右下、左下角的半径依次为r1、r2、r3、r4\n    // r缩写为1         相当于 [1, 1, 1, 1]\n    // r缩写为[1]       相当于 [1, 1, 1, 1]\n    // r缩写为[1, 2]    相当于 [1, 2, 1, 2]\n    // r缩写为[1, 2, 3] 相当于 [1, 2, 3, 2]\n    r: 0,\n    x: 0,\n    y: 0,\n    width: 0,\n    height: 0\n  },\n  buildPath: function (ctx, shape) {\n    var x = shape.x;\n    var y = shape.y;\n    var width = shape.width;\n    var height = shape.height;\n\n    if (!shape.r) {\n      ctx.rect(x, y, width, height);\n    } else {\n      roundRectHelper.buildPath(ctx, shape);\n    }\n\n    ctx.closePath();\n    return;\n  }\n});\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/shape/Rect.js\n// module id = 530\n// module chunks = 0 1","var Path = require(\"../Path\");\n\n/**\n * 圆环\n * @module zrender/graphic/shape/Ring\n */\nvar _default = Path.extend({\n  type: 'ring',\n  shape: {\n    cx: 0,\n    cy: 0,\n    r: 0,\n    r0: 0\n  },\n  buildPath: function (ctx, shape) {\n    var x = shape.cx;\n    var y = shape.cy;\n    var PI2 = Math.PI * 2;\n    ctx.moveTo(x + shape.r, y);\n    ctx.arc(x, y, shape.r, 0, PI2, false);\n    ctx.moveTo(x + shape.r0, y);\n    ctx.arc(x, y, shape.r0, 0, PI2, true);\n  }\n});\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/shape/Ring.js\n// module id = 531\n// module chunks = 0 1","var Path = require(\"../Path\");\n\nvar fixClipWithShadow = require(\"../helper/fixClipWithShadow\");\n\n/**\n * 扇形\n * @module zrender/graphic/shape/Sector\n */\nvar _default = Path.extend({\n  type: 'sector',\n  shape: {\n    cx: 0,\n    cy: 0,\n    r0: 0,\n    r: 0,\n    startAngle: 0,\n    endAngle: Math.PI * 2,\n    clockwise: true\n  },\n  brush: fixClipWithShadow(Path.prototype.brush),\n  buildPath: function (ctx, shape) {\n    var x = shape.cx;\n    var y = shape.cy;\n    var r0 = Math.max(shape.r0 || 0, 0);\n    var r = Math.max(shape.r, 0);\n    var startAngle = shape.startAngle;\n    var endAngle = shape.endAngle;\n    var clockwise = shape.clockwise;\n    var unitX = Math.cos(startAngle);\n    var unitY = Math.sin(startAngle);\n    ctx.moveTo(unitX * r0 + x, unitY * r0 + y);\n    ctx.lineTo(unitX * r + x, unitY * r + y);\n    ctx.arc(x, y, r, startAngle, endAngle, !clockwise);\n    ctx.lineTo(Math.cos(endAngle) * r0 + x, Math.sin(endAngle) * r0 + y);\n\n    if (r0 !== 0) {\n      ctx.arc(x, y, r0, endAngle, startAngle, clockwise);\n    }\n\n    ctx.closePath();\n  }\n});\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/shape/Sector.js\n// module id = 532\n// module chunks = 0 1","var _core = require(\"../core\");\n\nvar createElement = _core.createElement;\n\nvar zrUtil = require(\"../../core/util\");\n\nvar Path = require(\"../../graphic/Path\");\n\nvar ZImage = require(\"../../graphic/Image\");\n\nvar ZText = require(\"../../graphic/Text\");\n\nvar _graphic = require(\"../graphic\");\n\nvar svgPath = _graphic.path;\nvar svgImage = _graphic.image;\nvar svgText = _graphic.text;\n\n/**\n * @file Manages elements that can be defined in <defs> in SVG,\n *       e.g., gradients, clip path, etc.\n * @author Zhang Wenli\n */\nvar MARK_UNUSED = '0';\nvar MARK_USED = '1';\n/**\n * Manages elements that can be defined in <defs> in SVG,\n * e.g., gradients, clip path, etc.\n *\n * @class\n * @param {SVGElement}      svgRoot   root of SVG document\n * @param {string|string[]} tagNames  possible tag names\n * @param {string}          markLabel label name to make if the element\n *                                    is used\n */\n\nfunction Definable(svgRoot, tagNames, markLabel) {\n  this._svgRoot = svgRoot;\n  this._tagNames = typeof tagNames === 'string' ? [tagNames] : tagNames;\n  this._markLabel = markLabel;\n  this.nextId = 0;\n}\n\nDefinable.prototype.createElement = createElement;\n/**\n * Get the <defs> tag for svgRoot; optionally creates one if not exists.\n *\n * @param {boolean} isForceCreating if need to create when not exists\n * @return {SVGDefsElement} SVG <defs> element, null if it doesn't\n * exist and isForceCreating is false\n */\n\nDefinable.prototype.getDefs = function (isForceCreating) {\n  var svgRoot = this._svgRoot;\n\n  var defs = this._svgRoot.getElementsByTagName('defs');\n\n  if (defs.length === 0) {\n    // Not exist\n    if (isForceCreating) {\n      defs = svgRoot.insertBefore(this.createElement('defs'), // Create new tag\n      svgRoot.firstChild // Insert in the front of svg\n      );\n\n      if (!defs.contains) {\n        // IE doesn't support contains method\n        defs.contains = function (el) {\n          var children = defs.children;\n\n          if (!children) {\n            return false;\n          }\n\n          for (var i = children.length - 1; i >= 0; --i) {\n            if (children[i] === el) {\n              return true;\n            }\n          }\n\n          return false;\n        };\n      }\n\n      return defs;\n    } else {\n      return null;\n    }\n  } else {\n    return defs[0];\n  }\n};\n/**\n * Update DOM element if necessary.\n *\n * @param {Object|string} element style element. e.g., for gradient,\n *                                it may be '#ccc' or {type: 'linear', ...}\n * @param {Function|undefined} onUpdate update callback\n */\n\n\nDefinable.prototype.update = function (element, onUpdate) {\n  if (!element) {\n    return;\n  }\n\n  var defs = this.getDefs(false);\n\n  if (element._dom && defs.contains(element._dom)) {\n    // Update DOM\n    if (typeof onUpdate === 'function') {\n      onUpdate();\n    }\n  } else {\n    // No previous dom, create new\n    var dom = this.add(element);\n\n    if (dom) {\n      element._dom = dom;\n    }\n  }\n};\n/**\n * Add gradient dom to defs\n *\n * @param {SVGElement} dom DOM to be added to <defs>\n */\n\n\nDefinable.prototype.addDom = function (dom) {\n  var defs = this.getDefs(true);\n  defs.appendChild(dom);\n};\n/**\n * Remove DOM of a given element.\n *\n * @param {SVGElement} element element to remove dom\n */\n\n\nDefinable.prototype.removeDom = function (element) {\n  var defs = this.getDefs(false);\n  defs.removeChild(element._dom);\n};\n/**\n * Get DOMs of this element.\n *\n * @return {HTMLDomElement} doms of this defineable elements in <defs>\n */\n\n\nDefinable.prototype.getDoms = function () {\n  var defs = this.getDefs(false);\n\n  if (!defs) {\n    // No dom when defs is not defined\n    return [];\n  }\n\n  var doms = [];\n  zrUtil.each(this._tagNames, function (tagName) {\n    var tags = defs.getElementsByTagName(tagName); // Note that tags is HTMLCollection, which is array-like\n    // rather than real array.\n    // So `doms.concat(tags)` add tags as one object.\n\n    doms = doms.concat([].slice.call(tags));\n  });\n  return doms;\n};\n/**\n * Mark DOMs to be unused before painting, and clear unused ones at the end\n * of the painting.\n */\n\n\nDefinable.prototype.markAllUnused = function () {\n  var doms = this.getDoms();\n  var that = this;\n  zrUtil.each(doms, function (dom) {\n    dom[that._markLabel] = MARK_UNUSED;\n  });\n};\n/**\n * Mark a single DOM to be used.\n *\n * @param {SVGElement} dom DOM to mark\n */\n\n\nDefinable.prototype.markUsed = function (dom) {\n  if (dom) {\n    dom[this._markLabel] = MARK_USED;\n  }\n};\n/**\n * Remove unused DOMs defined in <defs>\n */\n\n\nDefinable.prototype.removeUnused = function () {\n  var defs = this.getDefs(false);\n\n  if (!defs) {\n    // Nothing to remove\n    return;\n  }\n\n  var doms = this.getDoms();\n  var that = this;\n  zrUtil.each(doms, function (dom) {\n    if (dom[that._markLabel] !== MARK_USED) {\n      // Remove gradient\n      defs.removeChild(dom);\n    }\n  });\n};\n/**\n * Get SVG proxy.\n *\n * @param {Displayable} displayable displayable element\n * @return {Path|Image|Text} svg proxy of given element\n */\n\n\nDefinable.prototype.getSvgProxy = function (displayable) {\n  if (displayable instanceof Path) {\n    return svgPath;\n  } else if (displayable instanceof ZImage) {\n    return svgImage;\n  } else if (displayable instanceof ZText) {\n    return svgText;\n  } else {\n    return svgPath;\n  }\n};\n/**\n * Get text SVG element.\n *\n * @param {Displayable} displayable displayable element\n * @return {SVGElement} SVG element of text\n */\n\n\nDefinable.prototype.getTextSvgElement = function (displayable) {\n  return displayable.__textSvgEl;\n};\n/**\n * Get SVG element.\n *\n * @param {Displayable} displayable displayable element\n * @return {SVGElement} SVG element\n */\n\n\nDefinable.prototype.getSvgElement = function (displayable) {\n  return displayable.__svgEl;\n};\n\nvar _default = Definable;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/svg/helper/Definable.js\n// module id = 533\n// module chunks = 0 1","var Path = require(\"../graphic/Path\");\n\nvar PathProxy = require(\"../core/PathProxy\");\n\nvar transformPath = require(\"./transformPath\");\n\n// command chars\nvar cc = ['m', 'M', 'l', 'L', 'v', 'V', 'h', 'H', 'z', 'Z', 'c', 'C', 'q', 'Q', 't', 'T', 's', 'S', 'a', 'A'];\nvar mathSqrt = Math.sqrt;\nvar mathSin = Math.sin;\nvar mathCos = Math.cos;\nvar PI = Math.PI;\n\nvar vMag = function (v) {\n  return Math.sqrt(v[0] * v[0] + v[1] * v[1]);\n};\n\nvar vRatio = function (u, v) {\n  return (u[0] * v[0] + u[1] * v[1]) / (vMag(u) * vMag(v));\n};\n\nvar vAngle = function (u, v) {\n  return (u[0] * v[1] < u[1] * v[0] ? -1 : 1) * Math.acos(vRatio(u, v));\n};\n\nfunction processArc(x1, y1, x2, y2, fa, fs, rx, ry, psiDeg, cmd, path) {\n  var psi = psiDeg * (PI / 180.0);\n  var xp = mathCos(psi) * (x1 - x2) / 2.0 + mathSin(psi) * (y1 - y2) / 2.0;\n  var yp = -1 * mathSin(psi) * (x1 - x2) / 2.0 + mathCos(psi) * (y1 - y2) / 2.0;\n  var lambda = xp * xp / (rx * rx) + yp * yp / (ry * ry);\n\n  if (lambda > 1) {\n    rx *= mathSqrt(lambda);\n    ry *= mathSqrt(lambda);\n  }\n\n  var f = (fa === fs ? -1 : 1) * mathSqrt((rx * rx * (ry * ry) - rx * rx * (yp * yp) - ry * ry * (xp * xp)) / (rx * rx * (yp * yp) + ry * ry * (xp * xp))) || 0;\n  var cxp = f * rx * yp / ry;\n  var cyp = f * -ry * xp / rx;\n  var cx = (x1 + x2) / 2.0 + mathCos(psi) * cxp - mathSin(psi) * cyp;\n  var cy = (y1 + y2) / 2.0 + mathSin(psi) * cxp + mathCos(psi) * cyp;\n  var theta = vAngle([1, 0], [(xp - cxp) / rx, (yp - cyp) / ry]);\n  var u = [(xp - cxp) / rx, (yp - cyp) / ry];\n  var v = [(-1 * xp - cxp) / rx, (-1 * yp - cyp) / ry];\n  var dTheta = vAngle(u, v);\n\n  if (vRatio(u, v) <= -1) {\n    dTheta = PI;\n  }\n\n  if (vRatio(u, v) >= 1) {\n    dTheta = 0;\n  }\n\n  if (fs === 0 && dTheta > 0) {\n    dTheta = dTheta - 2 * PI;\n  }\n\n  if (fs === 1 && dTheta < 0) {\n    dTheta = dTheta + 2 * PI;\n  }\n\n  path.addData(cmd, cx, cy, rx, ry, theta, dTheta, psi, fs);\n}\n\nfunction createPathProxyFromString(data) {\n  if (!data) {\n    return [];\n  } // command string\n\n\n  var cs = data.replace(/-/g, ' -').replace(/  /g, ' ').replace(/ /g, ',').replace(/,,/g, ',');\n  var n; // create pipes so that we can split the data\n\n  for (n = 0; n < cc.length; n++) {\n    cs = cs.replace(new RegExp(cc[n], 'g'), '|' + cc[n]);\n  } // create array\n\n\n  var arr = cs.split('|'); // init context point\n\n  var cpx = 0;\n  var cpy = 0;\n  var path = new PathProxy();\n  var CMD = PathProxy.CMD;\n  var prevCmd;\n\n  for (n = 1; n < arr.length; n++) {\n    var str = arr[n];\n    var c = str.charAt(0);\n    var off = 0;\n    var p = str.slice(1).replace(/e,-/g, 'e-').split(',');\n    var cmd;\n\n    if (p.length > 0 && p[0] === '') {\n      p.shift();\n    }\n\n    for (var i = 0; i < p.length; i++) {\n      p[i] = parseFloat(p[i]);\n    }\n\n    while (off < p.length && !isNaN(p[off])) {\n      if (isNaN(p[0])) {\n        break;\n      }\n\n      var ctlPtx;\n      var ctlPty;\n      var rx;\n      var ry;\n      var psi;\n      var fa;\n      var fs;\n      var x1 = cpx;\n      var y1 = cpy; // convert l, H, h, V, and v to L\n\n      switch (c) {\n        case 'l':\n          cpx += p[off++];\n          cpy += p[off++];\n          cmd = CMD.L;\n          path.addData(cmd, cpx, cpy);\n          break;\n\n        case 'L':\n          cpx = p[off++];\n          cpy = p[off++];\n          cmd = CMD.L;\n          path.addData(cmd, cpx, cpy);\n          break;\n\n        case 'm':\n          cpx += p[off++];\n          cpy += p[off++];\n          cmd = CMD.M;\n          path.addData(cmd, cpx, cpy);\n          c = 'l';\n          break;\n\n        case 'M':\n          cpx = p[off++];\n          cpy = p[off++];\n          cmd = CMD.M;\n          path.addData(cmd, cpx, cpy);\n          c = 'L';\n          break;\n\n        case 'h':\n          cpx += p[off++];\n          cmd = CMD.L;\n          path.addData(cmd, cpx, cpy);\n          break;\n\n        case 'H':\n          cpx = p[off++];\n          cmd = CMD.L;\n          path.addData(cmd, cpx, cpy);\n          break;\n\n        case 'v':\n          cpy += p[off++];\n          cmd = CMD.L;\n          path.addData(cmd, cpx, cpy);\n          break;\n\n        case 'V':\n          cpy = p[off++];\n          cmd = CMD.L;\n          path.addData(cmd, cpx, cpy);\n          break;\n\n        case 'C':\n          cmd = CMD.C;\n          path.addData(cmd, p[off++], p[off++], p[off++], p[off++], p[off++], p[off++]);\n          cpx = p[off - 2];\n          cpy = p[off - 1];\n          break;\n\n        case 'c':\n          cmd = CMD.C;\n          path.addData(cmd, p[off++] + cpx, p[off++] + cpy, p[off++] + cpx, p[off++] + cpy, p[off++] + cpx, p[off++] + cpy);\n          cpx += p[off - 2];\n          cpy += p[off - 1];\n          break;\n\n        case 'S':\n          ctlPtx = cpx;\n          ctlPty = cpy;\n          var len = path.len();\n          var pathData = path.data;\n\n          if (prevCmd === CMD.C) {\n            ctlPtx += cpx - pathData[len - 4];\n            ctlPty += cpy - pathData[len - 3];\n          }\n\n          cmd = CMD.C;\n          x1 = p[off++];\n          y1 = p[off++];\n          cpx = p[off++];\n          cpy = p[off++];\n          path.addData(cmd, ctlPtx, ctlPty, x1, y1, cpx, cpy);\n          break;\n\n        case 's':\n          ctlPtx = cpx;\n          ctlPty = cpy;\n          var len = path.len();\n          var pathData = path.data;\n\n          if (prevCmd === CMD.C) {\n            ctlPtx += cpx - pathData[len - 4];\n            ctlPty += cpy - pathData[len - 3];\n          }\n\n          cmd = CMD.C;\n          x1 = cpx + p[off++];\n          y1 = cpy + p[off++];\n          cpx += p[off++];\n          cpy += p[off++];\n          path.addData(cmd, ctlPtx, ctlPty, x1, y1, cpx, cpy);\n          break;\n\n        case 'Q':\n          x1 = p[off++];\n          y1 = p[off++];\n          cpx = p[off++];\n          cpy = p[off++];\n          cmd = CMD.Q;\n          path.addData(cmd, x1, y1, cpx, cpy);\n          break;\n\n        case 'q':\n          x1 = p[off++] + cpx;\n          y1 = p[off++] + cpy;\n          cpx += p[off++];\n          cpy += p[off++];\n          cmd = CMD.Q;\n          path.addData(cmd, x1, y1, cpx, cpy);\n          break;\n\n        case 'T':\n          ctlPtx = cpx;\n          ctlPty = cpy;\n          var len = path.len();\n          var pathData = path.data;\n\n          if (prevCmd === CMD.Q) {\n            ctlPtx += cpx - pathData[len - 4];\n            ctlPty += cpy - pathData[len - 3];\n          }\n\n          cpx = p[off++];\n          cpy = p[off++];\n          cmd = CMD.Q;\n          path.addData(cmd, ctlPtx, ctlPty, cpx, cpy);\n          break;\n\n        case 't':\n          ctlPtx = cpx;\n          ctlPty = cpy;\n          var len = path.len();\n          var pathData = path.data;\n\n          if (prevCmd === CMD.Q) {\n            ctlPtx += cpx - pathData[len - 4];\n            ctlPty += cpy - pathData[len - 3];\n          }\n\n          cpx += p[off++];\n          cpy += p[off++];\n          cmd = CMD.Q;\n          path.addData(cmd, ctlPtx, ctlPty, cpx, cpy);\n          break;\n\n        case 'A':\n          rx = p[off++];\n          ry = p[off++];\n          psi = p[off++];\n          fa = p[off++];\n          fs = p[off++];\n          x1 = cpx, y1 = cpy;\n          cpx = p[off++];\n          cpy = p[off++];\n          cmd = CMD.A;\n          processArc(x1, y1, cpx, cpy, fa, fs, rx, ry, psi, cmd, path);\n          break;\n\n        case 'a':\n          rx = p[off++];\n          ry = p[off++];\n          psi = p[off++];\n          fa = p[off++];\n          fs = p[off++];\n          x1 = cpx, y1 = cpy;\n          cpx += p[off++];\n          cpy += p[off++];\n          cmd = CMD.A;\n          processArc(x1, y1, cpx, cpy, fa, fs, rx, ry, psi, cmd, path);\n          break;\n      }\n    }\n\n    if (c === 'z' || c === 'Z') {\n      cmd = CMD.Z;\n      path.addData(cmd);\n    }\n\n    prevCmd = cmd;\n  }\n\n  path.toStatic();\n  return path;\n} // TODO Optimize double memory cost problem\n\n\nfunction createPathOptions(str, opts) {\n  var pathProxy = createPathProxyFromString(str);\n  opts = opts || {};\n\n  opts.buildPath = function (path) {\n    if (path.setData) {\n      path.setData(pathProxy.data); // Svg and vml renderer don't have context\n\n      var ctx = path.getContext();\n\n      if (ctx) {\n        path.rebuildPath(ctx);\n      }\n    } else {\n      var ctx = path;\n      pathProxy.rebuildPath(ctx);\n    }\n  };\n\n  opts.applyTransform = function (m) {\n    transformPath(pathProxy, m);\n    this.dirty(true);\n  };\n\n  return opts;\n}\n/**\n * Create a Path object from path string data\n * http://www.w3.org/TR/SVG/paths.html#PathData\n * @param  {Object} opts Other options\n */\n\n\nfunction createFromString(str, opts) {\n  return new Path(createPathOptions(str, opts));\n}\n/**\n * Create a Path class from path string data\n * @param  {string} str\n * @param  {Object} opts Other options\n */\n\n\nfunction extendFromString(str, opts) {\n  return Path.extend(createPathOptions(str, opts));\n}\n/**\n * Merge multiple paths\n */\n// TODO Apply transform\n// TODO stroke dash\n// TODO Optimize double memory cost problem\n\n\nfunction mergePath(pathEls, opts) {\n  var pathList = [];\n  var len = pathEls.length;\n\n  for (var i = 0; i < len; i++) {\n    var pathEl = pathEls[i];\n\n    if (!pathEl.path) {\n      pathEl.createPathProxy();\n    }\n\n    if (pathEl.__dirtyPath) {\n      pathEl.buildPath(pathEl.path, pathEl.shape, true);\n    }\n\n    pathList.push(pathEl.path);\n  }\n\n  var pathBundle = new Path(opts); // Need path proxy.\n\n  pathBundle.createPathProxy();\n\n  pathBundle.buildPath = function (path) {\n    path.appendPath(pathList); // Svg and vml renderer don't have context\n\n    var ctx = path.getContext();\n\n    if (ctx) {\n      path.rebuildPath(ctx);\n    }\n  };\n\n  return pathBundle;\n}\n\nexports.createFromString = createFromString;\nexports.extendFromString = extendFromString;\nexports.mergePath = mergePath;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/tool/path.js\n// module id = 534\n// module chunks = 0 1","var env = require(\"../core/env\");\n\nvar urn = 'urn:schemas-microsoft-com:vml';\nvar win = typeof window === 'undefined' ? null : window;\nvar vmlInited = false;\nvar doc = win && win.document;\n\nfunction createNode(tagName) {\n  return doCreateNode(tagName);\n} // Avoid assign to an exported variable, for transforming to cjs.\n\n\nvar doCreateNode;\n\nif (doc && !env.canvasSupported) {\n  try {\n    !doc.namespaces.zrvml && doc.namespaces.add('zrvml', urn);\n\n    doCreateNode = function (tagName) {\n      return doc.createElement('<zrvml:' + tagName + ' class=\"zrvml\">');\n    };\n  } catch (e) {\n    doCreateNode = function (tagName) {\n      return doc.createElement('<' + tagName + ' xmlns=\"' + urn + '\" class=\"zrvml\">');\n    };\n  }\n} // From raphael\n\n\nfunction initVML() {\n  if (vmlInited || !doc) {\n    return;\n  }\n\n  vmlInited = true;\n  var styleSheets = doc.styleSheets;\n\n  if (styleSheets.length < 31) {\n    doc.createStyleSheet().addRule('.zrvml', 'behavior:url(#default#VML)');\n  } else {\n    // http://msdn.microsoft.com/en-us/library/ms531194%28VS.85%29.aspx\n    styleSheets[0].addRule('.zrvml', 'behavior:url(#default#VML)');\n  }\n}\n\nexports.doc = doc;\nexports.createNode = createNode;\nexports.initVML = initVML;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/vml/core.js\n// module id = 535\n// module chunks = 0 1","'use strict';\n\n\n    var List = require('../../data/List');\n    var completeDimensions = require('../../data/helper/completeDimensions');\n    var zrUtil = require('zrender/lib/core/util');\n    var modelUtil = require('../../util/model');\n    var CoordinateSystem = require('../../CoordinateSystem');\n    var getDataItemValue = modelUtil.getDataItemValue;\n    var converDataValue = modelUtil.converDataValue;\n\n    function firstDataNotNull(data) {\n        var i = 0;\n        while (i < data.length && data[i] == null) {\n            i++;\n        }\n        return data[i];\n    }\n    function ifNeedCompleteOrdinalData(data) {\n        var sampleItem = firstDataNotNull(data);\n        return sampleItem != null\n            && !zrUtil.isArray(getDataItemValue(sampleItem));\n    }\n\n    /**\n     * Helper function to create a list from option data\n     */\n    function createListFromArray(data, seriesModel, ecModel) {\n        // If data is undefined\n        data = data || [];\n\n        if (__DEV__) {\n            if (!zrUtil.isArray(data)) {\n                throw new Error('Invalid data.');\n            }\n        }\n\n        var coordSysName = seriesModel.get('coordinateSystem');\n        var creator = creators[coordSysName];\n        var registeredCoordSys = CoordinateSystem.get(coordSysName);\n        // FIXME\n        var axesInfo = creator && creator(data, seriesModel, ecModel);\n        var dimensions = axesInfo && axesInfo.dimensions;\n        if (!dimensions) {\n            // Get dimensions from registered coordinate system\n            dimensions = (registeredCoordSys && registeredCoordSys.dimensions) || ['x', 'y'];\n            dimensions = completeDimensions(dimensions, data, dimensions.concat(['value']));\n        }\n        var categoryIndex = axesInfo ? axesInfo.categoryIndex : -1;\n\n        var list = new List(dimensions, seriesModel);\n\n        var nameList = createNameList(axesInfo, data);\n\n        var categories = {};\n        var dimValueGetter = (categoryIndex >= 0 && ifNeedCompleteOrdinalData(data))\n            ? function (itemOpt, dimName, dataIndex, dimIndex) {\n                // If any dataItem is like { value: 10 }\n                if (modelUtil.isDataItemOption(itemOpt)) {\n                    list.hasItemOption = true;\n                }\n\n                // Use dataIndex as ordinal value in categoryAxis\n                return dimIndex === categoryIndex\n                    ? dataIndex\n                    : converDataValue(getDataItemValue(itemOpt), dimensions[dimIndex]);\n            }\n            : function (itemOpt, dimName, dataIndex, dimIndex) {\n                var value = getDataItemValue(itemOpt);\n                var val = converDataValue(value && value[dimIndex], dimensions[dimIndex]);\n                // If any dataItem is like { value: 10 }\n                if (modelUtil.isDataItemOption(itemOpt)) {\n                    list.hasItemOption = true;\n                }\n\n                var categoryAxesModels = axesInfo && axesInfo.categoryAxesModels;\n                if (categoryAxesModels && categoryAxesModels[dimName]) {\n                    // If given value is a category string\n                    if (typeof val === 'string') {\n                        // Lazy get categories\n                        categories[dimName] = categories[dimName]\n                            || categoryAxesModels[dimName].getCategories();\n                        val = zrUtil.indexOf(categories[dimName], val);\n                        if (val < 0 && !isNaN(val)) {\n                            // In case some one write '1', '2' istead of 1, 2\n                            val = +val;\n                        }\n                    }\n                }\n                return val;\n            };\n\n        list.hasItemOption = false;\n        list.initData(data, nameList, dimValueGetter);\n\n        return list;\n    }\n\n    function isStackable(axisType) {\n        return axisType !== 'category' && axisType !== 'time';\n    }\n\n    function getDimTypeByAxis(axisType) {\n        return axisType === 'category'\n            ? 'ordinal'\n            : axisType === 'time'\n            ? 'time'\n            : 'float';\n    }\n\n    /**\n     * Creaters for each coord system.\n     */\n    var creators = {\n\n        cartesian2d: function (data, seriesModel, ecModel) {\n\n            var axesModels = zrUtil.map(['xAxis', 'yAxis'], function (name) {\n                return ecModel.queryComponents({\n                    mainType: name,\n                    index: seriesModel.get(name + 'Index'),\n                    id: seriesModel.get(name + 'Id')\n                })[0];\n            });\n            var xAxisModel = axesModels[0];\n            var yAxisModel = axesModels[1];\n\n            if (__DEV__) {\n                if (!xAxisModel) {\n                    throw new Error('xAxis \"' + zrUtil.retrieve(\n                        seriesModel.get('xAxisIndex'),\n                        seriesModel.get('xAxisId'),\n                        0\n                    ) + '\" not found');\n                }\n                if (!yAxisModel) {\n                    throw new Error('yAxis \"' + zrUtil.retrieve(\n                        seriesModel.get('xAxisIndex'),\n                        seriesModel.get('yAxisId'),\n                        0\n                    ) + '\" not found');\n                }\n            }\n\n            var xAxisType = xAxisModel.get('type');\n            var yAxisType = yAxisModel.get('type');\n\n            var dimensions = [\n                {\n                    name: 'x',\n                    type: getDimTypeByAxis(xAxisType),\n                    stackable: isStackable(xAxisType)\n                },\n                {\n                    name: 'y',\n                    // If two category axes\n                    type: getDimTypeByAxis(yAxisType),\n                    stackable: isStackable(yAxisType)\n                }\n            ];\n\n            var isXAxisCateogry = xAxisType === 'category';\n            var isYAxisCategory = yAxisType === 'category';\n\n            completeDimensions(dimensions, data, ['x', 'y', 'z']);\n\n            var categoryAxesModels = {};\n            if (isXAxisCateogry) {\n                categoryAxesModels.x = xAxisModel;\n            }\n            if (isYAxisCategory) {\n                categoryAxesModels.y = yAxisModel;\n            }\n            return {\n                dimensions: dimensions,\n                categoryIndex: isXAxisCateogry ? 0 : (isYAxisCategory ? 1 : -1),\n                categoryAxesModels: categoryAxesModels\n            };\n        },\n\n        singleAxis: function (data, seriesModel, ecModel) {\n\n            var singleAxisModel = ecModel.queryComponents({\n                mainType: 'singleAxis',\n                index: seriesModel.get('singleAxisIndex'),\n                id: seriesModel.get('singleAxisId')\n            })[0];\n\n            if (__DEV__) {\n                if (!singleAxisModel) {\n                    throw new Error('singleAxis should be specified.');\n                }\n            }\n\n            var singleAxisType = singleAxisModel.get('type');\n            var isCategory = singleAxisType === 'category';\n\n            var dimensions = [{\n                name: 'single',\n                type: getDimTypeByAxis(singleAxisType),\n                stackable: isStackable(singleAxisType)\n            }];\n\n            completeDimensions(dimensions, data);\n\n            var categoryAxesModels = {};\n            if (isCategory) {\n                categoryAxesModels.single = singleAxisModel;\n            }\n\n            return {\n                dimensions: dimensions,\n                categoryIndex: isCategory ? 0 : -1,\n                categoryAxesModels: categoryAxesModels\n            };\n        },\n\n        polar: function (data, seriesModel, ecModel) {\n            var polarModel = ecModel.queryComponents({\n                mainType: 'polar',\n                index: seriesModel.get('polarIndex'),\n                id: seriesModel.get('polarId')\n            })[0];\n\n            var angleAxisModel = polarModel.findAxisModel('angleAxis');\n            var radiusAxisModel = polarModel.findAxisModel('radiusAxis');\n\n            if (__DEV__) {\n                if (!angleAxisModel) {\n                    throw new Error('angleAxis option not found');\n                }\n                if (!radiusAxisModel) {\n                    throw new Error('radiusAxis option not found');\n                }\n            }\n\n            var radiusAxisType = radiusAxisModel.get('type');\n            var angleAxisType = angleAxisModel.get('type');\n\n            var dimensions = [\n                {\n                    name: 'radius',\n                    type: getDimTypeByAxis(radiusAxisType),\n                    stackable: isStackable(radiusAxisType)\n                },\n                {\n                    name: 'angle',\n                    type: getDimTypeByAxis(angleAxisType),\n                    stackable: isStackable(angleAxisType)\n                }\n            ];\n            var isAngleAxisCateogry = angleAxisType === 'category';\n            var isRadiusAxisCateogry = radiusAxisType === 'category';\n\n            completeDimensions(dimensions, data, ['radius', 'angle', 'value']);\n\n            var categoryAxesModels = {};\n            if (isRadiusAxisCateogry) {\n                categoryAxesModels.radius = radiusAxisModel;\n            }\n            if (isAngleAxisCateogry) {\n                categoryAxesModels.angle = angleAxisModel;\n            }\n            return {\n                dimensions: dimensions,\n                categoryIndex: isAngleAxisCateogry ? 1 : (isRadiusAxisCateogry ? 0 : -1),\n                categoryAxesModels: categoryAxesModels\n            };\n        },\n\n        geo: function (data, seriesModel, ecModel) {\n            // TODO Region\n            // 多个散点图系列在同一个地区的时候\n            return {\n                dimensions: completeDimensions([\n                    {name: 'lng'},\n                    {name: 'lat'}\n                ], data, ['lng', 'lat', 'value'])\n            };\n        }\n    };\n\n    function createNameList(result, data) {\n        var nameList = [];\n\n        var categoryDim = result && result.dimensions[result.categoryIndex];\n        var categoryAxisModel;\n        if (categoryDim) {\n            categoryAxisModel = result.categoryAxesModels[categoryDim.name];\n        }\n\n        if (categoryAxisModel) {\n            // FIXME Two category axis\n            var categories = categoryAxisModel.getCategories();\n            if (categories) {\n                var dataLen = data.length;\n                // Ordered data is given explicitly like\n                // [[3, 0.2], [1, 0.3], [2, 0.15]]\n                // or given scatter data,\n                // pick the category\n                if (zrUtil.isArray(data[0]) && data[0].length > 1) {\n                    nameList = [];\n                    for (var i = 0; i < dataLen; i++) {\n                        nameList[i] = categories[data[i][result.categoryIndex || 0]];\n                    }\n                }\n                else {\n                    nameList = categories.slice(0);\n                }\n            }\n        }\n\n        return nameList;\n    }\n\n    module.exports = createListFromArray;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/chart/helper/createListFromArray.js\n// module id = 536\n// module chunks = 0 1","'use strict';\n\n\n    var graphic = require('../util/graphic');\n    var zrUtil = require('zrender/lib/core/util');\n    var echarts = require('../echarts');\n\n    require('../coord/cartesian/Grid');\n\n    require('./axis');\n\n    // Grid view\n    echarts.extendComponentView({\n\n        type: 'grid',\n\n        render: function (gridModel, ecModel) {\n            this.group.removeAll();\n            if (gridModel.get('show')) {\n                this.group.add(new graphic.Rect({\n                    shape: gridModel.coordinateSystem.getRect(),\n                    style: zrUtil.defaults({\n                        fill: gridModel.get('backgroundColor')\n                    }, gridModel.getItemStyle()),\n                    silent: true,\n                    z2: -1\n                }));\n            }\n        }\n\n    });\n\n    echarts.registerPreprocessor(function (option) {\n        // Only create grid when need\n        if (option.xAxis && option.yAxis && !option.grid) {\n            option.grid = {};\n        }\n    });\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/grid.js\n// module id = 537\n// module chunks = 0 1","/**\n * Grid is a region which contains at most 4 cartesian systems\n *\n * TODO Default cartesian\n */\nvar factory = exports;\n\n    var layout = require('../../util/layout');\n    var axisHelper = require('../../coord/axisHelper');\n\n    var zrUtil = require('zrender/lib/core/util');\n    var Cartesian2D = require('./Cartesian2D');\n    var Axis2D = require('./Axis2D');\n\n    var each = zrUtil.each;\n\n    var ifAxisCrossZero = axisHelper.ifAxisCrossZero;\n    var niceScaleExtent = axisHelper.niceScaleExtent;\n\n    // 依赖 GridModel, AxisModel 做预处理\n    require('./GridModel');\n\n    /**\n     * Check if the axis is used in the specified grid\n     * @inner\n     */\n    function isAxisUsedInTheGrid(axisModel, gridModel, ecModel) {\n        return axisModel.getCoordSysModel() === gridModel;\n    }\n\n    function getLabelUnionRect(axis) {\n        var axisModel = axis.model;\n        var labels = axisModel.getFormattedLabels();\n        var textStyleModel = axisModel.getModel('axisLabel.textStyle');\n        var rect;\n        var step = 1;\n        var labelCount = labels.length;\n        if (labelCount > 40) {\n            // Simple optimization for large amount of labels\n            step = Math.ceil(labelCount / 40);\n        }\n        for (var i = 0; i < labelCount; i += step) {\n            if (!axis.isLabelIgnored(i)) {\n                var singleRect = textStyleModel.getTextRect(labels[i]);\n                // FIXME consider label rotate\n                rect ? rect.union(singleRect) : (rect = singleRect);\n            }\n        }\n        return rect;\n    }\n\n    function Grid(gridModel, ecModel, api) {\n        /**\n         * @type {Object.<string, module:echarts/coord/cartesian/Cartesian2D>}\n         * @private\n         */\n        this._coordsMap = {};\n\n        /**\n         * @type {Array.<module:echarts/coord/cartesian/Cartesian>}\n         * @private\n         */\n        this._coordsList = [];\n\n        /**\n         * @type {Object.<string, module:echarts/coord/cartesian/Axis2D>}\n         * @private\n         */\n        this._axesMap = {};\n\n        /**\n         * @type {Array.<module:echarts/coord/cartesian/Axis2D>}\n         * @private\n         */\n        this._axesList = [];\n\n        this._initCartesian(gridModel, ecModel, api);\n\n        this._model = gridModel;\n    }\n\n    var gridProto = Grid.prototype;\n\n    gridProto.type = 'grid';\n\n    gridProto.getRect = function () {\n        return this._rect;\n    };\n\n    gridProto.update = function (ecModel, api) {\n\n        var axesMap = this._axesMap;\n\n        this._updateScale(ecModel, this._model);\n\n        function ifAxisCanNotOnZero(otherAxisDim) {\n            var axes = axesMap[otherAxisDim];\n            for (var idx in axes) {\n                if (axes.hasOwnProperty(idx)) {\n                    var axis = axes[idx];\n                    if (axis && (axis.type === 'category' || !ifAxisCrossZero(axis))) {\n                        return true;\n                    }\n                }\n            }\n            return false;\n        }\n\n        each(axesMap.x, function (xAxis) {\n            niceScaleExtent(xAxis, xAxis.model);\n        });\n        each(axesMap.y, function (yAxis) {\n            niceScaleExtent(yAxis, yAxis.model);\n        });\n        // Fix configuration\n        each(axesMap.x, function (xAxis) {\n            // onZero can not be enabled in these two situations\n            // 1. When any other axis is a category axis\n            // 2. When any other axis not across 0 point\n            if (ifAxisCanNotOnZero('y')) {\n                xAxis.onZero = false;\n            }\n        });\n        each(axesMap.y, function (yAxis) {\n            if (ifAxisCanNotOnZero('x')) {\n                yAxis.onZero = false;\n            }\n        });\n\n        // Resize again if containLabel is enabled\n        // FIXME It may cause getting wrong grid size in data processing stage\n        this.resize(this._model, api);\n    };\n\n    /**\n     * Resize the grid\n     * @param {module:echarts/coord/cartesian/GridModel} gridModel\n     * @param {module:echarts/ExtensionAPI} api\n     */\n    gridProto.resize = function (gridModel, api) {\n\n        var gridRect = layout.getLayoutRect(\n            gridModel.getBoxLayoutParams(), {\n                width: api.getWidth(),\n                height: api.getHeight()\n            });\n\n        this._rect = gridRect;\n\n        var axesList = this._axesList;\n\n        adjustAxes();\n\n        // Minus label size\n        if (gridModel.get('containLabel')) {\n            each(axesList, function (axis) {\n                if (!axis.model.get('axisLabel.inside')) {\n                    var labelUnionRect = getLabelUnionRect(axis);\n                    if (labelUnionRect) {\n                        var dim = axis.isHorizontal() ? 'height' : 'width';\n                        var margin = axis.model.get('axisLabel.margin');\n                        gridRect[dim] -= labelUnionRect[dim] + margin;\n                        if (axis.position === 'top') {\n                            gridRect.y += labelUnionRect.height + margin;\n                        }\n                        else if (axis.position === 'left')  {\n                            gridRect.x += labelUnionRect.width + margin;\n                        }\n                    }\n                }\n            });\n\n            adjustAxes();\n        }\n\n        function adjustAxes() {\n            each(axesList, function (axis) {\n                var isHorizontal = axis.isHorizontal();\n                var extent = isHorizontal ? [0, gridRect.width] : [0, gridRect.height];\n                var idx = axis.inverse ? 1 : 0;\n                axis.setExtent(extent[idx], extent[1 - idx]);\n                updateAxisTransfrom(axis, isHorizontal ? gridRect.x : gridRect.y);\n            });\n        }\n    };\n\n    /**\n     * @param {string} axisType\n     * @param {ndumber} [axisIndex]\n     */\n    gridProto.getAxis = function (axisType, axisIndex) {\n        var axesMapOnDim = this._axesMap[axisType];\n        if (axesMapOnDim != null) {\n            if (axisIndex == null) {\n                // Find first axis\n                for (var name in axesMapOnDim) {\n                    if (axesMapOnDim.hasOwnProperty(name)) {\n                        return axesMapOnDim[name];\n                    }\n                }\n            }\n            return axesMapOnDim[axisIndex];\n        }\n    };\n\n    gridProto.getCartesian = function (xAxisIndex, yAxisIndex) {\n        if (xAxisIndex != null && yAxisIndex != null) {\n            var key = 'x' + xAxisIndex + 'y' + yAxisIndex;\n            return this._coordsMap[key];\n        }\n        else {\n            // When only xAxisIndex or yAxisIndex given, find its first cartesian.\n            for (var i = 0, coordList = this._coordsList; i < coordList.length; i++) {\n                if (coordList[i].getAxis('x').index === xAxisIndex\n                    || coordList[i].getAxis('y').index === yAxisIndex\n                ) {\n                    return coordList[i];\n                }\n            }\n        }\n    };\n\n    /**\n     * @implements\n     * see {module:echarts/CoodinateSystem}\n     */\n    gridProto.convertToPixel = function (ecModel, finder, value) {\n        var target = this._findConvertTarget(ecModel, finder);\n\n        return target.cartesian\n            ? target.cartesian.dataToPoint(value)\n            : target.axis\n            ? target.axis.toGlobalCoord(target.axis.dataToCoord(value))\n            : null;\n    };\n\n    /**\n     * @implements\n     * see {module:echarts/CoodinateSystem}\n     */\n    gridProto.convertFromPixel = function (ecModel, finder, value) {\n        var target = this._findConvertTarget(ecModel, finder);\n\n        return target.cartesian\n            ? target.cartesian.pointToData(value)\n            : target.axis\n            ? target.axis.coordToData(target.axis.toLocalCoord(value))\n            : null;\n    };\n\n    /**\n     * @inner\n     */\n    gridProto._findConvertTarget = function (ecModel, finder) {\n        var seriesModel = finder.seriesModel;\n        var xAxisModel = finder.xAxisModel\n            || (seriesModel && seriesModel.getReferringComponents('xAxis')[0]);\n        var yAxisModel = finder.yAxisModel\n            || (seriesModel && seriesModel.getReferringComponents('yAxis')[0]);\n        var gridModel = finder.gridModel;\n        var coordsList = this._coordsList;\n        var cartesian;\n        var axis;\n\n        if (seriesModel) {\n            cartesian = seriesModel.coordinateSystem;\n            zrUtil.indexOf(coordsList, cartesian) < 0 && (cartesian = null);\n        }\n        else if (xAxisModel && yAxisModel) {\n            cartesian = this.getCartesian(xAxisModel.componentIndex, yAxisModel.componentIndex);\n        }\n        else if (xAxisModel) {\n            axis = this.getAxis('x', xAxisModel.componentIndex);\n        }\n        else if (yAxisModel) {\n            axis = this.getAxis('y', yAxisModel.componentIndex);\n        }\n        // Lowest priority.\n        else if (gridModel) {\n            var grid = gridModel.coordinateSystem;\n            if (grid === this) {\n                cartesian = this._coordsList[0];\n            }\n        }\n\n        return {cartesian: cartesian, axis: axis};\n    };\n\n    /**\n     * @implements\n     * see {module:echarts/CoodinateSystem}\n     */\n    gridProto.containPoint = function (point) {\n        var coord = this._coordsList[0];\n        if (coord) {\n            return coord.containPoint(point);\n        }\n    };\n\n    /**\n     * Initialize cartesian coordinate systems\n     * @private\n     */\n    gridProto._initCartesian = function (gridModel, ecModel, api) {\n        var axisPositionUsed = {\n            left: false,\n            right: false,\n            top: false,\n            bottom: false\n        };\n\n        var axesMap = {\n            x: {},\n            y: {}\n        };\n        var axesCount = {\n            x: 0,\n            y: 0\n        };\n\n        /// Create axis\n        ecModel.eachComponent('xAxis', createAxisCreator('x'), this);\n        ecModel.eachComponent('yAxis', createAxisCreator('y'), this);\n\n        if (!axesCount.x || !axesCount.y) {\n            // Roll back when there no either x or y axis\n            this._axesMap = {};\n            this._axesList = [];\n            return;\n        }\n\n        this._axesMap = axesMap;\n\n        /// Create cartesian2d\n        each(axesMap.x, function (xAxis, xAxisIndex) {\n            each(axesMap.y, function (yAxis, yAxisIndex) {\n                var key = 'x' + xAxisIndex + 'y' + yAxisIndex;\n                var cartesian = new Cartesian2D(key);\n\n                cartesian.grid = this;\n\n                this._coordsMap[key] = cartesian;\n                this._coordsList.push(cartesian);\n\n                cartesian.addAxis(xAxis);\n                cartesian.addAxis(yAxis);\n            }, this);\n        }, this);\n\n        function createAxisCreator(axisType) {\n            return function (axisModel, idx) {\n                if (!isAxisUsedInTheGrid(axisModel, gridModel, ecModel)) {\n                    return;\n                }\n\n                var axisPosition = axisModel.get('position');\n                if (axisType === 'x') {\n                    // Fix position\n                    if (axisPosition !== 'top' && axisPosition !== 'bottom') {\n                        // Default bottom of X\n                        axisPosition = 'bottom';\n                        if (axisPositionUsed[axisPosition]) {\n                            axisPosition = axisPosition === 'top' ? 'bottom' : 'top';\n                        }\n                    }\n                }\n                else {\n                    // Fix position\n                    if (axisPosition !== 'left' && axisPosition !== 'right') {\n                        // Default left of Y\n                        axisPosition = 'left';\n                        if (axisPositionUsed[axisPosition]) {\n                            axisPosition = axisPosition === 'left' ? 'right' : 'left';\n                        }\n                    }\n                }\n                axisPositionUsed[axisPosition] = true;\n\n                var axis = new Axis2D(\n                    axisType, axisHelper.createScaleByModel(axisModel),\n                    [0, 0],\n                    axisModel.get('type'),\n                    axisPosition\n                );\n\n                var isCategory = axis.type === 'category';\n                axis.onBand = isCategory && axisModel.get('boundaryGap');\n                axis.inverse = axisModel.get('inverse');\n\n                axis.onZero = axisModel.get('axisLine.onZero');\n\n                // Inject axis into axisModel\n                axisModel.axis = axis;\n\n                // Inject axisModel into axis\n                axis.model = axisModel;\n\n                // Inject grid info axis\n                axis.grid = this;\n\n                // Index of axis, can be used as key\n                axis.index = idx;\n\n                this._axesList.push(axis);\n\n                axesMap[axisType][idx] = axis;\n                axesCount[axisType]++;\n            };\n        }\n    };\n\n    /**\n     * Update cartesian properties from series\n     * @param  {module:echarts/model/Option} option\n     * @private\n     */\n    gridProto._updateScale = function (ecModel, gridModel) {\n        // Reset scale\n        zrUtil.each(this._axesList, function (axis) {\n            axis.scale.setExtent(Infinity, -Infinity);\n        });\n        ecModel.eachSeries(function (seriesModel) {\n            if (isCartesian2D(seriesModel)) {\n                var axesModels = findAxesModels(seriesModel, ecModel);\n                var xAxisModel = axesModels[0];\n                var yAxisModel = axesModels[1];\n\n                if (!isAxisUsedInTheGrid(xAxisModel, gridModel, ecModel)\n                    || !isAxisUsedInTheGrid(yAxisModel, gridModel, ecModel)\n                 ) {\n                    return;\n                }\n\n                var cartesian = this.getCartesian(\n                    xAxisModel.componentIndex, yAxisModel.componentIndex\n                );\n                var data = seriesModel.getData();\n                var xAxis = cartesian.getAxis('x');\n                var yAxis = cartesian.getAxis('y');\n\n                if (data.type === 'list') {\n                    unionExtent(data, xAxis, seriesModel);\n                    unionExtent(data, yAxis, seriesModel);\n                }\n            }\n        }, this);\n\n        function unionExtent(data, axis, seriesModel) {\n            each(seriesModel.coordDimToDataDim(axis.dim), function (dim) {\n                axis.scale.unionExtentFromData(data, dim);\n            });\n        }\n    };\n\n    /**\n     * @inner\n     */\n    function updateAxisTransfrom(axis, coordBase) {\n        var axisExtent = axis.getExtent();\n        var axisExtentSum = axisExtent[0] + axisExtent[1];\n\n        // Fast transform\n        axis.toGlobalCoord = axis.dim === 'x'\n            ? function (coord) {\n                return coord + coordBase;\n            }\n            : function (coord) {\n                return axisExtentSum - coord + coordBase;\n            };\n        axis.toLocalCoord = axis.dim === 'x'\n            ? function (coord) {\n                return coord - coordBase;\n            }\n            : function (coord) {\n                return axisExtentSum - coord + coordBase;\n            };\n    }\n\n    var axesTypes = ['xAxis', 'yAxis'];\n    /**\n     * @inner\n     */\n    function findAxesModels(seriesModel, ecModel) {\n        return zrUtil.map(axesTypes, function (axisType) {\n            var axisModel = seriesModel.getReferringComponents(axisType)[0];\n\n            if (__DEV__) {\n                if (!axisModel) {\n                    throw new Error(axisType + ' \"' + zrUtil.retrieve(\n                        seriesModel.get(axisType + 'Index'),\n                        seriesModel.get(axisType + 'Id'),\n                        0\n                    ) + '\" not found');\n                }\n            }\n            return axisModel;\n        });\n    }\n\n    /**\n     * @inner\n     */\n    function isCartesian2D(seriesModel) {\n        return seriesModel.get('coordinateSystem') === 'cartesian2d';\n    }\n\n    Grid.create = function (ecModel, api) {\n        var grids = [];\n        ecModel.eachComponent('grid', function (gridModel, idx) {\n            var grid = new Grid(gridModel, ecModel, api);\n            grid.name = 'grid_' + idx;\n            grid.resize(gridModel, api);\n\n            gridModel.coordinateSystem = grid;\n\n            grids.push(grid);\n        });\n\n        // Inject the coordinateSystems into seriesModel\n        ecModel.eachSeries(function (seriesModel) {\n            if (!isCartesian2D(seriesModel)) {\n                return;\n            }\n\n            var axesModels = findAxesModels(seriesModel, ecModel);\n            var xAxisModel = axesModels[0];\n            var yAxisModel = axesModels[1];\n\n            var gridModel = xAxisModel.getCoordSysModel();\n\n            if (__DEV__) {\n                if (!gridModel) {\n                    throw new Error(\n                        'Grid \"' + zrUtil.retrieve(\n                            xAxisModel.get('gridIndex'),\n                            xAxisModel.get('gridId'),\n                            0\n                        ) + '\" not found'\n                    );\n                }\n                if (xAxisModel.getCoordSysModel() !== yAxisModel.getCoordSysModel()) {\n                    throw new Error('xAxis and yAxis must use the same grid');\n                }\n            }\n\n            var grid = gridModel.coordinateSystem;\n\n            seriesModel.coordinateSystem = grid.getCartesian(\n                xAxisModel.componentIndex, yAxisModel.componentIndex\n            );\n        });\n\n        return grids;\n    };\n\n    // For deciding which dimensions to use when creating list data\n    Grid.dimensions = Cartesian2D.prototype.dimensions;\n\n    require('../../CoordinateSystem').register('cartesian2d', Grid);\n\n    module.exports = Grid;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/coord/cartesian/Grid.js\n// module id = 538\n// module chunks = 0 1","\n\n    var Group = require('zrender/lib/container/Group');\n    var componentUtil = require('../util/component');\n    var clazzUtil = require('../util/clazz');\n\n    var Component = function () {\n        /**\n         * @type {module:zrender/container/Group}\n         * @readOnly\n         */\n        this.group = new Group();\n\n        /**\n         * @type {string}\n         * @readOnly\n         */\n        this.uid = componentUtil.getUID('viewComponent');\n    };\n\n    Component.prototype = {\n\n        constructor: Component,\n\n        init: function (ecModel, api) {},\n\n        render: function (componentModel, ecModel, api, payload) {},\n\n        dispose: function () {}\n\n    };\n\n    var componentProto = Component.prototype;\n    componentProto.updateView\n        = componentProto.updateLayout\n        = componentProto.updateVisual\n        = function (seriesModel, ecModel, api, payload) {\n            // Do nothing;\n        };\n    // Enable Component.extend.\n    clazzUtil.enableClassExtend(Component);\n\n    // Enable capability of registerClass, getClass, hasClass, registerSubTypeDefaulter and so on.\n    clazzUtil.enableClassManagement(Component, {registerWhenExtend: true});\n\n    module.exports = Component;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/view/Component.js\n// module id = 539\n// module chunks = 0 1","'use strict';\n\n\n    var zrUtil = require('zrender/lib/core/util');\n\n    var echartsAPIList = [\n        'getDom', 'getZr', 'getWidth', 'getHeight', 'dispatchAction', 'isDisposed',\n        'on', 'off', 'getDataURL', 'getConnectedDataURL', 'getModel', 'getOption'\n    ];\n\n    function ExtensionAPI(chartInstance) {\n        zrUtil.each(echartsAPIList, function (name) {\n            this[name] = zrUtil.bind(chartInstance[name], chartInstance);\n        }, this);\n    }\n\n    module.exports = ExtensionAPI;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/ExtensionAPI.js\n// module id = 540\n// module chunks = 0 1","/**\n * @module echarts/chart/helper/SymbolDraw\n */\n\n\n    var graphic = require('../../util/graphic');\n    var Symbol = require('./Symbol');\n\n    /**\n     * @constructor\n     * @alias module:echarts/chart/helper/SymbolDraw\n     * @param {module:zrender/graphic/Group} [symbolCtor]\n     */\n    function SymbolDraw(symbolCtor) {\n        this.group = new graphic.Group();\n\n        this._symbolCtor = symbolCtor || Symbol;\n    }\n\n    var symbolDrawProto = SymbolDraw.prototype;\n\n    function symbolNeedsDraw(data, idx, isIgnore) {\n        var point = data.getItemLayout(idx);\n        // Is an object\n        // if (point && point.hasOwnProperty('point')) {\n        //     point = point.point;\n        // }\n        return point && !isNaN(point[0]) && !isNaN(point[1]) && !(isIgnore && isIgnore(idx))\n                    && data.getItemVisual(idx, 'symbol') !== 'none';\n    }\n    /**\n     * Update symbols draw by new data\n     * @param {module:echarts/data/List} data\n     * @param {Array.<boolean>} [isIgnore]\n     */\n    symbolDrawProto.updateData = function (data, isIgnore) {\n        var group = this.group;\n        var seriesModel = data.hostModel;\n        var oldData = this._data;\n\n        var SymbolCtor = this._symbolCtor;\n\n        var seriesScope = {\n            itemStyle: seriesModel.getModel('itemStyle.normal').getItemStyle(['color']),\n            hoverItemStyle: seriesModel.getModel('itemStyle.emphasis').getItemStyle(),\n            symbolRotate: seriesModel.get('symbolRotate'),\n            symbolOffset: seriesModel.get('symbolOffset'),\n            hoverAnimation: seriesModel.get('hoverAnimation'),\n\n            labelModel: seriesModel.getModel('label.normal'),\n            hoverLabelModel: seriesModel.getModel('label.emphasis')\n        };\n\n        data.diff(oldData)\n            .add(function (newIdx) {\n                var point = data.getItemLayout(newIdx);\n                if (symbolNeedsDraw(data, newIdx, isIgnore)) {\n                    var symbolEl = new SymbolCtor(data, newIdx, seriesScope);\n                    symbolEl.attr('position', point);\n                    data.setItemGraphicEl(newIdx, symbolEl);\n                    group.add(symbolEl);\n                }\n            })\n            .update(function (newIdx, oldIdx) {\n                var symbolEl = oldData.getItemGraphicEl(oldIdx);\n                var point = data.getItemLayout(newIdx);\n                if (!symbolNeedsDraw(data, newIdx, isIgnore)) {\n                    group.remove(symbolEl);\n                    return;\n                }\n                if (!symbolEl) {\n                    symbolEl = new SymbolCtor(data, newIdx);\n                    symbolEl.attr('position', point);\n                }\n                else {\n                    symbolEl.updateData(data, newIdx, seriesScope);\n                    graphic.updateProps(symbolEl, {\n                        position: point\n                    }, seriesModel);\n                }\n\n                // Add back\n                group.add(symbolEl);\n\n                data.setItemGraphicEl(newIdx, symbolEl);\n            })\n            .remove(function (oldIdx) {\n                var el = oldData.getItemGraphicEl(oldIdx);\n                el && el.fadeOut(function () {\n                    group.remove(el);\n                });\n            })\n            .execute();\n\n        this._data = data;\n    };\n\n    symbolDrawProto.updateLayout = function () {\n        var data = this._data;\n        if (data) {\n            // Not use animation\n            data.eachItemGraphicEl(function (el, idx) {\n                var point = data.getItemLayout(idx);\n                el.attr('position', point);\n            });\n        }\n    };\n\n    symbolDrawProto.remove = function (enableAnimation) {\n        var group = this.group;\n        var data = this._data;\n        if (data) {\n            if (enableAnimation) {\n                data.eachItemGraphicEl(function (el) {\n                    el.fadeOut(function () {\n                        group.remove(el);\n                    });\n                });\n            }\n            else {\n                group.removeAll();\n            }\n        }\n    };\n\n    module.exports = SymbolDraw;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/chart/helper/SymbolDraw.js\n// module id = 541\n// module chunks = 0 1","\n\n    var zrUtil = require('zrender/lib/core/util');\n    var echarts = require('../echarts');\n    var PRIORITY = echarts.PRIORITY;\n\n    require('./line/LineSeries');\n    require('./line/LineView');\n\n    echarts.registerVisual(zrUtil.curry(\n        require('../visual/symbol'), 'line', 'circle', 'line'\n    ));\n    echarts.registerLayout(zrUtil.curry(\n        require('../layout/points'), 'line'\n    ));\n\n    // Down sample after filter\n    echarts.registerProcessor(PRIORITY.PROCESSOR.STATISTIC, zrUtil.curry(\n        require('../processor/dataSample'), 'line'\n    ));\n\n    // In case developer forget to include grid component\n    require('../component/grid');\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/chart/line.js\n// module id = 542\n// module chunks = 0 1","'use strict';\n\n\n    var createListFromArray = require('../helper/createListFromArray');\n    var SeriesModel = require('../../model/Series');\n\n    module.exports = SeriesModel.extend({\n\n        type: 'series.line',\n\n        dependencies: ['grid', 'polar'],\n\n        getInitialData: function (option, ecModel) {\n            if (__DEV__) {\n                var coordSys = option.coordinateSystem;\n                if (coordSys !== 'polar' && coordSys !== 'cartesian2d') {\n                    throw new Error('Line not support coordinateSystem besides cartesian and polar');\n                }\n            }\n            return createListFromArray(option.data, this, ecModel);\n        },\n\n        defaultOption: {\n            zlevel: 0,                  // 一级层叠\n            z: 2,                       // 二级层叠\n            coordinateSystem: 'cartesian2d',\n            legendHoverLink: true,\n\n            hoverAnimation: true,\n            // stack: null\n            // xAxisIndex: 0,\n            // yAxisIndex: 0,\n\n            // polarIndex: 0,\n\n            // If clip the overflow value\n            clipOverflow: true,\n\n            label: {\n                normal: {\n                    position: 'top'\n                }\n            },\n            // itemStyle: {\n            //     normal: {},\n            //     emphasis: {}\n            // },\n            lineStyle: {\n                normal: {\n                    width: 2,\n                    type: 'solid'\n                }\n            },\n            // areaStyle: {},\n            // false, 'start', 'end', 'middle'\n            step: false,\n\n            // Disabled if step is true\n            smooth: false,\n            smoothMonotone: null,\n            // 拐点图形类型\n            symbol: 'emptyCircle',\n            // 拐点图形大小\n            symbolSize: 4,\n            // 拐点图形旋转控制\n            symbolRotate: null,\n\n            // 是否显示 symbol, 只有在 tooltip hover 的时候显示\n            showSymbol: true,\n            // 标志图形默认只有主轴显示（随主轴标签间隔隐藏策略）\n            showAllSymbol: false,\n\n            // 是否连接断点\n            connectNulls: false,\n\n            // 数据过滤，'average', 'max', 'min', 'sum'\n            sampling: 'none',\n\n            animationEasing: 'linear',\n\n            // Disable progressive\n            progressive: 0,\n            hoverLayerThreshold: Infinity\n        }\n    });\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/chart/line/LineSeries.js\n// module id = 543\n// module chunks = 0 1","'use strict';\n// FIXME step not support polar\n\n\n    var zrUtil = require('zrender/lib/core/util');\n    var SymbolDraw = require('../helper/SymbolDraw');\n    var Symbol = require('../helper/Symbol');\n    var lineAnimationDiff = require('./lineAnimationDiff');\n    var graphic = require('../../util/graphic');\n    var modelUtil = require('../../util/model');\n    var polyHelper = require('./poly');\n    var ChartView = require('../../view/Chart');\n\n    function isPointsSame(points1, points2) {\n        if (points1.length !== points2.length) {\n            return;\n        }\n        for (var i = 0; i < points1.length; i++) {\n            var p1 = points1[i];\n            var p2 = points2[i];\n            if (p1[0] !== p2[0] || p1[1] !== p2[1]) {\n                return;\n            }\n        }\n        return true;\n    }\n\n    function getSmooth(smooth) {\n        return typeof (smooth) === 'number' ? smooth : (smooth ? 0.3 : 0);\n    }\n\n    function getAxisExtentWithGap(axis) {\n        var extent = axis.getGlobalExtent();\n        if (axis.onBand) {\n            // Remove extra 1px to avoid line miter in clipped edge\n            var halfBandWidth = axis.getBandWidth() / 2 - 1;\n            var dir = extent[1] > extent[0] ? 1 : -1;\n            extent[0] += dir * halfBandWidth;\n            extent[1] -= dir * halfBandWidth;\n        }\n        return extent;\n    }\n\n    function sign(val) {\n        return val >= 0 ? 1 : -1;\n    }\n    /**\n     * @param {module:echarts/coord/cartesian/Cartesian2D|module:echarts/coord/polar/Polar} coordSys\n     * @param {module:echarts/data/List} data\n     * @param {Array.<Array.<number>>} points\n     * @private\n     */\n    function getStackedOnPoints(coordSys, data) {\n        var baseAxis = coordSys.getBaseAxis();\n        var valueAxis = coordSys.getOtherAxis(baseAxis);\n        var valueStart = baseAxis.onZero\n            ? 0 : valueAxis.scale.getExtent()[0];\n\n        var valueDim = valueAxis.dim;\n\n        var baseDataOffset = valueDim === 'x' || valueDim === 'radius' ? 1 : 0;\n\n        return data.mapArray([valueDim], function (val, idx) {\n            var stackedOnSameSign;\n            var stackedOn = data.stackedOn;\n            // Find first stacked value with same sign\n            while (stackedOn &&\n                sign(stackedOn.get(valueDim, idx)) === sign(val)\n            ) {\n                stackedOnSameSign = stackedOn;\n                break;\n            }\n            var stackedData = [];\n            stackedData[baseDataOffset] = data.get(baseAxis.dim, idx);\n            stackedData[1 - baseDataOffset] = stackedOnSameSign\n                ? stackedOnSameSign.get(valueDim, idx, true) : valueStart;\n\n            return coordSys.dataToPoint(stackedData);\n        }, true);\n    }\n\n    function createGridClipShape(cartesian, hasAnimation, seriesModel) {\n        var xExtent = getAxisExtentWithGap(cartesian.getAxis('x'));\n        var yExtent = getAxisExtentWithGap(cartesian.getAxis('y'));\n        var isHorizontal = cartesian.getBaseAxis().isHorizontal();\n\n        var x = Math.min(xExtent[0], xExtent[1]);\n        var y = Math.min(yExtent[0], yExtent[1]);\n        var width = Math.max(xExtent[0], xExtent[1]) - x;\n        var height = Math.max(yExtent[0], yExtent[1]) - y;\n        var lineWidth = seriesModel.get('lineStyle.normal.width') || 2;\n        // Expand clip shape to avoid clipping when line value exceeds axis\n        var expandSize = seriesModel.get('clipOverflow') ? lineWidth / 2 : Math.max(width, height);\n        if (isHorizontal) {\n            y -= expandSize;\n            height += expandSize * 2;\n        }\n        else {\n            x -= expandSize;\n            width += expandSize * 2;\n        }\n\n        var clipPath = new graphic.Rect({\n            shape: {\n                x: x,\n                y: y,\n                width: width,\n                height: height\n            }\n        });\n\n        if (hasAnimation) {\n            clipPath.shape[isHorizontal ? 'width' : 'height'] = 0;\n            graphic.initProps(clipPath, {\n                shape: {\n                    width: width,\n                    height: height\n                }\n            }, seriesModel);\n        }\n\n        return clipPath;\n    }\n\n    function createPolarClipShape(polar, hasAnimation, seriesModel) {\n        var angleAxis = polar.getAngleAxis();\n        var radiusAxis = polar.getRadiusAxis();\n\n        var radiusExtent = radiusAxis.getExtent();\n        var angleExtent = angleAxis.getExtent();\n\n        var RADIAN = Math.PI / 180;\n\n        var clipPath = new graphic.Sector({\n            shape: {\n                cx: polar.cx,\n                cy: polar.cy,\n                r0: radiusExtent[0],\n                r: radiusExtent[1],\n                startAngle: -angleExtent[0] * RADIAN,\n                endAngle: -angleExtent[1] * RADIAN,\n                clockwise: angleAxis.inverse\n            }\n        });\n\n        if (hasAnimation) {\n            clipPath.shape.endAngle = -angleExtent[0] * RADIAN;\n            graphic.initProps(clipPath, {\n                shape: {\n                    endAngle: -angleExtent[1] * RADIAN\n                }\n            }, seriesModel);\n        }\n\n        return clipPath;\n    }\n\n    function createClipShape(coordSys, hasAnimation, seriesModel) {\n        return coordSys.type === 'polar'\n            ? createPolarClipShape(coordSys, hasAnimation, seriesModel)\n            : createGridClipShape(coordSys, hasAnimation, seriesModel);\n    }\n\n    function turnPointsIntoStep(points, coordSys, stepTurnAt) {\n        var baseAxis = coordSys.getBaseAxis();\n        var baseIndex = baseAxis.dim === 'x' || baseAxis.dim === 'radius' ? 0 : 1;\n\n        var stepPoints = [];\n        for (var i = 0; i < points.length - 1; i++) {\n            var nextPt = points[i + 1];\n            var pt = points[i];\n            stepPoints.push(pt);\n\n            var stepPt = [];\n            switch (stepTurnAt) {\n                case 'end':\n                    stepPt[baseIndex] = nextPt[baseIndex];\n                    stepPt[1 - baseIndex] = pt[1 - baseIndex];\n                    // default is start\n                    stepPoints.push(stepPt);\n                    break;\n                case 'middle':\n                    // default is start\n                    var middle = (pt[baseIndex] + nextPt[baseIndex]) / 2;\n                    var stepPt2 = [];\n                    stepPt[baseIndex] = stepPt2[baseIndex] = middle;\n                    stepPt[1 - baseIndex] = pt[1 - baseIndex];\n                    stepPt2[1 - baseIndex] = nextPt[1 - baseIndex];\n                    stepPoints.push(stepPt);\n                    stepPoints.push(stepPt2);\n                    break;\n                default:\n                    stepPt[baseIndex] = pt[baseIndex];\n                    stepPt[1 - baseIndex] = nextPt[1 - baseIndex];\n                    // default is start\n                    stepPoints.push(stepPt);\n            }\n        }\n        // Last points\n        points[i] && stepPoints.push(points[i]);\n        return stepPoints;\n    }\n\n    function getVisualGradient(data, coordSys) {\n        var visualMetaList = data.getVisual('visualMeta');\n        if (!visualMetaList || !visualMetaList.length || !data.count()) {\n            // When data.count() is 0, gradient range can not be calculated.\n            return;\n        }\n\n        var visualMeta;\n        for (var i = visualMetaList.length - 1; i >= 0; i--) {\n            // Can only be x or y\n            if (visualMetaList[i].dimension < 2) {\n                visualMeta = visualMetaList[i];\n                break;\n            }\n        }\n        if (!visualMeta || coordSys.type !== 'cartesian2d') {\n            if (__DEV__) {\n                console.warn('Visual map on line style only support x or y dimension.');\n            }\n            return;\n        }\n\n        // If the area to be rendered is bigger than area defined by LinearGradient,\n        // the canvas spec prescribes that the color of the first stop and the last\n        // stop should be used. But if two stops are added at offset 0, in effect\n        // browsers use the color of the second stop to render area outside\n        // LinearGradient. So we can only infinitesimally extend area defined in\n        // LinearGradient to render `outerColors`.\n\n        var dimension = visualMeta.dimension;\n        var dimName = data.dimensions[dimension];\n        var axis = coordSys.getAxis(dimName);\n\n        // dataToCoor mapping may not be linear, but must be monotonic.\n        var colorStops = zrUtil.map(visualMeta.stops, function (stop) {\n            return {\n                coord: axis.toGlobalCoord(axis.dataToCoord(stop.value)),\n                color: stop.color\n            };\n        });\n        var stopLen = colorStops.length;\n        var outerColors = visualMeta.outerColors.slice();\n\n        if (stopLen && colorStops[0].coord > colorStops[stopLen - 1].coord) {\n            colorStops.reverse();\n            outerColors.reverse();\n        }\n\n        var tinyExtent = 10; // Arbitrary value: 10px\n        var minCoord = colorStops[0].coord - tinyExtent;\n        var maxCoord = colorStops[stopLen - 1].coord + tinyExtent;\n        var coordSpan = maxCoord - minCoord;\n\n        if (coordSpan < 1e-3) {\n            return 'transparent';\n        }\n\n        zrUtil.each(colorStops, function (stop) {\n            stop.offset = (stop.coord - minCoord) / coordSpan;\n        });\n        colorStops.push({\n            offset: stopLen ? colorStops[stopLen - 1].offset : 0.5,\n            color: outerColors[1] || 'transparent'\n        });\n        colorStops.unshift({ // notice colorStops.length have been changed.\n            offset: stopLen ? colorStops[0].offset : 0.5,\n            color: outerColors[0] || 'transparent'\n        });\n\n        // zrUtil.each(colorStops, function (colorStop) {\n        //     // Make sure each offset has rounded px to avoid not sharp edge\n        //     colorStop.offset = (Math.round(colorStop.offset * (end - start) + start) - start) / (end - start);\n        // });\n\n        var gradient = new graphic.LinearGradient(0, 0, 0, 0, colorStops, true);\n        gradient[dimName] = minCoord;\n        gradient[dimName + '2'] = maxCoord;\n\n        return gradient;\n    }\n\n    module.exports = ChartView.extend({\n\n        type: 'line',\n\n        init: function () {\n            var lineGroup = new graphic.Group();\n\n            var symbolDraw = new SymbolDraw();\n            this.group.add(symbolDraw.group);\n\n            this._symbolDraw = symbolDraw;\n            this._lineGroup = lineGroup;\n        },\n\n        render: function (seriesModel, ecModel, api) {\n            var coordSys = seriesModel.coordinateSystem;\n            var group = this.group;\n            var data = seriesModel.getData();\n            var lineStyleModel = seriesModel.getModel('lineStyle.normal');\n            var areaStyleModel = seriesModel.getModel('areaStyle.normal');\n\n            var points = data.mapArray(data.getItemLayout, true);\n\n            var isCoordSysPolar = coordSys.type === 'polar';\n            var prevCoordSys = this._coordSys;\n\n            var symbolDraw = this._symbolDraw;\n            var polyline = this._polyline;\n            var polygon = this._polygon;\n\n            var lineGroup = this._lineGroup;\n\n            var hasAnimation = seriesModel.get('animation');\n\n            var isAreaChart = !areaStyleModel.isEmpty();\n            var stackedOnPoints = getStackedOnPoints(coordSys, data);\n\n            var showSymbol = seriesModel.get('showSymbol');\n\n            var isSymbolIgnore = showSymbol && !isCoordSysPolar && !seriesModel.get('showAllSymbol')\n                && this._getSymbolIgnoreFunc(data, coordSys);\n\n            // Remove temporary symbols\n            var oldData = this._data;\n            oldData && oldData.eachItemGraphicEl(function (el, idx) {\n                if (el.__temp) {\n                    group.remove(el);\n                    oldData.setItemGraphicEl(idx, null);\n                }\n            });\n\n            // Remove previous created symbols if showSymbol changed to false\n            if (!showSymbol) {\n                symbolDraw.remove();\n            }\n\n            group.add(lineGroup);\n\n            // FIXME step not support polar\n            var step = !isCoordSysPolar && seriesModel.get('step');\n            // Initialization animation or coordinate system changed\n            if (\n                !(polyline && prevCoordSys.type === coordSys.type && step === this._step)\n            ) {\n                showSymbol && symbolDraw.updateData(data, isSymbolIgnore);\n\n                if (step) {\n                    // TODO If stacked series is not step\n                    points = turnPointsIntoStep(points, coordSys, step);\n                    stackedOnPoints = turnPointsIntoStep(stackedOnPoints, coordSys, step);\n                }\n\n                polyline = this._newPolyline(points, coordSys, hasAnimation);\n                if (isAreaChart) {\n                    polygon = this._newPolygon(\n                        points, stackedOnPoints,\n                        coordSys, hasAnimation\n                    );\n                }\n                lineGroup.setClipPath(createClipShape(coordSys, true, seriesModel));\n            }\n            else {\n                if (isAreaChart && !polygon) {\n                    // If areaStyle is added\n                    polygon = this._newPolygon(\n                        points, stackedOnPoints,\n                        coordSys, hasAnimation\n                    );\n                }\n                else if (polygon && !isAreaChart) {\n                    // If areaStyle is removed\n                    lineGroup.remove(polygon);\n                    polygon = this._polygon = null;\n                }\n\n                // Update clipPath\n                lineGroup.setClipPath(createClipShape(coordSys, false, seriesModel));\n\n                // Always update, or it is wrong in the case turning on legend\n                // because points are not changed\n                showSymbol && symbolDraw.updateData(data, isSymbolIgnore);\n\n                // Stop symbol animation and sync with line points\n                // FIXME performance?\n                data.eachItemGraphicEl(function (el) {\n                    el.stopAnimation(true);\n                });\n\n                // In the case data zoom triggerred refreshing frequently\n                // Data may not change if line has a category axis. So it should animate nothing\n                if (!isPointsSame(this._stackedOnPoints, stackedOnPoints)\n                    || !isPointsSame(this._points, points)\n                ) {\n                    if (hasAnimation) {\n                        this._updateAnimation(\n                            data, stackedOnPoints, coordSys, api, step\n                        );\n                    }\n                    else {\n                        // Not do it in update with animation\n                        if (step) {\n                            // TODO If stacked series is not step\n                            points = turnPointsIntoStep(points, coordSys, step);\n                            stackedOnPoints = turnPointsIntoStep(stackedOnPoints, coordSys, step);\n                        }\n\n                        polyline.setShape({\n                            points: points\n                        });\n                        polygon && polygon.setShape({\n                            points: points,\n                            stackedOnPoints: stackedOnPoints\n                        });\n                    }\n                }\n            }\n\n            var visualColor = getVisualGradient(data, coordSys) || data.getVisual('color');\n\n            polyline.useStyle(zrUtil.defaults(\n                // Use color in lineStyle first\n                lineStyleModel.getLineStyle(),\n                {\n                    fill: 'none',\n                    stroke: visualColor,\n                    lineJoin: 'bevel'\n                }\n            ));\n\n            var smooth = seriesModel.get('smooth');\n            smooth = getSmooth(seriesModel.get('smooth'));\n            polyline.setShape({\n                smooth: smooth,\n                smoothMonotone: seriesModel.get('smoothMonotone'),\n                connectNulls: seriesModel.get('connectNulls')\n            });\n\n            if (polygon) {\n                var stackedOn = data.stackedOn;\n                var stackedOnSmooth = 0;\n\n                polygon.useStyle(zrUtil.defaults(\n                    areaStyleModel.getAreaStyle(),\n                    {\n                        fill: visualColor,\n                        opacity: 0.7,\n                        lineJoin: 'bevel'\n                    }\n                ));\n\n                if (stackedOn) {\n                    var stackedOnSeries = stackedOn.hostModel;\n                    stackedOnSmooth = getSmooth(stackedOnSeries.get('smooth'));\n                }\n\n                polygon.setShape({\n                    smooth: smooth,\n                    stackedOnSmooth: stackedOnSmooth,\n                    smoothMonotone: seriesModel.get('smoothMonotone'),\n                    connectNulls: seriesModel.get('connectNulls')\n                });\n            }\n\n            this._data = data;\n            // Save the coordinate system for transition animation when data changed\n            this._coordSys = coordSys;\n            this._stackedOnPoints = stackedOnPoints;\n            this._points = points;\n            this._step = step;\n        },\n\n        dispose: function () {},\n\n        highlight: function (seriesModel, ecModel, api, payload) {\n            var data = seriesModel.getData();\n            var dataIndex = modelUtil.queryDataIndex(data, payload);\n\n            if (!(dataIndex instanceof Array) && dataIndex != null && dataIndex >= 0) {\n                var symbol = data.getItemGraphicEl(dataIndex);\n                if (!symbol) {\n                    // Create a temporary symbol if it is not exists\n                    var pt = data.getItemLayout(dataIndex);\n                    if (!pt) {\n                        // Null data\n                        return;\n                    }\n                    symbol = new Symbol(data, dataIndex);\n                    symbol.position = pt;\n                    symbol.setZ(\n                        seriesModel.get('zlevel'),\n                        seriesModel.get('z')\n                    );\n                    symbol.ignore = isNaN(pt[0]) || isNaN(pt[1]);\n                    symbol.__temp = true;\n                    data.setItemGraphicEl(dataIndex, symbol);\n\n                    // Stop scale animation\n                    symbol.stopSymbolAnimation(true);\n\n                    this.group.add(symbol);\n                }\n                symbol.highlight();\n            }\n            else {\n                // Highlight whole series\n                ChartView.prototype.highlight.call(\n                    this, seriesModel, ecModel, api, payload\n                );\n            }\n        },\n\n        downplay: function (seriesModel, ecModel, api, payload) {\n            var data = seriesModel.getData();\n            var dataIndex = modelUtil.queryDataIndex(data, payload);\n            if (dataIndex != null && dataIndex >= 0) {\n                var symbol = data.getItemGraphicEl(dataIndex);\n                if (symbol) {\n                    if (symbol.__temp) {\n                        data.setItemGraphicEl(dataIndex, null);\n                        this.group.remove(symbol);\n                    }\n                    else {\n                        symbol.downplay();\n                    }\n                }\n            }\n            else {\n                // Downplay whole series\n                ChartView.prototype.downplay.call(\n                    this, seriesModel, ecModel, api, payload\n                );\n            }\n        },\n\n        /**\n         * @param {module:zrender/container/Group} group\n         * @param {Array.<Array.<number>>} points\n         * @private\n         */\n        _newPolyline: function (points) {\n            var polyline = this._polyline;\n            // Remove previous created polyline\n            if (polyline) {\n                this._lineGroup.remove(polyline);\n            }\n\n            polyline = new polyHelper.Polyline({\n                shape: {\n                    points: points\n                },\n                silent: true,\n                z2: 10\n            });\n\n            this._lineGroup.add(polyline);\n\n            this._polyline = polyline;\n\n            return polyline;\n        },\n\n        /**\n         * @param {module:zrender/container/Group} group\n         * @param {Array.<Array.<number>>} stackedOnPoints\n         * @param {Array.<Array.<number>>} points\n         * @private\n         */\n        _newPolygon: function (points, stackedOnPoints) {\n            var polygon = this._polygon;\n            // Remove previous created polygon\n            if (polygon) {\n                this._lineGroup.remove(polygon);\n            }\n\n            polygon = new polyHelper.Polygon({\n                shape: {\n                    points: points,\n                    stackedOnPoints: stackedOnPoints\n                },\n                silent: true\n            });\n\n            this._lineGroup.add(polygon);\n\n            this._polygon = polygon;\n            return polygon;\n        },\n        /**\n         * @private\n         */\n        _getSymbolIgnoreFunc: function (data, coordSys) {\n            var categoryAxis = coordSys.getAxesByScale('ordinal')[0];\n            // `getLabelInterval` is provided by echarts/component/axis\n            if (categoryAxis && categoryAxis.isLabelIgnored) {\n                return zrUtil.bind(categoryAxis.isLabelIgnored, categoryAxis);\n            }\n        },\n\n        /**\n         * @private\n         */\n        // FIXME Two value axis\n        _updateAnimation: function (data, stackedOnPoints, coordSys, api, step) {\n            var polyline = this._polyline;\n            var polygon = this._polygon;\n            var seriesModel = data.hostModel;\n\n            var diff = lineAnimationDiff(\n                this._data, data,\n                this._stackedOnPoints, stackedOnPoints,\n                this._coordSys, coordSys\n            );\n\n            var current = diff.current;\n            var stackedOnCurrent = diff.stackedOnCurrent;\n            var next = diff.next;\n            var stackedOnNext = diff.stackedOnNext;\n            if (step) {\n                // TODO If stacked series is not step\n                current = turnPointsIntoStep(diff.current, coordSys, step);\n                stackedOnCurrent = turnPointsIntoStep(diff.stackedOnCurrent, coordSys, step);\n                next = turnPointsIntoStep(diff.next, coordSys, step);\n                stackedOnNext = turnPointsIntoStep(diff.stackedOnNext, coordSys, step);\n            }\n            // `diff.current` is subset of `current` (which should be ensured by\n            // turnPointsIntoStep), so points in `__points` can be updated when\n            // points in `current` are update during animation.\n            polyline.shape.__points = diff.current;\n            polyline.shape.points = current;\n\n            graphic.updateProps(polyline, {\n                shape: {\n                    points: next\n                }\n            }, seriesModel);\n\n            if (polygon) {\n                polygon.setShape({\n                    points: current,\n                    stackedOnPoints: stackedOnCurrent\n                });\n                graphic.updateProps(polygon, {\n                    shape: {\n                        points: next,\n                        stackedOnPoints: stackedOnNext\n                    }\n                }, seriesModel);\n            }\n\n            var updatedDataInfo = [];\n            var diffStatus = diff.status;\n\n            for (var i = 0; i < diffStatus.length; i++) {\n                var cmd = diffStatus[i].cmd;\n                if (cmd === '=') {\n                    var el = data.getItemGraphicEl(diffStatus[i].idx1);\n                    if (el) {\n                        updatedDataInfo.push({\n                            el: el,\n                            ptIdx: i    // Index of points\n                        });\n                    }\n                }\n            }\n\n            if (polyline.animators && polyline.animators.length) {\n                polyline.animators[0].during(function () {\n                    for (var i = 0; i < updatedDataInfo.length; i++) {\n                        var el = updatedDataInfo[i].el;\n                        el.attr('position', polyline.shape.__points[updatedDataInfo[i].ptIdx]);\n                    }\n                });\n            }\n        },\n\n        remove: function (ecModel) {\n            var group = this.group;\n            var oldData = this._data;\n            this._lineGroup.removeAll();\n            this._symbolDraw.remove(true);\n            // Remove temporary created elements when highlighting\n            oldData && oldData.eachItemGraphicEl(function (el, idx) {\n                if (el.__temp) {\n                    group.remove(el);\n                    oldData.setItemGraphicEl(idx, null);\n                }\n            });\n\n            this._polyline =\n            this._polygon =\n            this._coordSys =\n            this._points =\n            this._stackedOnPoints =\n            this._data = null;\n        }\n    });\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/chart/line/LineView.js\n// module id = 544\n// module chunks = 0 1","\n\n    // var arrayDiff = require('zrender/lib/core/arrayDiff');\n    // 'zrender/core/arrayDiff' has been used before, but it did\n    // not do well in performance when roam with fixed dataZoom window.\n\n    function sign(val) {\n        return val >= 0 ? 1 : -1;\n    }\n\n    function getStackedOnPoint(coordSys, data, idx) {\n        var baseAxis = coordSys.getBaseAxis();\n        var valueAxis = coordSys.getOtherAxis(baseAxis);\n        var valueStart = baseAxis.onZero\n            ? 0 : valueAxis.scale.getExtent()[0];\n\n        var valueDim = valueAxis.dim;\n        var baseDataOffset = valueDim === 'x' || valueDim === 'radius' ? 1 : 0;\n\n        var stackedOnSameSign;\n        var stackedOn = data.stackedOn;\n        var val = data.get(valueDim, idx);\n        // Find first stacked value with same sign\n        while (stackedOn &&\n            sign(stackedOn.get(valueDim, idx)) === sign(val)\n        ) {\n            stackedOnSameSign = stackedOn;\n            break;\n        }\n        var stackedData = [];\n        stackedData[baseDataOffset] = data.get(baseAxis.dim, idx);\n        stackedData[1 - baseDataOffset] = stackedOnSameSign\n            ? stackedOnSameSign.get(valueDim, idx, true) : valueStart;\n\n        return coordSys.dataToPoint(stackedData);\n    }\n\n    // function convertToIntId(newIdList, oldIdList) {\n    //     // Generate int id instead of string id.\n    //     // Compare string maybe slow in score function of arrDiff\n\n    //     // Assume id in idList are all unique\n    //     var idIndicesMap = {};\n    //     var idx = 0;\n    //     for (var i = 0; i < newIdList.length; i++) {\n    //         idIndicesMap[newIdList[i]] = idx;\n    //         newIdList[i] = idx++;\n    //     }\n    //     for (var i = 0; i < oldIdList.length; i++) {\n    //         var oldId = oldIdList[i];\n    //         // Same with newIdList\n    //         if (idIndicesMap[oldId]) {\n    //             oldIdList[i] = idIndicesMap[oldId];\n    //         }\n    //         else {\n    //             oldIdList[i] = idx++;\n    //         }\n    //     }\n    // }\n\n    function diffData(oldData, newData) {\n        var diffResult = [];\n\n        newData.diff(oldData)\n            .add(function (idx) {\n                diffResult.push({cmd: '+', idx: idx});\n            })\n            .update(function (newIdx, oldIdx) {\n                diffResult.push({cmd: '=', idx: oldIdx, idx1: newIdx});\n            })\n            .remove(function (idx) {\n                diffResult.push({cmd: '-', idx: idx});\n            })\n            .execute();\n\n        return diffResult;\n    }\n\n    module.exports = function (\n        oldData, newData,\n        oldStackedOnPoints, newStackedOnPoints,\n        oldCoordSys, newCoordSys\n    ) {\n        var diff = diffData(oldData, newData);\n\n        // var newIdList = newData.mapArray(newData.getId);\n        // var oldIdList = oldData.mapArray(oldData.getId);\n\n        // convertToIntId(newIdList, oldIdList);\n\n        // // FIXME One data ?\n        // diff = arrayDiff(oldIdList, newIdList);\n\n        var currPoints = [];\n        var nextPoints = [];\n        // Points for stacking base line\n        var currStackedPoints = [];\n        var nextStackedPoints = [];\n\n        var status = [];\n        var sortedIndices = [];\n        var rawIndices = [];\n        var dims = newCoordSys.dimensions;\n        for (var i = 0; i < diff.length; i++) {\n            var diffItem = diff[i];\n            var pointAdded = true;\n\n            // FIXME, animation is not so perfect when dataZoom window moves fast\n            // Which is in case remvoing or add more than one data in the tail or head\n            switch (diffItem.cmd) {\n                case '=':\n                    var currentPt = oldData.getItemLayout(diffItem.idx);\n                    var nextPt = newData.getItemLayout(diffItem.idx1);\n                    // If previous data is NaN, use next point directly\n                    if (isNaN(currentPt[0]) || isNaN(currentPt[1])) {\n                        currentPt = nextPt.slice();\n                    }\n                    currPoints.push(currentPt);\n                    nextPoints.push(nextPt);\n\n                    currStackedPoints.push(oldStackedOnPoints[diffItem.idx]);\n                    nextStackedPoints.push(newStackedOnPoints[diffItem.idx1]);\n\n                    rawIndices.push(newData.getRawIndex(diffItem.idx1));\n                    break;\n                case '+':\n                    var idx = diffItem.idx;\n                    currPoints.push(\n                        oldCoordSys.dataToPoint([\n                            newData.get(dims[0], idx, true), newData.get(dims[1], idx, true)\n                        ])\n                    );\n\n                    nextPoints.push(newData.getItemLayout(idx).slice());\n\n                    currStackedPoints.push(\n                        getStackedOnPoint(oldCoordSys, newData, idx)\n                    );\n                    nextStackedPoints.push(newStackedOnPoints[idx]);\n\n                    rawIndices.push(newData.getRawIndex(idx));\n                    break;\n                case '-':\n                    var idx = diffItem.idx;\n                    var rawIndex = oldData.getRawIndex(idx);\n                    // Data is replaced. In the case of dynamic data queue\n                    // FIXME FIXME FIXME\n                    if (rawIndex !== idx) {\n                        currPoints.push(oldData.getItemLayout(idx));\n                        nextPoints.push(newCoordSys.dataToPoint([\n                            oldData.get(dims[0], idx, true), oldData.get(dims[1], idx, true)\n                        ]));\n\n                        currStackedPoints.push(oldStackedOnPoints[idx]);\n                        nextStackedPoints.push(\n                            getStackedOnPoint(\n                                newCoordSys, oldData, idx\n                            )\n                        );\n\n                        rawIndices.push(rawIndex);\n                    }\n                    else {\n                        pointAdded = false;\n                    }\n            }\n\n            // Original indices\n            if (pointAdded) {\n                status.push(diffItem);\n                sortedIndices.push(sortedIndices.length);\n            }\n        }\n\n        // Diff result may be crossed if all items are changed\n        // Sort by data index\n        sortedIndices.sort(function (a, b) {\n            return rawIndices[a] - rawIndices[b];\n        });\n\n        var sortedCurrPoints = [];\n        var sortedNextPoints = [];\n\n        var sortedCurrStackedPoints = [];\n        var sortedNextStackedPoints = [];\n\n        var sortedStatus = [];\n        for (var i = 0; i < sortedIndices.length; i++) {\n            var idx = sortedIndices[i];\n            sortedCurrPoints[i] = currPoints[idx];\n            sortedNextPoints[i] = nextPoints[idx];\n\n            sortedCurrStackedPoints[i] = currStackedPoints[idx];\n            sortedNextStackedPoints[i] = nextStackedPoints[idx];\n\n            sortedStatus[i] = status[idx];\n        }\n\n        return {\n            current: sortedCurrPoints,\n            next: sortedNextPoints,\n\n            stackedOnCurrent: sortedCurrStackedPoints,\n            stackedOnNext: sortedNextStackedPoints,\n\n            status: sortedStatus\n        };\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/chart/line/lineAnimationDiff.js\n// module id = 545\n// module chunks = 0 1","// Poly path support NaN point\n\n\n    var Path = require('zrender/lib/graphic/Path');\n    var vec2 = require('zrender/lib/core/vector');\n\n    var vec2Min = vec2.min;\n    var vec2Max = vec2.max;\n\n    var scaleAndAdd = vec2.scaleAndAdd;\n    var v2Copy = vec2.copy;\n\n    // Temporary variable\n    var v = [];\n    var cp0 = [];\n    var cp1 = [];\n\n    function isPointNull(p) {\n        return isNaN(p[0]) || isNaN(p[1]);\n    }\n\n    function drawSegment(\n        ctx, points, start, segLen, allLen,\n        dir, smoothMin, smoothMax, smooth, smoothMonotone, connectNulls\n    ) {\n        var prevIdx = 0;\n        var idx = start;\n        for (var k = 0; k < segLen; k++) {\n            var p = points[idx];\n            if (idx >= allLen || idx < 0) {\n                break;\n            }\n            if (isPointNull(p)) {\n                if (connectNulls) {\n                    idx += dir;\n                    continue;\n                }\n                break;\n            }\n\n            if (idx === start) {\n                ctx[dir > 0 ? 'moveTo' : 'lineTo'](p[0], p[1]);\n                v2Copy(cp0, p);\n            }\n            else {\n                if (smooth > 0) {\n                    var nextIdx = idx + dir;\n                    var nextP = points[nextIdx];\n                    if (connectNulls) {\n                        // Find next point not null\n                        while (nextP && isPointNull(points[nextIdx])) {\n                            nextIdx += dir;\n                            nextP = points[nextIdx];\n                        }\n                    }\n\n                    var ratioNextSeg = 0.5;\n                    var prevP = points[prevIdx];\n                    var nextP = points[nextIdx];\n                    // Last point\n                    if (!nextP || isPointNull(nextP)) {\n                        v2Copy(cp1, p);\n                    }\n                    else {\n                        // If next data is null in not connect case\n                        if (isPointNull(nextP) && !connectNulls) {\n                            nextP = p;\n                        }\n\n                        vec2.sub(v, nextP, prevP);\n\n                        var lenPrevSeg;\n                        var lenNextSeg;\n                        if (smoothMonotone === 'x' || smoothMonotone === 'y') {\n                            var dim = smoothMonotone === 'x' ? 0 : 1;\n                            lenPrevSeg = Math.abs(p[dim] - prevP[dim]);\n                            lenNextSeg = Math.abs(p[dim] - nextP[dim]);\n                        }\n                        else {\n                            lenPrevSeg = vec2.dist(p, prevP);\n                            lenNextSeg = vec2.dist(p, nextP);\n                        }\n\n                        // Use ratio of seg length\n                        ratioNextSeg = lenNextSeg / (lenNextSeg + lenPrevSeg);\n\n                        scaleAndAdd(cp1, p, v, -smooth * (1 - ratioNextSeg));\n                    }\n                    // Smooth constraint\n                    vec2Min(cp0, cp0, smoothMax);\n                    vec2Max(cp0, cp0, smoothMin);\n                    vec2Min(cp1, cp1, smoothMax);\n                    vec2Max(cp1, cp1, smoothMin);\n\n                    ctx.bezierCurveTo(\n                        cp0[0], cp0[1],\n                        cp1[0], cp1[1],\n                        p[0], p[1]\n                    );\n                    // cp0 of next segment\n                    scaleAndAdd(cp0, p, v, smooth * ratioNextSeg);\n                }\n                else {\n                    ctx.lineTo(p[0], p[1]);\n                }\n            }\n\n            prevIdx = idx;\n            idx += dir;\n        }\n\n        return k;\n    }\n\n    function getBoundingBox(points, smoothConstraint) {\n        var ptMin = [Infinity, Infinity];\n        var ptMax = [-Infinity, -Infinity];\n        if (smoothConstraint) {\n            for (var i = 0; i < points.length; i++) {\n                var pt = points[i];\n                if (pt[0] < ptMin[0]) { ptMin[0] = pt[0]; }\n                if (pt[1] < ptMin[1]) { ptMin[1] = pt[1]; }\n                if (pt[0] > ptMax[0]) { ptMax[0] = pt[0]; }\n                if (pt[1] > ptMax[1]) { ptMax[1] = pt[1]; }\n            }\n        }\n        return {\n            min: smoothConstraint ? ptMin : ptMax,\n            max: smoothConstraint ? ptMax : ptMin\n        };\n    }\n\n    module.exports = {\n\n        Polyline: Path.extend({\n\n            type: 'ec-polyline',\n\n            shape: {\n                points: [],\n\n                smooth: 0,\n\n                smoothConstraint: true,\n\n                smoothMonotone: null,\n\n                connectNulls: false\n            },\n\n            style: {\n                fill: null,\n\n                stroke: '#000'\n            },\n\n            buildPath: function (ctx, shape) {\n                var points = shape.points;\n\n                var i = 0;\n                var len = points.length;\n\n                var result = getBoundingBox(points, shape.smoothConstraint);\n\n                if (shape.connectNulls) {\n                    // Must remove first and last null values avoid draw error in polygon\n                    for (; len > 0; len--) {\n                        if (!isPointNull(points[len - 1])) {\n                            break;\n                        }\n                    }\n                    for (; i < len; i++) {\n                        if (!isPointNull(points[i])) {\n                            break;\n                        }\n                    }\n                }\n                while (i < len) {\n                    i += drawSegment(\n                        ctx, points, i, len, len,\n                        1, result.min, result.max, shape.smooth,\n                        shape.smoothMonotone, shape.connectNulls\n                    ) + 1;\n                }\n            }\n        }),\n\n        Polygon: Path.extend({\n\n            type: 'ec-polygon',\n\n            shape: {\n                points: [],\n\n                // Offset between stacked base points and points\n                stackedOnPoints: [],\n\n                smooth: 0,\n\n                stackedOnSmooth: 0,\n\n                smoothConstraint: true,\n\n                smoothMonotone: null,\n\n                connectNulls: false\n            },\n\n            buildPath: function (ctx, shape) {\n                var points = shape.points;\n                var stackedOnPoints = shape.stackedOnPoints;\n\n                var i = 0;\n                var len = points.length;\n                var smoothMonotone = shape.smoothMonotone;\n                var bbox = getBoundingBox(points, shape.smoothConstraint);\n                var stackedOnBBox = getBoundingBox(stackedOnPoints, shape.smoothConstraint);\n\n                if (shape.connectNulls) {\n                    // Must remove first and last null values avoid draw error in polygon\n                    for (; len > 0; len--) {\n                        if (!isPointNull(points[len - 1])) {\n                            break;\n                        }\n                    }\n                    for (; i < len; i++) {\n                        if (!isPointNull(points[i])) {\n                            break;\n                        }\n                    }\n                }\n                while (i < len) {\n                    var k = drawSegment(\n                        ctx, points, i, len, len,\n                        1, bbox.min, bbox.max, shape.smooth,\n                        smoothMonotone, shape.connectNulls\n                    );\n                    drawSegment(\n                        ctx, stackedOnPoints, i + k - 1, k, len,\n                        -1, stackedOnBBox.min, stackedOnBBox.max, shape.stackedOnSmooth,\n                        smoothMonotone, shape.connectNulls\n                    );\n                    i += k + 1;\n\n                    ctx.closePath();\n                }\n            }\n        })\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/chart/line/poly.js\n// module id = 546\n// module chunks = 0 1","'use strict';\n// TODO boundaryGap\n\n\n    require('../coord/cartesian/AxisModel');\n\n    require('./axis/AxisView');\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/axis.js\n// module id = 547\n// module chunks = 0 1","\n\n    var zrUtil = require('zrender/lib/core/util');\n    var formatUtil = require('../../util/format');\n    var graphic = require('../../util/graphic');\n    var Model = require('../../model/Model');\n    var numberUtil = require('../../util/number');\n    var remRadian = numberUtil.remRadian;\n    var isRadianAroundZero = numberUtil.isRadianAroundZero;\n    var vec2 = require('zrender/lib/core/vector');\n    var v2ApplyTransform = vec2.applyTransform;\n    var retrieve = zrUtil.retrieve;\n\n    var PI = Math.PI;\n\n    function makeAxisEventDataBase(axisModel) {\n        var eventData = {\n            componentType: axisModel.mainType\n        };\n        eventData[axisModel.mainType + 'Index'] = axisModel.componentIndex;\n        return eventData;\n    }\n\n    /**\n     * A final axis is translated and rotated from a \"standard axis\".\n     * So opt.position and opt.rotation is required.\n     *\n     * A standard axis is and axis from [0, 0] to [0, axisExtent[1]],\n     * for example: (0, 0) ------------> (0, 50)\n     *\n     * nameDirection or tickDirection or labelDirection is 1 means tick\n     * or label is below the standard axis, whereas is -1 means above\n     * the standard axis. labelOffset means offset between label and axis,\n     * which is useful when 'onZero', where axisLabel is in the grid and\n     * label in outside grid.\n     *\n     * Tips: like always,\n     * positive rotation represents anticlockwise, and negative rotation\n     * represents clockwise.\n     * The direction of position coordinate is the same as the direction\n     * of screen coordinate.\n     *\n     * Do not need to consider axis 'inverse', which is auto processed by\n     * axis extent.\n     *\n     * @param {module:zrender/container/Group} group\n     * @param {Object} axisModel\n     * @param {Object} opt Standard axis parameters.\n     * @param {Array.<number>} opt.position [x, y]\n     * @param {number} opt.rotation by radian\n     * @param {number} [opt.nameDirection=1] 1 or -1 Used when nameLocation is 'middle'.\n     * @param {number} [opt.tickDirection=1] 1 or -1\n     * @param {number} [opt.labelDirection=1] 1 or -1\n     * @param {number} [opt.labelOffset=0] Usefull when onZero.\n     * @param {string} [opt.axisLabelShow] default get from axisModel.\n     * @param {string} [opt.axisName] default get from axisModel.\n     * @param {number} [opt.axisNameAvailableWidth]\n     * @param {number} [opt.labelRotation] by degree, default get from axisModel.\n     * @param {number} [opt.labelInterval] Default label interval when label\n     *                                     interval from model is null or 'auto'.\n     * @param {number} [opt.strokeContainThreshold] Default label interval when label\n     */\n    var AxisBuilder = function (axisModel, opt) {\n\n        /**\n         * @readOnly\n         */\n        this.opt = opt;\n\n        /**\n         * @readOnly\n         */\n        this.axisModel = axisModel;\n\n        // Default value\n        zrUtil.defaults(\n            opt,\n            {\n                labelOffset: 0,\n                nameDirection: 1,\n                tickDirection: 1,\n                labelDirection: 1,\n                silent: true\n            }\n        );\n\n        /**\n         * @readOnly\n         */\n        this.group = new graphic.Group();\n\n        // FIXME Not use a seperate text group?\n        var dumbGroup = new graphic.Group({\n            position: opt.position.slice(),\n            rotation: opt.rotation\n        });\n\n        // this.group.add(dumbGroup);\n        // this._dumbGroup = dumbGroup;\n\n        dumbGroup.updateTransform();\n        this._transform = dumbGroup.transform;\n\n        this._dumbGroup = dumbGroup;\n    };\n\n    AxisBuilder.prototype = {\n\n        constructor: AxisBuilder,\n\n        hasBuilder: function (name) {\n            return !!builders[name];\n        },\n\n        add: function (name) {\n            builders[name].call(this);\n        },\n\n        getGroup: function () {\n            return this.group;\n        }\n\n    };\n\n    var builders = {\n\n        /**\n         * @private\n         */\n        axisLine: function () {\n            var opt = this.opt;\n            var axisModel = this.axisModel;\n\n            if (!axisModel.get('axisLine.show')) {\n                return;\n            }\n\n            var extent = this.axisModel.axis.getExtent();\n\n            var matrix = this._transform;\n            var pt1 = [extent[0], 0];\n            var pt2 = [extent[1], 0];\n            if (matrix) {\n                v2ApplyTransform(pt1, pt1, matrix);\n                v2ApplyTransform(pt2, pt2, matrix);\n            }\n\n            this.group.add(new graphic.Line(graphic.subPixelOptimizeLine({\n\n                // Id for animation\n                anid: 'line',\n\n                shape: {\n                    x1: pt1[0],\n                    y1: pt1[1],\n                    x2: pt2[0],\n                    y2: pt2[1]\n                },\n                style: zrUtil.extend(\n                    {lineCap: 'round'},\n                    axisModel.getModel('axisLine.lineStyle').getLineStyle()\n                ),\n                strokeContainThreshold: opt.strokeContainThreshold || 5,\n                silent: true,\n                z2: 1\n            })));\n        },\n\n        /**\n         * @private\n         */\n        axisTick: function () {\n            var axisModel = this.axisModel;\n            var axis = axisModel.axis;\n\n            if (!axisModel.get('axisTick.show') || axis.isBlank()) {\n                return;\n            }\n\n            var tickModel = axisModel.getModel('axisTick');\n            var opt = this.opt;\n\n            var lineStyleModel = tickModel.getModel('lineStyle');\n            var tickLen = tickModel.get('length');\n\n            var tickInterval = getInterval(tickModel, opt.labelInterval);\n            var ticksCoords = axis.getTicksCoords(tickModel.get('alignWithLabel'));\n            var ticks = axis.scale.getTicks();\n\n            var pt1 = [];\n            var pt2 = [];\n            var matrix = this._transform;\n\n            for (var i = 0; i < ticksCoords.length; i++) {\n                // Only ordinal scale support tick interval\n                if (ifIgnoreOnTick(axis, i, tickInterval)) {\n                     continue;\n                }\n\n                var tickCoord = ticksCoords[i];\n\n                pt1[0] = tickCoord;\n                pt1[1] = 0;\n                pt2[0] = tickCoord;\n                pt2[1] = opt.tickDirection * tickLen;\n\n                if (matrix) {\n                    v2ApplyTransform(pt1, pt1, matrix);\n                    v2ApplyTransform(pt2, pt2, matrix);\n                }\n                // Tick line, Not use group transform to have better line draw\n                this.group.add(new graphic.Line(graphic.subPixelOptimizeLine({\n\n                    // Id for animation\n                    anid: 'tick_' + ticks[i],\n\n                    shape: {\n                        x1: pt1[0],\n                        y1: pt1[1],\n                        x2: pt2[0],\n                        y2: pt2[1]\n                    },\n                    style: zrUtil.defaults(\n                        lineStyleModel.getLineStyle(),\n                        {\n                            stroke: axisModel.get('axisLine.lineStyle.color')\n                        }\n                    ),\n                    z2: 2,\n                    silent: true\n                })));\n            }\n        },\n\n        /**\n         * @param {module:echarts/coord/cartesian/AxisModel} axisModel\n         * @param {module:echarts/coord/cartesian/GridModel} gridModel\n         * @private\n         */\n        axisLabel: function () {\n            var opt = this.opt;\n            var axisModel = this.axisModel;\n            var axis = axisModel.axis;\n            var show = retrieve(opt.axisLabelShow, axisModel.get('axisLabel.show'));\n\n            if (!show || axis.isBlank()) {\n                return;\n            }\n\n            var labelModel = axisModel.getModel('axisLabel');\n            var textStyleModel = labelModel.getModel('textStyle');\n            var labelMargin = labelModel.get('margin');\n            var ticks = axis.scale.getTicks();\n            var labels = axisModel.getFormattedLabels();\n\n            // Special label rotate.\n            var labelRotation = retrieve(opt.labelRotation, labelModel.get('rotate')) || 0;\n            // To radian.\n            labelRotation = labelRotation * PI / 180;\n\n            var labelLayout = innerTextLayout(opt, labelRotation, opt.labelDirection);\n            var categoryData = axisModel.get('data');\n\n            var textEls = [];\n            var silent = isSilent(axisModel);\n            var triggerEvent = axisModel.get('triggerEvent');\n\n            zrUtil.each(ticks, function (tickVal, index) {\n                if (ifIgnoreOnTick(axis, index, opt.labelInterval)) {\n                     return;\n                }\n\n                var itemTextStyleModel = textStyleModel;\n                if (categoryData && categoryData[tickVal] && categoryData[tickVal].textStyle) {\n                    itemTextStyleModel = new Model(\n                        categoryData[tickVal].textStyle, textStyleModel, axisModel.ecModel\n                    );\n                }\n                var textColor = itemTextStyleModel.getTextColor()\n                    || axisModel.get('axisLine.lineStyle.color');\n\n                var tickCoord = axis.dataToCoord(tickVal);\n                var pos = [\n                    tickCoord,\n                    opt.labelOffset + opt.labelDirection * labelMargin\n                ];\n                var labelBeforeFormat = axis.scale.getLabel(tickVal);\n\n                var textEl = new graphic.Text({\n\n                    // Id for animation\n                    anid: 'label_' + tickVal,\n\n                    style: {\n                        text: labels[index],\n                        textAlign: itemTextStyleModel.get('align', true) || labelLayout.textAlign,\n                        textVerticalAlign: itemTextStyleModel.get('baseline', true) || labelLayout.verticalAlign,\n                        textFont: itemTextStyleModel.getFont(),\n                        fill: typeof textColor === 'function' ? textColor(labelBeforeFormat) : textColor\n                    },\n                    position: pos,\n                    rotation: labelLayout.rotation,\n                    silent: silent,\n                    z2: 10\n                });\n\n                // Pack data for mouse event\n                if (triggerEvent) {\n                    textEl.eventData = makeAxisEventDataBase(axisModel);\n                    textEl.eventData.targetType = 'axisLabel';\n                    textEl.eventData.value = labelBeforeFormat;\n                }\n\n                // FIXME\n                this._dumbGroup.add(textEl);\n                textEl.updateTransform();\n\n                textEls.push(textEl);\n                this.group.add(textEl);\n\n                textEl.decomposeTransform();\n\n            }, this);\n\n            function isTwoLabelOverlapped(current, next) {\n                var firstRect = current && current.getBoundingRect().clone();\n                var nextRect = next && next.getBoundingRect().clone();\n                if (firstRect && nextRect) {\n                    firstRect.applyTransform(current.getLocalTransform());\n                    nextRect.applyTransform(next.getLocalTransform());\n                    return firstRect.intersect(nextRect);\n                }\n            }\n\n            // If min or max are user set, we need to check\n            // If the tick on min(max) are overlap on their neighbour tick\n            // If they are overlapped, we need to hide the min(max) tick label\n            if (axisModel.getMin() != null) {\n                var firstLabel = textEls[0];\n                var nextLabel = textEls[1];\n                if (isTwoLabelOverlapped(firstLabel, nextLabel)) {\n                    firstLabel.ignore = true;\n                }\n            }\n            if (axisModel.getMax() != null) {\n                var lastLabel = textEls[textEls.length - 1];\n                var prevLabel = textEls[textEls.length - 2];\n                if (isTwoLabelOverlapped(prevLabel, lastLabel)) {\n                    lastLabel.ignore = true;\n                }\n            }\n        },\n\n        /**\n         * @private\n         */\n        axisName: function () {\n            var opt = this.opt;\n            var axisModel = this.axisModel;\n            var name = retrieve(opt.axisName, axisModel.get('name'));\n\n            if (!name) {\n                return;\n            }\n\n            var nameLocation = axisModel.get('nameLocation');\n            var nameDirection = opt.nameDirection;\n            var textStyleModel = axisModel.getModel('nameTextStyle');\n            var gap = axisModel.get('nameGap') || 0;\n\n            var extent = this.axisModel.axis.getExtent();\n            var gapSignal = extent[0] > extent[1] ? -1 : 1;\n            var pos = [\n                nameLocation === 'start'\n                    ? extent[0] - gapSignal * gap\n                    : nameLocation === 'end'\n                    ? extent[1] + gapSignal * gap\n                    : (extent[0] + extent[1]) / 2, // 'middle'\n                // Reuse labelOffset.\n                nameLocation === 'middle' ? opt.labelOffset + nameDirection * gap : 0\n            ];\n\n            var labelLayout;\n\n            var nameRotation = axisModel.get('nameRotate');\n            if (nameRotation != null) {\n                nameRotation = nameRotation * PI / 180; // To radian.\n            }\n\n            var axisNameAvailableWidth;\n\n            if (nameLocation === 'middle') {\n                labelLayout = innerTextLayout(\n                    opt,\n                    nameRotation != null ? nameRotation : opt.rotation, // Adapt to axis.\n                    nameDirection\n                );\n            }\n            else {\n                labelLayout = endTextLayout(\n                    opt, nameLocation, nameRotation || 0, extent\n                );\n\n                axisNameAvailableWidth = opt.axisNameAvailableWidth;\n                if (axisNameAvailableWidth != null) {\n                    axisNameAvailableWidth = Math.abs(\n                        axisNameAvailableWidth / Math.sin(labelLayout.rotation)\n                    );\n                    !isFinite(axisNameAvailableWidth) && (axisNameAvailableWidth = null);\n                }\n            }\n\n            var textFont = textStyleModel.getFont();\n\n            var truncateOpt = axisModel.get('nameTruncate', true) || {};\n            var ellipsis = truncateOpt.ellipsis;\n            var maxWidth = retrieve(truncateOpt.maxWidth, axisNameAvailableWidth);\n            var truncatedText = (ellipsis != null && maxWidth != null)\n                ? formatUtil.truncateText(\n                    name, maxWidth, textFont, ellipsis,\n                    {minChar: 2, placeholder: truncateOpt.placeholder}\n                )\n                : name;\n\n            var tooltipOpt = axisModel.get('tooltip', true);\n\n            var mainType = axisModel.mainType;\n            var formatterParams = {\n                componentType: mainType,\n                name: name,\n                $vars: ['name']\n            };\n            formatterParams[mainType + 'Index'] = axisModel.componentIndex;\n\n            var textEl = new graphic.Text({\n\n                // Id for animation\n                anid: 'name',\n\n                __fullText: name,\n                __truncatedText: truncatedText,\n\n                style: {\n                    text: truncatedText,\n                    textFont: textFont,\n                    fill: textStyleModel.getTextColor()\n                        || axisModel.get('axisLine.lineStyle.color'),\n                    textAlign: labelLayout.textAlign,\n                    textVerticalAlign: labelLayout.verticalAlign\n                },\n                position: pos,\n                rotation: labelLayout.rotation,\n                silent: isSilent(axisModel),\n                z2: 1,\n                tooltip: (tooltipOpt && tooltipOpt.show)\n                    ? zrUtil.extend({\n                        content: name,\n                        formatter: function () {\n                            return name;\n                        },\n                        formatterParams: formatterParams\n                    }, tooltipOpt)\n                    : null\n            });\n\n            if (axisModel.get('triggerEvent')) {\n                textEl.eventData = makeAxisEventDataBase(axisModel);\n                textEl.eventData.targetType = 'axisName';\n                textEl.eventData.name = name;\n            }\n\n            // FIXME\n            this._dumbGroup.add(textEl);\n            textEl.updateTransform();\n\n            this.group.add(textEl);\n\n            textEl.decomposeTransform();\n        }\n\n    };\n\n    /**\n     * @inner\n     */\n    function innerTextLayout(opt, textRotation, direction) {\n        var rotationDiff = remRadian(textRotation - opt.rotation);\n        var textAlign;\n        var verticalAlign;\n\n        if (isRadianAroundZero(rotationDiff)) { // Label is parallel with axis line.\n            verticalAlign = direction > 0 ? 'top' : 'bottom';\n            textAlign = 'center';\n        }\n        else if (isRadianAroundZero(rotationDiff - PI)) { // Label is inverse parallel with axis line.\n            verticalAlign = direction > 0 ? 'bottom' : 'top';\n            textAlign = 'center';\n        }\n        else {\n            verticalAlign = 'middle';\n\n            if (rotationDiff > 0 && rotationDiff < PI) {\n                textAlign = direction > 0 ? 'right' : 'left';\n            }\n            else {\n                textAlign = direction > 0 ? 'left' : 'right';\n            }\n        }\n\n        return {\n            rotation: rotationDiff,\n            textAlign: textAlign,\n            verticalAlign: verticalAlign\n        };\n    }\n\n    /**\n     * @inner\n     */\n    function endTextLayout(opt, textPosition, textRotate, extent) {\n        var rotationDiff = remRadian(textRotate - opt.rotation);\n        var textAlign;\n        var verticalAlign;\n        var inverse = extent[0] > extent[1];\n        var onLeft = (textPosition === 'start' && !inverse)\n            || (textPosition !== 'start' && inverse);\n\n        if (isRadianAroundZero(rotationDiff - PI / 2)) {\n            verticalAlign = onLeft ? 'bottom' : 'top';\n            textAlign = 'center';\n        }\n        else if (isRadianAroundZero(rotationDiff - PI * 1.5)) {\n            verticalAlign = onLeft ? 'top' : 'bottom';\n            textAlign = 'center';\n        }\n        else {\n            verticalAlign = 'middle';\n            if (rotationDiff < PI * 1.5 && rotationDiff > PI / 2) {\n                textAlign = onLeft ? 'left' : 'right';\n            }\n            else {\n                textAlign = onLeft ? 'right' : 'left';\n            }\n        }\n\n        return {\n            rotation: rotationDiff,\n            textAlign: textAlign,\n            verticalAlign: verticalAlign\n        };\n    }\n\n    /**\n     * @inner\n     */\n    function isSilent(axisModel) {\n        var tooltipOpt = axisModel.get('tooltip');\n        return axisModel.get('silent')\n            // Consider mouse cursor, add these restrictions.\n            || !(\n                axisModel.get('triggerEvent') || (tooltipOpt && tooltipOpt.show)\n            );\n    }\n\n    /**\n     * @static\n     */\n    var ifIgnoreOnTick = AxisBuilder.ifIgnoreOnTick = function (axis, i, interval) {\n        var rawTick;\n        var scale = axis.scale;\n        return scale.type === 'ordinal'\n            && (\n                typeof interval === 'function'\n                    ? (\n                        rawTick = scale.getTicks()[i],\n                        !interval(rawTick, scale.getLabel(rawTick))\n                    )\n                    : i % (interval + 1)\n            );\n    };\n\n    /**\n     * @static\n     */\n    var getInterval = AxisBuilder.getInterval = function (model, labelInterval) {\n        var interval = model.get('interval');\n        if (interval == null || interval == 'auto') {\n            interval = labelInterval;\n        }\n        return interval;\n    };\n\n    module.exports = AxisBuilder;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/axis/AxisBuilder.js\n// module id = 548\n// module chunks = 0 1","\n\n    var zrUtil = require('zrender/lib/core/util');\n    var graphic = require('../../util/graphic');\n    var AxisBuilder = require('./AxisBuilder');\n    var ifIgnoreOnTick = AxisBuilder.ifIgnoreOnTick;\n    var getInterval = AxisBuilder.getInterval;\n\n    var axisBuilderAttrs = [\n        'axisLine', 'axisLabel', 'axisTick', 'axisName'\n    ];\n    var selfBuilderAttrs = [\n        'splitArea', 'splitLine'\n    ];\n\n    // function getAlignWithLabel(model, axisModel) {\n    //     var alignWithLabel = model.get('alignWithLabel');\n    //     if (alignWithLabel === 'auto') {\n    //         alignWithLabel = axisModel.get('axisTick.alignWithLabel');\n    //     }\n    //     return alignWithLabel;\n    // }\n\n    var AxisView = require('../../echarts').extendComponentView({\n\n        type: 'axis',\n\n        render: function (axisModel, ecModel) {\n\n            this.group.removeAll();\n\n            var oldAxisGroup = this._axisGroup;\n            this._axisGroup = new graphic.Group();\n\n            this.group.add(this._axisGroup);\n\n            if (!axisModel.get('show')) {\n                return;\n            }\n\n            var gridModel = axisModel.getCoordSysModel();\n\n            var layout = layoutAxis(gridModel, axisModel);\n\n            var axisBuilder = new AxisBuilder(axisModel, layout);\n\n            zrUtil.each(axisBuilderAttrs, axisBuilder.add, axisBuilder);\n\n            this._axisGroup.add(axisBuilder.getGroup());\n\n            zrUtil.each(selfBuilderAttrs, function (name) {\n                if (axisModel.get(name + '.show')) {\n                    this['_' + name](axisModel, gridModel, layout.labelInterval);\n                }\n            }, this);\n\n            graphic.groupTransition(oldAxisGroup, this._axisGroup, axisModel);\n        },\n\n        /**\n         * @param {module:echarts/coord/cartesian/AxisModel} axisModel\n         * @param {module:echarts/coord/cartesian/GridModel} gridModel\n         * @param {number|Function} labelInterval\n         * @private\n         */\n        _splitLine: function (axisModel, gridModel, labelInterval) {\n            var axis = axisModel.axis;\n\n            if (axis.isBlank()) {\n                return;\n            }\n\n            var splitLineModel = axisModel.getModel('splitLine');\n            var lineStyleModel = splitLineModel.getModel('lineStyle');\n            var lineColors = lineStyleModel.get('color');\n\n            var lineInterval = getInterval(splitLineModel, labelInterval);\n\n            lineColors = zrUtil.isArray(lineColors) ? lineColors : [lineColors];\n\n            var gridRect = gridModel.coordinateSystem.getRect();\n            var isHorizontal = axis.isHorizontal();\n\n            var lineCount = 0;\n\n            var ticksCoords = axis.getTicksCoords(\n                // splitLineModel.get('alignWithLabel')\n            );\n            var ticks = axis.scale.getTicks();\n\n            var p1 = [];\n            var p2 = [];\n            // Simple optimization\n            // Batching the lines if color are the same\n            var lineStyle = lineStyleModel.getLineStyle();\n            for (var i = 0; i < ticksCoords.length; i++) {\n                if (ifIgnoreOnTick(axis, i, lineInterval)) {\n                    continue;\n                }\n\n                var tickCoord = axis.toGlobalCoord(ticksCoords[i]);\n\n                if (isHorizontal) {\n                    p1[0] = tickCoord;\n                    p1[1] = gridRect.y;\n                    p2[0] = tickCoord;\n                    p2[1] = gridRect.y + gridRect.height;\n                }\n                else {\n                    p1[0] = gridRect.x;\n                    p1[1] = tickCoord;\n                    p2[0] = gridRect.x + gridRect.width;\n                    p2[1] = tickCoord;\n                }\n\n                var colorIndex = (lineCount++) % lineColors.length;\n                this._axisGroup.add(new graphic.Line(graphic.subPixelOptimizeLine({\n                    anid: 'line_' + ticks[i],\n\n                    shape: {\n                        x1: p1[0],\n                        y1: p1[1],\n                        x2: p2[0],\n                        y2: p2[1]\n                    },\n                    style: zrUtil.defaults({\n                        stroke: lineColors[colorIndex]\n                    }, lineStyle),\n                    silent: true\n                })));\n            }\n        },\n\n        /**\n         * @param {module:echarts/coord/cartesian/AxisModel} axisModel\n         * @param {module:echarts/coord/cartesian/GridModel} gridModel\n         * @param {number|Function} labelInterval\n         * @private\n         */\n        _splitArea: function (axisModel, gridModel, labelInterval) {\n            var axis = axisModel.axis;\n\n            if (axis.isBlank()) {\n                return;\n            }\n\n            var splitAreaModel = axisModel.getModel('splitArea');\n            var areaStyleModel = splitAreaModel.getModel('areaStyle');\n            var areaColors = areaStyleModel.get('color');\n\n            var gridRect = gridModel.coordinateSystem.getRect();\n\n            var ticksCoords = axis.getTicksCoords(\n                // splitAreaModel.get('alignWithLabel')\n            );\n            var ticks = axis.scale.getTicks();\n\n            var prevX = axis.toGlobalCoord(ticksCoords[0]);\n            var prevY = axis.toGlobalCoord(ticksCoords[0]);\n\n            var count = 0;\n\n            var areaInterval = getInterval(splitAreaModel, labelInterval);\n\n            var areaStyle = areaStyleModel.getAreaStyle();\n            areaColors = zrUtil.isArray(areaColors) ? areaColors : [areaColors];\n\n            for (var i = 1; i < ticksCoords.length; i++) {\n                if (ifIgnoreOnTick(axis, i, areaInterval)) {\n                    continue;\n                }\n\n                var tickCoord = axis.toGlobalCoord(ticksCoords[i]);\n\n                var x;\n                var y;\n                var width;\n                var height;\n                if (axis.isHorizontal()) {\n                    x = prevX;\n                    y = gridRect.y;\n                    width = tickCoord - x;\n                    height = gridRect.height;\n                }\n                else {\n                    x = gridRect.x;\n                    y = prevY;\n                    width = gridRect.width;\n                    height = tickCoord - y;\n                }\n\n                var colorIndex = (count++) % areaColors.length;\n                this._axisGroup.add(new graphic.Rect({\n                    anid: 'area_' + ticks[i],\n\n                    shape: {\n                        x: x,\n                        y: y,\n                        width: width,\n                        height: height\n                    },\n                    style: zrUtil.defaults({\n                        fill: areaColors[colorIndex]\n                    }, areaStyle),\n                    silent: true\n                }));\n\n                prevX = x + width;\n                prevY = y + height;\n            }\n        }\n    });\n\n    AxisView.extend({\n        type: 'xAxis'\n    });\n    AxisView.extend({\n        type: 'yAxis'\n    });\n\n    /**\n     * @inner\n     */\n    function layoutAxis(gridModel, axisModel) {\n        var grid = gridModel.coordinateSystem;\n        var axis = axisModel.axis;\n        var layout = {};\n\n        var rawAxisPosition = axis.position;\n        var axisPosition = axis.onZero ? 'onZero' : rawAxisPosition;\n        var axisDim = axis.dim;\n\n        // [left, right, top, bottom]\n        var rect = grid.getRect();\n        var rectBound = [rect.x, rect.x + rect.width, rect.y, rect.y + rect.height];\n\n        var axisOffset = axisModel.get('offset') || 0;\n\n        var posMap = {\n            x: { top: rectBound[2] - axisOffset, bottom: rectBound[3] + axisOffset },\n            y: { left: rectBound[0] - axisOffset, right: rectBound[1] + axisOffset }\n        };\n\n        posMap.x.onZero = Math.max(Math.min(getZero('y'), posMap.x.bottom), posMap.x.top);\n        posMap.y.onZero = Math.max(Math.min(getZero('x'), posMap.y.right), posMap.y.left);\n\n        function getZero(dim, val) {\n            var theAxis = grid.getAxis(dim);\n            return theAxis.toGlobalCoord(theAxis.dataToCoord(0));\n        }\n\n        // Axis position\n        layout.position = [\n            axisDim === 'y' ? posMap.y[axisPosition] : rectBound[0],\n            axisDim === 'x' ? posMap.x[axisPosition] : rectBound[3]\n        ];\n\n        // Axis rotation\n        layout.rotation = Math.PI / 2 * (axisDim === 'x' ? 0 : 1);\n\n        // Tick and label direction, x y is axisDim\n        var dirMap = {top: -1, bottom: 1, left: -1, right: 1};\n\n        layout.labelDirection = layout.tickDirection = layout.nameDirection = dirMap[rawAxisPosition];\n        if (axis.onZero) {\n            layout.labelOffset = posMap[axisDim][rawAxisPosition] - posMap[axisDim].onZero;\n        }\n\n        if (axisModel.getModel('axisTick').get('inside')) {\n            layout.tickDirection = -layout.tickDirection;\n        }\n        if (axisModel.getModel('axisLabel').get('inside')) {\n            layout.labelDirection = -layout.labelDirection;\n        }\n\n        // Special label rotation\n        var labelRotation = axisModel.getModel('axisLabel').get('rotate');\n        layout.labelRotation = axisPosition === 'top' ? -labelRotation : labelRotation;\n\n        // label interval when auto mode.\n        layout.labelInterval = axis.getLabelInterval();\n\n        // Over splitLine and splitArea\n        layout.z2 = 1;\n\n        return layout;\n    }\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/axis/AxisView.js\n// module id = 549\n// module chunks = 0 1","\n    // List layout\n    var layout = require('../../util/layout');\n    var formatUtil = require('../../util/format');\n    var graphic = require('../../util/graphic');\n\n    function positionGroup(group, model, api) {\n        layout.positionElement(\n            group, model.getBoxLayoutParams(),\n            {\n                width: api.getWidth(),\n                height: api.getHeight()\n            },\n            model.get('padding')\n        );\n    }\n\n    module.exports = {\n        /**\n         * Layout list like component.\n         * It will box layout each items in group of component and then position the whole group in the viewport\n         * @param {module:zrender/group/Group} group\n         * @param {module:echarts/model/Component} componentModel\n         * @param {module:echarts/ExtensionAPI}\n         */\n        layout: function (group, componentModel, api) {\n            var rect = layout.getLayoutRect(componentModel.getBoxLayoutParams(), {\n                width: api.getWidth(),\n                height: api.getHeight()\n            }, componentModel.get('padding'));\n            layout.box(\n                componentModel.get('orient'),\n                group,\n                componentModel.get('itemGap'),\n                rect.width,\n                rect.height\n            );\n\n            positionGroup(group, componentModel, api);\n        },\n\n        addBackground: function (group, componentModel) {\n            var padding = formatUtil.normalizeCssArray(\n                componentModel.get('padding')\n            );\n            var boundingRect = group.getBoundingRect();\n            var style = componentModel.getItemStyle(['color', 'opacity']);\n            style.fill = componentModel.get('backgroundColor');\n            var rect = new graphic.Rect({\n                shape: {\n                    x: boundingRect.x - padding[3],\n                    y: boundingRect.y - padding[0],\n                    width: boundingRect.width + padding[1] + padding[3],\n                    height: boundingRect.height + padding[0] + padding[2]\n                },\n                style: style,\n                silent: true,\n                z2: -1\n            });\n            graphic.subPixelOptimizeRect(rect);\n\n            group.add(rect);\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/helper/listComponent.js\n// module id = 553\n// module chunks = 0 1","/**\n * Legend component entry file8\n */\n\n\n    require('./legend/LegendModel');\n    require('./legend/legendAction');\n    require('./legend/LegendView');\n\n    var echarts = require('../echarts');\n    // Series Filter\n    echarts.registerProcessor(require('./legend/legendFilter'));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/legend.js\n// module id = 554\n// module chunks = 0 1","'use strict';\n\n\n    var zrUtil = require('zrender/lib/core/util');\n    var Model = require('../../model/Model');\n\n    var LegendModel = require('../../echarts').extendComponentModel({\n\n        type: 'legend',\n\n        dependencies: ['series'],\n\n        layoutMode: {\n            type: 'box',\n            ignoreSize: true\n        },\n\n        init: function (option, parentModel, ecModel) {\n            this.mergeDefaultAndTheme(option, ecModel);\n\n            option.selected = option.selected || {};\n        },\n\n        mergeOption: function (option) {\n            LegendModel.superCall(this, 'mergeOption', option);\n        },\n\n        optionUpdated: function () {\n            this._updateData(this.ecModel);\n\n            var legendData = this._data;\n\n            // If selectedMode is single, try to select one\n            if (legendData[0] && this.get('selectedMode') === 'single') {\n                var hasSelected = false;\n                // If has any selected in option.selected\n                for (var i = 0; i < legendData.length; i++) {\n                    var name = legendData[i].get('name');\n                    if (this.isSelected(name)) {\n                        // Force to unselect others\n                        this.select(name);\n                        hasSelected = true;\n                        break;\n                    }\n                }\n                // Try select the first if selectedMode is single\n                !hasSelected && this.select(legendData[0].get('name'));\n            }\n        },\n\n        _updateData: function (ecModel) {\n            var legendData = zrUtil.map(this.get('data') || [], function (dataItem) {\n                // Can be string or number\n                if (typeof dataItem === 'string' || typeof dataItem === 'number') {\n                    dataItem = {\n                        name: dataItem\n                    };\n                }\n                return new Model(dataItem, this, this.ecModel);\n            }, this);\n            this._data = legendData;\n\n            var availableNames = zrUtil.map(ecModel.getSeries(), function (series) {\n                return series.name;\n            });\n            ecModel.eachSeries(function (seriesModel) {\n                if (seriesModel.legendDataProvider) {\n                    var data = seriesModel.legendDataProvider();\n                    availableNames = availableNames.concat(data.mapArray(data.getName));\n                }\n            });\n            /**\n             * @type {Array.<string>}\n             * @private\n             */\n            this._availableNames = availableNames;\n        },\n\n        /**\n         * @return {Array.<module:echarts/model/Model>}\n         */\n        getData: function () {\n            return this._data;\n        },\n\n        /**\n         * @param {string} name\n         */\n        select: function (name) {\n            var selected = this.option.selected;\n            var selectedMode = this.get('selectedMode');\n            if (selectedMode === 'single') {\n                var data = this._data;\n                zrUtil.each(data, function (dataItem) {\n                    selected[dataItem.get('name')] = false;\n                });\n            }\n            selected[name] = true;\n        },\n\n        /**\n         * @param {string} name\n         */\n        unSelect: function (name) {\n            if (this.get('selectedMode') !== 'single') {\n                this.option.selected[name] = false;\n            }\n        },\n\n        /**\n         * @param {string} name\n         */\n        toggleSelected: function (name) {\n            var selected = this.option.selected;\n            // Default is true\n            if (!selected.hasOwnProperty(name)) {\n                selected[name] = true;\n            }\n            this[selected[name] ? 'unSelect' : 'select'](name);\n        },\n\n        /**\n         * @param {string} name\n         */\n        isSelected: function (name) {\n            var selected = this.option.selected;\n            return !(selected.hasOwnProperty(name) && !selected[name])\n                && zrUtil.indexOf(this._availableNames, name) >= 0;\n        },\n\n        defaultOption: {\n            // 一级层叠\n            zlevel: 0,\n            // 二级层叠\n            z: 4,\n            show: true,\n\n            // 布局方式，默认为水平布局，可选为：\n            // 'horizontal' | 'vertical'\n            orient: 'horizontal',\n\n            left: 'center',\n            // right: 'center',\n\n            top: 'top',\n            // bottom: 'top',\n\n            // 水平对齐\n            // 'auto' | 'left' | 'right'\n            // 默认为 'auto', 根据 x 的位置判断是左对齐还是右对齐\n            align: 'auto',\n\n            backgroundColor: 'rgba(0,0,0,0)',\n            // 图例边框颜色\n            borderColor: '#ccc',\n            // 图例边框线宽，单位px，默认为0（无边框）\n            borderWidth: 0,\n            // 图例内边距，单位px，默认各方向内边距为5，\n            // 接受数组分别设定上右下左边距，同css\n            padding: 5,\n            // 各个item之间的间隔，单位px，默认为10，\n            // 横向布局时为水平间隔，纵向布局时为纵向间隔\n            itemGap: 10,\n            // 图例图形宽度\n            itemWidth: 25,\n            // 图例图形高度\n            itemHeight: 14,\n\n            // 图例关闭时候的颜色\n            inactiveColor: '#ccc',\n\n            textStyle: {\n                // 图例文字颜色\n                color: '#333'\n            },\n            // formatter: '',\n            // 选择模式，默认开启图例开关\n            selectedMode: true,\n            // 配置默认选中状态，可配合LEGEND.SELECTED事件做动态数据载入\n            // selected: null,\n            // 图例内容（详见legend.data，数组中每一项代表一个item\n            // data: [],\n\n            // Tooltip 相关配置\n            tooltip: {\n                show: false\n            }\n        }\n    });\n\n    module.exports = LegendModel;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/legend/LegendModel.js\n// module id = 555\n// module chunks = 0 1","\n\n    var zrUtil = require('zrender/lib/core/util');\n    var symbolCreator = require('../../util/symbol');\n    var graphic = require('../../util/graphic');\n    var listComponentHelper = require('../helper/listComponent');\n\n    var curry = zrUtil.curry;\n\n    function dispatchSelectAction(name, api) {\n        api.dispatchAction({\n            type: 'legendToggleSelect',\n            name: name\n        });\n    }\n\n    function dispatchHighlightAction(seriesModel, dataName, api) {\n        // If element hover will move to a hoverLayer.\n        var el = api.getZr().storage.getDisplayList()[0];\n        if (!(el && el.useHoverLayer)) {\n            seriesModel.get('legendHoverLink') && api.dispatchAction({\n                type: 'highlight',\n                seriesName: seriesModel.name,\n                name: dataName\n            });\n        }\n    }\n\n    function dispatchDownplayAction(seriesModel, dataName, api) {\n        // If element hover will move to a hoverLayer.\n        var el = api.getZr().storage.getDisplayList()[0];\n        if (!(el && el.useHoverLayer)) {\n            seriesModel.get('legendHoverLink') && api.dispatchAction({\n                type: 'downplay',\n                seriesName: seriesModel.name,\n                name: dataName\n            });\n        }\n    }\n\n    module.exports = require('../../echarts').extendComponentView({\n\n        type: 'legend',\n\n        init: function () {\n            this._symbolTypeStore = {};\n        },\n\n        render: function (legendModel, ecModel, api) {\n            var group = this.group;\n            group.removeAll();\n\n            if (!legendModel.get('show')) {\n                return;\n            }\n\n            var selectMode = legendModel.get('selectedMode');\n            var itemAlign = legendModel.get('align');\n\n            if (itemAlign === 'auto') {\n                itemAlign = (legendModel.get('left') === 'right'\n                    && legendModel.get('orient') === 'vertical')\n                    ? 'right' : 'left';\n            }\n\n            var legendDrawedMap = {};\n\n            zrUtil.each(legendModel.getData(), function (itemModel) {\n                var name = itemModel.get('name');\n\n                // Use empty string or \\n as a newline string\n                if (name === '' || name === '\\n') {\n                    group.add(new graphic.Group({\n                        newline: true\n                    }));\n                    return;\n                }\n\n                var seriesModel = ecModel.getSeriesByName(name)[0];\n\n                if (legendDrawedMap[name]) {\n                    // Have been drawed\n                    return;\n                }\n\n                // Series legend\n                if (seriesModel) {\n                    var data = seriesModel.getData();\n                    var color = data.getVisual('color');\n\n                    // If color is a callback function\n                    if (typeof color === 'function') {\n                        // Use the first data\n                        color = color(seriesModel.getDataParams(0));\n                    }\n\n                    // Using rect symbol defaultly\n                    var legendSymbolType = data.getVisual('legendSymbol') || 'roundRect';\n                    var symbolType = data.getVisual('symbol');\n\n                    var itemGroup = this._createItem(\n                        name, itemModel, legendModel,\n                        legendSymbolType, symbolType,\n                        itemAlign, color,\n                        selectMode\n                    );\n\n                    itemGroup.on('click', curry(dispatchSelectAction, name, api))\n                        .on('mouseover', curry(dispatchHighlightAction, seriesModel, null, api))\n                        .on('mouseout', curry(dispatchDownplayAction, seriesModel, null, api));\n\n                    legendDrawedMap[name] = true;\n                }\n                else {\n                    // Data legend of pie, funnel\n                    ecModel.eachRawSeries(function (seriesModel) {\n                        // In case multiple series has same data name\n                        if (legendDrawedMap[name]) {\n                            return;\n                        }\n                        if (seriesModel.legendDataProvider) {\n                            var data = seriesModel.legendDataProvider();\n                            var idx = data.indexOfName(name);\n                            if (idx < 0) {\n                                return;\n                            }\n\n                            var color = data.getItemVisual(idx, 'color');\n\n                            var legendSymbolType = 'roundRect';\n\n                            var itemGroup = this._createItem(\n                                name, itemModel, legendModel,\n                                legendSymbolType, null,\n                                itemAlign, color,\n                                selectMode\n                            );\n\n                            itemGroup.on('click', curry(dispatchSelectAction, name, api))\n                                // FIXME Should not specify the series name\n                                .on('mouseover', curry(dispatchHighlightAction, seriesModel, name, api))\n                                .on('mouseout', curry(dispatchDownplayAction, seriesModel, name, api));\n\n                            legendDrawedMap[name] = true;\n                        }\n                    }, this);\n                }\n\n                if (__DEV__) {\n                    if (!legendDrawedMap[name]) {\n                        console.warn(name + ' series not exists. Legend data should be same with series name or data name.');\n                    }\n                }\n            }, this);\n\n            listComponentHelper.layout(group, legendModel, api);\n            // Render background after group is layout\n            // FIXME\n            listComponentHelper.addBackground(group, legendModel);\n        },\n\n        _createItem: function (\n            name, itemModel, legendModel,\n            legendSymbolType, symbolType,\n            itemAlign, color, selectMode\n        ) {\n            var itemWidth = legendModel.get('itemWidth');\n            var itemHeight = legendModel.get('itemHeight');\n            var inactiveColor = legendModel.get('inactiveColor');\n\n            var isSelected = legendModel.isSelected(name);\n            var itemGroup = new graphic.Group();\n\n            var textStyleModel = itemModel.getModel('textStyle');\n\n            var itemIcon = itemModel.get('icon');\n\n            var tooltipModel = itemModel.getModel('tooltip');\n            var legendGlobalTooltipModel = tooltipModel.parentModel;\n\n            // Use user given icon first\n            legendSymbolType = itemIcon || legendSymbolType;\n            itemGroup.add(symbolCreator.createSymbol(\n                legendSymbolType, 0, 0, itemWidth, itemHeight, isSelected ? color : inactiveColor\n            ));\n\n            // Compose symbols\n            // PENDING\n            if (!itemIcon && symbolType\n                // At least show one symbol, can't be all none\n                && ((symbolType !== legendSymbolType) || symbolType == 'none')\n            ) {\n                var size = itemHeight * 0.8;\n                if (symbolType === 'none') {\n                    symbolType = 'circle';\n                }\n                // Put symbol in the center\n                itemGroup.add(symbolCreator.createSymbol(\n                    symbolType, (itemWidth - size) / 2, (itemHeight - size) / 2, size, size,\n                    isSelected ? color : inactiveColor\n                ));\n            }\n\n            // Text\n            var textX = itemAlign === 'left' ? itemWidth + 5 : -5;\n            var textAlign = itemAlign;\n\n            var formatter = legendModel.get('formatter');\n            var content = name;\n            if (typeof formatter === 'string' && formatter) {\n                content = formatter.replace('{name}', name != null ? name : '');\n            }\n            else if (typeof formatter === 'function') {\n                content = formatter(name);\n            }\n\n            var text = new graphic.Text({\n                style: {\n                    text: content,\n                    x: textX,\n                    y: itemHeight / 2,\n                    fill: isSelected ? textStyleModel.getTextColor() : inactiveColor,\n                    textFont: textStyleModel.getFont(),\n                    textAlign: textAlign,\n                    textVerticalAlign: 'middle'\n                }\n            });\n            itemGroup.add(text);\n\n            // Add a invisible rect to increase the area of mouse hover\n            var hitRect = new graphic.Rect({\n                shape: itemGroup.getBoundingRect(),\n                invisible: true,\n                tooltip: tooltipModel.get('show') ? zrUtil.extend({\n                    content: name,\n                    // Defaul formatter\n                    formatter: legendGlobalTooltipModel.get('formatter', true) || function () {\n                        return name;\n                    },\n                    formatterParams: {\n                        componentType: 'legend',\n                        legendIndex: legendModel.componentIndex,\n                        name: name,\n                        $vars: ['name']\n                    }\n                }, tooltipModel.option) : null\n            });\n            itemGroup.add(hitRect);\n\n            itemGroup.eachChild(function (child) {\n                child.silent = true;\n            });\n\n            hitRect.silent = !selectMode;\n\n\n\n            this.group.add(itemGroup);\n\n            graphic.setHoverStyle(itemGroup);\n\n            return itemGroup;\n        }\n    });\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/legend/LegendView.js\n// module id = 556\n// module chunks = 0 1","/**\n * @file Legend action\n */\n\n\n    var echarts = require('../../echarts');\n    var zrUtil = require('zrender/lib/core/util');\n\n    function legendSelectActionHandler(methodName, payload, ecModel) {\n        var selectedMap = {};\n        var isToggleSelect = methodName === 'toggleSelected';\n        var isSelected;\n        // Update all legend components\n        ecModel.eachComponent('legend', function (legendModel) {\n            if (isToggleSelect && isSelected != null) {\n                // Force other legend has same selected status\n                // Or the first is toggled to true and other are toggled to false\n                // In the case one legend has some item unSelected in option. And if other legend\n                // doesn't has the item, they will assume it is selected.\n                legendModel[isSelected ? 'select' : 'unSelect'](payload.name);\n            }\n            else {\n                legendModel[methodName](payload.name);\n                isSelected = legendModel.isSelected(payload.name);\n            }\n            var legendData = legendModel.getData();\n            zrUtil.each(legendData, function (model) {\n                var name = model.get('name');\n                // Wrap element\n                if (name === '\\n' || name === '') {\n                    return;\n                }\n                var isItemSelected = legendModel.isSelected(name);\n                if (name in selectedMap) {\n                    // Unselected if any legend is unselected\n                    selectedMap[name] = selectedMap[name] && isItemSelected;\n                }\n                else {\n                    selectedMap[name] = isItemSelected;\n                }\n            });\n        });\n        // Return the event explicitly\n        return {\n            name: payload.name,\n            selected: selectedMap\n        };\n    }\n    /**\n     * @event legendToggleSelect\n     * @type {Object}\n     * @property {string} type 'legendToggleSelect'\n     * @property {string} [from]\n     * @property {string} name Series name or data item name\n     */\n    echarts.registerAction(\n        'legendToggleSelect', 'legendselectchanged',\n        zrUtil.curry(legendSelectActionHandler, 'toggleSelected')\n    );\n\n    /**\n     * @event legendSelect\n     * @type {Object}\n     * @property {string} type 'legendSelect'\n     * @property {string} name Series name or data item name\n     */\n    echarts.registerAction(\n        'legendSelect', 'legendselected',\n        zrUtil.curry(legendSelectActionHandler, 'select')\n    );\n\n    /**\n     * @event legendUnSelect\n     * @type {Object}\n     * @property {string} type 'legendUnSelect'\n     * @property {string} name Series name or data item name\n     */\n    echarts.registerAction(\n        'legendUnSelect', 'legendunselected',\n        zrUtil.curry(legendSelectActionHandler, 'unSelect')\n    );\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/legend/legendAction.js\n// module id = 557\n// module chunks = 0 1","\n   module.exports = function (ecModel) {\n        var legendModels = ecModel.findComponents({\n            mainType: 'legend'\n        });\n        if (legendModels && legendModels.length) {\n            ecModel.filterSeries(function (series) {\n                // If in any legend component the status is not selected.\n                // Because in legend series is assumed selected when it is not in the legend data.\n                for (var i = 0; i < legendModels.length; i++) {\n                    if (!legendModels[i].isSelected(series.name)) {\n                        return false;\n                    }\n                }\n                return true;\n            });\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/legend/legendFilter.js\n// module id = 558\n// module chunks = 0 1","'use strict';\n\n\n    var echarts = require('../echarts');\n    var graphic = require('../util/graphic');\n    var layout = require('../util/layout');\n\n    // Model\n    echarts.extendComponentModel({\n\n        type: 'title',\n\n        layoutMode: {type: 'box', ignoreSize: true},\n\n        defaultOption: {\n            // 一级层叠\n            zlevel: 0,\n            // 二级层叠\n            z: 6,\n            show: true,\n\n            text: '',\n            // 超链接跳转\n            // link: null,\n            // 仅支持self | blank\n            target: 'blank',\n            subtext: '',\n\n            // 超链接跳转\n            // sublink: null,\n            // 仅支持self | blank\n            subtarget: 'blank',\n\n            // 'center' ¦ 'left' ¦ 'right'\n            // ¦ {number}（x坐标，单位px）\n            left: 0,\n            // 'top' ¦ 'bottom' ¦ 'center'\n            // ¦ {number}（y坐标，单位px）\n            top: 0,\n\n            // 水平对齐\n            // 'auto' | 'left' | 'right' | 'center'\n            // 默认根据 left 的位置判断是左对齐还是右对齐\n            // textAlign: null\n            //\n            // 垂直对齐\n            // 'auto' | 'top' | 'bottom' | 'middle'\n            // 默认根据 top 位置判断是上对齐还是下对齐\n            // textBaseline: null\n\n            backgroundColor: 'rgba(0,0,0,0)',\n\n            // 标题边框颜色\n            borderColor: '#ccc',\n\n            // 标题边框线宽，单位px，默认为0（无边框）\n            borderWidth: 0,\n\n            // 标题内边距，单位px，默认各方向内边距为5，\n            // 接受数组分别设定上右下左边距，同css\n            padding: 5,\n\n            // 主副标题纵向间隔，单位px，默认为10，\n            itemGap: 10,\n            textStyle: {\n                fontSize: 18,\n                fontWeight: 'bolder',\n                color: '#333'\n            },\n            subtextStyle: {\n                color: '#aaa'\n            }\n        }\n    });\n\n    // View\n    echarts.extendComponentView({\n\n        type: 'title',\n\n        render: function (titleModel, ecModel, api) {\n            this.group.removeAll();\n\n            if (!titleModel.get('show')) {\n                return;\n            }\n\n            var group = this.group;\n\n            var textStyleModel = titleModel.getModel('textStyle');\n            var subtextStyleModel = titleModel.getModel('subtextStyle');\n\n            var textAlign = titleModel.get('textAlign');\n            var textBaseline = titleModel.get('textBaseline');\n\n            var textEl = new graphic.Text({\n                style: {\n                    text: titleModel.get('text'),\n                    textFont: textStyleModel.getFont(),\n                    fill: textStyleModel.getTextColor()\n                },\n                z2: 10\n            });\n\n            var textRect = textEl.getBoundingRect();\n\n            var subText = titleModel.get('subtext');\n            var subTextEl = new graphic.Text({\n                style: {\n                    text: subText,\n                    textFont: subtextStyleModel.getFont(),\n                    fill: subtextStyleModel.getTextColor(),\n                    y: textRect.height + titleModel.get('itemGap'),\n                    textBaseline: 'top'\n                },\n                z2: 10\n            });\n\n            var link = titleModel.get('link');\n            var sublink = titleModel.get('sublink');\n\n            textEl.silent = !link;\n            subTextEl.silent = !sublink;\n\n            if (link) {\n                textEl.on('click', function () {\n                    window.open(link, '_' + titleModel.get('target'));\n                });\n            }\n            if (sublink) {\n                subTextEl.on('click', function () {\n                    window.open(sublink, '_' + titleModel.get('subtarget'));\n                });\n            }\n\n            group.add(textEl);\n            subText && group.add(subTextEl);\n            // If no subText, but add subTextEl, there will be an empty line.\n\n            var groupRect = group.getBoundingRect();\n            var layoutOption = titleModel.getBoxLayoutParams();\n            layoutOption.width = groupRect.width;\n            layoutOption.height = groupRect.height;\n            var layoutRect = layout.getLayoutRect(\n                layoutOption, {\n                    width: api.getWidth(),\n                    height: api.getHeight()\n                }, titleModel.get('padding')\n            );\n            // Adjust text align based on position\n            if (!textAlign) {\n                // Align left if title is on the left. center and right is same\n                textAlign = titleModel.get('left') || titleModel.get('right');\n                if (textAlign === 'middle') {\n                    textAlign = 'center';\n                }\n                // Adjust layout by text align\n                if (textAlign === 'right') {\n                    layoutRect.x += layoutRect.width;\n                }\n                else if (textAlign === 'center') {\n                    layoutRect.x += layoutRect.width / 2;\n                }\n            }\n            if (!textBaseline) {\n                textBaseline = titleModel.get('top') || titleModel.get('bottom');\n                if (textBaseline === 'center') {\n                    textBaseline = 'middle';\n                }\n                if (textBaseline === 'bottom') {\n                    layoutRect.y += layoutRect.height;\n                }\n                else if (textBaseline === 'middle') {\n                    layoutRect.y += layoutRect.height / 2;\n                }\n\n                textBaseline = textBaseline || 'top';\n            }\n\n            group.attr('position', [layoutRect.x, layoutRect.y]);\n            var alignStyle = {\n                textAlign: textAlign,\n                textVerticalAlign: textBaseline\n            };\n            textEl.setStyle(alignStyle);\n            subTextEl.setStyle(alignStyle);\n\n            // Render background\n            // Get groupRect again because textAlign has been changed\n            groupRect = group.getBoundingRect();\n            var padding = layoutRect.margin;\n            var style = titleModel.getItemStyle(['color', 'opacity']);\n            style.fill = titleModel.get('backgroundColor');\n            var rect = new graphic.Rect({\n                shape: {\n                    x: groupRect.x - padding[3],\n                    y: groupRect.y - padding[0],\n                    width: groupRect.width + padding[1] + padding[3],\n                    height: groupRect.height + padding[0] + padding[2]\n                },\n                style: style,\n                silent: true\n            });\n            graphic.subPixelOptimizeRect(rect);\n\n            group.add(rect);\n        }\n    });\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/title.js\n// module id = 559\n// module chunks = 0 1","// FIXME Better way to pack data in graphic element\n\n\n    require('./tooltip/TooltipModel');\n\n    require('./tooltip/TooltipView');\n\n    // Show tip action\n    /**\n     * @action\n     * @property {string} type\n     * @property {number} seriesIndex\n     * @property {number} dataIndex\n     * @property {number} [x]\n     * @property {number} [y]\n     */\n    require('../echarts').registerAction(\n        {\n            type: 'showTip',\n            event: 'showTip',\n            update: 'tooltip:manuallyShowTip'\n        },\n        // noop\n        function () {}\n    );\n    // Hide tip action\n    require('../echarts').registerAction(\n        {\n            type: 'hideTip',\n            event: 'hideTip',\n            update: 'tooltip:manuallyHideTip'\n        },\n        // noop\n        function () {}\n    );\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/tooltip.js\n// module id = 560\n// module chunks = 0 1","/**\n * @module echarts/component/tooltip/TooltipContent\n */\n\n\n    var zrUtil = require('zrender/lib/core/util');\n    var zrColor = require('zrender/lib/tool/color');\n    var eventUtil = require('zrender/lib/core/event');\n    var formatUtil = require('../../util/format');\n    var each = zrUtil.each;\n    var toCamelCase = formatUtil.toCamelCase;\n    var env = require('zrender/lib/core/env');\n\n    var vendors = ['', '-webkit-', '-moz-', '-o-'];\n\n    var gCssText = 'position:absolute;display:block;border-style:solid;white-space:nowrap;z-index:9999999;';\n\n    /**\n     * @param {number} duration\n     * @return {string}\n     * @inner\n     */\n    function assembleTransition(duration) {\n        var transitionCurve = 'cubic-bezier(0.23, 1, 0.32, 1)';\n        var transitionText = 'left ' + duration + 's ' + transitionCurve + ','\n                            + 'top ' + duration + 's ' + transitionCurve;\n        return zrUtil.map(vendors, function (vendorPrefix) {\n            return vendorPrefix + 'transition:' + transitionText;\n        }).join(';');\n    }\n\n    /**\n     * @param {Object} textStyle\n     * @return {string}\n     * @inner\n     */\n    function assembleFont(textStyleModel) {\n        var cssText = [];\n\n        var fontSize = textStyleModel.get('fontSize');\n        var color = textStyleModel.getTextColor();\n\n        color && cssText.push('color:' + color);\n\n        cssText.push('font:' + textStyleModel.getFont());\n\n        fontSize &&\n            cssText.push('line-height:' + Math.round(fontSize * 3 / 2) + 'px');\n\n        each(['decoration', 'align'], function (name) {\n            var val = textStyleModel.get(name);\n            val && cssText.push('text-' + name + ':' + val);\n        });\n\n        return cssText.join(';');\n    }\n\n    /**\n     * @param {Object} tooltipModel\n     * @return {string}\n     * @inner\n     */\n    function assembleCssText(tooltipModel) {\n\n        tooltipModel = tooltipModel;\n\n        var cssText = [];\n\n        var transitionDuration = tooltipModel.get('transitionDuration');\n        var backgroundColor = tooltipModel.get('backgroundColor');\n        var textStyleModel = tooltipModel.getModel('textStyle');\n        var padding = tooltipModel.get('padding');\n\n        // Animation transition\n        transitionDuration &&\n            cssText.push(assembleTransition(transitionDuration));\n\n        if (backgroundColor) {\n            if (env.canvasSupported) {\n                cssText.push('background-Color:' + backgroundColor);\n            }\n            else {\n                // for ie\n                cssText.push(\n                    'background-Color:#' + zrColor.toHex(backgroundColor)\n                );\n                cssText.push('filter:alpha(opacity=70)');\n            }\n        }\n\n        // Border style\n        each(['width', 'color', 'radius'], function (name) {\n            var borderName = 'border-' + name;\n            var camelCase = toCamelCase(borderName);\n            var val = tooltipModel.get(camelCase);\n            val != null &&\n                cssText.push(borderName + ':' + val + (name === 'color' ? '' : 'px'));\n        });\n\n        // Text style\n        cssText.push(assembleFont(textStyleModel));\n\n        // Padding\n        if (padding != null) {\n            cssText.push('padding:' + formatUtil.normalizeCssArray(padding).join('px ') + 'px');\n        }\n\n        return cssText.join(';') + ';';\n    }\n\n    /**\n     * @alias module:echarts/component/tooltip/TooltipContent\n     * @constructor\n     */\n    function TooltipContent(container, api) {\n        var el = document.createElement('div');\n        var zr = api.getZr();\n\n        this.el = el;\n\n        this._x = api.getWidth() / 2;\n        this._y = api.getHeight() / 2;\n\n        container.appendChild(el);\n\n        this._container = container;\n\n        this._show = false;\n\n        /**\n         * @private\n         */\n        this._hideTimeout;\n\n        var self = this;\n        el.onmouseenter = function () {\n            // clear the timeout in hideLater and keep showing tooltip\n            if (self.enterable) {\n                clearTimeout(self._hideTimeout);\n                self._show = true;\n            }\n            self._inContent = true;\n        };\n        el.onmousemove = function (e) {\n            e = e || window.event;\n            if (!self.enterable) {\n                // Try trigger zrender event to avoid mouse\n                // in and out shape too frequently\n                var handler = zr.handler;\n                eventUtil.normalizeEvent(container, e, true);\n                handler.dispatch('mousemove', e);\n            }\n        };\n        el.onmouseleave = function () {\n            if (self.enterable) {\n                if (self._show) {\n                    self.hideLater(self._hideDelay);\n                }\n            }\n            self._inContent = false;\n        };\n    }\n\n    TooltipContent.prototype = {\n\n        constructor: TooltipContent,\n\n        enterable: true,\n\n        /**\n         * Update when tooltip is rendered\n         */\n        update: function () {\n            var container = this._container;\n            var stl = container.currentStyle\n                || document.defaultView.getComputedStyle(container);\n            var domStyle = container.style;\n            if (domStyle.position !== 'absolute' && stl.position !== 'absolute') {\n                domStyle.position = 'relative';\n            }\n            // Hide the tooltip\n            // PENDING\n            // this.hide();\n        },\n\n        show: function (tooltipModel) {\n            clearTimeout(this._hideTimeout);\n            var el = this.el;\n\n            el.style.cssText = gCssText + assembleCssText(tooltipModel)\n                // http://stackoverflow.com/questions/21125587/css3-transition-not-working-in-chrome-anymore\n                + ';left:' + this._x + 'px;top:' + this._y + 'px;'\n                + (tooltipModel.get('extraCssText') || '');\n\n            el.style.display = el.innerHTML ?  'block' : 'none';\n\n            this._show = true;\n        },\n\n        setContent: function (content) {\n            var el = this.el;\n            el.innerHTML = content;\n            el.style.display = content ? 'block' : 'none';\n        },\n\n        moveTo: function (x, y) {\n            var style = this.el.style;\n            style.left = x + 'px';\n            style.top = y + 'px';\n\n            this._x = x;\n            this._y = y;\n        },\n\n        hide: function () {\n            this.el.style.display = 'none';\n            this._show = false;\n        },\n\n        // showLater: function ()\n\n        hideLater: function (time) {\n            if (this._show && !(this._inContent && this.enterable)) {\n                if (time) {\n                    this._hideDelay = time;\n                    // Set show false to avoid invoke hideLater mutiple times\n                    this._show = false;\n                    this._hideTimeout = setTimeout(zrUtil.bind(this.hide, this), time);\n                }\n                else {\n                    this.hide();\n                }\n            }\n        },\n\n        isShow: function () {\n            return this._show;\n        }\n    };\n\n    module.exports = TooltipContent;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/tooltip/TooltipContent.js\n// module id = 561\n// module chunks = 0 1","\n\n    require('../../echarts').extendComponentModel({\n\n        type: 'tooltip',\n\n        defaultOption: {\n            zlevel: 0,\n\n            z: 8,\n\n            show: true,\n\n            // tooltip主体内容\n            showContent: true,\n\n            // 触发类型，默认数据触发，见下图，可选为：'item' ¦ 'axis'\n            trigger: 'item',\n\n            // 触发条件，支持 'click' | 'mousemove' | 'none'\n            triggerOn: 'mousemove',\n\n            // 是否永远显示 content\n            alwaysShowContent: false,\n\n            // 位置 {Array} | {Function}\n            // position: null\n\n            // 是否约束 content 在 viewRect 中。默认 false 是为了兼容以前版本。\n            confine: false,\n\n            // 内容格式器：{string}（Template） ¦ {Function}\n            // formatter: null\n\n            showDelay: 0,\n\n            // 隐藏延迟，单位ms\n            hideDelay: 100,\n\n            // 动画变换时间，单位s\n            transitionDuration: 0.4,\n\n            enterable: false,\n\n            // 提示背景颜色，默认为透明度为0.7的黑色\n            backgroundColor: 'rgba(50,50,50,0.7)',\n\n            // 提示边框颜色\n            borderColor: '#333',\n\n            // 提示边框圆角，单位px，默认为4\n            borderRadius: 4,\n\n            // 提示边框线宽，单位px，默认为0（无边框）\n            borderWidth: 0,\n\n            // 提示内边距，单位px，默认各方向内边距为5，\n            // 接受数组分别设定上右下左边距，同css\n            padding: 5,\n\n            // Extra css text\n            extraCssText: '',\n\n            // 坐标轴指示器，坐标轴触发有效\n            axisPointer: {\n                // 默认为直线\n                // 可选为：'line' | 'shadow' | 'cross'\n                type: 'line',\n\n                // type 为 line 的时候有效，指定 tooltip line 所在的轴，可选\n                // 可选 'x' | 'y' | 'angle' | 'radius' | 'auto'\n                // 默认 'auto'，会选择类型为 cateogry 的轴，对于双数值轴，笛卡尔坐标系会默认选择 x 轴\n                // 极坐标系会默认选择 angle 轴\n                axis: 'auto',\n\n                animation: true,\n                animationDurationUpdate: 200,\n                animationEasingUpdate: 'exponentialOut',\n\n                // 直线指示器样式设置\n                lineStyle: {\n                    color: '#555',\n                    width: 1,\n                    type: 'solid'\n                },\n\n                crossStyle: {\n                    color: '#555',\n                    width: 1,\n                    type: 'dashed',\n\n                    // TODO formatter\n                    textStyle: {}\n                },\n\n                // 阴影指示器样式设置\n                shadowStyle: {\n                    color: 'rgba(150,150,150,0.3)'\n                }\n            },\n            textStyle: {\n                color: '#fff',\n                fontSize: 14\n            }\n        }\n    });\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/tooltip/TooltipModel.js\n// module id = 562\n// module chunks = 0 1","\n\n    var TooltipContent = require('./TooltipContent');\n    var graphic = require('../../util/graphic');\n    var zrUtil = require('zrender/lib/core/util');\n    var formatUtil = require('../../util/format');\n    var numberUtil = require('../../util/number');\n    var modelUtil = require('../../util/model');\n    var parsePercent = numberUtil.parsePercent;\n    var env = require('zrender/lib/core/env');\n    var Model = require('../../model/Model');\n\n    function dataEqual(a, b) {\n        if (!a || !b) {\n            return false;\n        }\n        var round = numberUtil.round;\n        return round(a[0]) === round(b[0])\n            && round(a[1]) === round(b[1]);\n    }\n    /**\n     * @inner\n     */\n    function makeLineShape(x1, y1, x2, y2) {\n        return {\n            x1: x1,\n            y1: y1,\n            x2: x2,\n            y2: y2\n        };\n    }\n\n    /**\n     * @inner\n     */\n    function makeRectShape(x, y, width, height) {\n        return {\n            x: x,\n            y: y,\n            width: width,\n            height: height\n        };\n    }\n\n    /**\n     * @inner\n     */\n    function makeSectorShape(cx, cy, r0, r, startAngle, endAngle) {\n        return {\n            cx: cx,\n            cy: cy,\n            r0: r0,\n            r: r,\n            startAngle: startAngle,\n            endAngle: endAngle,\n            clockwise: true\n        };\n    }\n\n    function refixTooltipPosition(x, y, el, viewWidth, viewHeight) {\n        var width = el.clientWidth;\n        var height = el.clientHeight;\n        var gap = 20;\n\n        if (x + width + gap > viewWidth) {\n            x -= width + gap;\n        }\n        else {\n            x += gap;\n        }\n        if (y + height + gap > viewHeight) {\n            y -= height + gap;\n        }\n        else {\n            y += gap;\n        }\n        return [x, y];\n    }\n\n    function confineTooltipPosition(x, y, el, viewWidth, viewHeight) {\n        var width = el.clientWidth;\n        var height = el.clientHeight;\n\n        x = Math.min(x + width, viewWidth) - width;\n        y = Math.min(y + height, viewHeight) - height;\n        x = Math.max(x, 0);\n        y = Math.max(y, 0);\n\n        return [x, y];\n    }\n\n    function calcTooltipPosition(position, rect, dom) {\n        var domWidth = dom.clientWidth;\n        var domHeight = dom.clientHeight;\n        var gap = 5;\n        var x = 0;\n        var y = 0;\n        var rectWidth = rect.width;\n        var rectHeight = rect.height;\n        switch (position) {\n            case 'inside':\n                x = rect.x + rectWidth / 2 - domWidth / 2;\n                y = rect.y + rectHeight / 2 - domHeight / 2;\n                break;\n            case 'top':\n                x = rect.x + rectWidth / 2 - domWidth / 2;\n                y = rect.y - domHeight - gap;\n                break;\n            case 'bottom':\n                x = rect.x + rectWidth / 2 - domWidth / 2;\n                y = rect.y + rectHeight + gap;\n                break;\n            case 'left':\n                x = rect.x - domWidth - gap;\n                y = rect.y + rectHeight / 2 - domHeight / 2;\n                break;\n            case 'right':\n                x = rect.x + rectWidth + gap;\n                y = rect.y + rectHeight / 2 - domHeight / 2;\n        }\n        return [x, y];\n    }\n\n    /**\n     * @param  {string|Function|Array.<number>} positionExpr\n     * @param  {number} x Mouse x\n     * @param  {number} y Mouse y\n     * @param  {boolean} confine Whether confine tooltip content in view rect.\n     * @param  {module:echarts/component/tooltip/TooltipContent} content\n     * @param  {Object|<Array.<Object>} params\n     * @param  {module:zrender/Element} el target element\n     * @param  {module:echarts/ExtensionAPI} api\n     * @return {Array.<number>}\n     */\n    function updatePosition(positionExpr, x, y, confine, content, params, el, api) {\n        var viewWidth = api.getWidth();\n        var viewHeight = api.getHeight();\n\n        var rect = el && el.getBoundingRect().clone();\n        el && rect.applyTransform(el.transform);\n        if (typeof positionExpr === 'function') {\n            // Callback of position can be an array or a string specify the position\n            positionExpr = positionExpr([x, y], params, content.el, rect);\n        }\n\n        if (zrUtil.isArray(positionExpr)) {\n            x = parsePercent(positionExpr[0], viewWidth);\n            y = parsePercent(positionExpr[1], viewHeight);\n        }\n        // Specify tooltip position by string 'top' 'bottom' 'left' 'right' around graphic element\n        else if (typeof positionExpr === 'string' && el) {\n            var pos = calcTooltipPosition(\n                positionExpr, rect, content.el\n            );\n            x = pos[0];\n            y = pos[1];\n        }\n        else {\n            var pos = refixTooltipPosition(\n                x, y, content.el, viewWidth, viewHeight\n            );\n            x = pos[0];\n            y = pos[1];\n        }\n\n        if (confine) {\n            var pos = confineTooltipPosition(\n                x, y, content.el, viewWidth, viewHeight\n            );\n            x = pos[0];\n            y = pos[1];\n        }\n\n        content.moveTo(x, y);\n    }\n\n    function ifSeriesSupportAxisTrigger(seriesModel) {\n        var coordSys = seriesModel.coordinateSystem;\n        var trigger = seriesModel.get('tooltip.trigger', true);\n        // Ignore series use item tooltip trigger and series coordinate system is not cartesian or\n        return !(!coordSys\n            || (coordSys.type !== 'cartesian2d' && coordSys.type !== 'polar' && coordSys.type !== 'singleAxis')\n            || trigger === 'item');\n    }\n\n    require('../../echarts').extendComponentView({\n\n        type: 'tooltip',\n\n        _axisPointers: {},\n\n        init: function (ecModel, api) {\n            if (env.node) {\n                return;\n            }\n            var tooltipContent = new TooltipContent(api.getDom(), api);\n            this._tooltipContent = tooltipContent;\n        },\n\n        render: function (tooltipModel, ecModel, api) {\n            if (env.node) {\n                return;\n            }\n\n            // Reset\n            this.group.removeAll();\n\n            /**\n             * @type {Object}\n             * @private\n             */\n            this._axisPointers = {};\n\n            /**\n             * @private\n             * @type {module:echarts/component/tooltip/TooltipModel}\n             */\n            this._tooltipModel = tooltipModel;\n\n            /**\n             * @private\n             * @type {module:echarts/model/Global}\n             */\n            this._ecModel = ecModel;\n\n            /**\n             * @private\n             * @type {module:echarts/ExtensionAPI}\n             */\n            this._api = api;\n\n            /**\n             * @type {Object}\n             * @private\n             */\n            this._lastHover = {\n                // data\n                // payloadBatch\n            };\n\n            var tooltipContent = this._tooltipContent;\n            tooltipContent.update();\n            tooltipContent.enterable = tooltipModel.get('enterable');\n            this._alwaysShowContent = tooltipModel.get('alwaysShowContent');\n\n            /**\n             * @type {Object.<string, Array>}\n             */\n            this._seriesGroupByAxis = this._prepareAxisTriggerData(\n                tooltipModel, ecModel\n            );\n\n            var crossText = this._crossText;\n            if (crossText) {\n                this.group.add(crossText);\n            }\n\n            var triggerOn = tooltipModel.get('triggerOn');\n\n            // Try to keep the tooltip show when refreshing\n            if (this._lastX != null\n                && this._lastY != null\n                // When user is willing to control tooltip totally using API,\n                // self.manuallyShowTip({x, y}) might cause tooltip hide,\n                // which is not expected.\n                && triggerOn !== 'none'\n            ) {\n                var self = this;\n                clearTimeout(this._refreshUpdateTimeout);\n                this._refreshUpdateTimeout = setTimeout(function () {\n                    // Show tip next tick after other charts are rendered\n                    // In case highlight action has wrong result\n                    // FIXME\n                    self.manuallyShowTip(tooltipModel, ecModel, api, {\n                        x: self._lastX,\n                        y: self._lastY\n                    });\n                });\n            }\n\n            var zr = this._api.getZr();\n            zr.off('click', this._tryShow);\n            zr.off('mousemove', this._mousemove);\n            zr.off('mouseout', this._hide);\n            zr.off('globalout', this._hide);\n\n            if (triggerOn === 'click') {\n                zr.on('click', this._tryShow, this);\n            }\n            else if (triggerOn === 'mousemove') {\n                zr.on('mousemove', this._mousemove, this);\n                zr.on('mouseout', this._hide, this);\n                zr.on('globalout', this._hide, this);\n            }\n            // else triggerOn is 'none', which enable user\n            // to control tooltip totally using API.\n        },\n\n        _mousemove: function (e) {\n            var showDelay = this._tooltipModel.get('showDelay');\n            var self = this;\n            clearTimeout(this._showTimeout);\n            if (showDelay > 0) {\n                this._showTimeout = setTimeout(function () {\n                    self._tryShow(e);\n                }, showDelay);\n            }\n            else {\n                this._tryShow(e);\n            }\n        },\n\n        /**\n         * Show tip manually by\n         * dispatchAction({\n         *     type: 'showTip',\n         *     x: 10,\n         *     y: 10\n         * });\n         * Or\n         * dispatchAction({\n         *      type: 'showTip',\n         *      seriesIndex: 0,\n         *      dataIndex or dataIndexInside or name\n         * });\n         *\n         *  TODO Batch\n         */\n        manuallyShowTip: function (tooltipModel, ecModel, api, payload) {\n            // From self\n            if (payload.from === this.uid) {\n                return;\n            }\n\n            var ecModel = this._ecModel;\n            var seriesIndex = payload.seriesIndex;\n            var seriesModel = ecModel.getSeriesByIndex(seriesIndex);\n            var api = this._api;\n\n            var isTriggerAxis = this._tooltipModel.get('trigger') === 'axis';\n            function seriesHaveDataOnIndex(_series) {\n                var data = _series.getData();\n                var dataIndex = modelUtil.queryDataIndex(data, payload);\n                // Have single dataIndex\n                if (dataIndex != null && !zrUtil.isArray(dataIndex)\n                    && data.hasValue(dataIndex)\n                ) {\n                    return true;\n                }\n            }\n\n            if (payload.x == null || payload.y == null) {\n                if (isTriggerAxis) {\n                    // Find another series.\n                    if (seriesModel && !seriesHaveDataOnIndex(seriesModel)) {\n                        seriesModel = null;\n                    }\n                    if (!seriesModel) {\n                        // Find the first series can use axis trigger And data is not null\n                        ecModel.eachSeries(function (_series) {\n                            if (ifSeriesSupportAxisTrigger(_series) && !seriesModel) {\n                                if (seriesHaveDataOnIndex(_series)) {\n                                    seriesModel = _series;\n                                }\n                            }\n                        });\n                    }\n                }\n                else {\n                    // Use the first series by default.\n                    seriesModel = seriesModel || ecModel.getSeriesByIndex(0);\n                }\n                if (seriesModel) {\n                    var data = seriesModel.getData();\n                    var dataIndex = modelUtil.queryDataIndex(data, payload);\n\n                    if (dataIndex == null || zrUtil.isArray(dataIndex)) {\n                        return;\n                    }\n\n                    var el = data.getItemGraphicEl(dataIndex);\n                    var cx;\n                    var cy;\n                    // Try to get the point in coordinate system\n                    var coordSys = seriesModel.coordinateSystem;\n                    if (seriesModel.getTooltipPosition) {\n                        var point = seriesModel.getTooltipPosition(dataIndex) || [];\n                        cx = point[0];\n                        cy = point[1];\n                    }\n                    else if (coordSys && coordSys.dataToPoint) {\n                        var point = coordSys.dataToPoint(\n                            data.getValues(\n                                zrUtil.map(coordSys.dimensions, function (dim) {\n                                    return seriesModel.coordDimToDataDim(dim)[0];\n                                }), dataIndex, true\n                            )\n                        );\n                        cx = point && point[0];\n                        cy = point && point[1];\n                    }\n                    else if (el) {\n                        // Use graphic bounding rect\n                        var rect = el.getBoundingRect().clone();\n                        rect.applyTransform(el.transform);\n                        cx = rect.x + rect.width / 2;\n                        cy = rect.y + rect.height / 2;\n                    }\n\n                    if (cx != null && cy != null) {\n                        this._tryShow({\n                            offsetX: cx,\n                            offsetY: cy,\n                            position: payload.position,\n                            target: el,\n                            event: {}\n                        });\n                    }\n                }\n            }\n            else {\n                var el = api.getZr().handler.findHover(payload.x, payload.y);\n                this._tryShow({\n                    offsetX: payload.x,\n                    offsetY: payload.y,\n                    position: payload.position,\n                    target: el,\n                    event: {}\n                });\n            }\n        },\n\n        manuallyHideTip: function (tooltipModel, ecModel, api, payload) {\n            if (payload.from === this.uid) {\n                return;\n            }\n\n            this._hide();\n        },\n\n        _prepareAxisTriggerData: function (tooltipModel, ecModel) {\n            // Prepare data for axis trigger\n            var seriesGroupByAxis = {};\n            ecModel.eachSeries(function (seriesModel) {\n                if (ifSeriesSupportAxisTrigger(seriesModel)) {\n                    var coordSys = seriesModel.coordinateSystem;\n                    var baseAxis;\n                    var key;\n\n                    // Only cartesian2d, polar and single support axis trigger\n                    if (coordSys.type === 'cartesian2d') {\n                        // FIXME `axisPointer.axis` is not baseAxis\n                        baseAxis = coordSys.getBaseAxis();\n                        key = baseAxis.dim + baseAxis.index;\n                    }\n                    else if (coordSys.type === 'singleAxis') {\n                        baseAxis = coordSys.getAxis();\n                        key = baseAxis.dim + baseAxis.type;\n                    }\n                    else {\n                        baseAxis = coordSys.getBaseAxis();\n                        key = baseAxis.dim + coordSys.name;\n                    }\n\n                    seriesGroupByAxis[key] = seriesGroupByAxis[key] || {\n                        coordSys: [],\n                        series: []\n                    };\n                    seriesGroupByAxis[key].coordSys.push(coordSys);\n                    seriesGroupByAxis[key].series.push(seriesModel);\n                }\n            }, this);\n\n            return seriesGroupByAxis;\n        },\n\n        /**\n         * mousemove handler\n         * @param {Object} e\n         * @private\n         */\n        _tryShow: function (e) {\n            var el = e.target;\n            var tooltipModel = this._tooltipModel;\n            var globalTrigger = tooltipModel.get('trigger');\n            var ecModel = this._ecModel;\n            var api = this._api;\n\n            if (!tooltipModel) {\n                return;\n            }\n\n            // Save mouse x, mouse y. So we can try to keep showing the tip if chart is refreshed\n            this._lastX = e.offsetX;\n            this._lastY = e.offsetY;\n\n            // Always show item tooltip if mouse is on the element with dataIndex\n            if (el && el.dataIndex != null) {\n                // Use dataModel in element if possible\n                // Used when mouseover on a element like markPoint or edge\n                // In which case, the data is not main data in series.\n                var dataModel = el.dataModel || ecModel.getSeriesByIndex(el.seriesIndex);\n                var dataIndex = el.dataIndex;\n                var data = dataModel.getData();\n                var itemModel = data.getItemModel(dataIndex);\n                // Series or single data may use item trigger when global is axis trigger\n                if ((itemModel.get('tooltip.trigger') || globalTrigger) === 'axis') {\n                    this._showAxisTooltip(tooltipModel, ecModel, e);\n                }\n                else {\n                    // Reset ticket\n                    this._ticket = '';\n                    // If either single data or series use item trigger\n                    this._hideAxisPointer();\n                    // Reset last hover and dispatch downplay action\n                    this._resetLastHover();\n\n                    this._showItemTooltipContent(dataModel, dataIndex, el.dataType, e);\n                }\n\n                api.dispatchAction({\n                    type: 'showTip',\n                    from: this.uid,\n                    dataIndexInside: dataIndex,\n                    dataIndex: data.getRawIndex(dataIndex), // expose to user.\n                    seriesIndex: el.seriesIndex\n                });\n            }\n            // Tooltip provided directly. Like legend\n            else if (el && el.tooltip) {\n                var tooltipOpt = el.tooltip;\n                if (typeof tooltipOpt === 'string') {\n                    var content = tooltipOpt;\n                    tooltipOpt = {\n                        content: content,\n                        // Fixed formatter\n                        formatter: content\n                    };\n                }\n                var subTooltipModel = new Model(tooltipOpt, tooltipModel);\n                var defaultHtml = subTooltipModel.get('content');\n                var asyncTicket = Math.random();\n                this._showTooltipContent(\n                    // TODO params\n                    subTooltipModel, defaultHtml, subTooltipModel.get('formatterParams') || {},\n                    asyncTicket, e.offsetX, e.offsetY, e.position, el, api\n                );\n            }\n            else {\n                if (globalTrigger === 'item') {\n                    this._hide();\n                }\n                else {\n                    // Try show axis tooltip\n                    this._showAxisTooltip(tooltipModel, ecModel, e);\n                }\n\n                // Action of cross pointer\n                // other pointer types will trigger action in _dispatchAndShowSeriesTooltipContent method\n                if (tooltipModel.get('axisPointer.type') === 'cross') {\n                    api.dispatchAction({\n                        type: 'showTip',\n                        from: this.uid,\n                        x: e.offsetX,\n                        y: e.offsetY\n                    });\n                }\n            }\n        },\n\n        /**\n         * Show tooltip on axis\n         * @param {module:echarts/component/tooltip/TooltipModel} tooltipModel\n         * @param {module:echarts/model/Global} ecModel\n         * @param {Object} e\n         * @private\n         */\n        _showAxisTooltip: function (tooltipModel, ecModel, e) {\n            var axisPointerModel = tooltipModel.getModel('axisPointer');\n            var axisPointerType = axisPointerModel.get('type');\n\n            if (axisPointerType === 'cross') {\n                var el = e.target;\n                if (el && el.dataIndex != null) {\n                    var seriesModel = ecModel.getSeriesByIndex(el.seriesIndex);\n                    var dataIndex = el.dataIndex;\n                    this._showItemTooltipContent(seriesModel, dataIndex, el.dataType, e);\n                }\n            }\n\n            this._showAxisPointer();\n            var allNotShow = true;\n            zrUtil.each(this._seriesGroupByAxis, function (seriesCoordSysSameAxis) {\n                // Try show the axis pointer\n                var allCoordSys = seriesCoordSysSameAxis.coordSys;\n                var coordSys = allCoordSys[0];\n\n                // If mouse position is not in the grid or polar\n                var point = [e.offsetX, e.offsetY];\n\n                if (!coordSys.containPoint(point)) {\n                    // Hide axis pointer\n                    this._hideAxisPointer(coordSys.name);\n                    return;\n                }\n\n                allNotShow = false;\n                // Make sure point is discrete on cateogry axis\n                var dimensions = coordSys.dimensions;\n                var value = coordSys.pointToData(point, true);\n                point = coordSys.dataToPoint(value);\n\n                var baseAxis = coordSys.getBaseAxis();\n                var axisType = axisPointerModel.get('axis');\n                if (axisType === 'auto') {\n                    axisType = baseAxis.dim;\n                }\n\n                if (baseAxis.isBlank() || zrUtil.eqNaN(point[0]) || zrUtil.eqNaN(point[1])) {\n                    this._hideAxisPointer(coordSys.name);\n                    return;\n                }\n\n                var contentNotChange = false;\n                var lastHover = this._lastHover;\n                if (axisPointerType === 'cross') {\n                    // If hover data not changed\n                    // Possible when two axes are all category\n                    if (dataEqual(lastHover.data, value)) {\n                        contentNotChange = true;\n                    }\n                    lastHover.data = value;\n                }\n                else {\n                    var valIndex = zrUtil.indexOf(dimensions, axisType);\n\n                    // If hover data not changed on the axis dimension\n                    if (lastHover.data === value[valIndex]) {\n                        contentNotChange = true;\n                    }\n                    lastHover.data = value[valIndex];\n                }\n\n                var enableAnimation = tooltipModel.get('animation');\n\n                if (coordSys.type === 'cartesian2d' && !contentNotChange) {\n                    this._showCartesianPointer(\n                        axisPointerModel, coordSys, axisType, point, enableAnimation\n                    );\n                }\n                else if (coordSys.type === 'polar' && !contentNotChange) {\n                    this._showPolarPointer(\n                        axisPointerModel, coordSys, axisType, point, enableAnimation\n                    );\n                }\n                else if (coordSys.type === 'singleAxis' && !contentNotChange) {\n                    this._showSinglePointer(\n                        axisPointerModel, coordSys, axisType, point, enableAnimation\n                    );\n                }\n\n                if (axisPointerType !== 'cross') {\n                    this._dispatchAndShowSeriesTooltipContent(\n                        coordSys, seriesCoordSysSameAxis.series, point, value, contentNotChange, e.position\n                    );\n                }\n            }, this);\n\n            if (!this._tooltipModel.get('show')) {\n                this._hideAxisPointer();\n            }\n\n            if (allNotShow) {\n                this._hide();\n            }\n        },\n\n        /**\n         * Show tooltip on axis of cartesian coordinate\n         * @param {module:echarts/model/Model} axisPointerModel\n         * @param {module:echarts/coord/cartesian/Cartesian2D} cartesians\n         * @param {string} axisType\n         * @param {Array.<number>} point\n         * @private\n         */\n        _showCartesianPointer: function (axisPointerModel, cartesian, axisType, point, enableAnimation) {\n            var self = this;\n\n            var axisPointerType = axisPointerModel.get('type');\n            var baseAxis = cartesian.getBaseAxis();\n            var moveAnimation = enableAnimation\n                && axisPointerType !== 'cross'\n                && baseAxis.type === 'category'\n                && baseAxis.getBandWidth() > 20;\n\n            if (axisPointerType === 'cross') {\n                moveGridLine('x', point, cartesian.getAxis('y').getGlobalExtent());\n                moveGridLine('y', point, cartesian.getAxis('x').getGlobalExtent());\n\n                this._updateCrossText(cartesian, point, axisPointerModel);\n            }\n            else {\n                var otherAxis = cartesian.getAxis(axisType === 'x' ? 'y' : 'x');\n                var otherExtent = otherAxis.getGlobalExtent();\n\n                if (cartesian.type === 'cartesian2d') {\n                    (axisPointerType === 'line' ? moveGridLine : moveGridShadow)(\n                        axisType, point, otherExtent\n                    );\n                }\n            }\n\n            /**\n             * @inner\n             */\n            function moveGridLine(axisType, point, otherExtent) {\n                var targetShape = axisType === 'x'\n                    ? makeLineShape(point[0], otherExtent[0], point[0], otherExtent[1])\n                    : makeLineShape(otherExtent[0], point[1], otherExtent[1], point[1]);\n\n                var pointerEl = self._getPointerElement(\n                    cartesian, axisPointerModel, axisType, targetShape\n                );\n                graphic.subPixelOptimizeLine({\n                    shape: targetShape,\n                    style: pointerEl.style\n                });\n\n                moveAnimation\n                    ? graphic.updateProps(pointerEl, {\n                        shape: targetShape\n                    }, axisPointerModel)\n                    :  pointerEl.attr({\n                        shape: targetShape\n                    });\n            }\n\n            /**\n             * @inner\n             */\n            function moveGridShadow(axisType, point, otherExtent) {\n                var axis = cartesian.getAxis(axisType);\n                var bandWidth = axis.getBandWidth();\n                var span = otherExtent[1] - otherExtent[0];\n                var targetShape = axisType === 'x'\n                    ? makeRectShape(point[0] - bandWidth / 2, otherExtent[0], bandWidth, span)\n                    : makeRectShape(otherExtent[0], point[1] - bandWidth / 2, span, bandWidth);\n\n                var pointerEl = self._getPointerElement(\n                    cartesian, axisPointerModel, axisType, targetShape\n                );\n                moveAnimation\n                    ? graphic.updateProps(pointerEl, {\n                        shape: targetShape\n                    }, axisPointerModel)\n                    :  pointerEl.attr({\n                        shape: targetShape\n                    });\n            }\n        },\n\n        _showSinglePointer: function (axisPointerModel, single, axisType, point, enableAnimation) {\n            var self = this;\n            var axisPointerType = axisPointerModel.get('type');\n            var moveAnimation =\n                enableAnimation\n                && axisPointerType !== 'cross'\n                && single.getBaseAxis().type === 'category';\n            var rect = single.getRect();\n            var otherExtent = [rect.y, rect.y + rect.height];\n\n            moveSingleLine(axisType, point, otherExtent);\n\n            /**\n             * @inner\n             */\n            function moveSingleLine(axisType, point, otherExtent) {\n                var axis = single.getAxis();\n                var orient = axis.orient;\n\n                var targetShape = orient === 'horizontal'\n                    ? makeLineShape(point[0], otherExtent[0], point[0], otherExtent[1])\n                    : makeLineShape(otherExtent[0], point[1], otherExtent[1], point[1]);\n\n                var pointerEl = self._getPointerElement(\n                    single, axisPointerModel, axisType, targetShape\n                );\n                moveAnimation\n                    ? graphic.updateProps(pointerEl, {\n                        shape: targetShape\n                    }, axisPointerModel)\n                    :  pointerEl.attr({\n                        shape: targetShape\n                    });\n            }\n\n        },\n\n        /**\n         * Show tooltip on axis of polar coordinate\n         * @param {module:echarts/model/Model} axisPointerModel\n         * @param {Array.<module:echarts/coord/polar/Polar>} polar\n         * @param {string} axisType\n         * @param {Array.<number>} point\n         */\n        _showPolarPointer: function (axisPointerModel, polar, axisType, point, enableAnimation) {\n            var self = this;\n\n            var axisPointerType = axisPointerModel.get('type');\n\n            var angleAxis = polar.getAngleAxis();\n            var radiusAxis = polar.getRadiusAxis();\n\n            var moveAnimation = enableAnimation\n                && axisPointerType !== 'cross'\n                && polar.getBaseAxis().type === 'category';\n\n            if (axisPointerType === 'cross') {\n                movePolarLine('angle', point, radiusAxis.getExtent());\n                movePolarLine('radius', point, angleAxis.getExtent());\n\n                this._updateCrossText(polar, point, axisPointerModel);\n            }\n            else {\n                var otherAxis = polar.getAxis(axisType === 'radius' ? 'angle' : 'radius');\n                var otherExtent = otherAxis.getExtent();\n\n                (axisPointerType === 'line' ? movePolarLine : movePolarShadow)(\n                    axisType, point, otherExtent\n                );\n            }\n            /**\n             * @inner\n             */\n            function movePolarLine(axisType, point, otherExtent) {\n                var mouseCoord = polar.pointToCoord(point);\n\n                var targetShape;\n\n                if (axisType === 'angle') {\n                    var p1 = polar.coordToPoint([otherExtent[0], mouseCoord[1]]);\n                    var p2 = polar.coordToPoint([otherExtent[1], mouseCoord[1]]);\n                    targetShape = makeLineShape(p1[0], p1[1], p2[0], p2[1]);\n                }\n                else {\n                    targetShape = {\n                        cx: polar.cx,\n                        cy: polar.cy,\n                        r: mouseCoord[0]\n                    };\n                }\n\n                var pointerEl = self._getPointerElement(\n                    polar, axisPointerModel, axisType, targetShape\n                );\n\n                moveAnimation\n                    ? graphic.updateProps(pointerEl, {\n                        shape: targetShape\n                    }, axisPointerModel)\n                    :  pointerEl.attr({\n                        shape: targetShape\n                    });\n            }\n\n            /**\n             * @inner\n             */\n            function movePolarShadow(axisType, point, otherExtent) {\n                var axis = polar.getAxis(axisType);\n                var bandWidth = axis.getBandWidth();\n\n                var mouseCoord = polar.pointToCoord(point);\n\n                var targetShape;\n\n                var radian = Math.PI / 180;\n\n                if (axisType === 'angle') {\n                    targetShape = makeSectorShape(\n                        polar.cx, polar.cy,\n                        otherExtent[0], otherExtent[1],\n                        // In ECharts y is negative if angle is positive\n                        (-mouseCoord[1] - bandWidth / 2) * radian,\n                        (-mouseCoord[1] + bandWidth / 2) * radian\n                    );\n                }\n                else {\n                    targetShape = makeSectorShape(\n                        polar.cx, polar.cy,\n                        mouseCoord[0] - bandWidth / 2,\n                        mouseCoord[0] + bandWidth / 2,\n                        0, Math.PI * 2\n                    );\n                }\n\n                var pointerEl = self._getPointerElement(\n                    polar, axisPointerModel, axisType, targetShape\n                );\n                moveAnimation\n                    ? graphic.updateProps(pointerEl, {\n                        shape: targetShape\n                    }, axisPointerModel)\n                    :  pointerEl.attr({\n                        shape: targetShape\n                    });\n            }\n        },\n\n        _updateCrossText: function (coordSys, point, axisPointerModel) {\n            var crossStyleModel = axisPointerModel.getModel('crossStyle');\n            var textStyleModel = crossStyleModel.getModel('textStyle');\n\n            var tooltipModel = this._tooltipModel;\n\n            var text = this._crossText;\n            if (!text) {\n                text = this._crossText = new graphic.Text({\n                    style: {\n                        textAlign: 'left',\n                        textVerticalAlign: 'bottom'\n                    }\n                });\n                this.group.add(text);\n            }\n\n            var value = coordSys.pointToData(point);\n\n            var dims = coordSys.dimensions;\n            value = zrUtil.map(value, function (val, idx) {\n                var axis = coordSys.getAxis(dims[idx]);\n                if (axis.type === 'category' || axis.type === 'time') {\n                    val = axis.scale.getLabel(val);\n                }\n                else {\n                    val = formatUtil.addCommas(\n                        val.toFixed(axis.getPixelPrecision())\n                    );\n                }\n                return val;\n            });\n\n            text.setStyle({\n                fill: textStyleModel.getTextColor() || crossStyleModel.get('color'),\n                textFont: textStyleModel.getFont(),\n                text: value.join(', '),\n                x: point[0] + 5,\n                y: point[1] - 5\n            });\n            text.z = tooltipModel.get('z');\n            text.zlevel = tooltipModel.get('zlevel');\n        },\n\n        _getPointerElement: function (coordSys, pointerModel, axisType, initShape) {\n            var tooltipModel = this._tooltipModel;\n            var z = tooltipModel.get('z');\n            var zlevel = tooltipModel.get('zlevel');\n            var axisPointers = this._axisPointers;\n            var coordSysName = coordSys.name;\n            axisPointers[coordSysName] = axisPointers[coordSysName] || {};\n            if (axisPointers[coordSysName][axisType]) {\n                return axisPointers[coordSysName][axisType];\n            }\n\n            // Create if not exists\n            var pointerType = pointerModel.get('type');\n            var styleModel = pointerModel.getModel(pointerType + 'Style');\n            var isShadow = pointerType === 'shadow';\n            var style = styleModel[isShadow ? 'getAreaStyle' : 'getLineStyle']();\n\n            var elementType = coordSys.type === 'polar'\n                ? (isShadow ? 'Sector' : (axisType === 'radius' ? 'Circle' : 'Line'))\n                : (isShadow ? 'Rect' : 'Line');\n\n            isShadow ? (style.stroke = null) : (style.fill = null);\n\n            var el = axisPointers[coordSysName][axisType] = new graphic[elementType]({\n                style: style,\n                z: z,\n                zlevel: zlevel,\n                silent: true,\n                shape: initShape\n            });\n\n            this.group.add(el);\n            return el;\n        },\n\n        /**\n         * Dispatch actions and show tooltip on series\n         * @param {Array.<module:echarts/model/Series>} seriesList\n         * @param {Array.<number>} point\n         * @param {Array.<number>} value\n         * @param {boolean} contentNotChange\n         * @param {Array.<number>|string|Function} [positionExpr]\n         */\n        _dispatchAndShowSeriesTooltipContent: function (\n            coordSys, seriesList, point, value, contentNotChange, positionExpr\n        ) {\n\n            var rootTooltipModel = this._tooltipModel;\n\n            var baseAxis = coordSys.getBaseAxis();\n            var baseDimIndex = ({x: 1, radius: 1, single: 1})[baseAxis.dim] ? 0 : 1;\n\n            if (!seriesList.length) {\n                return;\n            }\n\n            var payloadBatch = zrUtil.map(seriesList, function (series) {\n                return {\n                    seriesIndex: series.seriesIndex,\n                    dataIndexInside: series.getAxisTooltipDataIndex\n                        ? series.getAxisTooltipDataIndex(series.coordDimToDataDim(baseAxis.dim), value, baseAxis)\n                        : series.getData().indexOfNearest(\n                            series.coordDimToDataDim(baseAxis.dim)[0],\n                            value[baseDimIndex],\n                            // Add a threshold to avoid find the wrong dataIndex when data length is not same\n                            false, baseAxis.type === 'category' ? 0.5 : null\n                        )\n                };\n            });\n            var sampleSeriesIndex;\n            zrUtil.each(payloadBatch, function (payload, idx) {\n                if (seriesList[idx].getData().hasValue(payload.dataIndexInside)) {\n                    sampleSeriesIndex = idx;\n                }\n            });\n            // Fallback to 0.\n            sampleSeriesIndex = sampleSeriesIndex || 0;\n\n            var lastHover = this._lastHover;\n            var api = this._api;\n            // Dispatch downplay action\n            if (lastHover.payloadBatch && !contentNotChange) {\n                api.dispatchAction({\n                    type: 'downplay',\n                    batch: lastHover.payloadBatch\n                });\n            }\n            // Dispatch highlight action\n            if (!contentNotChange) {\n                api.dispatchAction({\n                    type: 'highlight',\n                    batch: payloadBatch\n                });\n                lastHover.payloadBatch = payloadBatch;\n            }\n            // Dispatch showTip action\n            var dataIndex = payloadBatch[sampleSeriesIndex].dataIndexInside;\n            api.dispatchAction({\n                type: 'showTip',\n                dataIndexInside: dataIndex,\n                // expose to user.\n                dataIndex: seriesList[sampleSeriesIndex].getData().getRawIndex(dataIndex),\n                seriesIndex: payloadBatch[sampleSeriesIndex].seriesIndex,\n                from: this.uid\n            });\n\n            if (baseAxis && rootTooltipModel.get('showContent') && rootTooltipModel.get('show')) {\n                var paramsList = zrUtil.map(seriesList, function (series, index) {\n                    return series.getDataParams(payloadBatch[index].dataIndexInside);\n                });\n\n                if (!contentNotChange) {\n                    // Update html content\n                    var firstDataIndex = payloadBatch[sampleSeriesIndex].dataIndexInside;\n\n                    // Default tooltip content\n                    // FIXME\n                    // (1) shold be the first data which has name?\n                    // (2) themeRiver, firstDataIndex is array, and first line is unnecessary.\n                    var firstLine = baseAxis.type === 'time'\n                        ? baseAxis.scale.getLabel(value[baseDimIndex])\n                        : seriesList[sampleSeriesIndex].getData().getName(firstDataIndex);\n                    var defaultHtml = (firstLine ? formatUtil.encodeHTML(firstLine) + '<br />' : '')\n                        + zrUtil.map(seriesList, function (series, index) {\n                            return series.formatTooltip(payloadBatch[index].dataIndexInside, true);\n                        }).join('<br />');\n\n                    var asyncTicket = 'axis_' + coordSys.name + '_' + firstDataIndex;\n\n                    this._showTooltipContent(\n                        rootTooltipModel, defaultHtml, paramsList, asyncTicket,\n                        point[0], point[1], positionExpr, null, api\n                    );\n                }\n                else {\n                    updatePosition(\n                        positionExpr || rootTooltipModel.get('position'),\n                        point[0], point[1],\n                        rootTooltipModel.get('confine'),\n                        this._tooltipContent, paramsList, null, api\n                    );\n                }\n            }\n        },\n\n        /**\n         * Show tooltip on item\n         * @param {module:echarts/model/Series} seriesModel\n         * @param {number} dataIndex\n         * @param {string} dataType\n         * @param {Object} e\n         */\n        _showItemTooltipContent: function (seriesModel, dataIndex, dataType, e) {\n            // FIXME Graph data\n            var api = this._api;\n            var data = seriesModel.getData(dataType);\n            var itemModel = data.getItemModel(dataIndex);\n\n            var tooltipOpt = itemModel.get('tooltip', true);\n            if (typeof tooltipOpt === 'string') {\n                // In each data item tooltip can be simply write:\n                // {\n                //  value: 10,\n                //  tooltip: 'Something you need to know'\n                // }\n                var tooltipContent = tooltipOpt;\n                tooltipOpt = {\n                    formatter: tooltipContent\n                };\n            }\n            var rootTooltipModel = this._tooltipModel;\n            var seriesTooltipModel = seriesModel.getModel(\n                'tooltip', rootTooltipModel\n            );\n            var tooltipModel = new Model(tooltipOpt, seriesTooltipModel, seriesTooltipModel.ecModel);\n\n            var params = seriesModel.getDataParams(dataIndex, dataType);\n            var defaultHtml = seriesModel.formatTooltip(dataIndex, false, dataType);\n\n            var asyncTicket = 'item_' + seriesModel.name + '_' + dataIndex;\n\n            this._showTooltipContent(\n                tooltipModel, defaultHtml, params, asyncTicket,\n                e.offsetX, e.offsetY, e.position, e.target, api\n            );\n        },\n\n        _showTooltipContent: function (\n            tooltipModel, defaultHtml, params, asyncTicket, x, y, positionExpr, target, api\n        ) {\n            // Reset ticket\n            this._ticket = '';\n\n            if (tooltipModel.get('showContent') && tooltipModel.get('show')) {\n                var tooltipContent = this._tooltipContent;\n                var confine = tooltipModel.get('confine');\n\n                var formatter = tooltipModel.get('formatter');\n                positionExpr = positionExpr || tooltipModel.get('position');\n                var html = defaultHtml;\n\n                if (formatter) {\n                    if (typeof formatter === 'string') {\n                        html = formatUtil.formatTpl(formatter, params, true);\n                    }\n                    else if (typeof formatter === 'function') {\n                        var self = this;\n                        var ticket = asyncTicket;\n                        var callback = function (cbTicket, html) {\n                            if (cbTicket === self._ticket) {\n                                tooltipContent.setContent(html);\n\n                                updatePosition(\n                                    positionExpr, x, y, confine,\n                                    tooltipContent, params, target, api\n                                );\n                            }\n                        };\n                        self._ticket = ticket;\n                        html = formatter(params, ticket, callback);\n                    }\n                }\n\n                tooltipContent.show(tooltipModel);\n                tooltipContent.setContent(html);\n\n                updatePosition(\n                    positionExpr, x, y, confine,\n                    tooltipContent, params, target, api\n                );\n            }\n        },\n\n        /**\n         * Show axis pointer\n         * @param {string} [coordSysName]\n         */\n        _showAxisPointer: function (coordSysName) {\n            if (coordSysName) {\n                var axisPointers = this._axisPointers[coordSysName];\n                axisPointers && zrUtil.each(axisPointers, function (el) {\n                    el.show();\n                });\n            }\n            else {\n                this.group.eachChild(function (child) {\n                    child.show();\n                });\n                this.group.show();\n            }\n        },\n\n        _resetLastHover: function () {\n            var lastHover = this._lastHover;\n            if (lastHover.payloadBatch) {\n                this._api.dispatchAction({\n                    type: 'downplay',\n                    batch: lastHover.payloadBatch\n                });\n            }\n            // Reset lastHover\n            this._lastHover = {};\n        },\n        /**\n         * Hide axis pointer\n         * @param {string} [coordSysName]\n         */\n        _hideAxisPointer: function (coordSysName) {\n            if (coordSysName) {\n                var axisPointers = this._axisPointers[coordSysName];\n                axisPointers && zrUtil.each(axisPointers, function (el) {\n                    el.hide();\n                });\n            }\n            else {\n                if (this.group.children().length) {\n                    this.group.hide();\n                }\n            }\n        },\n\n        _hide: function () {\n            clearTimeout(this._showTimeout);\n\n            this._hideAxisPointer();\n            this._resetLastHover();\n            if (!this._alwaysShowContent) {\n                this._tooltipContent.hideLater(this._tooltipModel.get('hideDelay'));\n            }\n\n            this._api.dispatchAction({\n                type: 'hideTip',\n                from: this.uid\n            });\n\n            this._lastX = this._lastY = null;\n        },\n\n        dispose: function (ecModel, api) {\n            if (env.node) {\n                return;\n            }\n            var zr = api.getZr();\n            this._tooltipContent.hide();\n\n            zr.off('click', this._tryShow);\n            zr.off('mousemove', this._mousemove);\n            zr.off('mouseout', this._hide);\n            zr.off('globalout', this._hide);\n        }\n    });\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/tooltip/TooltipView.js\n// module id = 563\n// module chunks = 0 1","\n\n    var numberUtil = require('../util/number');\n    var linearMap = numberUtil.linearMap;\n    var zrUtil = require('zrender/lib/core/util');\n\n    function fixExtentWithBands(extent, nTick) {\n        var size = extent[1] - extent[0];\n        var len = nTick;\n        var margin = size / len / 2;\n        extent[0] += margin;\n        extent[1] -= margin;\n    }\n\n    var normalizedExtent = [0, 1];\n    /**\n     * @name module:echarts/coord/CartesianAxis\n     * @constructor\n     */\n    var Axis = function (dim, scale, extent) {\n\n        /**\n         * Axis dimension. Such as 'x', 'y', 'z', 'angle', 'radius'\n         * @type {string}\n         */\n        this.dim = dim;\n\n        /**\n         * Axis scale\n         * @type {module:echarts/coord/scale/*}\n         */\n        this.scale = scale;\n\n        /**\n         * @type {Array.<number>}\n         * @private\n         */\n        this._extent = extent || [0, 0];\n\n        /**\n         * @type {boolean}\n         */\n        this.inverse = false;\n\n        /**\n         * Usually true when axis has a ordinal scale\n         * @type {boolean}\n         */\n        this.onBand = false;\n    };\n\n    Axis.prototype = {\n\n        constructor: Axis,\n\n        /**\n         * If axis extent contain given coord\n         * @param {number} coord\n         * @return {boolean}\n         */\n        contain: function (coord) {\n            var extent = this._extent;\n            var min = Math.min(extent[0], extent[1]);\n            var max = Math.max(extent[0], extent[1]);\n            return coord >= min && coord <= max;\n        },\n\n        /**\n         * If axis extent contain given data\n         * @param {number} data\n         * @return {boolean}\n         */\n        containData: function (data) {\n            return this.contain(this.dataToCoord(data));\n        },\n\n        /**\n         * Get coord extent.\n         * @return {Array.<number>}\n         */\n        getExtent: function () {\n            var ret = this._extent.slice();\n            return ret;\n        },\n\n        /**\n         * Get precision used for formatting\n         * @param {Array.<number>} [dataExtent]\n         * @return {number}\n         */\n        getPixelPrecision: function (dataExtent) {\n            return numberUtil.getPixelPrecision(\n                dataExtent || this.scale.getExtent(),\n                this._extent\n            );\n        },\n\n        /**\n         * Set coord extent\n         * @param {number} start\n         * @param {number} end\n         */\n        setExtent: function (start, end) {\n            var extent = this._extent;\n            extent[0] = start;\n            extent[1] = end;\n        },\n\n        /**\n         * Convert data to coord. Data is the rank if it has a ordinal scale\n         * @param {number} data\n         * @param  {boolean} clamp\n         * @return {number}\n         */\n        dataToCoord: function (data, clamp) {\n            var extent = this._extent;\n            var scale = this.scale;\n            data = scale.normalize(data);\n\n            if (this.onBand && scale.type === 'ordinal') {\n                extent = extent.slice();\n                fixExtentWithBands(extent, scale.count());\n            }\n\n            return linearMap(data, normalizedExtent, extent, clamp);\n        },\n\n        /**\n         * Convert coord to data. Data is the rank if it has a ordinal scale\n         * @param {number} coord\n         * @param  {boolean} clamp\n         * @return {number}\n         */\n        coordToData: function (coord, clamp) {\n            var extent = this._extent;\n            var scale = this.scale;\n\n            if (this.onBand && scale.type === 'ordinal') {\n                extent = extent.slice();\n                fixExtentWithBands(extent, scale.count());\n            }\n\n            var t = linearMap(coord, extent, normalizedExtent, clamp);\n\n            return this.scale.scale(t);\n        },\n        /**\n         * @return {Array.<number>}\n         */\n        getTicksCoords: function (alignWithLabel) {\n            if (this.onBand && !alignWithLabel) {\n                var bands = this.getBands();\n                var coords = [];\n                for (var i = 0; i < bands.length; i++) {\n                    coords.push(bands[i][0]);\n                }\n                if (bands[i - 1]) {\n                    coords.push(bands[i - 1][1]);\n                }\n                return coords;\n            }\n            else {\n                return zrUtil.map(this.scale.getTicks(), this.dataToCoord, this);\n            }\n        },\n\n        /**\n         * Coords of labels are on the ticks or on the middle of bands\n         * @return {Array.<number>}\n         */\n        getLabelsCoords: function () {\n            return zrUtil.map(this.scale.getTicks(), this.dataToCoord, this);\n        },\n\n        /**\n         * Get bands.\n         *\n         * If axis has labels [1, 2, 3, 4]. Bands on the axis are\n         * |---1---|---2---|---3---|---4---|.\n         *\n         * @return {Array}\n         */\n         // FIXME Situation when labels is on ticks\n        getBands: function () {\n            var extent = this.getExtent();\n            var bands = [];\n            var len = this.scale.count();\n            var start = extent[0];\n            var end = extent[1];\n            var span = end - start;\n\n            for (var i = 0; i < len; i++) {\n                bands.push([\n                    span * i / len + start,\n                    span * (i + 1) / len + start\n                ]);\n            }\n            return bands;\n        },\n\n        /**\n         * Get width of band\n         * @return {number}\n         */\n        getBandWidth: function () {\n            var axisExtent = this._extent;\n            var dataExtent = this.scale.getExtent();\n\n            var len = dataExtent[1] - dataExtent[0] + (this.onBand ? 1 : 0);\n            // Fix #2728, avoid NaN when only one data.\n            len === 0 && (len = 1);\n\n            var size = Math.abs(axisExtent[1] - axisExtent[0]);\n\n            return Math.abs(size) / len;\n        },\n\n        /**\n         * When axis extent depends on data and no data exists,\n         * axis ticks should not be drawn, which is named 'blank'.\n         */\n        isBlank: function () {\n            return this._isBlank;\n        },\n\n        /**\n         * When axis extent depends on data and no data exists,\n         * axis ticks should not be drawn, which is named 'blank'.\n         */\n        setBlank: function (isBlank) {\n            this._isBlank = isBlank;\n        }\n\n    };\n\n    module.exports = Axis;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/coord/Axis.js\n// module id = 564\n// module chunks = 0 1","\n\n    var zrUtil = require('zrender/lib/core/util');\n\n    var defaultOption = {\n        show: true,\n        zlevel: 0,                  // 一级层叠\n        z: 0,                       // 二级层叠\n        // 反向坐标轴\n        inverse: false,\n\n        // 坐标轴名字，默认为空\n        name: '',\n        // 坐标轴名字位置，支持'start' | 'middle' | 'end'\n        nameLocation: 'end',\n        // 坐标轴名字旋转，degree。\n        nameRotate: null, // Adapt to axis rotate, when nameLocation is 'middle'.\n        nameTruncate: {\n            maxWidth: null,\n            ellipsis: '...',\n            placeholder: '.'\n        },\n        // 坐标轴文字样式，默认取全局样式\n        nameTextStyle: {},\n        // 文字与轴线距离\n        nameGap: 15,\n\n        silent: false, // Default false to support tooltip.\n        triggerEvent: false, // Default false to avoid legacy user event listener fail.\n\n        tooltip: {\n            show: false\n        },\n\n        // 坐标轴线\n        axisLine: {\n            // 默认显示，属性show控制显示与否\n            show: true,\n            onZero: true,\n            // 属性lineStyle控制线条样式\n            lineStyle: {\n                color: '#333',\n                width: 1,\n                type: 'solid'\n            }\n        },\n        // 坐标轴小标记\n        axisTick: {\n            // 属性show控制显示与否，默认显示\n            show: true,\n            // 控制小标记是否在grid里\n            inside: false,\n            // 属性length控制线长\n            length: 5,\n            // 属性lineStyle控制线条样式\n            lineStyle: {\n                width: 1\n            }\n        },\n        // 坐标轴文本标签，详见axis.axisLabel\n        axisLabel: {\n            show: true,\n            // 控制文本标签是否在grid里\n            inside: false,\n            rotate: 0,\n            margin: 8,\n            // formatter: null,\n            // 其余属性默认使用全局文本样式，详见TEXTSTYLE\n            textStyle: {\n                fontSize: 12\n            }\n        },\n        // 分隔线\n        splitLine: {\n            // 默认显示，属性show控制显示与否\n            show: true,\n            // 属性lineStyle（详见lineStyle）控制线条样式\n            lineStyle: {\n                color: ['#ccc'],\n                width: 1,\n                type: 'solid'\n            }\n        },\n        // 分隔区域\n        splitArea: {\n            // 默认不显示，属性show控制显示与否\n            show: false,\n            // 属性areaStyle（详见areaStyle）控制区域样式\n            areaStyle: {\n                color: ['rgba(250,250,250,0.3)','rgba(200,200,200,0.3)']\n            }\n        }\n    };\n\n    var categoryAxis = zrUtil.merge({\n        // 类目起始和结束两端空白策略\n        boundaryGap: true,\n        // splitArea: {\n            // show: false\n        // },\n        splitLine: {\n            show: false\n        },\n        // 坐标轴小标记\n        axisTick: {\n            // If tick is align with label when boundaryGap is true\n            // Default with axisTick\n            alignWithLabel: false,\n            interval: 'auto'\n        },\n        // 坐标轴文本标签，详见axis.axisLabel\n        axisLabel: {\n            interval: 'auto'\n        }\n    }, defaultOption);\n\n    var valueAxis = zrUtil.merge({\n        // 数值起始和结束两端空白策略\n        boundaryGap: [0, 0],\n        // 最小值, 设置成 'dataMin' 则从数据中计算最小值\n        // min: null,\n        // 最大值，设置成 'dataMax' 则从数据中计算最大值\n        // max: null,\n        // Readonly prop, specifies start value of the range when using data zoom.\n        // rangeStart: null\n        // Readonly prop, specifies end value of the range when using data zoom.\n        // rangeEnd: null\n        // 脱离0值比例，放大聚焦到最终_min，_max区间\n        // scale: false,\n        // 分割段数，默认为5\n        splitNumber: 5\n        // Minimum interval\n        // minInterval: null\n    }, defaultOption);\n\n    // FIXME\n    var timeAxis = zrUtil.defaults({\n        scale: true,\n        min: 'dataMin',\n        max: 'dataMax'\n    }, valueAxis);\n    var logAxis = zrUtil.defaults({\n        logBase: 10\n    }, valueAxis);\n    logAxis.scale = true;\n\n    module.exports = {\n        categoryAxis: categoryAxis,\n        valueAxis: valueAxis,\n        timeAxis: timeAxis,\n        logAxis: logAxis\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/coord/axisDefault.js\n// module id = 565\n// module chunks = 0 1","\n\n    var zrUtil = require('zrender/lib/core/util');\n    var axisHelper = require('./axisHelper');\n\n    function getName(obj) {\n        if (zrUtil.isObject(obj) && obj.value != null) {\n            return obj.value;\n        }\n        else {\n            return obj;\n        }\n    }\n\n    module.exports = {\n\n        /**\n         * Format labels\n         * @return {Array.<string>}\n         */\n        getFormattedLabels: function () {\n            return axisHelper.getFormattedLabels(\n                this.axis,\n                this.get('axisLabel.formatter')\n            );\n        },\n\n        /**\n         * Get categories\n         */\n        getCategories: function () {\n            return this.get('type') === 'category'\n                && zrUtil.map(this.get('data'), getName);\n        },\n\n        /**\n         * @param {boolean} origin\n         * @return {number|string} min value or 'dataMin' or null/undefined (means auto) or NaN\n         */\n        getMin: function (origin) {\n            var option = this.option;\n            var min = (!origin && option.rangeStart != null)\n                ? option.rangeStart : option.min;\n\n            if (min != null && min !== 'dataMin' && !zrUtil.eqNaN(min)) {\n                min = this.axis.scale.parse(min);\n            }\n            return min;\n        },\n\n        /**\n         * @param {boolean} origin\n         * @return {number|string} max value or 'dataMax' or null/undefined (means auto) or NaN\n         */\n        getMax: function (origin) {\n            var option = this.option;\n            var max = (!origin && option.rangeEnd != null)\n                ? option.rangeEnd : option.max;\n\n            if (max != null && max !== 'dataMax' && !zrUtil.eqNaN(max)) {\n                max = this.axis.scale.parse(max);\n            }\n            return max;\n        },\n\n        /**\n         * @return {boolean}\n         */\n        getNeedCrossZero: function () {\n            var option = this.option;\n            return (option.rangeStart != null || option.rangeEnd != null)\n                ? false : !option.scale;\n        },\n\n        /**\n         * Should be implemented by each axis model if necessary.\n         * @return {module:echarts/model/Component} coordinate system model\n         */\n        getCoordSysModel: zrUtil.noop,\n\n        /**\n         * @param {number} rangeStart Can only be finite number or null/undefined or NaN.\n         * @param {number} rangeEnd Can only be finite number or null/undefined or NaN.\n         */\n        setRange: function (rangeStart, rangeEnd) {\n            this.option.rangeStart = rangeStart;\n            this.option.rangeEnd = rangeEnd;\n        },\n\n        /**\n         * Reset range\n         */\n        resetRange: function () {\n            // rangeStart and rangeEnd is readonly.\n            this.option.rangeStart = this.option.rangeEnd = null;\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/coord/axisModelCommonMixin.js\n// module id = 566\n// module chunks = 0 1","\n\n    var axisDefault = require('./axisDefault');\n    var zrUtil = require('zrender/lib/core/util');\n    var ComponentModel = require('../model/Component');\n    var layout = require('../util/layout');\n\n    // FIXME axisType is fixed ?\n    var AXIS_TYPES = ['value', 'category', 'time', 'log'];\n\n    /**\n     * Generate sub axis model class\n     * @param {string} axisName 'x' 'y' 'radius' 'angle' 'parallel'\n     * @param {module:echarts/model/Component} BaseAxisModelClass\n     * @param {Function} axisTypeDefaulter\n     * @param {Object} [extraDefaultOption]\n     */\n    module.exports = function (axisName, BaseAxisModelClass, axisTypeDefaulter, extraDefaultOption) {\n\n        zrUtil.each(AXIS_TYPES, function (axisType) {\n\n            BaseAxisModelClass.extend({\n\n                type: axisName + 'Axis.' + axisType,\n\n                mergeDefaultAndTheme: function (option, ecModel) {\n                    var layoutMode = this.layoutMode;\n                    var inputPositionParams = layoutMode\n                        ? layout.getLayoutParams(option) : {};\n\n                    var themeModel = ecModel.getTheme();\n                    zrUtil.merge(option, themeModel.get(axisType + 'Axis'));\n                    zrUtil.merge(option, this.getDefaultOption());\n\n                    option.type = axisTypeDefaulter(axisName, option);\n\n                    if (layoutMode) {\n                        layout.mergeLayoutParam(option, inputPositionParams, layoutMode);\n                    }\n                },\n\n                defaultOption: zrUtil.mergeAll(\n                    [\n                        {},\n                        axisDefault[axisType + 'Axis'],\n                        extraDefaultOption\n                    ],\n                    true\n                )\n            });\n        });\n\n        ComponentModel.registerSubTypeDefaulter(\n            axisName + 'Axis',\n            zrUtil.curry(axisTypeDefaulter, axisName)\n        );\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/coord/axisModelCreator.js\n// module id = 567\n// module chunks = 0 1","\n\n    var zrUtil = require('zrender/lib/core/util');\n    var Axis = require('../Axis');\n    var axisLabelInterval = require('./axisLabelInterval');\n\n    /**\n     * Extend axis 2d\n     * @constructor module:echarts/coord/cartesian/Axis2D\n     * @extends {module:echarts/coord/cartesian/Axis}\n     * @param {string} dim\n     * @param {*} scale\n     * @param {Array.<number>} coordExtent\n     * @param {string} axisType\n     * @param {string} position\n     */\n    var Axis2D = function (dim, scale, coordExtent, axisType, position) {\n        Axis.call(this, dim, scale, coordExtent);\n        /**\n         * Axis type\n         *  - 'category'\n         *  - 'value'\n         *  - 'time'\n         *  - 'log'\n         * @type {string}\n         */\n        this.type = axisType || 'value';\n\n        /**\n         * Axis position\n         *  - 'top'\n         *  - 'bottom'\n         *  - 'left'\n         *  - 'right'\n         */\n        this.position = position || 'bottom';\n    };\n\n    Axis2D.prototype = {\n\n        constructor: Axis2D,\n\n        /**\n         * Index of axis, can be used as key\n         */\n        index: 0,\n        /**\n         * If axis is on the zero position of the other axis\n         * @type {boolean}\n         */\n        onZero: false,\n\n        /**\n         * Axis model\n         * @param {module:echarts/coord/cartesian/AxisModel}\n         */\n        model: null,\n\n        isHorizontal: function () {\n            var position = this.position;\n            return position === 'top' || position === 'bottom';\n        },\n\n        getGlobalExtent: function () {\n            var ret = this.getExtent();\n            ret[0] = this.toGlobalCoord(ret[0]);\n            ret[1] = this.toGlobalCoord(ret[1]);\n            return ret;\n        },\n\n        /**\n         * @return {number}\n         */\n        getLabelInterval: function () {\n            var labelInterval = this._labelInterval;\n            if (!labelInterval) {\n                labelInterval = this._labelInterval = axisLabelInterval(this);\n            }\n            return labelInterval;\n        },\n\n        /**\n         * If label is ignored.\n         * Automatically used when axis is category and label can not be all shown\n         * @param  {number}  idx\n         * @return {boolean}\n         */\n        isLabelIgnored: function (idx) {\n            if (this.type === 'category') {\n                var labelInterval = this.getLabelInterval();\n                return ((typeof labelInterval === 'function')\n                    && !labelInterval(idx, this.scale.getLabel(idx)))\n                    || idx % (labelInterval + 1);\n            }\n        },\n\n        /**\n         * Transform global coord to local coord,\n         * i.e. var localCoord = axis.toLocalCoord(80);\n         * designate by module:echarts/coord/cartesian/Grid.\n         * @type {Function}\n         */\n        toLocalCoord: null,\n\n        /**\n         * Transform global coord to local coord,\n         * i.e. var globalCoord = axis.toLocalCoord(40);\n         * designate by module:echarts/coord/cartesian/Grid.\n         * @type {Function}\n         */\n        toGlobalCoord: null\n\n    };\n    zrUtil.inherits(Axis2D, Axis);\n\n    module.exports = Axis2D;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/coord/cartesian/Axis2D.js\n// module id = 568\n// module chunks = 0 1","'use strict';\n/**\n * Cartesian coordinate system\n * @module  echarts/coord/Cartesian\n *\n */\n\n\n    var zrUtil = require('zrender/lib/core/util');\n\n    function dimAxisMapper(dim) {\n        return this._axes[dim];\n    }\n\n    /**\n     * @alias module:echarts/coord/Cartesian\n     * @constructor\n     */\n    var Cartesian = function (name) {\n        this._axes = {};\n\n        this._dimList = [];\n\n        /**\n         * @type {string}\n         */\n        this.name = name || '';\n    };\n\n    Cartesian.prototype = {\n\n        constructor: Cartesian,\n\n        type: 'cartesian',\n\n        /**\n         * Get axis\n         * @param  {number|string} dim\n         * @return {module:echarts/coord/Cartesian~Axis}\n         */\n        getAxis: function (dim) {\n            return this._axes[dim];\n        },\n\n        /**\n         * Get axes list\n         * @return {Array.<module:echarts/coord/Cartesian~Axis>}\n         */\n        getAxes: function () {\n            return zrUtil.map(this._dimList, dimAxisMapper, this);\n        },\n\n        /**\n         * Get axes list by given scale type\n         */\n        getAxesByScale: function (scaleType) {\n            scaleType = scaleType.toLowerCase();\n            return zrUtil.filter(\n                this.getAxes(),\n                function (axis) {\n                    return axis.scale.type === scaleType;\n                }\n            );\n        },\n\n        /**\n         * Add axis\n         * @param {module:echarts/coord/Cartesian.Axis}\n         */\n        addAxis: function (axis) {\n            var dim = axis.dim;\n\n            this._axes[dim] = axis;\n\n            this._dimList.push(dim);\n        },\n\n        /**\n         * Convert data to coord in nd space\n         * @param {Array.<number>|Object.<string, number>} val\n         * @return {Array.<number>|Object.<string, number>}\n         */\n        dataToCoord: function (val) {\n            return this._dataCoordConvert(val, 'dataToCoord');\n        },\n\n        /**\n         * Convert coord in nd space to data\n         * @param  {Array.<number>|Object.<string, number>} val\n         * @return {Array.<number>|Object.<string, number>}\n         */\n        coordToData: function (val) {\n            return this._dataCoordConvert(val, 'coordToData');\n        },\n\n        _dataCoordConvert: function (input, method) {\n            var dimList = this._dimList;\n\n            var output = input instanceof Array ? [] : {};\n\n            for (var i = 0; i < dimList.length; i++) {\n                var dim = dimList[i];\n                var axis = this._axes[dim];\n\n                output[dim] = axis[method](input[dim]);\n            }\n\n            return output;\n        }\n    };\n\n    module.exports = Cartesian;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/coord/cartesian/Cartesian.js\n// module id = 569\n// module chunks = 0 1","'use strict';\n\n\n    var zrUtil = require('zrender/lib/core/util');\n    var Cartesian = require('./Cartesian');\n\n    function Cartesian2D(name) {\n\n        Cartesian.call(this, name);\n    }\n\n    Cartesian2D.prototype = {\n\n        constructor: Cartesian2D,\n\n        type: 'cartesian2d',\n\n        /**\n         * @type {Array.<string>}\n         * @readOnly\n         */\n        dimensions: ['x', 'y'],\n\n        /**\n         * Base axis will be used on stacking.\n         *\n         * @return {module:echarts/coord/cartesian/Axis2D}\n         */\n        getBaseAxis: function () {\n            return this.getAxesByScale('ordinal')[0]\n                || this.getAxesByScale('time')[0]\n                || this.getAxis('x');\n        },\n\n        /**\n         * If contain point\n         * @param {Array.<number>} point\n         * @return {boolean}\n         */\n        containPoint: function (point) {\n            var axisX = this.getAxis('x');\n            var axisY = this.getAxis('y');\n            return axisX.contain(axisX.toLocalCoord(point[0]))\n                && axisY.contain(axisY.toLocalCoord(point[1]));\n        },\n\n        /**\n         * If contain data\n         * @param {Array.<number>} data\n         * @return {boolean}\n         */\n        containData: function (data) {\n            return this.getAxis('x').containData(data[0])\n                && this.getAxis('y').containData(data[1]);\n        },\n\n        /**\n         * Convert series data to an array of points\n         * @param {module:echarts/data/List} data\n         * @param {boolean} stack\n         * @return {Array}\n         *  Return array of points. For example:\n         *  `[[10, 10], [20, 20], [30, 30]]`\n         */\n        dataToPoints: function (data, stack) {\n            return data.mapArray(['x', 'y'], function (x, y) {\n                return this.dataToPoint([x, y]);\n            }, stack, this);\n        },\n\n        /**\n         * @param {Array.<number>} data\n         * @param {boolean} [clamp=false]\n         * @return {Array.<number>}\n         */\n        dataToPoint: function (data, clamp) {\n            var xAxis = this.getAxis('x');\n            var yAxis = this.getAxis('y');\n            return [\n                xAxis.toGlobalCoord(xAxis.dataToCoord(data[0], clamp)),\n                yAxis.toGlobalCoord(yAxis.dataToCoord(data[1], clamp))\n            ];\n        },\n\n        /**\n         * @param {Array.<number>} point\n         * @param {boolean} [clamp=false]\n         * @return {Array.<number>}\n         */\n        pointToData: function (point, clamp) {\n            var xAxis = this.getAxis('x');\n            var yAxis = this.getAxis('y');\n            return [\n                xAxis.coordToData(xAxis.toLocalCoord(point[0]), clamp),\n                yAxis.coordToData(yAxis.toLocalCoord(point[1]), clamp)\n            ];\n        },\n\n        /**\n         * Get other axis\n         * @param {module:echarts/coord/cartesian/Axis2D} axis\n         */\n        getOtherAxis: function (axis) {\n            return this.getAxis(axis.dim === 'x' ? 'y' : 'x');\n        }\n    };\n\n    zrUtil.inherits(Cartesian2D, Cartesian);\n\n    module.exports = Cartesian2D;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/coord/cartesian/Cartesian2D.js\n// module id = 570\n// module chunks = 0 1","'use strict';\n// Grid 是在有直角坐标系的时候必须要存在的\n// 所以这里也要被 Cartesian2D 依赖\n\n\n    require('./AxisModel');\n    var ComponentModel = require('../../model/Component');\n\n    module.exports = ComponentModel.extend({\n\n        type: 'grid',\n\n        dependencies: ['xAxis', 'yAxis'],\n\n        layoutMode: 'box',\n\n        /**\n         * @type {module:echarts/coord/cartesian/Grid}\n         */\n        coordinateSystem: null,\n\n        defaultOption: {\n            show: false,\n            zlevel: 0,\n            z: 0,\n            left: '10%',\n            top: 60,\n            right: '10%',\n            bottom: 60,\n            // If grid size contain label\n            containLabel: false,\n            // width: {totalWidth} - left - right,\n            // height: {totalHeight} - top - bottom,\n            backgroundColor: 'rgba(0,0,0,0)',\n            borderWidth: 1,\n            borderColor: '#ccc'\n        }\n    });\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/coord/cartesian/GridModel.js\n// module id = 571\n// module chunks = 0 1","'use strict';\n/**\n * Helper function for axisLabelInterval calculation\n */\n\n\n\n    var zrUtil = require('zrender/lib/core/util');\n    var axisHelper = require('../axisHelper');\n\n    module.exports = function (axis) {\n        var axisModel = axis.model;\n        var labelModel = axisModel.getModel('axisLabel');\n        var labelInterval = labelModel.get('interval');\n        if (!(axis.type === 'category' && labelInterval === 'auto')) {\n            return labelInterval === 'auto' ? 0 : labelInterval;\n        }\n\n        return axisHelper.getAxisLabelInterval(\n            zrUtil.map(axis.scale.getTicks(), axis.dataToCoord, axis),\n            axisModel.getFormattedLabels(),\n            labelModel.getModel('textStyle').getFont(),\n            axis.isHorizontal()\n        );\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/coord/cartesian/axisLabelInterval.js\n// module id = 572\n// module chunks = 0 1","'use strict';\n\n\n    function defaultKeyGetter(item) {\n        return item;\n    }\n\n    function DataDiffer(oldArr, newArr, oldKeyGetter, newKeyGetter) {\n        this._old = oldArr;\n        this._new = newArr;\n\n        this._oldKeyGetter = oldKeyGetter || defaultKeyGetter;\n        this._newKeyGetter = newKeyGetter || defaultKeyGetter;\n    }\n\n    DataDiffer.prototype = {\n\n        constructor: DataDiffer,\n\n        /**\n         * Callback function when add a data\n         */\n        add: function (func) {\n            this._add = func;\n            return this;\n        },\n\n        /**\n         * Callback function when update a data\n         */\n        update: function (func) {\n            this._update = func;\n            return this;\n        },\n\n        /**\n         * Callback function when remove a data\n         */\n        remove: function (func) {\n            this._remove = func;\n            return this;\n        },\n\n        execute: function () {\n            var oldArr = this._old;\n            var newArr = this._new;\n            var oldKeyGetter = this._oldKeyGetter;\n            var newKeyGetter = this._newKeyGetter;\n\n            var oldDataIndexMap = {};\n            var newDataIndexMap = {};\n            var oldDataKeyArr = [];\n            var newDataKeyArr = [];\n            var i;\n\n            initIndexMap(oldArr, oldDataIndexMap, oldDataKeyArr, oldKeyGetter);\n            initIndexMap(newArr, newDataIndexMap, newDataKeyArr, newKeyGetter);\n\n            // Travel by inverted order to make sure order consistency\n            // when duplicate keys exists (consider newDataIndex.pop() below).\n            // For performance consideration, these code below do not look neat.\n            for (i = 0; i < oldArr.length; i++) {\n                var key = oldDataKeyArr[i];\n                var idx = newDataIndexMap[key];\n\n                // idx can never be empty array here. see 'set null' logic below.\n                if (idx != null) {\n                    // Consider there is duplicate key (for example, use dataItem.name as key).\n                    // We should make sure every item in newArr and oldArr can be visited.\n                    var len = idx.length;\n                    if (len) {\n                        len === 1 && (newDataIndexMap[key] = null);\n                        idx = idx.unshift();\n                    }\n                    else {\n                        newDataIndexMap[key] = null;\n                    }\n                    this._update && this._update(idx, i);\n                }\n                else {\n                    this._remove && this._remove(i);\n                }\n            }\n\n            for (var i = 0; i < newDataKeyArr.length; i++) {\n                var key = newDataKeyArr[i];\n                if (newDataIndexMap.hasOwnProperty(key)) {\n                    var idx = newDataIndexMap[key];\n                    if (idx == null) {\n                        continue;\n                    }\n                    // idx can never be empty array here. see 'set null' logic above.\n                    if (!idx.length) {\n                        this._add && this._add(idx);\n                    }\n                    else {\n                        for (var j = 0, len = idx.length; j < len; j++) {\n                            this._add && this._add(idx[j]);\n                        }\n                    }\n                }\n            }\n        }\n    };\n\n    function initIndexMap(arr, map, keyArr, keyGetter) {\n        for (var i = 0; i < arr.length; i++) {\n            var key = keyGetter(arr[i], i);\n            var existence = map[key];\n            if (existence == null) {\n                keyArr.push(key);\n                map[key] = i;\n            }\n            else {\n                if (!existence.length) {\n                    map[key] = existence = [existence];\n                }\n                existence.push(i);\n            }\n        }\n    }\n\n    module.exports = DataDiffer;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/data/DataDiffer.js\n// module id = 573\n// module chunks = 0 1","/**\n * Complete dimensions by data (guess dimension).\n */\n\n\n    var zrUtil = require('zrender/lib/core/util');\n\n    /**\n     * Complete the dimensions array guessed from the data structure.\n     * @param  {Array.<string>} dimensions      Necessary dimensions, like ['x', 'y']\n     * @param  {Array} data                     Data list. [[1, 2, 3], [2, 3, 4]]\n     * @param  {Array.<string>} [defaultNames]    Default names to fill not necessary dimensions, like ['value']\n     * @param  {string} [extraPrefix]             Prefix of name when filling the left dimensions.\n     * @return {Array.<string>}\n     */\n    function completeDimensions(dimensions, data, defaultNames, extraPrefix) {\n        if (!data) {\n            return dimensions;\n        }\n\n        var value0 = retrieveValue(data[0]);\n        var dimSize = zrUtil.isArray(value0) && value0.length || 1;\n\n        defaultNames = defaultNames || [];\n        extraPrefix = extraPrefix || 'extra';\n        for (var i = 0; i < dimSize; i++) {\n            if (!dimensions[i]) {\n                var name = defaultNames[i] || (extraPrefix + (i - defaultNames.length));\n                dimensions[i] = guessOrdinal(data, i)\n                    ? {type: 'ordinal', name: name}\n                    : name;\n            }\n        }\n\n        return dimensions;\n    }\n\n    // The rule should not be complex, otherwise user might not\n    // be able to known where the data is wrong.\n    var guessOrdinal = completeDimensions.guessOrdinal = function (data, dimIndex) {\n        for (var i = 0, len = data.length; i < len; i++) {\n            var value = retrieveValue(data[i]);\n\n            if (!zrUtil.isArray(value)) {\n                return false;\n            }\n\n            var value = value[dimIndex];\n            if (value != null && isFinite(value)) {\n                return false;\n            }\n            else if (zrUtil.isString(value) && value !== '-') {\n                return true;\n            }\n        }\n        return false;\n    };\n\n    function retrieveValue(o) {\n        return zrUtil.isArray(o) ? o : zrUtil.isObject(o) ? o.value: o;\n    }\n\n    module.exports = completeDimensions;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/data/helper/completeDimensions.js\n// module id = 574\n// module chunks = 0 1","\n\n    module.exports = function (seriesType, ecModel) {\n        ecModel.eachSeriesByType(seriesType, function (seriesModel) {\n            var data = seriesModel.getData();\n            var coordSys = seriesModel.coordinateSystem;\n\n            if (coordSys) {\n                var dims = coordSys.dimensions;\n\n                if (coordSys.type === 'singleAxis') {\n                    data.each(dims[0], function (x, idx) {\n                        // Also {Array.<number>}, not undefined to avoid if...else... statement\n                        data.setItemLayout(idx, isNaN(x) ? [NaN, NaN] : coordSys.dataToPoint(x));\n                    });\n                }\n                else {\n                    data.each(dims, function (x, y, idx) {\n                        // Also {Array.<number>}, not undefined to avoid if...else... statement\n                        data.setItemLayout(\n                            idx, (isNaN(x) || isNaN(y)) ? [NaN, NaN] : coordSys.dataToPoint([x, y])\n                        );\n                    }, true);\n                }\n            }\n        });\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/layout/points.js\n// module id = 575\n// module chunks = 0 1","\n\n    var graphic = require('../util/graphic');\n    var zrUtil = require('zrender/lib/core/util');\n    var PI = Math.PI;\n    /**\n     * @param {module:echarts/ExtensionAPI} api\n     * @param {Object} [opts]\n     * @param {string} [opts.text]\n     * @param {string} [opts.color]\n     * @param {string} [opts.textColor]\n     * @return {module:zrender/Element}\n     */\n    module.exports = function (api, opts) {\n        opts = opts || {};\n        zrUtil.defaults(opts, {\n            text: 'loading',\n            color: '#c23531',\n            textColor: '#000',\n            maskColor: 'rgba(255, 255, 255, 0.8)',\n            zlevel: 0\n        });\n        var mask = new graphic.Rect({\n            style: {\n                fill: opts.maskColor\n            },\n            zlevel: opts.zlevel,\n            z: 10000\n        });\n        var arc = new graphic.Arc({\n            shape: {\n                startAngle: -PI / 2,\n                endAngle: -PI / 2 + 0.1,\n                r: 10\n            },\n            style: {\n                stroke: opts.color,\n                lineCap: 'round',\n                lineWidth: 5\n            },\n            zlevel: opts.zlevel,\n            z: 10001\n        });\n        var labelRect = new graphic.Rect({\n            style: {\n                fill: 'none',\n                text: opts.text,\n                textPosition: 'right',\n                textDistance: 10,\n                textFill: opts.textColor\n            },\n            zlevel: opts.zlevel,\n            z: 10001\n        });\n\n        arc.animateShape(true)\n            .when(1000, {\n                endAngle: PI * 3 / 2\n            })\n            .start('circularInOut');\n        arc.animateShape(true)\n            .when(1000, {\n                startAngle: PI * 3 / 2\n            })\n            .delay(300)\n            .start('circularInOut');\n\n        var group = new graphic.Group();\n        group.add(arc);\n        group.add(labelRect);\n        group.add(mask);\n        // Inject resize\n        group.resize = function () {\n            var cx = api.getWidth() / 2;\n            var cy = api.getHeight() / 2;\n            arc.setShape({\n                cx: cx,\n                cy: cy\n            });\n            var r = arc.shape.r;\n            labelRect.setShape({\n                x: cx - r,\n                y: cy - r,\n                width: r * 2,\n                height: r * 2\n            });\n\n            mask.setShape({\n                x: 0,\n                y: 0,\n                width: api.getWidth(),\n                height: api.getHeight()\n            });\n        };\n        group.resize();\n        return group;\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/loading/default.js\n// module id = 576\n// module chunks = 0 1","/**\n * ECharts global model\n *\n * @module {echarts/model/Global}\n */\n\n\n\n    /**\n     * Caution: If the mechanism should be changed some day, these cases\n     * should be considered:\n     *\n     * (1) In `merge option` mode, if using the same option to call `setOption`\n     * many times, the result should be the same (try our best to ensure that).\n     * (2) In `merge option` mode, if a component has no id/name specified, it\n     * will be merged by index, and the result sequence of the components is\n     * consistent to the original sequence.\n     * (3) `reset` feature (in toolbox). Find detailed info in comments about\n     * `mergeOption` in module:echarts/model/OptionManager.\n     */\n\n    var zrUtil = require('zrender/lib/core/util');\n    var modelUtil = require('../util/model');\n    var Model = require('./Model');\n    var each = zrUtil.each;\n    var filter = zrUtil.filter;\n    var map = zrUtil.map;\n    var isArray = zrUtil.isArray;\n    var indexOf = zrUtil.indexOf;\n    var isObject = zrUtil.isObject;\n\n    var ComponentModel = require('./Component');\n\n    var globalDefault = require('./globalDefault');\n\n    var OPTION_INNER_KEY = '\\0_ec_inner';\n\n    /**\n     * @alias module:echarts/model/Global\n     *\n     * @param {Object} option\n     * @param {module:echarts/model/Model} parentModel\n     * @param {Object} theme\n     */\n    var GlobalModel = Model.extend({\n\n        constructor: GlobalModel,\n\n        init: function (option, parentModel, theme, optionManager) {\n            theme = theme || {};\n\n            this.option = null; // Mark as not initialized.\n\n            /**\n             * @type {module:echarts/model/Model}\n             * @private\n             */\n            this._theme = new Model(theme);\n\n            /**\n             * @type {module:echarts/model/OptionManager}\n             */\n            this._optionManager = optionManager;\n        },\n\n        setOption: function (option, optionPreprocessorFuncs) {\n            zrUtil.assert(\n                !(OPTION_INNER_KEY in option),\n                'please use chart.getOption()'\n            );\n\n            this._optionManager.setOption(option, optionPreprocessorFuncs);\n\n            this.resetOption();\n        },\n\n        /**\n         * @param {string} type null/undefined: reset all.\n         *                      'recreate': force recreate all.\n         *                      'timeline': only reset timeline option\n         *                      'media': only reset media query option\n         * @return {boolean} Whether option changed.\n         */\n        resetOption: function (type) {\n            var optionChanged = false;\n            var optionManager = this._optionManager;\n\n            if (!type || type === 'recreate') {\n                var baseOption = optionManager.mountOption(type === 'recreate');\n\n                if (!this.option || type === 'recreate') {\n                    initBase.call(this, baseOption);\n                }\n                else {\n                    this.restoreData();\n                    this.mergeOption(baseOption);\n                }\n                optionChanged = true;\n            }\n\n            if (type === 'timeline' || type === 'media') {\n                this.restoreData();\n            }\n\n            if (!type || type === 'recreate' || type === 'timeline') {\n                var timelineOption = optionManager.getTimelineOption(this);\n                timelineOption && (this.mergeOption(timelineOption), optionChanged = true);\n            }\n\n            if (!type || type === 'recreate' || type === 'media') {\n                var mediaOptions = optionManager.getMediaOption(this, this._api);\n                if (mediaOptions.length) {\n                    each(mediaOptions, function (mediaOption) {\n                        this.mergeOption(mediaOption, optionChanged = true);\n                    }, this);\n                }\n            }\n\n            return optionChanged;\n        },\n\n        /**\n         * @protected\n         */\n        mergeOption: function (newOption) {\n            var option = this.option;\n            var componentsMap = this._componentsMap;\n            var newCptTypes = [];\n\n            // 如果不存在对应的 component model 则直接 merge\n            each(newOption, function (componentOption, mainType) {\n                if (componentOption == null) {\n                    return;\n                }\n\n                if (!ComponentModel.hasClass(mainType)) {\n                    option[mainType] = option[mainType] == null\n                        ? zrUtil.clone(componentOption)\n                        : zrUtil.merge(option[mainType], componentOption, true);\n                }\n                else {\n                    newCptTypes.push(mainType);\n                }\n            });\n\n            // FIXME OPTION 同步是否要改回原来的\n            ComponentModel.topologicalTravel(\n                newCptTypes, ComponentModel.getAllClassMainTypes(), visitComponent, this\n            );\n\n            this._seriesIndices = this._seriesIndices || [];\n\n            function visitComponent(mainType, dependencies) {\n                var newCptOptionList = modelUtil.normalizeToArray(newOption[mainType]);\n\n                var mapResult = modelUtil.mappingToExists(\n                    componentsMap[mainType], newCptOptionList\n                );\n\n                modelUtil.makeIdAndName(mapResult);\n\n                // Set mainType and complete subType.\n                each(mapResult, function (item, index) {\n                    var opt = item.option;\n                    if (isObject(opt)) {\n                        item.keyInfo.mainType = mainType;\n                        item.keyInfo.subType = determineSubType(mainType, opt, item.exist);\n                    }\n                });\n\n                var dependentModels = getComponentsByTypes(\n                    componentsMap, dependencies\n                );\n\n                option[mainType] = [];\n                componentsMap[mainType] = [];\n\n                each(mapResult, function (resultItem, index) {\n                    var componentModel = resultItem.exist;\n                    var newCptOption = resultItem.option;\n\n                    zrUtil.assert(\n                        isObject(newCptOption) || componentModel,\n                        'Empty component definition'\n                    );\n\n                    // Consider where is no new option and should be merged using {},\n                    // see removeEdgeAndAdd in topologicalTravel and\n                    // ComponentModel.getAllClassMainTypes.\n                    if (!newCptOption) {\n                        componentModel.mergeOption({}, this);\n                        componentModel.optionUpdated({}, false);\n                    }\n                    else {\n                        var ComponentModelClass = ComponentModel.getClass(\n                            mainType, resultItem.keyInfo.subType, true\n                        );\n\n                        if (componentModel && componentModel instanceof ComponentModelClass) {\n                            componentModel.name = resultItem.keyInfo.name;\n                            componentModel.mergeOption(newCptOption, this);\n                            componentModel.optionUpdated(newCptOption, false);\n                        }\n                        else {\n                            // PENDING Global as parent ?\n                            var extraOpt = zrUtil.extend(\n                                {\n                                    dependentModels: dependentModels,\n                                    componentIndex: index\n                                },\n                                resultItem.keyInfo\n                            );\n                            componentModel = new ComponentModelClass(\n                                newCptOption, this, this, extraOpt\n                            );\n                            zrUtil.extend(componentModel, extraOpt);\n                            componentModel.init(newCptOption, this, this, extraOpt);\n                            // Call optionUpdated after init.\n                            // newCptOption has been used as componentModel.option\n                            // and may be merged with theme and default, so pass null\n                            // to avoid confusion.\n                            componentModel.optionUpdated(null, true);\n                        }\n                    }\n\n                    componentsMap[mainType][index] = componentModel;\n                    option[mainType][index] = componentModel.option;\n                }, this);\n\n                // Backup series for filtering.\n                if (mainType === 'series') {\n                    this._seriesIndices = createSeriesIndices(componentsMap.series);\n                }\n            }\n        },\n\n        /**\n         * Get option for output (cloned option and inner info removed)\n         * @public\n         * @return {Object}\n         */\n        getOption: function () {\n            var option = zrUtil.clone(this.option);\n\n            each(option, function (opts, mainType) {\n                if (ComponentModel.hasClass(mainType)) {\n                    var opts = modelUtil.normalizeToArray(opts);\n                    for (var i = opts.length - 1; i >= 0; i--) {\n                        // Remove options with inner id.\n                        if (modelUtil.isIdInner(opts[i])) {\n                            opts.splice(i, 1);\n                        }\n                    }\n                    option[mainType] = opts;\n                }\n            });\n\n            delete option[OPTION_INNER_KEY];\n\n            return option;\n        },\n\n        /**\n         * @return {module:echarts/model/Model}\n         */\n        getTheme: function () {\n            return this._theme;\n        },\n\n        /**\n         * @param {string} mainType\n         * @param {number} [idx=0]\n         * @return {module:echarts/model/Component}\n         */\n        getComponent: function (mainType, idx) {\n            var list = this._componentsMap[mainType];\n            if (list) {\n                return list[idx || 0];\n            }\n        },\n\n        /**\n         * If none of index and id and name used, return all components with mainType.\n         * @param {Object} condition\n         * @param {string} condition.mainType\n         * @param {string} [condition.subType] If ignore, only query by mainType\n         * @param {number|Array.<number>} [condition.index] Either input index or id or name.\n         * @param {string|Array.<string>} [condition.id] Either input index or id or name.\n         * @param {string|Array.<string>} [condition.name] Either input index or id or name.\n         * @return {Array.<module:echarts/model/Component>}\n         */\n        queryComponents: function (condition) {\n            var mainType = condition.mainType;\n            if (!mainType) {\n                return [];\n            }\n\n            var index = condition.index;\n            var id = condition.id;\n            var name = condition.name;\n\n            var cpts = this._componentsMap[mainType];\n\n            if (!cpts || !cpts.length) {\n                return [];\n            }\n\n            var result;\n\n            if (index != null) {\n                if (!isArray(index)) {\n                    index = [index];\n                }\n                result = filter(map(index, function (idx) {\n                    return cpts[idx];\n                }), function (val) {\n                    return !!val;\n                });\n            }\n            else if (id != null) {\n                var isIdArray = isArray(id);\n                result = filter(cpts, function (cpt) {\n                    return (isIdArray && indexOf(id, cpt.id) >= 0)\n                        || (!isIdArray && cpt.id === id);\n                });\n            }\n            else if (name != null) {\n                var isNameArray = isArray(name);\n                result = filter(cpts, function (cpt) {\n                    return (isNameArray && indexOf(name, cpt.name) >= 0)\n                        || (!isNameArray && cpt.name === name);\n                });\n            }\n            else {\n                // Return all components with mainType\n                result = cpts;\n            }\n\n            return filterBySubType(result, condition);\n        },\n\n        /**\n         * The interface is different from queryComponents,\n         * which is convenient for inner usage.\n         *\n         * @usage\n         * var result = findComponents(\n         *     {mainType: 'dataZoom', query: {dataZoomId: 'abc'}}\n         * );\n         * var result = findComponents(\n         *     {mainType: 'series', subType: 'pie', query: {seriesName: 'uio'}}\n         * );\n         * var result = findComponents(\n         *     {mainType: 'series'},\n         *     function (model, index) {...}\n         * );\n         * // result like [component0, componnet1, ...]\n         *\n         * @param {Object} condition\n         * @param {string} condition.mainType Mandatory.\n         * @param {string} [condition.subType] Optional.\n         * @param {Object} [condition.query] like {xxxIndex, xxxId, xxxName},\n         *        where xxx is mainType.\n         *        If query attribute is null/undefined or has no index/id/name,\n         *        do not filtering by query conditions, which is convenient for\n         *        no-payload situations or when target of action is global.\n         * @param {Function} [condition.filter] parameter: component, return boolean.\n         * @return {Array.<module:echarts/model/Component>}\n         */\n        findComponents: function (condition) {\n            var query = condition.query;\n            var mainType = condition.mainType;\n\n            var queryCond = getQueryCond(query);\n            var result = queryCond\n                ? this.queryComponents(queryCond)\n                : this._componentsMap[mainType];\n\n            return doFilter(filterBySubType(result, condition));\n\n            function getQueryCond(q) {\n                var indexAttr = mainType + 'Index';\n                var idAttr = mainType + 'Id';\n                var nameAttr = mainType + 'Name';\n                return q && (\n                        q[indexAttr] != null\n                        || q[idAttr] != null\n                        || q[nameAttr] != null\n                    )\n                    ? {\n                        mainType: mainType,\n                        // subType will be filtered finally.\n                        index: q[indexAttr],\n                        id: q[idAttr],\n                        name: q[nameAttr]\n                    }\n                    : null;\n            }\n\n            function doFilter(res) {\n                return condition.filter\n                     ? filter(res, condition.filter)\n                     : res;\n            }\n        },\n\n        /**\n         * @usage\n         * eachComponent('legend', function (legendModel, index) {\n         *     ...\n         * });\n         * eachComponent(function (componentType, model, index) {\n         *     // componentType does not include subType\n         *     // (componentType is 'xxx' but not 'xxx.aa')\n         * });\n         * eachComponent(\n         *     {mainType: 'dataZoom', query: {dataZoomId: 'abc'}},\n         *     function (model, index) {...}\n         * );\n         * eachComponent(\n         *     {mainType: 'series', subType: 'pie', query: {seriesName: 'uio'}},\n         *     function (model, index) {...}\n         * );\n         *\n         * @param {string|Object=} mainType When mainType is object, the definition\n         *                                  is the same as the method 'findComponents'.\n         * @param {Function} cb\n         * @param {*} context\n         */\n        eachComponent: function (mainType, cb, context) {\n            var componentsMap = this._componentsMap;\n\n            if (typeof mainType === 'function') {\n                context = cb;\n                cb = mainType;\n                each(componentsMap, function (components, componentType) {\n                    each(components, function (component, index) {\n                        cb.call(context, componentType, component, index);\n                    });\n                });\n            }\n            else if (zrUtil.isString(mainType)) {\n                each(componentsMap[mainType], cb, context);\n            }\n            else if (isObject(mainType)) {\n                var queryResult = this.findComponents(mainType);\n                each(queryResult, cb, context);\n            }\n        },\n\n        /**\n         * @param {string} name\n         * @return {Array.<module:echarts/model/Series>}\n         */\n        getSeriesByName: function (name) {\n            var series = this._componentsMap.series;\n            return filter(series, function (oneSeries) {\n                return oneSeries.name === name;\n            });\n        },\n\n        /**\n         * @param {number} seriesIndex\n         * @return {module:echarts/model/Series}\n         */\n        getSeriesByIndex: function (seriesIndex) {\n            return this._componentsMap.series[seriesIndex];\n        },\n\n        /**\n         * @param {string} subType\n         * @return {Array.<module:echarts/model/Series>}\n         */\n        getSeriesByType: function (subType) {\n            var series = this._componentsMap.series;\n            return filter(series, function (oneSeries) {\n                return oneSeries.subType === subType;\n            });\n        },\n\n        /**\n         * @return {Array.<module:echarts/model/Series>}\n         */\n        getSeries: function () {\n            return this._componentsMap.series.slice();\n        },\n\n        /**\n         * After filtering, series may be different\n         * frome raw series.\n         *\n         * @param {Function} cb\n         * @param {*} context\n         */\n        eachSeries: function (cb, context) {\n            assertSeriesInitialized(this);\n            each(this._seriesIndices, function (rawSeriesIndex) {\n                var series = this._componentsMap.series[rawSeriesIndex];\n                cb.call(context, series, rawSeriesIndex);\n            }, this);\n        },\n\n        /**\n         * Iterate raw series before filtered.\n         *\n         * @param {Function} cb\n         * @param {*} context\n         */\n        eachRawSeries: function (cb, context) {\n            each(this._componentsMap.series, cb, context);\n        },\n\n        /**\n         * After filtering, series may be different.\n         * frome raw series.\n         *\n         * @parma {string} subType\n         * @param {Function} cb\n         * @param {*} context\n         */\n        eachSeriesByType: function (subType, cb, context) {\n            assertSeriesInitialized(this);\n            each(this._seriesIndices, function (rawSeriesIndex) {\n                var series = this._componentsMap.series[rawSeriesIndex];\n                if (series.subType === subType) {\n                    cb.call(context, series, rawSeriesIndex);\n                }\n            }, this);\n        },\n\n        /**\n         * Iterate raw series before filtered of given type.\n         *\n         * @parma {string} subType\n         * @param {Function} cb\n         * @param {*} context\n         */\n        eachRawSeriesByType: function (subType, cb, context) {\n            return each(this.getSeriesByType(subType), cb, context);\n        },\n\n        /**\n         * @param {module:echarts/model/Series} seriesModel\n         */\n        isSeriesFiltered: function (seriesModel) {\n            assertSeriesInitialized(this);\n            return zrUtil.indexOf(this._seriesIndices, seriesModel.componentIndex) < 0;\n        },\n\n        /**\n         * @param {Function} cb\n         * @param {*} context\n         */\n        filterSeries: function (cb, context) {\n            assertSeriesInitialized(this);\n            var filteredSeries = filter(\n                this._componentsMap.series, cb, context\n            );\n            this._seriesIndices = createSeriesIndices(filteredSeries);\n        },\n\n        restoreData: function () {\n            var componentsMap = this._componentsMap;\n\n            this._seriesIndices = createSeriesIndices(componentsMap.series);\n\n            var componentTypes = [];\n            each(componentsMap, function (components, componentType) {\n                componentTypes.push(componentType);\n            });\n\n            ComponentModel.topologicalTravel(\n                componentTypes,\n                ComponentModel.getAllClassMainTypes(),\n                function (componentType, dependencies) {\n                    each(componentsMap[componentType], function (component) {\n                        component.restoreData();\n                    });\n                }\n            );\n        }\n\n    });\n\n    /**\n     * @inner\n     */\n    function mergeTheme(option, theme) {\n        zrUtil.each(theme, function (themeItem, name) {\n            // 如果有 component model 则把具体的 merge 逻辑交给该 model 处理\n            if (!ComponentModel.hasClass(name)) {\n                if (typeof themeItem === 'object') {\n                    option[name] = !option[name]\n                        ? zrUtil.clone(themeItem)\n                        : zrUtil.merge(option[name], themeItem, false);\n                }\n                else {\n                    if (option[name] == null) {\n                        option[name] = themeItem;\n                    }\n                }\n            }\n        });\n    }\n\n    function initBase(baseOption) {\n        baseOption = baseOption;\n\n        // Using OPTION_INNER_KEY to mark that this option can not be used outside,\n        // i.e. `chart.setOption(chart.getModel().option);` is forbiden.\n        this.option = {};\n        this.option[OPTION_INNER_KEY] = 1;\n\n        /**\n         * @type {Object.<string, Array.<module:echarts/model/Model>>}\n         * @private\n         */\n        this._componentsMap = {};\n\n        /**\n         * Mapping between filtered series list and raw series list.\n         * key: filtered series indices, value: raw series indices.\n         * @type {Array.<nubmer>}\n         * @private\n         */\n        this._seriesIndices = null;\n\n        mergeTheme(baseOption, this._theme.option);\n\n        // TODO Needs clone when merging to the unexisted property\n        zrUtil.merge(baseOption, globalDefault, false);\n\n        this.mergeOption(baseOption);\n    }\n\n    /**\n     * @inner\n     * @param {Array.<string>|string} types model types\n     * @return {Object} key: {string} type, value: {Array.<Object>} models\n     */\n    function getComponentsByTypes(componentsMap, types) {\n        if (!zrUtil.isArray(types)) {\n            types = types ? [types] : [];\n        }\n\n        var ret = {};\n        each(types, function (type) {\n            ret[type] = (componentsMap[type] || []).slice();\n        });\n\n        return ret;\n    }\n\n    /**\n     * @inner\n     */\n    function determineSubType(mainType, newCptOption, existComponent) {\n        var subType = newCptOption.type\n            ? newCptOption.type\n            : existComponent\n            ? existComponent.subType\n            // Use determineSubType only when there is no existComponent.\n            : ComponentModel.determineSubType(mainType, newCptOption);\n\n        // tooltip, markline, markpoint may always has no subType\n        return subType;\n    }\n\n    /**\n     * @inner\n     */\n    function createSeriesIndices(seriesModels) {\n        return map(seriesModels, function (series) {\n            return series.componentIndex;\n        }) || [];\n    }\n\n    /**\n     * @inner\n     */\n    function filterBySubType(components, condition) {\n        // Using hasOwnProperty for restrict. Consider\n        // subType is undefined in user payload.\n        return condition.hasOwnProperty('subType')\n            ? filter(components, function (cpt) {\n                return cpt.subType === condition.subType;\n            })\n            : components;\n    }\n\n    /**\n     * @inner\n     */\n    function assertSeriesInitialized(ecModel) {\n        // Components that use _seriesIndices should depends on series component,\n        // which make sure that their initialization is after series.\n        if (__DEV__) {\n            if (!ecModel._seriesIndices) {\n                throw new Error('Series has not been initialized yet.');\n            }\n        }\n    }\n\n    zrUtil.mixin(GlobalModel, require('./mixin/colorPalette'));\n\n    module.exports = GlobalModel;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/model/Global.js\n// module id = 577\n// module chunks = 0 1","/**\n * ECharts option manager\n *\n * @module {echarts/model/OptionManager}\n */\n\n\n\n    var zrUtil = require('zrender/lib/core/util');\n    var modelUtil = require('../util/model');\n    var ComponentModel = require('./Component');\n    var each = zrUtil.each;\n    var clone = zrUtil.clone;\n    var map = zrUtil.map;\n    var merge = zrUtil.merge;\n\n    var QUERY_REG = /^(min|max)?(.+)$/;\n\n    /**\n     * TERM EXPLANATIONS:\n     *\n     * [option]:\n     *\n     *     An object that contains definitions of components. For example:\n     *     var option = {\n     *         title: {...},\n     *         legend: {...},\n     *         visualMap: {...},\n     *         series: [\n     *             {data: [...]},\n     *             {data: [...]},\n     *             ...\n     *         ]\n     *     };\n     *\n     * [rawOption]:\n     *\n     *     An object input to echarts.setOption. 'rawOption' may be an\n     *     'option', or may be an object contains multi-options. For example:\n     *     var option = {\n     *         baseOption: {\n     *             title: {...},\n     *             legend: {...},\n     *             series: [\n     *                 {data: [...]},\n     *                 {data: [...]},\n     *                 ...\n     *             ]\n     *         },\n     *         timeline: {...},\n     *         options: [\n     *             {title: {...}, series: {data: [...]}},\n     *             {title: {...}, series: {data: [...]}},\n     *             ...\n     *         ],\n     *         media: [\n     *             {\n     *                 query: {maxWidth: 320},\n     *                 option: {series: {x: 20}, visualMap: {show: false}}\n     *             },\n     *             {\n     *                 query: {minWidth: 320, maxWidth: 720},\n     *                 option: {series: {x: 500}, visualMap: {show: true}}\n     *             },\n     *             {\n     *                 option: {series: {x: 1200}, visualMap: {show: true}}\n     *             }\n     *         ]\n     *     };\n     *\n     * @alias module:echarts/model/OptionManager\n     * @param {module:echarts/ExtensionAPI} api\n     */\n    function OptionManager(api) {\n\n        /**\n         * @private\n         * @type {module:echarts/ExtensionAPI}\n         */\n        this._api = api;\n\n        /**\n         * @private\n         * @type {Array.<number>}\n         */\n        this._timelineOptions = [];\n\n        /**\n         * @private\n         * @type {Array.<Object>}\n         */\n        this._mediaList = [];\n\n        /**\n         * @private\n         * @type {Object}\n         */\n        this._mediaDefault;\n\n        /**\n         * -1, means default.\n         * empty means no media.\n         * @private\n         * @type {Array.<number>}\n         */\n        this._currentMediaIndices = [];\n\n        /**\n         * @private\n         * @type {Object}\n         */\n        this._optionBackup;\n\n        /**\n         * @private\n         * @type {Object}\n         */\n        this._newBaseOption;\n    }\n\n    // timeline.notMerge is not supported in ec3. Firstly there is rearly\n    // case that notMerge is needed. Secondly supporting 'notMerge' requires\n    // rawOption cloned and backuped when timeline changed, which does no\n    // good to performance. What's more, that both timeline and setOption\n    // method supply 'notMerge' brings complex and some problems.\n    // Consider this case:\n    // (step1) chart.setOption({timeline: {notMerge: false}, ...}, false);\n    // (step2) chart.setOption({timeline: {notMerge: true}, ...}, false);\n\n    OptionManager.prototype = {\n\n        constructor: OptionManager,\n\n        /**\n         * @public\n         * @param {Object} rawOption Raw option.\n         * @param {module:echarts/model/Global} ecModel\n         * @param {Array.<Function>} optionPreprocessorFuncs\n         * @return {Object} Init option\n         */\n        setOption: function (rawOption, optionPreprocessorFuncs) {\n            rawOption = clone(rawOption, true);\n\n            // FIXME\n            // 如果 timeline options 或者 media 中设置了某个属性，而baseOption中没有设置，则进行警告。\n\n            var oldOptionBackup = this._optionBackup;\n            var newParsedOption = parseRawOption.call(\n                this, rawOption, optionPreprocessorFuncs, !oldOptionBackup\n            );\n            this._newBaseOption = newParsedOption.baseOption;\n\n            // For setOption at second time (using merge mode);\n            if (oldOptionBackup) {\n                // Only baseOption can be merged.\n                mergeOption(oldOptionBackup.baseOption, newParsedOption.baseOption);\n\n                // For simplicity, timeline options and media options do not support merge,\n                // that is, if you `setOption` twice and both has timeline options, the latter\n                // timeline opitons will not be merged to the formers, but just substitude them.\n                if (newParsedOption.timelineOptions.length) {\n                    oldOptionBackup.timelineOptions = newParsedOption.timelineOptions;\n                }\n                if (newParsedOption.mediaList.length) {\n                    oldOptionBackup.mediaList = newParsedOption.mediaList;\n                }\n                if (newParsedOption.mediaDefault) {\n                    oldOptionBackup.mediaDefault = newParsedOption.mediaDefault;\n                }\n            }\n            else {\n                this._optionBackup = newParsedOption;\n            }\n        },\n\n        /**\n         * @param {boolean} isRecreate\n         * @return {Object}\n         */\n        mountOption: function (isRecreate) {\n            var optionBackup = this._optionBackup;\n\n            // TODO\n            // 如果没有reset功能则不clone。\n\n            this._timelineOptions = map(optionBackup.timelineOptions, clone);\n            this._mediaList = map(optionBackup.mediaList, clone);\n            this._mediaDefault = clone(optionBackup.mediaDefault);\n            this._currentMediaIndices = [];\n\n            return clone(isRecreate\n                // this._optionBackup.baseOption, which is created at the first `setOption`\n                // called, and is merged into every new option by inner method `mergeOption`\n                // each time `setOption` called, can be only used in `isRecreate`, because\n                // its reliability is under suspicion. In other cases option merge is\n                // performed by `model.mergeOption`.\n                ? optionBackup.baseOption : this._newBaseOption\n            );\n        },\n\n        /**\n         * @param {module:echarts/model/Global} ecModel\n         * @return {Object}\n         */\n        getTimelineOption: function (ecModel) {\n            var option;\n            var timelineOptions = this._timelineOptions;\n\n            if (timelineOptions.length) {\n                // getTimelineOption can only be called after ecModel inited,\n                // so we can get currentIndex from timelineModel.\n                var timelineModel = ecModel.getComponent('timeline');\n                if (timelineModel) {\n                    option = clone(\n                        timelineOptions[timelineModel.getCurrentIndex()],\n                        true\n                    );\n                }\n            }\n\n            return option;\n        },\n\n        /**\n         * @param {module:echarts/model/Global} ecModel\n         * @return {Array.<Object>}\n         */\n        getMediaOption: function (ecModel) {\n            var ecWidth = this._api.getWidth();\n            var ecHeight = this._api.getHeight();\n            var mediaList = this._mediaList;\n            var mediaDefault = this._mediaDefault;\n            var indices = [];\n            var result = [];\n\n            // No media defined.\n            if (!mediaList.length && !mediaDefault) {\n                return result;\n            }\n\n            // Multi media may be applied, the latter defined media has higher priority.\n            for (var i = 0, len = mediaList.length; i < len; i++) {\n                if (applyMediaQuery(mediaList[i].query, ecWidth, ecHeight)) {\n                    indices.push(i);\n                }\n            }\n\n            // FIXME\n            // 是否mediaDefault应该强制用户设置，否则可能修改不能回归。\n            if (!indices.length && mediaDefault) {\n                indices = [-1];\n            }\n\n            if (indices.length && !indicesEquals(indices, this._currentMediaIndices)) {\n                result = map(indices, function (index) {\n                    return clone(\n                        index === -1 ? mediaDefault.option : mediaList[index].option\n                    );\n                });\n            }\n            // Otherwise return nothing.\n\n            this._currentMediaIndices = indices;\n\n            return result;\n        }\n    };\n\n    function parseRawOption(rawOption, optionPreprocessorFuncs, isNew) {\n        var timelineOptions = [];\n        var mediaList = [];\n        var mediaDefault;\n        var baseOption;\n\n        // Compatible with ec2.\n        var timelineOpt = rawOption.timeline;\n\n        if (rawOption.baseOption) {\n            baseOption = rawOption.baseOption;\n        }\n\n        // For timeline\n        if (timelineOpt || rawOption.options) {\n            baseOption = baseOption || {};\n            timelineOptions = (rawOption.options || []).slice();\n        }\n\n        // For media query\n        if (rawOption.media) {\n            baseOption = baseOption || {};\n            var media = rawOption.media;\n            each(media, function (singleMedia) {\n                if (singleMedia && singleMedia.option) {\n                    if (singleMedia.query) {\n                        mediaList.push(singleMedia);\n                    }\n                    else if (!mediaDefault) {\n                        // Use the first media default.\n                        mediaDefault = singleMedia;\n                    }\n                }\n            });\n        }\n\n        // For normal option\n        if (!baseOption) {\n            baseOption = rawOption;\n        }\n\n        // Set timelineOpt to baseOption in ec3,\n        // which is convenient for merge option.\n        if (!baseOption.timeline) {\n            baseOption.timeline = timelineOpt;\n        }\n\n        // Preprocess.\n        each([baseOption].concat(timelineOptions)\n            .concat(zrUtil.map(mediaList, function (media) {\n                return media.option;\n            })),\n            function (option) {\n                each(optionPreprocessorFuncs, function (preProcess) {\n                    preProcess(option, isNew);\n                });\n            }\n        );\n\n        return {\n            baseOption: baseOption,\n            timelineOptions: timelineOptions,\n            mediaDefault: mediaDefault,\n            mediaList: mediaList\n        };\n    }\n\n    /**\n     * @see <http://www.w3.org/TR/css3-mediaqueries/#media1>\n     * Support: width, height, aspectRatio\n     * Can use max or min as prefix.\n     */\n    function applyMediaQuery(query, ecWidth, ecHeight) {\n        var realMap = {\n            width: ecWidth,\n            height: ecHeight,\n            aspectratio: ecWidth / ecHeight // lowser case for convenientce.\n        };\n\n        var applicatable = true;\n\n        zrUtil.each(query, function (value, attr) {\n            var matched = attr.match(QUERY_REG);\n\n            if (!matched || !matched[1] || !matched[2]) {\n                return;\n            }\n\n            var operator = matched[1];\n            var realAttr = matched[2].toLowerCase();\n\n            if (!compare(realMap[realAttr], value, operator)) {\n                applicatable = false;\n            }\n        });\n\n        return applicatable;\n    }\n\n    function compare(real, expect, operator) {\n        if (operator === 'min') {\n            return real >= expect;\n        }\n        else if (operator === 'max') {\n            return real <= expect;\n        }\n        else { // Equals\n            return real === expect;\n        }\n    }\n\n    function indicesEquals(indices1, indices2) {\n        // indices is always order by asc and has only finite number.\n        return indices1.join(',') === indices2.join(',');\n    }\n\n    /**\n     * Consider case:\n     * `chart.setOption(opt1);`\n     * Then user do some interaction like dataZoom, dataView changing.\n     * `chart.setOption(opt2);`\n     * Then user press 'reset button' in toolbox.\n     *\n     * After doing that all of the interaction effects should be reset, the\n     * chart should be the same as the result of invoke\n     * `chart.setOption(opt1); chart.setOption(opt2);`.\n     *\n     * Although it is not able ensure that\n     * `chart.setOption(opt1); chart.setOption(opt2);` is equivalents to\n     * `chart.setOption(merge(opt1, opt2));` exactly,\n     * this might be the only simple way to implement that feature.\n     *\n     * MEMO: We've considered some other approaches:\n     * 1. Each model handle its self restoration but not uniform treatment.\n     *     (Too complex in logic and error-prone)\n     * 2. Use a shadow ecModel. (Performace expensive)\n     */\n    function mergeOption(oldOption, newOption) {\n        newOption = newOption || {};\n\n        each(newOption, function (newCptOpt, mainType) {\n            if (newCptOpt == null) {\n                return;\n            }\n\n            var oldCptOpt = oldOption[mainType];\n\n            if (!ComponentModel.hasClass(mainType)) {\n                oldOption[mainType] = merge(oldCptOpt, newCptOpt, true);\n            }\n            else {\n                newCptOpt = modelUtil.normalizeToArray(newCptOpt);\n                oldCptOpt = modelUtil.normalizeToArray(oldCptOpt);\n\n                var mapResult = modelUtil.mappingToExists(oldCptOpt, newCptOpt);\n\n                oldOption[mainType] = map(mapResult, function (item) {\n                    return (item.option && item.exist)\n                        ? merge(item.exist, item.option, true)\n                        : (item.exist || item.option);\n                });\n            }\n        });\n    }\n\n    module.exports = OptionManager;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/model/OptionManager.js\n// module id = 578\n// module chunks = 0 1","\n    var platform = '';\n    // Navigator not exists in node\n    if (typeof navigator !== 'undefined') {\n        platform = navigator.platform || '';\n    }\n    module.exports = {\n        // 全图默认背景\n        // backgroundColor: 'rgba(0,0,0,0)',\n\n        // https://dribbble.com/shots/1065960-Infographic-Pie-chart-visualization\n        // color: ['#5793f3', '#d14a61', '#fd9c35', '#675bba', '#fec42c', '#dd4444', '#d4df5a', '#cd4870'],\n        // 浅色\n        // color: ['#bcd3bb', '#e88f70', '#edc1a5', '#9dc5c8', '#e1e8c8', '#7b7c68', '#e5b5b5', '#f0b489', '#928ea8', '#bda29a'],\n        // color: ['#cc5664', '#9bd6ec', '#ea946e', '#8acaaa', '#f1ec64', '#ee8686', '#a48dc1', '#5da6bc', '#b9dcae'],\n        // 深色\n        color: ['#c23531','#2f4554', '#61a0a8', '#d48265', '#91c7ae','#749f83',  '#ca8622', '#bda29a','#6e7074', '#546570', '#c4ccd3'],\n\n        // 默认需要 Grid 配置项\n        // grid: {},\n        // 主题，主题\n        textStyle: {\n            // color: '#000',\n            // decoration: 'none',\n            // PENDING\n            fontFamily: platform.match(/^Win/) ? 'Microsoft YaHei' : 'sans-serif',\n            // fontFamily: 'Arial, Verdana, sans-serif',\n            fontSize: 12,\n            fontStyle: 'normal',\n            fontWeight: 'normal'\n        },\n\n        // http://blogs.adobe.com/webplatform/2014/02/24/using-blend-modes-in-html-canvas/\n        // https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/globalCompositeOperation\n        // Default is source-over\n        blendMode: null,\n\n        animation: true,\n        animationDuration: 1000,\n        animationDurationUpdate: 300,\n        animationEasing: 'exponentialOut',\n        animationEasingUpdate: 'cubicOut',\n\n        animationThreshold: 2000,\n        // Configuration for progressive/incremental rendering\n        progressiveThreshold: 3000,\n        progressive: 400,\n\n        // Threshold of if use single hover layer to optimize.\n        // It is recommended that `hoverLayerThreshold` is equivalent to or less than\n        // `progressiveThreshold`, otherwise hover will cause restart of progressive,\n        // which is unexpected.\n        // see example <echarts/test/heatmap-large.html>.\n        hoverLayerThreshold: 3000\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/model/globalDefault.js\n// module id = 579\n// module chunks = 0 1","\n    module.exports = {\n        getAreaStyle: require('./makeStyleMapper')(\n            [\n                ['fill', 'color'],\n                ['shadowBlur'],\n                ['shadowOffsetX'],\n                ['shadowOffsetY'],\n                ['opacity'],\n                ['shadowColor']\n            ]\n        )\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/model/mixin/areaStyle.js\n// module id = 580\n// module chunks = 0 1","\n\n    module.exports = {\n        getBoxLayoutParams: function () {\n            return {\n                left: this.get('left'),\n                top: this.get('top'),\n                right: this.get('right'),\n                bottom: this.get('bottom'),\n                width: this.get('width'),\n                height: this.get('height')\n            };\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/model/mixin/boxLayout.js\n// module id = 581\n// module chunks = 0 1","\n    var getItemStyle = require('./makeStyleMapper')(\n        [\n            ['fill', 'color'],\n            ['stroke', 'borderColor'],\n            ['lineWidth', 'borderWidth'],\n            ['opacity'],\n            ['shadowBlur'],\n            ['shadowOffsetX'],\n            ['shadowOffsetY'],\n            ['shadowColor'],\n            ['textPosition'],\n            ['textAlign']\n        ]\n    );\n    module.exports = {\n        getItemStyle: function (excludes) {\n            var style = getItemStyle.call(this, excludes);\n            var lineDash = this.getBorderLineDash();\n            lineDash && (style.lineDash = lineDash);\n            return style;\n        },\n\n        getBorderLineDash: function () {\n            var lineType = this.get('borderType');\n            return (lineType === 'solid' || lineType == null) ? null\n                : (lineType === 'dashed' ? [5, 5] : [1, 1]);\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/model/mixin/itemStyle.js\n// module id = 582\n// module chunks = 0 1","\n    var getLineStyle = require('./makeStyleMapper')(\n        [\n            ['lineWidth', 'width'],\n            ['stroke', 'color'],\n            ['opacity'],\n            ['shadowBlur'],\n            ['shadowOffsetX'],\n            ['shadowOffsetY'],\n            ['shadowColor']\n        ]\n    );\n    module.exports = {\n        getLineStyle: function (excludes) {\n            var style = getLineStyle.call(this, excludes);\n            var lineDash = this.getLineDash(style.lineWidth);\n            lineDash && (style.lineDash = lineDash);\n            return style;\n        },\n\n        getLineDash: function (lineWidth) {\n            if (lineWidth == null) {\n                lineWidth = 1;\n            }\n            var lineType = this.get('type');\n            var dotSize = Math.max(lineWidth, 2);\n            var dashSize = lineWidth * 4;\n            return (lineType === 'solid' || lineType == null) ? null\n                : (lineType === 'dashed' ? [dashSize, dashSize] : [dotSize, dotSize]);\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/model/mixin/lineStyle.js\n// module id = 583\n// module chunks = 0 1","\n\n    var textContain = require('zrender/lib/contain/text');\n\n    function getShallow(model, path) {\n        return model && model.getShallow(path);\n    }\n\n    module.exports = {\n        /**\n         * Get color property or get color from option.textStyle.color\n         * @return {string}\n         */\n        getTextColor: function () {\n            var ecModel = this.ecModel;\n            return this.getShallow('color')\n                || (ecModel && ecModel.get('textStyle.color'));\n        },\n\n        /**\n         * Create font string from fontStyle, fontWeight, fontSize, fontFamily\n         * @return {string}\n         */\n        getFont: function () {\n            var ecModel = this.ecModel;\n            var gTextStyleModel = ecModel && ecModel.getModel('textStyle');\n            return [\n                // FIXME in node-canvas fontWeight is before fontStyle\n                this.getShallow('fontStyle') || getShallow(gTextStyleModel, 'fontStyle'),\n                this.getShallow('fontWeight') || getShallow(gTextStyleModel, 'fontWeight'),\n                (this.getShallow('fontSize') || getShallow(gTextStyleModel, 'fontSize') || 12) + 'px',\n                this.getShallow('fontFamily') || getShallow(gTextStyleModel, 'fontFamily') || 'sans-serif'\n            ].join(' ');\n        },\n\n        getTextRect: function (text) {\n            return textContain.getBoundingRect(\n                text,\n                this.getFont(),\n                this.getShallow('align'),\n                this.getShallow('baseline')\n            );\n        },\n\n        truncateText: function (text, containerWidth, ellipsis, options) {\n            return textContain.truncateText(\n                text, containerWidth, this.getFont(), ellipsis, options\n            );\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/model/mixin/textStyle.js\n// module id = 584\n// module chunks = 0 1","// Compatitable with 2.0\n\n\n    var zrUtil = require('zrender/lib/core/util');\n    var compatStyle = require('./helper/compatStyle');\n\n    function get(opt, path) {\n        path = path.split(',');\n        var obj = opt;\n        for (var i = 0; i < path.length; i++) {\n            obj = obj && obj[path[i]];\n            if (obj == null) {\n                break;\n            }\n        }\n        return obj;\n    }\n\n    function set(opt, path, val, overwrite) {\n        path = path.split(',');\n        var obj = opt;\n        var key;\n        for (var i = 0; i < path.length - 1; i++) {\n            key = path[i];\n            if (obj[key] == null) {\n                obj[key] = {};\n            }\n            obj = obj[key];\n        }\n        if (overwrite || obj[path[i]] == null) {\n            obj[path[i]] = val;\n        }\n    }\n\n    function compatLayoutProperties(option) {\n        each(LAYOUT_PROPERTIES, function (prop) {\n            if (prop[0] in option && !(prop[1] in option)) {\n                option[prop[1]] = option[prop[0]];\n            }\n        });\n    }\n\n    var LAYOUT_PROPERTIES = [\n        ['x', 'left'], ['y', 'top'], ['x2', 'right'], ['y2', 'bottom']\n    ];\n\n    var COMPATITABLE_COMPONENTS = [\n        'grid', 'geo', 'parallel', 'legend', 'toolbox', 'title', 'visualMap', 'dataZoom', 'timeline'\n    ];\n\n    var COMPATITABLE_SERIES = [\n        'bar', 'boxplot', 'candlestick', 'chord', 'effectScatter',\n        'funnel', 'gauge', 'lines', 'graph', 'heatmap', 'line', 'map', 'parallel',\n        'pie', 'radar', 'sankey', 'scatter', 'treemap'\n    ];\n\n    var each = zrUtil.each;\n\n    module.exports = function (option) {\n        each(option.series, function (seriesOpt) {\n            if (!zrUtil.isObject(seriesOpt)) {\n                return;\n            }\n\n            var seriesType = seriesOpt.type;\n\n            compatStyle(seriesOpt);\n\n            if (seriesType === 'pie' || seriesType === 'gauge') {\n                if (seriesOpt.clockWise != null) {\n                    seriesOpt.clockwise = seriesOpt.clockWise;\n                }\n            }\n            if (seriesType === 'gauge') {\n                var pointerColor = get(seriesOpt, 'pointer.color');\n                pointerColor != null\n                    && set(seriesOpt, 'itemStyle.normal.color', pointerColor);\n            }\n\n            for (var i = 0; i < COMPATITABLE_SERIES.length; i++) {\n                if (COMPATITABLE_SERIES[i] === seriesOpt.type) {\n                    compatLayoutProperties(seriesOpt);\n                    break;\n                }\n            }\n        });\n\n        // dataRange has changed to visualMap\n        if (option.dataRange) {\n            option.visualMap = option.dataRange;\n        }\n\n        each(COMPATITABLE_COMPONENTS, function (componentName) {\n            var options = option[componentName];\n            if (options) {\n                if (!zrUtil.isArray(options)) {\n                    options = [options];\n                }\n                each(options, function (option) {\n                    compatLayoutProperties(option);\n                });\n            }\n        });\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/preprocessor/backwardCompat.js\n// module id = 585\n// module chunks = 0 1","\n\n    var zrUtil = require('zrender/lib/core/util');\n\n    var POSSIBLE_STYLES = [\n        'areaStyle', 'lineStyle', 'nodeStyle', 'linkStyle',\n        'chordStyle', 'label', 'labelLine'\n    ];\n\n    function compatItemStyle(opt) {\n        var itemStyleOpt = opt && opt.itemStyle;\n        if (itemStyleOpt) {\n            zrUtil.each(POSSIBLE_STYLES, function (styleName) {\n                var normalItemStyleOpt = itemStyleOpt.normal;\n                var emphasisItemStyleOpt = itemStyleOpt.emphasis;\n                if (normalItemStyleOpt && normalItemStyleOpt[styleName]) {\n                    opt[styleName] = opt[styleName] || {};\n                    if (!opt[styleName].normal) {\n                        opt[styleName].normal = normalItemStyleOpt[styleName];\n                    }\n                    else {\n                        zrUtil.merge(opt[styleName].normal, normalItemStyleOpt[styleName]);\n                    }\n                    normalItemStyleOpt[styleName] = null;\n                }\n                if (emphasisItemStyleOpt && emphasisItemStyleOpt[styleName]) {\n                    opt[styleName] = opt[styleName] || {};\n                    if (!opt[styleName].emphasis) {\n                        opt[styleName].emphasis = emphasisItemStyleOpt[styleName];\n                    }\n                    else {\n                        zrUtil.merge(opt[styleName].emphasis, emphasisItemStyleOpt[styleName]);\n                    }\n                    emphasisItemStyleOpt[styleName] = null;\n                }\n            });\n        }\n    }\n\n    module.exports = function (seriesOpt) {\n        if (!seriesOpt) {\n            return;\n        }\n        compatItemStyle(seriesOpt);\n        compatItemStyle(seriesOpt.markPoint);\n        compatItemStyle(seriesOpt.markLine);\n        var data = seriesOpt.data;\n        if (data) {\n            for (var i = 0; i < data.length; i++) {\n                compatItemStyle(data[i]);\n            }\n            // mark point data\n            var markPoint = seriesOpt.markPoint;\n            if (markPoint && markPoint.data) {\n                var mpData = markPoint.data;\n                for (var i = 0; i < mpData.length; i++) {\n                    compatItemStyle(mpData[i]);\n                }\n            }\n            // mark line data\n            var markLine = seriesOpt.markLine;\n            if (markLine && markLine.data) {\n                var mlData = markLine.data;\n                for (var i = 0; i < mlData.length; i++) {\n                    if (zrUtil.isArray(mlData[i])) {\n                        compatItemStyle(mlData[i][0]);\n                        compatItemStyle(mlData[i][1]);\n                    }\n                    else {\n                        compatItemStyle(mlData[i]);\n                    }\n                }\n            }\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/preprocessor/helper/compatStyle.js\n// module id = 586\n// module chunks = 0 1","\n    var samplers = {\n        average: function (frame) {\n            var sum = 0;\n            var count = 0;\n            for (var i = 0; i < frame.length; i++) {\n                if (!isNaN(frame[i])) {\n                    sum += frame[i];\n                    count++;\n                }\n            }\n            // Return NaN if count is 0\n            return count === 0 ? NaN : sum / count;\n        },\n        sum: function (frame) {\n            var sum = 0;\n            for (var i = 0; i < frame.length; i++) {\n                // Ignore NaN\n                sum += frame[i] || 0;\n            }\n            return sum;\n        },\n        max: function (frame) {\n            var max = -Infinity;\n            for (var i = 0; i < frame.length; i++) {\n                frame[i] > max && (max = frame[i]);\n            }\n            return max;\n        },\n        min: function (frame) {\n            var min = Infinity;\n            for (var i = 0; i < frame.length; i++) {\n                frame[i] < min && (min = frame[i]);\n            }\n            return min;\n        },\n        // TODO\n        // Median\n        nearest: function (frame) {\n            return frame[0];\n        }\n    };\n\n    var indexSampler = function (frame, value) {\n        return Math.round(frame.length / 2);\n    };\n    module.exports = function (seriesType, ecModel, api) {\n        ecModel.eachSeriesByType(seriesType, function (seriesModel) {\n            var data = seriesModel.getData();\n            var sampling = seriesModel.get('sampling');\n            var coordSys = seriesModel.coordinateSystem;\n            // Only cartesian2d support down sampling\n            if (coordSys.type === 'cartesian2d' && sampling) {\n                var baseAxis = coordSys.getBaseAxis();\n                var valueAxis = coordSys.getOtherAxis(baseAxis);\n                var extent = baseAxis.getExtent();\n                // Coordinste system has been resized\n                var size = extent[1] - extent[0];\n                var rate = Math.round(data.count() / size);\n                if (rate > 1) {\n                    var sampler;\n                    if (typeof sampling === 'string') {\n                        sampler = samplers[sampling];\n                    }\n                    else if (typeof sampling === 'function') {\n                        sampler = sampling;\n                    }\n                    if (sampler) {\n                        data = data.downSample(\n                            valueAxis.dim, 1 / rate, sampler, indexSampler\n                        );\n                        seriesModel.setData(data);\n                    }\n                }\n            }\n        }, this);\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/processor/dataSample.js\n// module id = 587\n// module chunks = 0 1","/**\n * Log scale\n * @module echarts/scale/Log\n */\n\n\n    var zrUtil = require('zrender/lib/core/util');\n    var Scale = require('./Scale');\n    var numberUtil = require('../util/number');\n\n    // Use some method of IntervalScale\n    var IntervalScale = require('./Interval');\n\n    var scaleProto = Scale.prototype;\n    var intervalScaleProto = IntervalScale.prototype;\n\n    var getPrecisionSafe = numberUtil.getPrecisionSafe;\n    var roundingErrorFix = numberUtil.round;\n\n    var mathFloor = Math.floor;\n    var mathCeil = Math.ceil;\n    var mathPow = Math.pow;\n\n    var mathLog = Math.log;\n\n    var LogScale = Scale.extend({\n\n        type: 'log',\n\n        base: 10,\n\n        $constructor: function () {\n            Scale.apply(this, arguments);\n            this._originalScale = new IntervalScale();\n        },\n\n        /**\n         * @return {Array.<number>}\n         */\n        getTicks: function () {\n            var originalScale = this._originalScale;\n            var extent = this._extent;\n            var originalExtent = originalScale.getExtent();\n\n            return zrUtil.map(intervalScaleProto.getTicks.call(this), function (val) {\n                var powVal = numberUtil.round(mathPow(this.base, val));\n\n                // Fix #4158\n                powVal = (val === extent[0] && originalScale.__fixMin)\n                    ? fixRoundingError(powVal, originalExtent[0])\n                    : powVal;\n                powVal = (val === extent[1] && originalScale.__fixMax)\n                    ? fixRoundingError(powVal, originalExtent[1])\n                    : powVal;\n\n                return powVal;\n            }, this);\n        },\n\n        /**\n         * @param {number} val\n         * @return {string}\n         */\n        getLabel: intervalScaleProto.getLabel,\n\n        /**\n         * @param  {number} val\n         * @return {number}\n         */\n        scale: function (val) {\n            val = scaleProto.scale.call(this, val);\n            return mathPow(this.base, val);\n        },\n\n        /**\n         * @param {number} start\n         * @param {number} end\n         */\n        setExtent: function (start, end) {\n            var base = this.base;\n            start = mathLog(start) / mathLog(base);\n            end = mathLog(end) / mathLog(base);\n            intervalScaleProto.setExtent.call(this, start, end);\n        },\n\n        /**\n         * @return {number} end\n         */\n        getExtent: function () {\n            var base = this.base;\n            var extent = scaleProto.getExtent.call(this);\n            extent[0] = mathPow(base, extent[0]);\n            extent[1] = mathPow(base, extent[1]);\n\n            // Fix #4158\n            var originalScale = this._originalScale;\n            var originalExtent = originalScale.getExtent();\n            originalScale.__fixMin && (extent[0] = fixRoundingError(extent[0], originalExtent[0]));\n            originalScale.__fixMax && (extent[1] = fixRoundingError(extent[1], originalExtent[1]));\n\n            return extent;\n        },\n\n        /**\n         * @param  {Array.<number>} extent\n         */\n        unionExtent: function (extent) {\n            this._originalScale.unionExtent(extent);\n\n            var base = this.base;\n            extent[0] = mathLog(extent[0]) / mathLog(base);\n            extent[1] = mathLog(extent[1]) / mathLog(base);\n            scaleProto.unionExtent.call(this, extent);\n        },\n\n        /**\n         * @override\n         */\n        unionExtentFromData: function (data, dim) {\n            this.unionExtent(data.getDataExtent(dim, true, function (val) {\n                return val > 0;\n            }));\n        },\n\n        /**\n         * Update interval and extent of intervals for nice ticks\n         * @param  {number} [approxTickNum = 10] Given approx tick number\n         */\n        niceTicks: function (approxTickNum) {\n            approxTickNum = approxTickNum || 10;\n            var extent = this._extent;\n            var span = extent[1] - extent[0];\n            if (span === Infinity || span <= 0) {\n                return;\n            }\n\n            var interval = numberUtil.quantity(span);\n            var err = approxTickNum / span * interval;\n\n            // Filter ticks to get closer to the desired count.\n            if (err <= 0.5) {\n                interval *= 10;\n            }\n\n            // Interval should be integer\n            while (!isNaN(interval) && Math.abs(interval) < 1 && Math.abs(interval) > 0) {\n                interval *= 10;\n            }\n\n            var niceExtent = [\n                numberUtil.round(mathCeil(extent[0] / interval) * interval),\n                numberUtil.round(mathFloor(extent[1] / interval) * interval)\n            ];\n\n            this._interval = interval;\n            this._niceExtent = niceExtent;\n        },\n\n        /**\n         * Nice extent.\n         * @param {number} [approxTickNum = 10] Given approx tick number\n         * @param {boolean} [fixMin=false]\n         * @param {boolean} [fixMax=false]\n         */\n        niceExtent: function (splitNumber, fixMin, fixMax) {\n            intervalScaleProto.niceExtent.call(this, splitNumber, fixMin, fixMax);\n\n            var originalScale = this._originalScale;\n            originalScale.__fixMin = fixMin;\n            originalScale.__fixMax = fixMax;\n        }\n\n    });\n\n    zrUtil.each(['contain', 'normalize'], function (methodName) {\n        LogScale.prototype[methodName] = function (val) {\n            val = mathLog(val) / mathLog(this.base);\n            return scaleProto[methodName].call(this, val);\n        };\n    });\n\n    LogScale.create = function () {\n        return new LogScale();\n    };\n\n    function fixRoundingError(val, originalVal) {\n        return roundingErrorFix(val, getPrecisionSafe(originalVal));\n    }\n\n    module.exports = LogScale;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/scale/Log.js\n// module id = 588\n// module chunks = 0 1","/**\n * Linear continuous scale\n * @module echarts/coord/scale/Ordinal\n *\n * http://en.wikipedia.org/wiki/Level_of_measurement\n */\n\n// FIXME only one data\n\n\n    var zrUtil = require('zrender/lib/core/util');\n    var Scale = require('./Scale');\n\n    var scaleProto = Scale.prototype;\n\n    var OrdinalScale = Scale.extend({\n\n        type: 'ordinal',\n\n        init: function (data, extent) {\n            this._data = data;\n            this._extent = extent || [0, data.length - 1];\n        },\n\n        parse: function (val) {\n            return typeof val === 'string'\n                ? zrUtil.indexOf(this._data, val)\n                // val might be float.\n                : Math.round(val);\n        },\n\n        contain: function (rank) {\n            rank = this.parse(rank);\n            return scaleProto.contain.call(this, rank)\n                && this._data[rank] != null;\n        },\n\n        /**\n         * Normalize given rank or name to linear [0, 1]\n         * @param {number|string} [val]\n         * @return {number}\n         */\n        normalize: function (val) {\n            return scaleProto.normalize.call(this, this.parse(val));\n        },\n\n        scale: function (val) {\n            return Math.round(scaleProto.scale.call(this, val));\n        },\n\n        /**\n         * @return {Array}\n         */\n        getTicks: function () {\n            var ticks = [];\n            var extent = this._extent;\n            var rank = extent[0];\n\n            while (rank <= extent[1]) {\n                ticks.push(rank);\n                rank++;\n            }\n\n            return ticks;\n        },\n\n        /**\n         * Get item on rank n\n         * @param {number} n\n         * @return {string}\n         */\n        getLabel: function (n) {\n            return this._data[n];\n        },\n\n        /**\n         * @return {number}\n         */\n        count: function () {\n            return this._extent[1] - this._extent[0] + 1;\n        },\n\n        /**\n         * @override\n         */\n        unionExtentFromData: function (data, dim) {\n            this.unionExtent(data.getDataExtent(dim, false));\n        },\n\n        niceTicks: zrUtil.noop,\n        niceExtent: zrUtil.noop\n    });\n\n    /**\n     * @return {module:echarts/scale/Time}\n     */\n    OrdinalScale.create = function () {\n        return new OrdinalScale();\n    };\n\n    module.exports = OrdinalScale;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/scale/Ordinal.js\n// module id = 589\n// module chunks = 0 1","/**\n * Interval scale\n * @module echarts/coord/scale/Time\n */\n\n\n\n    var zrUtil = require('zrender/lib/core/util');\n    var numberUtil = require('../util/number');\n    var formatUtil = require('../util/format');\n\n    var IntervalScale = require('./Interval');\n\n    var intervalScaleProto = IntervalScale.prototype;\n\n    var mathCeil = Math.ceil;\n    var mathFloor = Math.floor;\n    var ONE_SECOND = 1000;\n    var ONE_MINUTE = ONE_SECOND * 60;\n    var ONE_HOUR = ONE_MINUTE * 60;\n    var ONE_DAY = ONE_HOUR * 24;\n\n    // FIXME 公用？\n    var bisect = function (a, x, lo, hi) {\n        while (lo < hi) {\n            var mid = lo + hi >>> 1;\n            if (a[mid][2] < x) {\n                lo = mid + 1;\n            }\n            else {\n                hi  = mid;\n            }\n        }\n        return lo;\n    };\n\n    /**\n     * @alias module:echarts/coord/scale/Time\n     * @constructor\n     */\n    var TimeScale = IntervalScale.extend({\n        type: 'time',\n\n        // Overwrite\n        getLabel: function (val) {\n            var stepLvl = this._stepLvl;\n\n            var date = new Date(val);\n\n            return formatUtil.formatTime(stepLvl[0], date);\n        },\n\n        // Overwrite\n        niceExtent: function (approxTickNum, fixMin, fixMax) {\n            var extent = this._extent;\n            // If extent start and end are same, expand them\n            if (extent[0] === extent[1]) {\n                // Expand extent\n                extent[0] -= ONE_DAY;\n                extent[1] += ONE_DAY;\n            }\n            // If there are no data and extent are [Infinity, -Infinity]\n            if (extent[1] === -Infinity && extent[0] === Infinity) {\n                var d = new Date();\n                extent[1] = new Date(d.getFullYear(), d.getMonth(), d.getDate());\n                extent[0] = extent[1] - ONE_DAY;\n            }\n\n            this.niceTicks(approxTickNum);\n\n            // var extent = this._extent;\n            var interval = this._interval;\n\n            if (!fixMin) {\n                extent[0] = numberUtil.round(mathFloor(extent[0] / interval) * interval);\n            }\n            if (!fixMax) {\n                extent[1] = numberUtil.round(mathCeil(extent[1] / interval) * interval);\n            }\n        },\n\n        // Overwrite\n        niceTicks: function (approxTickNum) {\n            approxTickNum = approxTickNum || 10;\n\n            var extent = this._extent;\n            var span = extent[1] - extent[0];\n            var approxInterval = span / approxTickNum;\n            var scaleLevelsLen = scaleLevels.length;\n            var idx = bisect(scaleLevels, approxInterval, 0, scaleLevelsLen);\n\n            var level = scaleLevels[Math.min(idx, scaleLevelsLen - 1)];\n            var interval = level[2];\n            // Same with interval scale if span is much larger than 1 year\n            if (level[0] === 'year') {\n                var yearSpan = span / interval;\n\n                // From \"Nice Numbers for Graph Labels\" of Graphic Gems\n                // var niceYearSpan = numberUtil.nice(yearSpan, false);\n                var yearStep = numberUtil.nice(yearSpan / approxTickNum, true);\n\n                interval *= yearStep;\n            }\n\n            var niceExtent = [\n                mathCeil(extent[0] / interval) * interval,\n                mathFloor(extent[1] / interval) * interval\n            ];\n\n            this._stepLvl = level;\n            // Interval will be used in getTicks\n            this._interval = interval;\n            this._niceExtent = niceExtent;\n        },\n\n        parse: function (val) {\n            // val might be float.\n            return +numberUtil.parseDate(val);\n        }\n    });\n\n    zrUtil.each(['contain', 'normalize'], function (methodName) {\n        TimeScale.prototype[methodName] = function (val) {\n            return intervalScaleProto[methodName].call(this, this.parse(val));\n        };\n    });\n\n    // Steps from d3\n    var scaleLevels = [\n        // Format       step    interval\n        ['hh:mm:ss',    1,      ONE_SECOND],           // 1s\n        ['hh:mm:ss',    5,      ONE_SECOND * 5],       // 5s\n        ['hh:mm:ss',    10,     ONE_SECOND * 10],      // 10s\n        ['hh:mm:ss',    15,     ONE_SECOND * 15],      // 15s\n        ['hh:mm:ss',    30,     ONE_SECOND * 30],      // 30s\n        ['hh:mm\\nMM-dd',1,      ONE_MINUTE],          // 1m\n        ['hh:mm\\nMM-dd',5,      ONE_MINUTE * 5],      // 5m\n        ['hh:mm\\nMM-dd',10,     ONE_MINUTE * 10],     // 10m\n        ['hh:mm\\nMM-dd',15,     ONE_MINUTE * 15],     // 15m\n        ['hh:mm\\nMM-dd',30,     ONE_MINUTE * 30],     // 30m\n        ['hh:mm\\nMM-dd',1,      ONE_HOUR],        // 1h\n        ['hh:mm\\nMM-dd',2,      ONE_HOUR * 2],    // 2h\n        ['hh:mm\\nMM-dd',6,      ONE_HOUR * 6],    // 6h\n        ['hh:mm\\nMM-dd',12,     ONE_HOUR * 12],   // 12h\n        ['MM-dd\\nyyyy', 1,      ONE_DAY],   // 1d\n        ['week',        7,      ONE_DAY * 7],        // 7d\n        ['month',       1,      ONE_DAY * 31],       // 1M\n        ['quarter',     3,      ONE_DAY * 380 / 4],  // 3M\n        ['half-year',   6,      ONE_DAY * 380 / 2],  // 6M\n        ['year',        1,      ONE_DAY * 380]       // 1Y\n    ];\n\n    /**\n     * @return {module:echarts/scale/Time}\n     */\n    TimeScale.create = function () {\n        return new TimeScale();\n    };\n\n    module.exports = TimeScale;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/scale/Time.js\n// module id = 590\n// module chunks = 0 1","\n    var Gradient = require('zrender/lib/graphic/Gradient');\n    module.exports = function (ecModel) {\n        function encodeColor(seriesModel) {\n            var colorAccessPath = (seriesModel.visualColorAccessPath || 'itemStyle.normal.color').split('.');\n            var data = seriesModel.getData();\n            var color = seriesModel.get(colorAccessPath) // Set in itemStyle\n                || seriesModel.getColorFromPalette(seriesModel.get('name'));  // Default color\n\n            // FIXME Set color function or use the platte color\n            data.setVisual('color', color);\n\n            // Only visible series has each data be visual encoded\n            if (!ecModel.isSeriesFiltered(seriesModel)) {\n                if (typeof color === 'function' && !(color instanceof Gradient)) {\n                    data.each(function (idx) {\n                        data.setItemVisual(\n                            idx, 'color', color(seriesModel.getDataParams(idx))\n                        );\n                    });\n                }\n\n                // itemStyle in each data item\n                data.each(function (idx) {\n                    var itemModel = data.getItemModel(idx);\n                    var color = itemModel.get(colorAccessPath, true);\n                    if (color != null) {\n                        data.setItemVisual(idx, 'color', color);\n                    }\n                });\n            }\n        }\n        ecModel.eachRawSeries(encodeColor);\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/visual/seriesColor.js\n// module id = 591\n// module chunks = 0 1","\n\n    module.exports = function (seriesType, defaultSymbolType, legendSymbol, ecModel, api) {\n\n        // Encoding visual for all series include which is filtered for legend drawing\n        ecModel.eachRawSeriesByType(seriesType, function (seriesModel) {\n            var data = seriesModel.getData();\n\n            var symbolType = seriesModel.get('symbol') || defaultSymbolType;\n            var symbolSize = seriesModel.get('symbolSize');\n\n            data.setVisual({\n                legendSymbol: legendSymbol || symbolType,\n                symbol: symbolType,\n                symbolSize: symbolSize\n            });\n\n            // Only visible series has each data be visual encoded\n            if (!ecModel.isSeriesFiltered(seriesModel)) {\n                if (typeof symbolSize === 'function') {\n                    data.each(function (idx) {\n                        var rawValue = seriesModel.getRawValue(idx);\n                        // FIXME\n                        var params = seriesModel.getDataParams(idx);\n                        data.setItemVisual(idx, 'symbolSize', symbolSize(rawValue, params));\n                    });\n                }\n                data.each(function (idx) {\n                    var itemModel = data.getItemModel(idx);\n                    var itemSymbolType = itemModel.getShallow('symbol', true);\n                    var itemSymbolSize = itemModel.getShallow('symbolSize', true);\n                    // If has item symbol\n                    if (itemSymbolType != null) {\n                        data.setItemVisual(idx, 'symbol', itemSymbolType);\n                    }\n                    if (itemSymbolSize != null) {\n                        // PENDING Transform symbolSize ?\n                        data.setItemVisual(idx, 'symbolSize', itemSymbolSize);\n                    }\n                });\n            }\n        });\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/visual/symbol.js\n// module id = 592\n// module chunks = 0 1","var _zrender = require(\"./lib/zrender\");\n\n(function () {\n  for (var key in _zrender) {\n    if (_zrender == null || !_zrender.hasOwnProperty(key) || key === 'default' || key === '__esModule') return;\n    exports[key] = _zrender[key];\n  }\n})();\n\nvar _export = require(\"./lib/export\");\n\n(function () {\n  for (var key in _export) {\n    if (_export == null || !_export.hasOwnProperty(key) || key === 'default' || key === '__esModule') return;\n    exports[key] = _export[key];\n  }\n})();\n\nrequire(\"./lib/svg/svg\");\n\nrequire(\"./lib/vml/vml\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/index.js\n// module id = 593\n// module chunks = 0 1","var util = require(\"./core/util\");\n\nvar vec2 = require(\"./core/vector\");\n\nvar Draggable = require(\"./mixin/Draggable\");\n\nvar Eventful = require(\"./mixin/Eventful\");\n\n/**\n * Handler\n * @module zrender/Handler\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *         errorrik (errorrik@gmail.com)\n *         pissang (shenyi.914@gmail.com)\n */\nvar SILENT = 'silent';\n\nfunction makeEventPacket(eveType, targetInfo, event) {\n  return {\n    type: eveType,\n    event: event,\n    // target can only be an element that is not silent.\n    target: targetInfo.target,\n    // topTarget can be a silent element.\n    topTarget: targetInfo.topTarget,\n    cancelBubble: false,\n    offsetX: event.zrX,\n    offsetY: event.zrY,\n    gestureEvent: event.gestureEvent,\n    pinchX: event.pinchX,\n    pinchY: event.pinchY,\n    pinchScale: event.pinchScale,\n    wheelDelta: event.zrDelta,\n    zrByTouch: event.zrByTouch,\n    which: event.which\n  };\n}\n\nfunction EmptyProxy() {}\n\nEmptyProxy.prototype.dispose = function () {};\n\nvar handlerNames = ['click', 'dblclick', 'mousewheel', 'mouseout', 'mouseup', 'mousedown', 'mousemove', 'contextmenu'];\n/**\n * @alias module:zrender/Handler\n * @constructor\n * @extends module:zrender/mixin/Eventful\n * @param {module:zrender/Storage} storage Storage instance.\n * @param {module:zrender/Painter} painter Painter instance.\n * @param {module:zrender/dom/HandlerProxy} proxy HandlerProxy instance.\n * @param {HTMLElement} painterRoot painter.root (not painter.getViewportRoot()).\n */\n\nvar Handler = function (storage, painter, proxy, painterRoot) {\n  Eventful.call(this);\n  this.storage = storage;\n  this.painter = painter;\n  this.painterRoot = painterRoot;\n  proxy = proxy || new EmptyProxy();\n  /**\n   * Proxy of event. can be Dom, WebGLSurface, etc.\n   */\n\n  this.proxy = proxy; // Attach handler\n\n  proxy.handler = this;\n  /**\n   * {target, topTarget, x, y}\n   * @private\n   * @type {Object}\n   */\n\n  this._hovered = {};\n  /**\n   * @private\n   * @type {Date}\n   */\n\n  this._lastTouchMoment;\n  /**\n   * @private\n   * @type {number}\n   */\n\n  this._lastX;\n  /**\n   * @private\n   * @type {number}\n   */\n\n  this._lastY;\n  Draggable.call(this);\n  util.each(handlerNames, function (name) {\n    proxy.on && proxy.on(name, this[name], this);\n  }, this);\n};\n\nHandler.prototype = {\n  constructor: Handler,\n  mousemove: function (event) {\n    var x = event.zrX;\n    var y = event.zrY;\n    var lastHovered = this._hovered;\n    var lastHoveredTarget = lastHovered.target; // If lastHoveredTarget is removed from zr (detected by '__zr') by some API call\n    // (like 'setOption' or 'dispatchAction') in event handlers, we should find\n    // lastHovered again here. Otherwise 'mouseout' can not be triggered normally.\n    // See #6198.\n\n    if (lastHoveredTarget && !lastHoveredTarget.__zr) {\n      lastHovered = this.findHover(lastHovered.x, lastHovered.y);\n      lastHoveredTarget = lastHovered.target;\n    }\n\n    var hovered = this._hovered = this.findHover(x, y);\n    var hoveredTarget = hovered.target;\n    var proxy = this.proxy;\n    proxy.setCursor && proxy.setCursor(hoveredTarget ? hoveredTarget.cursor : 'default'); // Mouse out on previous hovered element\n\n    if (lastHoveredTarget && hoveredTarget !== lastHoveredTarget) {\n      this.dispatchToElement(lastHovered, 'mouseout', event);\n    } // Mouse moving on one element\n\n\n    this.dispatchToElement(hovered, 'mousemove', event); // Mouse over on a new element\n\n    if (hoveredTarget && hoveredTarget !== lastHoveredTarget) {\n      this.dispatchToElement(hovered, 'mouseover', event);\n    }\n  },\n  mouseout: function (event) {\n    this.dispatchToElement(this._hovered, 'mouseout', event); // There might be some doms created by upper layer application\n    // at the same level of painter.getViewportRoot() (e.g., tooltip\n    // dom created by echarts), where 'globalout' event should not\n    // be triggered when mouse enters these doms. (But 'mouseout'\n    // should be triggered at the original hovered element as usual).\n\n    var element = event.toElement || event.relatedTarget;\n    var innerDom;\n\n    do {\n      element = element && element.parentNode;\n    } while (element && element.nodeType != 9 && !(innerDom = element === this.painterRoot));\n\n    !innerDom && this.trigger('globalout', {\n      event: event\n    });\n  },\n\n  /**\n   * Resize\n   */\n  resize: function (event) {\n    this._hovered = {};\n  },\n\n  /**\n   * Dispatch event\n   * @param {string} eventName\n   * @param {event=} eventArgs\n   */\n  dispatch: function (eventName, eventArgs) {\n    var handler = this[eventName];\n    handler && handler.call(this, eventArgs);\n  },\n\n  /**\n   * Dispose\n   */\n  dispose: function () {\n    this.proxy.dispose();\n    this.storage = this.proxy = this.painter = null;\n  },\n\n  /**\n   * 设置默认的cursor style\n   * @param {string} [cursorStyle='default'] 例如 crosshair\n   */\n  setCursorStyle: function (cursorStyle) {\n    var proxy = this.proxy;\n    proxy.setCursor && proxy.setCursor(cursorStyle);\n  },\n\n  /**\n   * 事件分发代理\n   *\n   * @private\n   * @param {Object} targetInfo {target, topTarget} 目标图形元素\n   * @param {string} eventName 事件名称\n   * @param {Object} event 事件对象\n   */\n  dispatchToElement: function (targetInfo, eventName, event) {\n    targetInfo = targetInfo || {};\n    var el = targetInfo.target;\n\n    if (el && el.silent) {\n      return;\n    }\n\n    var eventHandler = 'on' + eventName;\n    var eventPacket = makeEventPacket(eventName, targetInfo, event);\n\n    while (el) {\n      el[eventHandler] && (eventPacket.cancelBubble = el[eventHandler].call(el, eventPacket));\n      el.trigger(eventName, eventPacket);\n      el = el.parent;\n\n      if (eventPacket.cancelBubble) {\n        break;\n      }\n    }\n\n    if (!eventPacket.cancelBubble) {\n      // 冒泡到顶级 zrender 对象\n      this.trigger(eventName, eventPacket); // 分发事件到用户自定义层\n      // 用户有可能在全局 click 事件中 dispose，所以需要判断下 painter 是否存在\n\n      this.painter && this.painter.eachOtherLayer(function (layer) {\n        if (typeof layer[eventHandler] == 'function') {\n          layer[eventHandler].call(layer, eventPacket);\n        }\n\n        if (layer.trigger) {\n          layer.trigger(eventName, eventPacket);\n        }\n      });\n    }\n  },\n\n  /**\n   * @private\n   * @param {number} x\n   * @param {number} y\n   * @param {module:zrender/graphic/Displayable} exclude\n   * @return {model:zrender/Element}\n   * @method\n   */\n  findHover: function (x, y, exclude) {\n    var list = this.storage.getDisplayList();\n    var out = {\n      x: x,\n      y: y\n    };\n\n    for (var i = list.length - 1; i >= 0; i--) {\n      var hoverCheckResult;\n\n      if (list[i] !== exclude // getDisplayList may include ignored item in VML mode\n      && !list[i].ignore && (hoverCheckResult = isHover(list[i], x, y))) {\n        !out.topTarget && (out.topTarget = list[i]);\n\n        if (hoverCheckResult !== SILENT) {\n          out.target = list[i];\n          break;\n        }\n      }\n    }\n\n    return out;\n  }\n}; // Common handlers\n\nutil.each(['click', 'mousedown', 'mouseup', 'mousewheel', 'dblclick', 'contextmenu'], function (name) {\n  Handler.prototype[name] = function (event) {\n    // Find hover again to avoid click event is dispatched manually. Or click is triggered without mouseover\n    var hovered = this.findHover(event.zrX, event.zrY);\n    var hoveredTarget = hovered.target;\n\n    if (name === 'mousedown') {\n      this._downEl = hoveredTarget;\n      this._downPoint = [event.zrX, event.zrY]; // In case click triggered before mouseup\n\n      this._upEl = hoveredTarget;\n    } else if (name === 'mosueup') {\n      this._upEl = hoveredTarget;\n    } else if (name === 'click') {\n      if (this._downEl !== this._upEl // Original click event is triggered on the whole canvas element,\n      // including the case that `mousedown` - `mousemove` - `mouseup`,\n      // which should be filtered, otherwise it will bring trouble to\n      // pan and zoom.\n      || !this._downPoint // Arbitrary value\n      || vec2.dist(this._downPoint, [event.zrX, event.zrY]) > 4) {\n        return;\n      }\n\n      this._downPoint = null;\n    }\n\n    this.dispatchToElement(hovered, name, event);\n  };\n});\n\nfunction isHover(displayable, x, y) {\n  if (displayable[displayable.rectHover ? 'rectContain' : 'contain'](x, y)) {\n    var el = displayable;\n    var isSilent;\n\n    while (el) {\n      // If clipped by ancestor.\n      // FIXME: If clipPath has neither stroke nor fill,\n      // el.clipPath.contain(x, y) will always return false.\n      if (el.clipPath && !el.clipPath.contain(x, y)) {\n        return false;\n      }\n\n      if (el.silent) {\n        isSilent = true;\n      }\n\n      el = el.parent;\n    }\n\n    return isSilent ? SILENT : true;\n  }\n\n  return false;\n}\n\nutil.mixin(Handler, Eventful);\nutil.mixin(Handler, Draggable);\nvar _default = Handler;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/Handler.js\n// module id = 594\n// module chunks = 0 1","var util = require(\"./core/util\");\n\nvar _config = require(\"./config\");\n\nvar devicePixelRatio = _config.devicePixelRatio;\n\nvar Style = require(\"./graphic/Style\");\n\nvar Pattern = require(\"./graphic/Pattern\");\n\n/**\n * @module zrender/Layer\n * @author pissang(https://www.github.com/pissang)\n */\nfunction returnFalse() {\n  return false;\n}\n/**\n * 创建dom\n *\n * @inner\n * @param {string} id dom id 待用\n * @param {Painter} painter painter instance\n * @param {number} number\n */\n\n\nfunction createDom(id, painter, dpr) {\n  var newDom = util.createCanvas();\n  var width = painter.getWidth();\n  var height = painter.getHeight();\n  var newDomStyle = newDom.style; // 没append呢，请原谅我这样写，清晰~\n\n  newDomStyle.position = 'absolute';\n  newDomStyle.left = 0;\n  newDomStyle.top = 0;\n  newDomStyle.width = width + 'px';\n  newDomStyle.height = height + 'px';\n  newDom.width = width * dpr;\n  newDom.height = height * dpr; // id不作为索引用，避免可能造成的重名，定义为私有属性\n\n  newDom.setAttribute('data-zr-dom-id', id);\n  return newDom;\n}\n/**\n * @alias module:zrender/Layer\n * @constructor\n * @extends module:zrender/mixin/Transformable\n * @param {string} id\n * @param {module:zrender/Painter} painter\n * @param {number} [dpr]\n */\n\n\nvar Layer = function (id, painter, dpr) {\n  var dom;\n  dpr = dpr || devicePixelRatio;\n\n  if (typeof id === 'string') {\n    dom = createDom(id, painter, dpr);\n  } // Not using isDom because in node it will return false\n  else if (util.isObject(id)) {\n      dom = id;\n      id = dom.id;\n    }\n\n  this.id = id;\n  this.dom = dom;\n  var domStyle = dom.style;\n\n  if (domStyle) {\n    // Not in node\n    dom.onselectstart = returnFalse; // 避免页面选中的尴尬\n\n    domStyle['-webkit-user-select'] = 'none';\n    domStyle['user-select'] = 'none';\n    domStyle['-webkit-touch-callout'] = 'none';\n    domStyle['-webkit-tap-highlight-color'] = 'rgba(0,0,0,0)';\n    domStyle['padding'] = 0;\n    domStyle['margin'] = 0;\n    domStyle['border-width'] = 0;\n  }\n\n  this.domBack = null;\n  this.ctxBack = null;\n  this.painter = painter;\n  this.config = null; // Configs\n\n  /**\n   * 每次清空画布的颜色\n   * @type {string}\n   * @default 0\n   */\n\n  this.clearColor = 0;\n  /**\n   * 是否开启动态模糊\n   * @type {boolean}\n   * @default false\n   */\n\n  this.motionBlur = false;\n  /**\n   * 在开启动态模糊的时候使用，与上一帧混合的alpha值，值越大尾迹越明显\n   * @type {number}\n   * @default 0.7\n   */\n\n  this.lastFrameAlpha = 0.7;\n  /**\n   * Layer dpr\n   * @type {number}\n   */\n\n  this.dpr = dpr;\n};\n\nLayer.prototype = {\n  constructor: Layer,\n  elCount: 0,\n  __dirty: true,\n  initContext: function () {\n    this.ctx = this.dom.getContext('2d');\n    this.ctx.__currentValues = {};\n    this.ctx.dpr = this.dpr;\n  },\n  createBackBuffer: function () {\n    var dpr = this.dpr;\n    this.domBack = createDom('back-' + this.id, this.painter, dpr);\n    this.ctxBack = this.domBack.getContext('2d');\n    this.ctxBack.__currentValues = {};\n\n    if (dpr != 1) {\n      this.ctxBack.scale(dpr, dpr);\n    }\n  },\n\n  /**\n   * @param  {number} width\n   * @param  {number} height\n   */\n  resize: function (width, height) {\n    var dpr = this.dpr;\n    var dom = this.dom;\n    var domStyle = dom.style;\n    var domBack = this.domBack;\n    domStyle.width = width + 'px';\n    domStyle.height = height + 'px';\n    dom.width = width * dpr;\n    dom.height = height * dpr;\n\n    if (domBack) {\n      domBack.width = width * dpr;\n      domBack.height = height * dpr;\n\n      if (dpr != 1) {\n        this.ctxBack.scale(dpr, dpr);\n      }\n    }\n  },\n\n  /**\n   * 清空该层画布\n   * @param {boolean} clearAll Clear all with out motion blur\n   */\n  clear: function (clearAll) {\n    var dom = this.dom;\n    var ctx = this.ctx;\n    var width = dom.width;\n    var height = dom.height;\n    var clearColor = this.clearColor;\n    var haveMotionBLur = this.motionBlur && !clearAll;\n    var lastFrameAlpha = this.lastFrameAlpha;\n    var dpr = this.dpr;\n\n    if (haveMotionBLur) {\n      if (!this.domBack) {\n        this.createBackBuffer();\n      }\n\n      this.ctxBack.globalCompositeOperation = 'copy';\n      this.ctxBack.drawImage(dom, 0, 0, width / dpr, height / dpr);\n    }\n\n    ctx.clearRect(0, 0, width, height);\n\n    if (clearColor) {\n      var clearColorGradientOrPattern; // Gradient\n\n      if (clearColor.colorStops) {\n        // Cache canvas gradient\n        clearColorGradientOrPattern = clearColor.__canvasGradient || Style.getGradient(ctx, clearColor, {\n          x: 0,\n          y: 0,\n          width: width,\n          height: height\n        });\n        clearColor.__canvasGradient = clearColorGradientOrPattern;\n      } // Pattern\n      else if (clearColor.image) {\n          clearColorGradientOrPattern = Pattern.prototype.getCanvasPattern.call(clearColor, ctx);\n        }\n\n      ctx.save();\n      ctx.fillStyle = clearColorGradientOrPattern || clearColor;\n      ctx.fillRect(0, 0, width, height);\n      ctx.restore();\n    }\n\n    if (haveMotionBLur) {\n      var domBack = this.domBack;\n      ctx.save();\n      ctx.globalAlpha = lastFrameAlpha;\n      ctx.drawImage(domBack, 0, 0, width, height);\n      ctx.restore();\n    }\n  }\n};\nvar _default = Layer;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/Layer.js\n// module id = 595\n// module chunks = 0 1","var _config = require(\"./config\");\n\nvar devicePixelRatio = _config.devicePixelRatio;\n\nvar util = require(\"./core/util\");\n\nvar log = require(\"./core/log\");\n\nvar BoundingRect = require(\"./core/BoundingRect\");\n\nvar timsort = require(\"./core/timsort\");\n\nvar Layer = require(\"./Layer\");\n\nvar requestAnimationFrame = require(\"./animation/requestAnimationFrame\");\n\nvar Image = require(\"./graphic/Image\");\n\n/**\n * Default canvas painter\n * @module zrender/Painter\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *         errorrik (errorrik@gmail.com)\n *         pissang (https://www.github.com/pissang)\n */\n// PENDIGN\n// Layer exceeds MAX_PROGRESSIVE_LAYER_NUMBER may have some problem when flush directly second time.\n//\n// Maximum progressive layer. When exceeding this number. All elements will be drawed in the last layer.\nvar MAX_PROGRESSIVE_LAYER_NUMBER = 5;\n\nfunction parseInt10(val) {\n  return parseInt(val, 10);\n}\n\nfunction isLayerValid(layer) {\n  if (!layer) {\n    return false;\n  }\n\n  if (layer.__builtin__) {\n    return true;\n  }\n\n  if (typeof layer.resize !== 'function' || typeof layer.refresh !== 'function') {\n    return false;\n  }\n\n  return true;\n}\n\nfunction preProcessLayer(layer) {\n  layer.__unusedCount++;\n}\n\nfunction postProcessLayer(layer) {\n  if (layer.__unusedCount == 1) {\n    layer.clear();\n  }\n}\n\nvar tmpRect = new BoundingRect(0, 0, 0, 0);\nvar viewRect = new BoundingRect(0, 0, 0, 0);\n\nfunction isDisplayableCulled(el, width, height) {\n  tmpRect.copy(el.getBoundingRect());\n\n  if (el.transform) {\n    tmpRect.applyTransform(el.transform);\n  }\n\n  viewRect.width = width;\n  viewRect.height = height;\n  return !tmpRect.intersect(viewRect);\n}\n\nfunction isClipPathChanged(clipPaths, prevClipPaths) {\n  if (clipPaths == prevClipPaths) {\n    // Can both be null or undefined\n    return false;\n  }\n\n  if (!clipPaths || !prevClipPaths || clipPaths.length !== prevClipPaths.length) {\n    return true;\n  }\n\n  for (var i = 0; i < clipPaths.length; i++) {\n    if (clipPaths[i] !== prevClipPaths[i]) {\n      return true;\n    }\n  }\n}\n\nfunction doClip(clipPaths, ctx) {\n  for (var i = 0; i < clipPaths.length; i++) {\n    var clipPath = clipPaths[i];\n    clipPath.setTransform(ctx);\n    ctx.beginPath();\n    clipPath.buildPath(ctx, clipPath.shape);\n    ctx.clip(); // Transform back\n\n    clipPath.restoreTransform(ctx);\n  }\n}\n\nfunction createRoot(width, height) {\n  var domRoot = document.createElement('div'); // domRoot.onselectstart = returnFalse; // 避免页面选中的尴尬\n\n  domRoot.style.cssText = ['position:relative', 'overflow:hidden', 'width:' + width + 'px', 'height:' + height + 'px', 'padding:0', 'margin:0', 'border-width:0'].join(';') + ';';\n  return domRoot;\n}\n/**\n * @alias module:zrender/Painter\n * @constructor\n * @param {HTMLElement} root 绘图容器\n * @param {module:zrender/Storage} storage\n * @param {Object} opts\n */\n\n\nvar Painter = function (root, storage, opts) {\n  this.type = 'canvas'; // In node environment using node-canvas\n\n  var singleCanvas = !root.nodeName // In node ?\n  || root.nodeName.toUpperCase() === 'CANVAS';\n  this._opts = opts = util.extend({}, opts || {});\n  /**\n   * @type {number}\n   */\n\n  this.dpr = opts.devicePixelRatio || devicePixelRatio;\n  /**\n   * @type {boolean}\n   * @private\n   */\n\n  this._singleCanvas = singleCanvas;\n  /**\n   * 绘图容器\n   * @type {HTMLElement}\n   */\n\n  this.root = root;\n  var rootStyle = root.style;\n\n  if (rootStyle) {\n    rootStyle['-webkit-tap-highlight-color'] = 'transparent';\n    rootStyle['-webkit-user-select'] = rootStyle['user-select'] = rootStyle['-webkit-touch-callout'] = 'none';\n    root.innerHTML = '';\n  }\n  /**\n   * @type {module:zrender/Storage}\n   */\n\n\n  this.storage = storage;\n  /**\n   * @type {Array.<number>}\n   * @private\n   */\n\n  var zlevelList = this._zlevelList = [];\n  /**\n   * @type {Object.<string, module:zrender/Layer>}\n   * @private\n   */\n\n  var layers = this._layers = {};\n  /**\n   * @type {Object.<string, Object>}\n   * @type {private}\n   */\n\n  this._layerConfig = {};\n\n  if (!singleCanvas) {\n    this._width = this._getSize(0);\n    this._height = this._getSize(1);\n    var domRoot = this._domRoot = createRoot(this._width, this._height);\n    root.appendChild(domRoot);\n  } else {\n    if (opts.width != null) {\n      root.width = opts.width;\n    }\n\n    if (opts.height != null) {\n      root.height = opts.height;\n    } // Use canvas width and height directly\n\n\n    var width = root.width;\n    var height = root.height;\n    this._width = width;\n    this._height = height; // Create layer if only one given canvas\n    // Device pixel ratio is fixed to 1 because given canvas has its specified width and height\n\n    var mainLayer = new Layer(root, this, 1);\n    mainLayer.initContext(); // FIXME Use canvas width and height\n    // mainLayer.resize(width, height);\n\n    layers[0] = mainLayer;\n    zlevelList.push(0);\n    this._domRoot = root;\n  } // Layers for progressive rendering\n\n\n  this._progressiveLayers = [];\n  /**\n   * @type {module:zrender/Layer}\n   * @private\n   */\n\n  this._hoverlayer;\n  this._hoverElements = [];\n};\n\nPainter.prototype = {\n  constructor: Painter,\n  getType: function () {\n    return 'canvas';\n  },\n\n  /**\n   * If painter use a single canvas\n   * @return {boolean}\n   */\n  isSingleCanvas: function () {\n    return this._singleCanvas;\n  },\n\n  /**\n   * @return {HTMLDivElement}\n   */\n  getViewportRoot: function () {\n    return this._domRoot;\n  },\n  getViewportRootOffset: function () {\n    var viewportRoot = this.getViewportRoot();\n\n    if (viewportRoot) {\n      return {\n        offsetLeft: viewportRoot.offsetLeft || 0,\n        offsetTop: viewportRoot.offsetTop || 0\n      };\n    }\n  },\n\n  /**\n   * 刷新\n   * @param {boolean} [paintAll=false] 强制绘制所有displayable\n   */\n  refresh: function (paintAll) {\n    var list = this.storage.getDisplayList(true);\n    var zlevelList = this._zlevelList;\n\n    this._paintList(list, paintAll); // Paint custum layers\n\n\n    for (var i = 0; i < zlevelList.length; i++) {\n      var z = zlevelList[i];\n      var layer = this._layers[z];\n\n      if (!layer.__builtin__ && layer.refresh) {\n        layer.refresh();\n      }\n    }\n\n    this.refreshHover();\n\n    if (this._progressiveLayers.length) {\n      this._startProgessive();\n    }\n\n    return this;\n  },\n  addHover: function (el, hoverStyle) {\n    if (el.__hoverMir) {\n      return;\n    }\n\n    var elMirror = new el.constructor({\n      style: el.style,\n      shape: el.shape\n    });\n    elMirror.__from = el;\n    el.__hoverMir = elMirror;\n    elMirror.setStyle(hoverStyle);\n\n    this._hoverElements.push(elMirror);\n  },\n  removeHover: function (el) {\n    var elMirror = el.__hoverMir;\n    var hoverElements = this._hoverElements;\n    var idx = util.indexOf(hoverElements, elMirror);\n\n    if (idx >= 0) {\n      hoverElements.splice(idx, 1);\n    }\n\n    el.__hoverMir = null;\n  },\n  clearHover: function (el) {\n    var hoverElements = this._hoverElements;\n\n    for (var i = 0; i < hoverElements.length; i++) {\n      var from = hoverElements[i].__from;\n\n      if (from) {\n        from.__hoverMir = null;\n      }\n    }\n\n    hoverElements.length = 0;\n  },\n  refreshHover: function () {\n    var hoverElements = this._hoverElements;\n    var len = hoverElements.length;\n    var hoverLayer = this._hoverlayer;\n    hoverLayer && hoverLayer.clear();\n\n    if (!len) {\n      return;\n    }\n\n    timsort(hoverElements, this.storage.displayableSortFunc); // Use a extream large zlevel\n    // FIXME?\n\n    if (!hoverLayer) {\n      hoverLayer = this._hoverlayer = this.getLayer(1e5);\n    }\n\n    var scope = {};\n    hoverLayer.ctx.save();\n\n    for (var i = 0; i < len;) {\n      var el = hoverElements[i];\n      var originalEl = el.__from; // Original el is removed\n      // PENDING\n\n      if (!(originalEl && originalEl.__zr)) {\n        hoverElements.splice(i, 1);\n        originalEl.__hoverMir = null;\n        len--;\n        continue;\n      }\n\n      i++; // Use transform\n      // FIXME style and shape ?\n\n      if (!originalEl.invisible) {\n        el.transform = originalEl.transform;\n        el.invTransform = originalEl.invTransform;\n        el.__clipPaths = originalEl.__clipPaths; // el.\n\n        this._doPaintEl(el, hoverLayer, true, scope);\n      }\n    }\n\n    hoverLayer.ctx.restore();\n  },\n  _startProgessive: function () {\n    var self = this;\n\n    if (!self._furtherProgressive) {\n      return;\n    } // Use a token to stop progress steps triggered by\n    // previous zr.refresh calling.\n\n\n    var token = self._progressiveToken = +new Date();\n    self._progress++;\n    requestAnimationFrame(step);\n\n    function step() {\n      // In case refreshed or disposed\n      if (token === self._progressiveToken && self.storage) {\n        self._doPaintList(self.storage.getDisplayList());\n\n        if (self._furtherProgressive) {\n          self._progress++;\n          requestAnimationFrame(step);\n        } else {\n          self._progressiveToken = -1;\n        }\n      }\n    }\n  },\n  _clearProgressive: function () {\n    this._progressiveToken = -1;\n    this._progress = 0;\n    util.each(this._progressiveLayers, function (layer) {\n      layer.__dirty && layer.clear();\n    });\n  },\n  _paintList: function (list, paintAll) {\n    if (paintAll == null) {\n      paintAll = false;\n    }\n\n    this._updateLayerStatus(list);\n\n    this._clearProgressive();\n\n    this.eachBuiltinLayer(preProcessLayer);\n\n    this._doPaintList(list, paintAll);\n\n    this.eachBuiltinLayer(postProcessLayer);\n  },\n  _doPaintList: function (list, paintAll) {\n    var currentLayer;\n    var currentZLevel;\n    var ctx; // var invTransform = [];\n\n    var scope;\n    var progressiveLayerIdx = 0;\n    var currentProgressiveLayer;\n    var width = this._width;\n    var height = this._height;\n    var layerProgress;\n    var frame = this._progress;\n\n    function flushProgressiveLayer(layer) {\n      var dpr = ctx.dpr || 1;\n      ctx.save();\n      ctx.globalAlpha = 1;\n      ctx.shadowBlur = 0; // Avoid layer don't clear in next progressive frame\n\n      currentLayer.__dirty = true;\n      ctx.setTransform(1, 0, 0, 1, 0, 0);\n      ctx.drawImage(layer.dom, 0, 0, width * dpr, height * dpr);\n      ctx.restore();\n    }\n\n    for (var i = 0, l = list.length; i < l; i++) {\n      var el = list[i];\n      var elZLevel = this._singleCanvas ? 0 : el.zlevel;\n      var elFrame = el.__frame; // Flush at current context\n      // PENDING\n\n      if (elFrame < 0 && currentProgressiveLayer) {\n        flushProgressiveLayer(currentProgressiveLayer);\n        currentProgressiveLayer = null;\n      } // Change draw layer\n\n\n      if (currentZLevel !== elZLevel) {\n        if (ctx) {\n          ctx.restore();\n        } // Reset scope\n\n\n        scope = {}; // Only 0 zlevel if only has one canvas\n\n        currentZLevel = elZLevel;\n        currentLayer = this.getLayer(currentZLevel);\n\n        if (!currentLayer.__builtin__) {\n          log('ZLevel ' + currentZLevel + ' has been used by unkown layer ' + currentLayer.id);\n        }\n\n        ctx = currentLayer.ctx;\n        ctx.save(); // Reset the count\n\n        currentLayer.__unusedCount = 0;\n\n        if (currentLayer.__dirty || paintAll) {\n          currentLayer.clear();\n        }\n      }\n\n      if (!(currentLayer.__dirty || paintAll)) {\n        continue;\n      }\n\n      if (elFrame >= 0) {\n        // Progressive layer changed\n        if (!currentProgressiveLayer) {\n          currentProgressiveLayer = this._progressiveLayers[Math.min(progressiveLayerIdx++, MAX_PROGRESSIVE_LAYER_NUMBER - 1)];\n          currentProgressiveLayer.ctx.save();\n          currentProgressiveLayer.renderScope = {};\n\n          if (currentProgressiveLayer && currentProgressiveLayer.__progress > currentProgressiveLayer.__maxProgress) {\n            // flushProgressiveLayer(currentProgressiveLayer);\n            // Quick jump all progressive elements\n            // All progressive element are not dirty, jump over and flush directly\n            i = currentProgressiveLayer.__nextIdxNotProg - 1; // currentProgressiveLayer = null;\n\n            continue;\n          }\n\n          layerProgress = currentProgressiveLayer.__progress;\n\n          if (!currentProgressiveLayer.__dirty) {\n            // Keep rendering\n            frame = layerProgress;\n          }\n\n          currentProgressiveLayer.__progress = frame + 1;\n        }\n\n        if (elFrame === frame) {\n          this._doPaintEl(el, currentProgressiveLayer, true, currentProgressiveLayer.renderScope);\n        }\n      } else {\n        this._doPaintEl(el, currentLayer, paintAll, scope);\n      }\n\n      el.__dirty = false;\n    }\n\n    if (currentProgressiveLayer) {\n      flushProgressiveLayer(currentProgressiveLayer);\n    } // Restore the lastLayer ctx\n\n\n    ctx && ctx.restore(); // If still has clipping state\n    // if (scope.prevElClipPaths) {\n    //     ctx.restore();\n    // }\n\n    this._furtherProgressive = false;\n    util.each(this._progressiveLayers, function (layer) {\n      if (layer.__maxProgress >= layer.__progress) {\n        this._furtherProgressive = true;\n      }\n    }, this);\n  },\n  _doPaintEl: function (el, currentLayer, forcePaint, scope) {\n    var ctx = currentLayer.ctx;\n    var m = el.transform;\n\n    if ((currentLayer.__dirty || forcePaint) && // Ignore invisible element\n    !el.invisible // Ignore transparent element\n    && el.style.opacity !== 0 // Ignore scale 0 element, in some environment like node-canvas\n    // Draw a scale 0 element can cause all following draw wrong\n    // And setTransform with scale 0 will cause set back transform failed.\n    && !(m && !m[0] && !m[3]) // Ignore culled element\n    && !(el.culling && isDisplayableCulled(el, this._width, this._height))) {\n      var clipPaths = el.__clipPaths; // Optimize when clipping on group with several elements\n\n      if (scope.prevClipLayer !== currentLayer || isClipPathChanged(clipPaths, scope.prevElClipPaths)) {\n        // If has previous clipping state, restore from it\n        if (scope.prevElClipPaths) {\n          scope.prevClipLayer.ctx.restore();\n          scope.prevClipLayer = scope.prevElClipPaths = null; // Reset prevEl since context has been restored\n\n          scope.prevEl = null;\n        } // New clipping state\n\n\n        if (clipPaths) {\n          ctx.save();\n          doClip(clipPaths, ctx);\n          scope.prevClipLayer = currentLayer;\n          scope.prevElClipPaths = clipPaths;\n        }\n      }\n\n      el.beforeBrush && el.beforeBrush(ctx);\n      el.brush(ctx, scope.prevEl || null);\n      scope.prevEl = el;\n      el.afterBrush && el.afterBrush(ctx);\n    }\n  },\n\n  /**\n   * 获取 zlevel 所在层，如果不存在则会创建一个新的层\n   * @param {number} zlevel\n   * @return {module:zrender/Layer}\n   */\n  getLayer: function (zlevel) {\n    if (this._singleCanvas) {\n      return this._layers[0];\n    }\n\n    var layer = this._layers[zlevel];\n\n    if (!layer) {\n      // Create a new layer\n      layer = new Layer('zr_' + zlevel, this, this.dpr);\n      layer.__builtin__ = true;\n\n      if (this._layerConfig[zlevel]) {\n        util.merge(layer, this._layerConfig[zlevel], true);\n      }\n\n      this.insertLayer(zlevel, layer); // Context is created after dom inserted to document\n      // Or excanvas will get 0px clientWidth and clientHeight\n\n      layer.initContext();\n    }\n\n    return layer;\n  },\n  insertLayer: function (zlevel, layer) {\n    var layersMap = this._layers;\n    var zlevelList = this._zlevelList;\n    var len = zlevelList.length;\n    var prevLayer = null;\n    var i = -1;\n    var domRoot = this._domRoot;\n\n    if (layersMap[zlevel]) {\n      log('ZLevel ' + zlevel + ' has been used already');\n      return;\n    } // Check if is a valid layer\n\n\n    if (!isLayerValid(layer)) {\n      log('Layer of zlevel ' + zlevel + ' is not valid');\n      return;\n    }\n\n    if (len > 0 && zlevel > zlevelList[0]) {\n      for (i = 0; i < len - 1; i++) {\n        if (zlevelList[i] < zlevel && zlevelList[i + 1] > zlevel) {\n          break;\n        }\n      }\n\n      prevLayer = layersMap[zlevelList[i]];\n    }\n\n    zlevelList.splice(i + 1, 0, zlevel);\n    layersMap[zlevel] = layer; // Vitual layer will not directly show on the screen.\n    // (It can be a WebGL layer and assigned to a ZImage element)\n    // But it still under management of zrender.\n\n    if (!layer.virtual) {\n      if (prevLayer) {\n        var prevDom = prevLayer.dom;\n\n        if (prevDom.nextSibling) {\n          domRoot.insertBefore(layer.dom, prevDom.nextSibling);\n        } else {\n          domRoot.appendChild(layer.dom);\n        }\n      } else {\n        if (domRoot.firstChild) {\n          domRoot.insertBefore(layer.dom, domRoot.firstChild);\n        } else {\n          domRoot.appendChild(layer.dom);\n        }\n      }\n    }\n  },\n  // Iterate each layer\n  eachLayer: function (cb, context) {\n    var zlevelList = this._zlevelList;\n    var z;\n    var i;\n\n    for (i = 0; i < zlevelList.length; i++) {\n      z = zlevelList[i];\n      cb.call(context, this._layers[z], z);\n    }\n  },\n  // Iterate each buildin layer\n  eachBuiltinLayer: function (cb, context) {\n    var zlevelList = this._zlevelList;\n    var layer;\n    var z;\n    var i;\n\n    for (i = 0; i < zlevelList.length; i++) {\n      z = zlevelList[i];\n      layer = this._layers[z];\n\n      if (layer.__builtin__) {\n        cb.call(context, layer, z);\n      }\n    }\n  },\n  // Iterate each other layer except buildin layer\n  eachOtherLayer: function (cb, context) {\n    var zlevelList = this._zlevelList;\n    var layer;\n    var z;\n    var i;\n\n    for (i = 0; i < zlevelList.length; i++) {\n      z = zlevelList[i];\n      layer = this._layers[z];\n\n      if (!layer.__builtin__) {\n        cb.call(context, layer, z);\n      }\n    }\n  },\n\n  /**\n   * 获取所有已创建的层\n   * @param {Array.<module:zrender/Layer>} [prevLayer]\n   */\n  getLayers: function () {\n    return this._layers;\n  },\n  _updateLayerStatus: function (list) {\n    var layers = this._layers;\n    var progressiveLayers = this._progressiveLayers;\n    var elCountsLastFrame = {};\n    var progressiveElCountsLastFrame = {};\n    this.eachBuiltinLayer(function (layer, z) {\n      elCountsLastFrame[z] = layer.elCount;\n      layer.elCount = 0;\n      layer.__dirty = false;\n    });\n    util.each(progressiveLayers, function (layer, idx) {\n      progressiveElCountsLastFrame[idx] = layer.elCount;\n      layer.elCount = 0;\n      layer.__dirty = false;\n    });\n    var progressiveLayerCount = 0;\n    var currentProgressiveLayer;\n    var lastProgressiveKey;\n    var frameCount = 0;\n\n    for (var i = 0, l = list.length; i < l; i++) {\n      var el = list[i];\n      var zlevel = this._singleCanvas ? 0 : el.zlevel;\n      var layer = layers[zlevel];\n      var elProgress = el.progressive;\n\n      if (layer) {\n        layer.elCount++;\n        layer.__dirty = layer.__dirty || el.__dirty;\n      } /////// Update progressive\n\n\n      if (elProgress >= 0) {\n        // Fix wrong progressive sequence problem.\n        if (lastProgressiveKey !== elProgress) {\n          lastProgressiveKey = elProgress;\n          frameCount++;\n        }\n\n        var elFrame = el.__frame = frameCount - 1;\n\n        if (!currentProgressiveLayer) {\n          var idx = Math.min(progressiveLayerCount, MAX_PROGRESSIVE_LAYER_NUMBER - 1);\n          currentProgressiveLayer = progressiveLayers[idx];\n\n          if (!currentProgressiveLayer) {\n            currentProgressiveLayer = progressiveLayers[idx] = new Layer('progressive', this, this.dpr);\n            currentProgressiveLayer.initContext();\n          }\n\n          currentProgressiveLayer.__maxProgress = 0;\n        }\n\n        currentProgressiveLayer.__dirty = currentProgressiveLayer.__dirty || el.__dirty;\n        currentProgressiveLayer.elCount++;\n        currentProgressiveLayer.__maxProgress = Math.max(currentProgressiveLayer.__maxProgress, elFrame);\n\n        if (currentProgressiveLayer.__maxProgress >= currentProgressiveLayer.__progress) {\n          // Should keep rendering this  layer because progressive rendering is not finished yet\n          layer.__dirty = true;\n        }\n      } else {\n        el.__frame = -1;\n\n        if (currentProgressiveLayer) {\n          currentProgressiveLayer.__nextIdxNotProg = i;\n          progressiveLayerCount++;\n          currentProgressiveLayer = null;\n        }\n      }\n    }\n\n    if (currentProgressiveLayer) {\n      progressiveLayerCount++;\n      currentProgressiveLayer.__nextIdxNotProg = i;\n    } // 层中的元素数量有发生变化\n\n\n    this.eachBuiltinLayer(function (layer, z) {\n      if (elCountsLastFrame[z] !== layer.elCount) {\n        layer.__dirty = true;\n      }\n    });\n    progressiveLayers.length = Math.min(progressiveLayerCount, MAX_PROGRESSIVE_LAYER_NUMBER);\n    util.each(progressiveLayers, function (layer, idx) {\n      if (progressiveElCountsLastFrame[idx] !== layer.elCount) {\n        el.__dirty = true;\n      }\n\n      if (layer.__dirty) {\n        layer.__progress = 0;\n      }\n    });\n  },\n\n  /**\n   * 清除hover层外所有内容\n   */\n  clear: function () {\n    this.eachBuiltinLayer(this._clearLayer);\n    return this;\n  },\n  _clearLayer: function (layer) {\n    layer.clear();\n  },\n\n  /**\n   * 修改指定zlevel的绘制参数\n   *\n   * @param {string} zlevel\n   * @param {Object} config 配置对象\n   * @param {string} [config.clearColor=0] 每次清空画布的颜色\n   * @param {string} [config.motionBlur=false] 是否开启动态模糊\n   * @param {number} [config.lastFrameAlpha=0.7]\n   *                 在开启动态模糊的时候使用，与上一帧混合的alpha值，值越大尾迹越明显\n   */\n  configLayer: function (zlevel, config) {\n    if (config) {\n      var layerConfig = this._layerConfig;\n\n      if (!layerConfig[zlevel]) {\n        layerConfig[zlevel] = config;\n      } else {\n        util.merge(layerConfig[zlevel], config, true);\n      }\n\n      var layer = this._layers[zlevel];\n\n      if (layer) {\n        util.merge(layer, layerConfig[zlevel], true);\n      }\n    }\n  },\n\n  /**\n   * 删除指定层\n   * @param {number} zlevel 层所在的zlevel\n   */\n  delLayer: function (zlevel) {\n    var layers = this._layers;\n    var zlevelList = this._zlevelList;\n    var layer = layers[zlevel];\n\n    if (!layer) {\n      return;\n    }\n\n    layer.dom.parentNode.removeChild(layer.dom);\n    delete layers[zlevel];\n    zlevelList.splice(util.indexOf(zlevelList, zlevel), 1);\n  },\n\n  /**\n   * 区域大小变化后重绘\n   */\n  resize: function (width, height) {\n    var domRoot = this._domRoot; // FIXME Why ?\n\n    domRoot.style.display = 'none'; // Save input w/h\n\n    var opts = this._opts;\n    width != null && (opts.width = width);\n    height != null && (opts.height = height);\n    width = this._getSize(0);\n    height = this._getSize(1);\n    domRoot.style.display = ''; // 优化没有实际改变的resize\n\n    if (this._width != width || height != this._height) {\n      domRoot.style.width = width + 'px';\n      domRoot.style.height = height + 'px';\n\n      for (var id in this._layers) {\n        if (this._layers.hasOwnProperty(id)) {\n          this._layers[id].resize(width, height);\n        }\n      }\n\n      util.each(this._progressiveLayers, function (layer) {\n        layer.resize(width, height);\n      });\n      this.refresh(true);\n    }\n\n    this._width = width;\n    this._height = height;\n    return this;\n  },\n\n  /**\n   * 清除单独的一个层\n   * @param {number} zlevel\n   */\n  clearLayer: function (zlevel) {\n    var layer = this._layers[zlevel];\n\n    if (layer) {\n      layer.clear();\n    }\n  },\n\n  /**\n   * 释放\n   */\n  dispose: function () {\n    this.root.innerHTML = '';\n    this.root = this.storage = this._domRoot = this._layers = null;\n  },\n\n  /**\n   * Get canvas which has all thing rendered\n   * @param {Object} opts\n   * @param {string} [opts.backgroundColor]\n   * @param {number} [opts.pixelRatio]\n   */\n  getRenderedCanvas: function (opts) {\n    opts = opts || {};\n\n    if (this._singleCanvas) {\n      return this._layers[0].dom;\n    }\n\n    var imageLayer = new Layer('image', this, opts.pixelRatio || this.dpr);\n    imageLayer.initContext();\n    imageLayer.clearColor = opts.backgroundColor;\n    imageLayer.clear();\n    var displayList = this.storage.getDisplayList(true);\n    var scope = {};\n    var zlevel;\n    var self = this;\n\n    function findAndDrawOtherLayer(smaller, larger) {\n      var zlevelList = self._zlevelList;\n\n      if (smaller == null) {\n        smaller = -Infinity;\n      }\n\n      var intermediateLayer;\n\n      for (var i = 0; i < zlevelList.length; i++) {\n        var z = zlevelList[i];\n        var layer = self._layers[z];\n\n        if (!layer.__builtin__ && z > smaller && z < larger) {\n          intermediateLayer = layer;\n          break;\n        }\n      }\n\n      if (intermediateLayer && intermediateLayer.renderToCanvas) {\n        imageLayer.ctx.save();\n        intermediateLayer.renderToCanvas(imageLayer.ctx);\n        imageLayer.ctx.restore();\n      }\n    }\n\n    for (var i = 0; i < displayList.length; i++) {\n      var el = displayList[i];\n\n      if (el.zlevel !== zlevel) {\n        findAndDrawOtherLayer(zlevel, el.zlevel);\n        zlevel = el.zlevel;\n      }\n\n      this._doPaintEl(el, imageLayer, true, scope);\n    }\n\n    findAndDrawOtherLayer(zlevel, Infinity);\n    return imageLayer.dom;\n  },\n\n  /**\n   * 获取绘图区域宽度\n   */\n  getWidth: function () {\n    return this._width;\n  },\n\n  /**\n   * 获取绘图区域高度\n   */\n  getHeight: function () {\n    return this._height;\n  },\n  _getSize: function (whIdx) {\n    var opts = this._opts;\n    var wh = ['width', 'height'][whIdx];\n    var cwh = ['clientWidth', 'clientHeight'][whIdx];\n    var plt = ['paddingLeft', 'paddingTop'][whIdx];\n    var prb = ['paddingRight', 'paddingBottom'][whIdx];\n\n    if (opts[wh] != null && opts[wh] !== 'auto') {\n      return parseFloat(opts[wh]);\n    }\n\n    var root = this.root; // IE8 does not support getComputedStyle, but it use VML.\n\n    var stl = document.defaultView.getComputedStyle(root);\n    return (root[cwh] || parseInt10(stl[wh]) || parseInt10(root.style[wh])) - (parseInt10(stl[plt]) || 0) - (parseInt10(stl[prb]) || 0) | 0;\n  },\n  pathToImage: function (path, dpr) {\n    dpr = dpr || this.dpr;\n    var canvas = document.createElement('canvas');\n    var ctx = canvas.getContext('2d');\n    var rect = path.getBoundingRect();\n    var style = path.style;\n    var shadowBlurSize = style.shadowBlur;\n    var shadowOffsetX = style.shadowOffsetX;\n    var shadowOffsetY = style.shadowOffsetY;\n    var lineWidth = style.hasStroke() ? style.lineWidth : 0;\n    var leftMargin = Math.max(lineWidth / 2, -shadowOffsetX + shadowBlurSize);\n    var rightMargin = Math.max(lineWidth / 2, shadowOffsetX + shadowBlurSize);\n    var topMargin = Math.max(lineWidth / 2, -shadowOffsetY + shadowBlurSize);\n    var bottomMargin = Math.max(lineWidth / 2, shadowOffsetY + shadowBlurSize);\n    var width = rect.width + leftMargin + rightMargin;\n    var height = rect.height + topMargin + bottomMargin;\n    canvas.width = width * dpr;\n    canvas.height = height * dpr;\n    ctx.scale(dpr, dpr);\n    ctx.clearRect(0, 0, width, height);\n    ctx.dpr = dpr;\n    var pathTransform = {\n      position: path.position,\n      rotation: path.rotation,\n      scale: path.scale\n    };\n    path.position = [leftMargin - rect.x, topMargin - rect.y];\n    path.rotation = 0;\n    path.scale = [1, 1];\n    path.updateTransform();\n\n    if (path) {\n      path.brush(ctx);\n    }\n\n    var ImageShape = Image;\n    var imgShape = new ImageShape({\n      style: {\n        x: 0,\n        y: 0,\n        image: canvas\n      }\n    });\n\n    if (pathTransform.position != null) {\n      imgShape.position = path.position = pathTransform.position;\n    }\n\n    if (pathTransform.rotation != null) {\n      imgShape.rotation = path.rotation = pathTransform.rotation;\n    }\n\n    if (pathTransform.scale != null) {\n      imgShape.scale = path.scale = pathTransform.scale;\n    }\n\n    return imgShape;\n  }\n};\nvar _default = Painter;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/Painter.js\n// module id = 596\n// module chunks = 0 1","var util = require(\"./core/util\");\n\nvar env = require(\"./core/env\");\n\nvar Group = require(\"./container/Group\");\n\nvar timsort = require(\"./core/timsort\");\n\n/**\n * Storage内容仓库模块\n * @module zrender/Storage\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n * @author errorrik (errorrik@gmail.com)\n * @author pissang (https://github.com/pissang/)\n */\n// Use timsort because in most case elements are partially sorted\n// https://jsfiddle.net/pissang/jr4x7mdm/8/\nfunction shapeCompareFunc(a, b) {\n  if (a.zlevel === b.zlevel) {\n    if (a.z === b.z) {\n      // if (a.z2 === b.z2) {\n      //     // FIXME Slow has renderidx compare\n      //     // http://stackoverflow.com/questions/20883421/sorting-in-javascript-should-every-compare-function-have-a-return-0-statement\n      //     // https://github.com/v8/v8/blob/47cce544a31ed5577ffe2963f67acb4144ee0232/src/js/array.js#L1012\n      //     return a.__renderidx - b.__renderidx;\n      // }\n      return a.z2 - b.z2;\n    }\n\n    return a.z - b.z;\n  }\n\n  return a.zlevel - b.zlevel;\n}\n/**\n * 内容仓库 (M)\n * @alias module:zrender/Storage\n * @constructor\n */\n\n\nvar Storage = function () {\n  // jshint ignore:line\n  this._roots = [];\n  this._displayList = [];\n  this._displayListLen = 0;\n};\n\nStorage.prototype = {\n  constructor: Storage,\n\n  /**\n   * @param  {Function} cb\n   *\n   */\n  traverse: function (cb, context) {\n    for (var i = 0; i < this._roots.length; i++) {\n      this._roots[i].traverse(cb, context);\n    }\n  },\n\n  /**\n   * 返回所有图形的绘制队列\n   * @param {boolean} [update=false] 是否在返回前更新该数组\n   * @param {boolean} [includeIgnore=false] 是否包含 ignore 的数组, 在 update 为 true 的时候有效\n   *\n   * 详见{@link module:zrender/graphic/Displayable.prototype.updateDisplayList}\n   * @return {Array.<module:zrender/graphic/Displayable>}\n   */\n  getDisplayList: function (update, includeIgnore) {\n    includeIgnore = includeIgnore || false;\n\n    if (update) {\n      this.updateDisplayList(includeIgnore);\n    }\n\n    return this._displayList;\n  },\n\n  /**\n   * 更新图形的绘制队列。\n   * 每次绘制前都会调用，该方法会先深度优先遍历整个树，更新所有Group和Shape的变换并且把所有可见的Shape保存到数组中，\n   * 最后根据绘制的优先级（zlevel > z > 插入顺序）排序得到绘制队列\n   * @param {boolean} [includeIgnore=false] 是否包含 ignore 的数组\n   */\n  updateDisplayList: function (includeIgnore) {\n    this._displayListLen = 0;\n    var roots = this._roots;\n    var displayList = this._displayList;\n\n    for (var i = 0, len = roots.length; i < len; i++) {\n      this._updateAndAddDisplayable(roots[i], null, includeIgnore);\n    }\n\n    displayList.length = this._displayListLen; // for (var i = 0, len = displayList.length; i < len; i++) {\n    //     displayList[i].__renderidx = i;\n    // }\n    // displayList.sort(shapeCompareFunc);\n\n    env.canvasSupported && timsort(displayList, shapeCompareFunc);\n  },\n  _updateAndAddDisplayable: function (el, clipPaths, includeIgnore) {\n    if (el.ignore && !includeIgnore) {\n      return;\n    }\n\n    el.beforeUpdate();\n\n    if (el.__dirty) {\n      el.update();\n    }\n\n    el.afterUpdate();\n    var userSetClipPath = el.clipPath;\n\n    if (userSetClipPath) {\n      // FIXME 效率影响\n      if (clipPaths) {\n        clipPaths = clipPaths.slice();\n      } else {\n        clipPaths = [];\n      }\n\n      var currentClipPath = userSetClipPath;\n      var parentClipPath = el; // Recursively add clip path\n\n      while (currentClipPath) {\n        // clipPath 的变换是基于使用这个 clipPath 的元素\n        currentClipPath.parent = parentClipPath;\n        currentClipPath.updateTransform();\n        clipPaths.push(currentClipPath);\n        parentClipPath = currentClipPath;\n        currentClipPath = currentClipPath.clipPath;\n      }\n    }\n\n    if (el.isGroup) {\n      var children = el._children;\n\n      for (var i = 0; i < children.length; i++) {\n        var child = children[i]; // Force to mark as dirty if group is dirty\n        // FIXME __dirtyPath ?\n\n        if (el.__dirty) {\n          child.__dirty = true;\n        }\n\n        this._updateAndAddDisplayable(child, clipPaths, includeIgnore);\n      } // Mark group clean here\n\n\n      el.__dirty = false;\n    } else {\n      el.__clipPaths = clipPaths;\n      this._displayList[this._displayListLen++] = el;\n    }\n  },\n\n  /**\n   * 添加图形(Shape)或者组(Group)到根节点\n   * @param {module:zrender/Element} el\n   */\n  addRoot: function (el) {\n    if (el.__storage === this) {\n      return;\n    }\n\n    if (el instanceof Group) {\n      el.addChildrenToStorage(this);\n    }\n\n    this.addToStorage(el);\n\n    this._roots.push(el);\n  },\n\n  /**\n   * 删除指定的图形(Shape)或者组(Group)\n   * @param {string|Array.<string>} [el] 如果为空清空整个Storage\n   */\n  delRoot: function (el) {\n    if (el == null) {\n      // 不指定el清空\n      for (var i = 0; i < this._roots.length; i++) {\n        var root = this._roots[i];\n\n        if (root instanceof Group) {\n          root.delChildrenFromStorage(this);\n        }\n      }\n\n      this._roots = [];\n      this._displayList = [];\n      this._displayListLen = 0;\n      return;\n    }\n\n    if (el instanceof Array) {\n      for (var i = 0, l = el.length; i < l; i++) {\n        this.delRoot(el[i]);\n      }\n\n      return;\n    }\n\n    var idx = util.indexOf(this._roots, el);\n\n    if (idx >= 0) {\n      this.delFromStorage(el);\n\n      this._roots.splice(idx, 1);\n\n      if (el instanceof Group) {\n        el.delChildrenFromStorage(this);\n      }\n    }\n  },\n  addToStorage: function (el) {\n    el.__storage = this;\n    el.dirty(false);\n    return this;\n  },\n  delFromStorage: function (el) {\n    if (el) {\n      el.__storage = null;\n    }\n\n    return this;\n  },\n\n  /**\n   * 清空并且释放Storage\n   */\n  dispose: function () {\n    this._renderList = this._roots = null;\n  },\n  displayableSortFunc: shapeCompareFunc\n};\nvar _default = Storage;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/Storage.js\n// module id = 597\n// module chunks = 0 1","var util = require(\"../core/util\");\n\nvar _event = require(\"../core/event\");\n\nvar Dispatcher = _event.Dispatcher;\n\nvar requestAnimationFrame = require(\"./requestAnimationFrame\");\n\nvar Animator = require(\"./Animator\");\n\n/**\n * 动画主类, 调度和管理所有动画控制器\n *\n * @module zrender/animation/Animation\n * @author pissang(https://github.com/pissang)\n */\n// TODO Additive animation\n// http://iosoteric.com/additive-animations-animatewithduration-in-ios-8/\n// https://developer.apple.com/videos/wwdc2014/#236\n\n/**\n * @typedef {Object} IZRenderStage\n * @property {Function} update\n */\n\n/**\n * @alias module:zrender/animation/Animation\n * @constructor\n * @param {Object} [options]\n * @param {Function} [options.onframe]\n * @param {IZRenderStage} [options.stage]\n * @example\n *     var animation = new Animation();\n *     var obj = {\n *         x: 100,\n *         y: 100\n *     };\n *     animation.animate(node.position)\n *         .when(1000, {\n *             x: 500,\n *             y: 500\n *         })\n *         .when(2000, {\n *             x: 100,\n *             y: 100\n *         })\n *         .start('spline');\n */\nvar Animation = function (options) {\n  options = options || {};\n  this.stage = options.stage || {};\n\n  this.onframe = options.onframe || function () {}; // private properties\n\n\n  this._clips = [];\n  this._running = false;\n  this._time;\n  this._pausedTime;\n  this._pauseStart;\n  this._paused = false;\n  Dispatcher.call(this);\n};\n\nAnimation.prototype = {\n  constructor: Animation,\n\n  /**\n   * 添加 clip\n   * @param {module:zrender/animation/Clip} clip\n   */\n  addClip: function (clip) {\n    this._clips.push(clip);\n  },\n\n  /**\n   * 添加 animator\n   * @param {module:zrender/animation/Animator} animator\n   */\n  addAnimator: function (animator) {\n    animator.animation = this;\n    var clips = animator.getClips();\n\n    for (var i = 0; i < clips.length; i++) {\n      this.addClip(clips[i]);\n    }\n  },\n\n  /**\n   * 删除动画片段\n   * @param {module:zrender/animation/Clip} clip\n   */\n  removeClip: function (clip) {\n    var idx = util.indexOf(this._clips, clip);\n\n    if (idx >= 0) {\n      this._clips.splice(idx, 1);\n    }\n  },\n\n  /**\n   * 删除动画片段\n   * @param {module:zrender/animation/Animator} animator\n   */\n  removeAnimator: function (animator) {\n    var clips = animator.getClips();\n\n    for (var i = 0; i < clips.length; i++) {\n      this.removeClip(clips[i]);\n    }\n\n    animator.animation = null;\n  },\n  _update: function () {\n    var time = new Date().getTime() - this._pausedTime;\n\n    var delta = time - this._time;\n    var clips = this._clips;\n    var len = clips.length;\n    var deferredEvents = [];\n    var deferredClips = [];\n\n    for (var i = 0; i < len; i++) {\n      var clip = clips[i];\n      var e = clip.step(time, delta); // Throw out the events need to be called after\n      // stage.update, like destroy\n\n      if (e) {\n        deferredEvents.push(e);\n        deferredClips.push(clip);\n      }\n    } // Remove the finished clip\n\n\n    for (var i = 0; i < len;) {\n      if (clips[i]._needsRemove) {\n        clips[i] = clips[len - 1];\n        clips.pop();\n        len--;\n      } else {\n        i++;\n      }\n    }\n\n    len = deferredEvents.length;\n\n    for (var i = 0; i < len; i++) {\n      deferredClips[i].fire(deferredEvents[i]);\n    }\n\n    this._time = time;\n    this.onframe(delta);\n    this.trigger('frame', delta);\n\n    if (this.stage.update) {\n      this.stage.update();\n    }\n  },\n  _startLoop: function () {\n    var self = this;\n    this._running = true;\n\n    function step() {\n      if (self._running) {\n        requestAnimationFrame(step);\n        !self._paused && self._update();\n      }\n    }\n\n    requestAnimationFrame(step);\n  },\n\n  /**\n   * 开始运行动画\n   */\n  start: function () {\n    this._time = new Date().getTime();\n    this._pausedTime = 0;\n\n    this._startLoop();\n  },\n\n  /**\n   * 停止运行动画\n   */\n  stop: function () {\n    this._running = false;\n  },\n\n  /**\n   * Pause\n   */\n  pause: function () {\n    if (!this._paused) {\n      this._pauseStart = new Date().getTime();\n      this._paused = true;\n    }\n  },\n\n  /**\n   * Resume\n   */\n  resume: function () {\n    if (this._paused) {\n      this._pausedTime += new Date().getTime() - this._pauseStart;\n      this._paused = false;\n    }\n  },\n\n  /**\n   * 清除所有动画片段\n   */\n  clear: function () {\n    this._clips = [];\n  },\n\n  /**\n   * 对一个目标创建一个animator对象，可以指定目标中的属性使用动画\n   * @param  {Object} target\n   * @param  {Object} options\n   * @param  {boolean} [options.loop=false] 是否循环播放动画\n   * @param  {Function} [options.getter=null]\n   *         如果指定getter函数，会通过getter函数取属性值\n   * @param  {Function} [options.setter=null]\n   *         如果指定setter函数，会通过setter函数设置属性值\n   * @return {module:zrender/animation/Animation~Animator}\n   */\n  // TODO Gap\n  animate: function (target, options) {\n    options = options || {};\n    var animator = new Animator(target, options.loop, options.getter, options.setter);\n    this.addAnimator(animator);\n    return animator;\n  }\n};\nutil.mixin(Animation, Dispatcher);\nvar _default = Animation;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/animation/Animation.js\n// module id = 598\n// module chunks = 0 1","var easingFuncs = require(\"./easing\");\n\n/**\n * 动画主控制器\n * @config target 动画对象，可以是数组，如果是数组的话会批量分发onframe等事件\n * @config life(1000) 动画时长\n * @config delay(0) 动画延迟时间\n * @config loop(true)\n * @config gap(0) 循环的间隔时间\n * @config onframe\n * @config easing(optional)\n * @config ondestroy(optional)\n * @config onrestart(optional)\n *\n * TODO pause\n */\nfunction Clip(options) {\n  this._target = options.target; // 生命周期\n\n  this._life = options.life || 1000; // 延时\n\n  this._delay = options.delay || 0; // 开始时间\n  // this._startTime = new Date().getTime() + this._delay;// 单位毫秒\n\n  this._initialized = false; // 是否循环\n\n  this.loop = options.loop == null ? false : options.loop;\n  this.gap = options.gap || 0;\n  this.easing = options.easing || 'Linear';\n  this.onframe = options.onframe;\n  this.ondestroy = options.ondestroy;\n  this.onrestart = options.onrestart;\n  this._pausedTime = 0;\n  this._paused = false;\n}\n\nClip.prototype = {\n  constructor: Clip,\n  step: function (globalTime, deltaTime) {\n    // Set startTime on first step, or _startTime may has milleseconds different between clips\n    // PENDING\n    if (!this._initialized) {\n      this._startTime = globalTime + this._delay;\n      this._initialized = true;\n    }\n\n    if (this._paused) {\n      this._pausedTime += deltaTime;\n      return;\n    }\n\n    var percent = (globalTime - this._startTime - this._pausedTime) / this._life; // 还没开始\n\n    if (percent < 0) {\n      return;\n    }\n\n    percent = Math.min(percent, 1);\n    var easing = this.easing;\n    var easingFunc = typeof easing == 'string' ? easingFuncs[easing] : easing;\n    var schedule = typeof easingFunc === 'function' ? easingFunc(percent) : percent;\n    this.fire('frame', schedule); // 结束\n\n    if (percent == 1) {\n      if (this.loop) {\n        this.restart(globalTime); // 重新开始周期\n        // 抛出而不是直接调用事件直到 stage.update 后再统一调用这些事件\n\n        return 'restart';\n      } // 动画完成将这个控制器标识为待删除\n      // 在Animation.update中进行批量删除\n\n\n      this._needsRemove = true;\n      return 'destroy';\n    }\n\n    return null;\n  },\n  restart: function (globalTime) {\n    var remainder = (globalTime - this._startTime - this._pausedTime) % this._life;\n    this._startTime = globalTime - remainder + this.gap;\n    this._pausedTime = 0;\n    this._needsRemove = false;\n  },\n  fire: function (eventType, arg) {\n    eventType = 'on' + eventType;\n\n    if (this[eventType]) {\n      this[eventType](this._target, arg);\n    }\n  },\n  pause: function () {\n    this._paused = true;\n  },\n  resume: function () {\n    this._paused = false;\n  }\n};\nvar _default = Clip;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/animation/Clip.js\n// module id = 599\n// module chunks = 0 1","/**\n * 缓动代码来自 https://github.com/sole/tween.js/blob/master/src/Tween.js\n * @see http://sole.github.io/tween.js/examples/03_graphs.html\n * @exports zrender/animation/easing\n */\nvar easing = {\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  linear: function (k) {\n    return k;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  quadraticIn: function (k) {\n    return k * k;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  quadraticOut: function (k) {\n    return k * (2 - k);\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  quadraticInOut: function (k) {\n    if ((k *= 2) < 1) {\n      return 0.5 * k * k;\n    }\n\n    return -0.5 * (--k * (k - 2) - 1);\n  },\n  // 三次方的缓动（t^3）\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  cubicIn: function (k) {\n    return k * k * k;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  cubicOut: function (k) {\n    return --k * k * k + 1;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  cubicInOut: function (k) {\n    if ((k *= 2) < 1) {\n      return 0.5 * k * k * k;\n    }\n\n    return 0.5 * ((k -= 2) * k * k + 2);\n  },\n  // 四次方的缓动（t^4）\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  quarticIn: function (k) {\n    return k * k * k * k;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  quarticOut: function (k) {\n    return 1 - --k * k * k * k;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  quarticInOut: function (k) {\n    if ((k *= 2) < 1) {\n      return 0.5 * k * k * k * k;\n    }\n\n    return -0.5 * ((k -= 2) * k * k * k - 2);\n  },\n  // 五次方的缓动（t^5）\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  quinticIn: function (k) {\n    return k * k * k * k * k;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  quinticOut: function (k) {\n    return --k * k * k * k * k + 1;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  quinticInOut: function (k) {\n    if ((k *= 2) < 1) {\n      return 0.5 * k * k * k * k * k;\n    }\n\n    return 0.5 * ((k -= 2) * k * k * k * k + 2);\n  },\n  // 正弦曲线的缓动（sin(t)）\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  sinusoidalIn: function (k) {\n    return 1 - Math.cos(k * Math.PI / 2);\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  sinusoidalOut: function (k) {\n    return Math.sin(k * Math.PI / 2);\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  sinusoidalInOut: function (k) {\n    return 0.5 * (1 - Math.cos(Math.PI * k));\n  },\n  // 指数曲线的缓动（2^t）\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  exponentialIn: function (k) {\n    return k === 0 ? 0 : Math.pow(1024, k - 1);\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  exponentialOut: function (k) {\n    return k === 1 ? 1 : 1 - Math.pow(2, -10 * k);\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  exponentialInOut: function (k) {\n    if (k === 0) {\n      return 0;\n    }\n\n    if (k === 1) {\n      return 1;\n    }\n\n    if ((k *= 2) < 1) {\n      return 0.5 * Math.pow(1024, k - 1);\n    }\n\n    return 0.5 * (-Math.pow(2, -10 * (k - 1)) + 2);\n  },\n  // 圆形曲线的缓动（sqrt(1-t^2)）\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  circularIn: function (k) {\n    return 1 - Math.sqrt(1 - k * k);\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  circularOut: function (k) {\n    return Math.sqrt(1 - --k * k);\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  circularInOut: function (k) {\n    if ((k *= 2) < 1) {\n      return -0.5 * (Math.sqrt(1 - k * k) - 1);\n    }\n\n    return 0.5 * (Math.sqrt(1 - (k -= 2) * k) + 1);\n  },\n  // 创建类似于弹簧在停止前来回振荡的动画\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  elasticIn: function (k) {\n    var s;\n    var a = 0.1;\n    var p = 0.4;\n\n    if (k === 0) {\n      return 0;\n    }\n\n    if (k === 1) {\n      return 1;\n    }\n\n    if (!a || a < 1) {\n      a = 1;\n      s = p / 4;\n    } else {\n      s = p * Math.asin(1 / a) / (2 * Math.PI);\n    }\n\n    return -(a * Math.pow(2, 10 * (k -= 1)) * Math.sin((k - s) * (2 * Math.PI) / p));\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  elasticOut: function (k) {\n    var s;\n    var a = 0.1;\n    var p = 0.4;\n\n    if (k === 0) {\n      return 0;\n    }\n\n    if (k === 1) {\n      return 1;\n    }\n\n    if (!a || a < 1) {\n      a = 1;\n      s = p / 4;\n    } else {\n      s = p * Math.asin(1 / a) / (2 * Math.PI);\n    }\n\n    return a * Math.pow(2, -10 * k) * Math.sin((k - s) * (2 * Math.PI) / p) + 1;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  elasticInOut: function (k) {\n    var s;\n    var a = 0.1;\n    var p = 0.4;\n\n    if (k === 0) {\n      return 0;\n    }\n\n    if (k === 1) {\n      return 1;\n    }\n\n    if (!a || a < 1) {\n      a = 1;\n      s = p / 4;\n    } else {\n      s = p * Math.asin(1 / a) / (2 * Math.PI);\n    }\n\n    if ((k *= 2) < 1) {\n      return -0.5 * (a * Math.pow(2, 10 * (k -= 1)) * Math.sin((k - s) * (2 * Math.PI) / p));\n    }\n\n    return a * Math.pow(2, -10 * (k -= 1)) * Math.sin((k - s) * (2 * Math.PI) / p) * 0.5 + 1;\n  },\n  // 在某一动画开始沿指示的路径进行动画处理前稍稍收回该动画的移动\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  backIn: function (k) {\n    var s = 1.70158;\n    return k * k * ((s + 1) * k - s);\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  backOut: function (k) {\n    var s = 1.70158;\n    return --k * k * ((s + 1) * k + s) + 1;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  backInOut: function (k) {\n    var s = 1.70158 * 1.525;\n\n    if ((k *= 2) < 1) {\n      return 0.5 * (k * k * ((s + 1) * k - s));\n    }\n\n    return 0.5 * ((k -= 2) * k * ((s + 1) * k + s) + 2);\n  },\n  // 创建弹跳效果\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  bounceIn: function (k) {\n    return 1 - easing.bounceOut(1 - k);\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  bounceOut: function (k) {\n    if (k < 1 / 2.75) {\n      return 7.5625 * k * k;\n    } else if (k < 2 / 2.75) {\n      return 7.5625 * (k -= 1.5 / 2.75) * k + 0.75;\n    } else if (k < 2.5 / 2.75) {\n      return 7.5625 * (k -= 2.25 / 2.75) * k + 0.9375;\n    } else {\n      return 7.5625 * (k -= 2.625 / 2.75) * k + 0.984375;\n    }\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  bounceInOut: function (k) {\n    if (k < 0.5) {\n      return easing.bounceIn(k * 2) * 0.5;\n    }\n\n    return easing.bounceOut(k * 2 - 1) * 0.5 + 0.5;\n  }\n};\nvar _default = easing;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/animation/easing.js\n// module id = 600\n// module chunks = 0 1","var _util = require(\"./util\");\n\nvar normalizeRadian = _util.normalizeRadian;\nvar PI2 = Math.PI * 2;\n/**\n * 圆弧描边包含判断\n * @param  {number}  cx\n * @param  {number}  cy\n * @param  {number}  r\n * @param  {number}  startAngle\n * @param  {number}  endAngle\n * @param  {boolean}  anticlockwise\n * @param  {number} lineWidth\n * @param  {number}  x\n * @param  {number}  y\n * @return {Boolean}\n */\n\nfunction containStroke(cx, cy, r, startAngle, endAngle, anticlockwise, lineWidth, x, y) {\n  if (lineWidth === 0) {\n    return false;\n  }\n\n  var _l = lineWidth;\n  x -= cx;\n  y -= cy;\n  var d = Math.sqrt(x * x + y * y);\n\n  if (d - _l > r || d + _l < r) {\n    return false;\n  }\n\n  if (Math.abs(startAngle - endAngle) % PI2 < 1e-4) {\n    // Is a circle\n    return true;\n  }\n\n  if (anticlockwise) {\n    var tmp = startAngle;\n    startAngle = normalizeRadian(endAngle);\n    endAngle = normalizeRadian(tmp);\n  } else {\n    startAngle = normalizeRadian(startAngle);\n    endAngle = normalizeRadian(endAngle);\n  }\n\n  if (startAngle > endAngle) {\n    endAngle += PI2;\n  }\n\n  var angle = Math.atan2(y, x);\n\n  if (angle < 0) {\n    angle += PI2;\n  }\n\n  return angle >= startAngle && angle <= endAngle || angle + PI2 >= startAngle && angle + PI2 <= endAngle;\n}\n\nexports.containStroke = containStroke;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/contain/arc.js\n// module id = 601\n// module chunks = 0 1","var curve = require(\"../core/curve\");\n\n/**\n * 三次贝塞尔曲线描边包含判断\n * @param  {number}  x0\n * @param  {number}  y0\n * @param  {number}  x1\n * @param  {number}  y1\n * @param  {number}  x2\n * @param  {number}  y2\n * @param  {number}  x3\n * @param  {number}  y3\n * @param  {number}  lineWidth\n * @param  {number}  x\n * @param  {number}  y\n * @return {boolean}\n */\nfunction containStroke(x0, y0, x1, y1, x2, y2, x3, y3, lineWidth, x, y) {\n  if (lineWidth === 0) {\n    return false;\n  }\n\n  var _l = lineWidth; // Quick reject\n\n  if (y > y0 + _l && y > y1 + _l && y > y2 + _l && y > y3 + _l || y < y0 - _l && y < y1 - _l && y < y2 - _l && y < y3 - _l || x > x0 + _l && x > x1 + _l && x > x2 + _l && x > x3 + _l || x < x0 - _l && x < x1 - _l && x < x2 - _l && x < x3 - _l) {\n    return false;\n  }\n\n  var d = curve.cubicProjectPoint(x0, y0, x1, y1, x2, y2, x3, y3, x, y, null);\n  return d <= _l / 2;\n}\n\nexports.containStroke = containStroke;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/contain/cubic.js\n// module id = 602\n// module chunks = 0 1","/**\n * 线段包含判断\n * @param  {number}  x0\n * @param  {number}  y0\n * @param  {number}  x1\n * @param  {number}  y1\n * @param  {number}  lineWidth\n * @param  {number}  x\n * @param  {number}  y\n * @return {boolean}\n */\nfunction containStroke(x0, y0, x1, y1, lineWidth, x, y) {\n  if (lineWidth === 0) {\n    return false;\n  }\n\n  var _l = lineWidth;\n  var _a = 0;\n  var _b = x0; // Quick reject\n\n  if (y > y0 + _l && y > y1 + _l || y < y0 - _l && y < y1 - _l || x > x0 + _l && x > x1 + _l || x < x0 - _l && x < x1 - _l) {\n    return false;\n  }\n\n  if (x0 !== x1) {\n    _a = (y0 - y1) / (x0 - x1);\n    _b = (x0 * y1 - x1 * y0) / (x0 - x1);\n  } else {\n    return Math.abs(x - x0) <= _l / 2;\n  }\n\n  var tmp = _a * x - y + _b;\n\n  var _s = tmp * tmp / (_a * _a + 1);\n\n  return _s <= _l / 2 * _l / 2;\n}\n\nexports.containStroke = containStroke;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/contain/line.js\n// module id = 603\n// module chunks = 0 1","var PathProxy = require(\"../core/PathProxy\");\n\nvar line = require(\"./line\");\n\nvar cubic = require(\"./cubic\");\n\nvar quadratic = require(\"./quadratic\");\n\nvar arc = require(\"./arc\");\n\nvar _util = require(\"./util\");\n\nvar normalizeRadian = _util.normalizeRadian;\n\nvar curve = require(\"../core/curve\");\n\nvar windingLine = require(\"./windingLine\");\n\nvar CMD = PathProxy.CMD;\nvar PI2 = Math.PI * 2;\nvar EPSILON = 1e-4;\n\nfunction isAroundEqual(a, b) {\n  return Math.abs(a - b) < EPSILON;\n} // 临时数组\n\n\nvar roots = [-1, -1, -1];\nvar extrema = [-1, -1];\n\nfunction swapExtrema() {\n  var tmp = extrema[0];\n  extrema[0] = extrema[1];\n  extrema[1] = tmp;\n}\n\nfunction windingCubic(x0, y0, x1, y1, x2, y2, x3, y3, x, y) {\n  // Quick reject\n  if (y > y0 && y > y1 && y > y2 && y > y3 || y < y0 && y < y1 && y < y2 && y < y3) {\n    return 0;\n  }\n\n  var nRoots = curve.cubicRootAt(y0, y1, y2, y3, y, roots);\n\n  if (nRoots === 0) {\n    return 0;\n  } else {\n    var w = 0;\n    var nExtrema = -1;\n    var y0_, y1_;\n\n    for (var i = 0; i < nRoots; i++) {\n      var t = roots[i]; // Avoid winding error when intersection point is the connect point of two line of polygon\n\n      var unit = t === 0 || t === 1 ? 0.5 : 1;\n      var x_ = curve.cubicAt(x0, x1, x2, x3, t);\n\n      if (x_ < x) {\n        // Quick reject\n        continue;\n      }\n\n      if (nExtrema < 0) {\n        nExtrema = curve.cubicExtrema(y0, y1, y2, y3, extrema);\n\n        if (extrema[1] < extrema[0] && nExtrema > 1) {\n          swapExtrema();\n        }\n\n        y0_ = curve.cubicAt(y0, y1, y2, y3, extrema[0]);\n\n        if (nExtrema > 1) {\n          y1_ = curve.cubicAt(y0, y1, y2, y3, extrema[1]);\n        }\n      }\n\n      if (nExtrema == 2) {\n        // 分成三段单调函数\n        if (t < extrema[0]) {\n          w += y0_ < y0 ? unit : -unit;\n        } else if (t < extrema[1]) {\n          w += y1_ < y0_ ? unit : -unit;\n        } else {\n          w += y3 < y1_ ? unit : -unit;\n        }\n      } else {\n        // 分成两段单调函数\n        if (t < extrema[0]) {\n          w += y0_ < y0 ? unit : -unit;\n        } else {\n          w += y3 < y0_ ? unit : -unit;\n        }\n      }\n    }\n\n    return w;\n  }\n}\n\nfunction windingQuadratic(x0, y0, x1, y1, x2, y2, x, y) {\n  // Quick reject\n  if (y > y0 && y > y1 && y > y2 || y < y0 && y < y1 && y < y2) {\n    return 0;\n  }\n\n  var nRoots = curve.quadraticRootAt(y0, y1, y2, y, roots);\n\n  if (nRoots === 0) {\n    return 0;\n  } else {\n    var t = curve.quadraticExtremum(y0, y1, y2);\n\n    if (t >= 0 && t <= 1) {\n      var w = 0;\n      var y_ = curve.quadraticAt(y0, y1, y2, t);\n\n      for (var i = 0; i < nRoots; i++) {\n        // Remove one endpoint.\n        var unit = roots[i] === 0 || roots[i] === 1 ? 0.5 : 1;\n        var x_ = curve.quadraticAt(x0, x1, x2, roots[i]);\n\n        if (x_ < x) {\n          // Quick reject\n          continue;\n        }\n\n        if (roots[i] < t) {\n          w += y_ < y0 ? unit : -unit;\n        } else {\n          w += y2 < y_ ? unit : -unit;\n        }\n      }\n\n      return w;\n    } else {\n      // Remove one endpoint.\n      var unit = roots[0] === 0 || roots[0] === 1 ? 0.5 : 1;\n      var x_ = curve.quadraticAt(x0, x1, x2, roots[0]);\n\n      if (x_ < x) {\n        // Quick reject\n        return 0;\n      }\n\n      return y2 < y0 ? unit : -unit;\n    }\n  }\n} // TODO\n// Arc 旋转\n\n\nfunction windingArc(cx, cy, r, startAngle, endAngle, anticlockwise, x, y) {\n  y -= cy;\n\n  if (y > r || y < -r) {\n    return 0;\n  }\n\n  var tmp = Math.sqrt(r * r - y * y);\n  roots[0] = -tmp;\n  roots[1] = tmp;\n  var diff = Math.abs(startAngle - endAngle);\n\n  if (diff < 1e-4) {\n    return 0;\n  }\n\n  if (diff % PI2 < 1e-4) {\n    // Is a circle\n    startAngle = 0;\n    endAngle = PI2;\n    var dir = anticlockwise ? 1 : -1;\n\n    if (x >= roots[0] + cx && x <= roots[1] + cx) {\n      return dir;\n    } else {\n      return 0;\n    }\n  }\n\n  if (anticlockwise) {\n    var tmp = startAngle;\n    startAngle = normalizeRadian(endAngle);\n    endAngle = normalizeRadian(tmp);\n  } else {\n    startAngle = normalizeRadian(startAngle);\n    endAngle = normalizeRadian(endAngle);\n  }\n\n  if (startAngle > endAngle) {\n    endAngle += PI2;\n  }\n\n  var w = 0;\n\n  for (var i = 0; i < 2; i++) {\n    var x_ = roots[i];\n\n    if (x_ + cx > x) {\n      var angle = Math.atan2(y, x_);\n      var dir = anticlockwise ? 1 : -1;\n\n      if (angle < 0) {\n        angle = PI2 + angle;\n      }\n\n      if (angle >= startAngle && angle <= endAngle || angle + PI2 >= startAngle && angle + PI2 <= endAngle) {\n        if (angle > Math.PI / 2 && angle < Math.PI * 1.5) {\n          dir = -dir;\n        }\n\n        w += dir;\n      }\n    }\n  }\n\n  return w;\n}\n\nfunction containPath(data, lineWidth, isStroke, x, y) {\n  var w = 0;\n  var xi = 0;\n  var yi = 0;\n  var x0 = 0;\n  var y0 = 0;\n\n  for (var i = 0; i < data.length;) {\n    var cmd = data[i++]; // Begin a new subpath\n\n    if (cmd === CMD.M && i > 1) {\n      // Close previous subpath\n      if (!isStroke) {\n        w += windingLine(xi, yi, x0, y0, x, y);\n      } // 如果被任何一个 subpath 包含\n      // if (w !== 0) {\n      //     return true;\n      // }\n\n    }\n\n    if (i == 1) {\n      // 如果第一个命令是 L, C, Q\n      // 则 previous point 同绘制命令的第一个 point\n      //\n      // 第一个命令为 Arc 的情况下会在后面特殊处理\n      xi = data[i];\n      yi = data[i + 1];\n      x0 = xi;\n      y0 = yi;\n    }\n\n    switch (cmd) {\n      case CMD.M:\n        // moveTo 命令重新创建一个新的 subpath, 并且更新新的起点\n        // 在 closePath 的时候使用\n        x0 = data[i++];\n        y0 = data[i++];\n        xi = x0;\n        yi = y0;\n        break;\n\n      case CMD.L:\n        if (isStroke) {\n          if (line.containStroke(xi, yi, data[i], data[i + 1], lineWidth, x, y)) {\n            return true;\n          }\n        } else {\n          // NOTE 在第一个命令为 L, C, Q 的时候会计算出 NaN\n          w += windingLine(xi, yi, data[i], data[i + 1], x, y) || 0;\n        }\n\n        xi = data[i++];\n        yi = data[i++];\n        break;\n\n      case CMD.C:\n        if (isStroke) {\n          if (cubic.containStroke(xi, yi, data[i++], data[i++], data[i++], data[i++], data[i], data[i + 1], lineWidth, x, y)) {\n            return true;\n          }\n        } else {\n          w += windingCubic(xi, yi, data[i++], data[i++], data[i++], data[i++], data[i], data[i + 1], x, y) || 0;\n        }\n\n        xi = data[i++];\n        yi = data[i++];\n        break;\n\n      case CMD.Q:\n        if (isStroke) {\n          if (quadratic.containStroke(xi, yi, data[i++], data[i++], data[i], data[i + 1], lineWidth, x, y)) {\n            return true;\n          }\n        } else {\n          w += windingQuadratic(xi, yi, data[i++], data[i++], data[i], data[i + 1], x, y) || 0;\n        }\n\n        xi = data[i++];\n        yi = data[i++];\n        break;\n\n      case CMD.A:\n        // TODO Arc 判断的开销比较大\n        var cx = data[i++];\n        var cy = data[i++];\n        var rx = data[i++];\n        var ry = data[i++];\n        var theta = data[i++];\n        var dTheta = data[i++]; // TODO Arc 旋转\n\n        var psi = data[i++];\n        var anticlockwise = 1 - data[i++];\n        var x1 = Math.cos(theta) * rx + cx;\n        var y1 = Math.sin(theta) * ry + cy; // 不是直接使用 arc 命令\n\n        if (i > 1) {\n          w += windingLine(xi, yi, x1, y1, x, y);\n        } else {\n          // 第一个命令起点还未定义\n          x0 = x1;\n          y0 = y1;\n        } // zr 使用scale来模拟椭圆, 这里也对x做一定的缩放\n\n\n        var _x = (x - cx) * ry / rx + cx;\n\n        if (isStroke) {\n          if (arc.containStroke(cx, cy, ry, theta, theta + dTheta, anticlockwise, lineWidth, _x, y)) {\n            return true;\n          }\n        } else {\n          w += windingArc(cx, cy, ry, theta, theta + dTheta, anticlockwise, _x, y);\n        }\n\n        xi = Math.cos(theta + dTheta) * rx + cx;\n        yi = Math.sin(theta + dTheta) * ry + cy;\n        break;\n\n      case CMD.R:\n        x0 = xi = data[i++];\n        y0 = yi = data[i++];\n        var width = data[i++];\n        var height = data[i++];\n        var x1 = x0 + width;\n        var y1 = y0 + height;\n\n        if (isStroke) {\n          if (line.containStroke(x0, y0, x1, y0, lineWidth, x, y) || line.containStroke(x1, y0, x1, y1, lineWidth, x, y) || line.containStroke(x1, y1, x0, y1, lineWidth, x, y) || line.containStroke(x0, y1, x0, y0, lineWidth, x, y)) {\n            return true;\n          }\n        } else {\n          // FIXME Clockwise ?\n          w += windingLine(x1, y0, x1, y1, x, y);\n          w += windingLine(x0, y1, x0, y0, x, y);\n        }\n\n        break;\n\n      case CMD.Z:\n        if (isStroke) {\n          if (line.containStroke(xi, yi, x0, y0, lineWidth, x, y)) {\n            return true;\n          }\n        } else {\n          // Close a subpath\n          w += windingLine(xi, yi, x0, y0, x, y); // 如果被任何一个 subpath 包含\n          // FIXME subpaths may overlap\n          // if (w !== 0) {\n          //     return true;\n          // }\n        }\n\n        xi = x0;\n        yi = y0;\n        break;\n    }\n  }\n\n  if (!isStroke && !isAroundEqual(yi, y0)) {\n    w += windingLine(xi, yi, x0, y0, x, y) || 0;\n  }\n\n  return w !== 0;\n}\n\nfunction contain(pathData, x, y) {\n  return containPath(pathData, 0, false, x, y);\n}\n\nfunction containStroke(pathData, lineWidth, x, y) {\n  return containPath(pathData, lineWidth, true, x, y);\n}\n\nexports.contain = contain;\nexports.containStroke = containStroke;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/contain/path.js\n// module id = 604\n// module chunks = 0 1","var _curve = require(\"../core/curve\");\n\nvar quadraticProjectPoint = _curve.quadraticProjectPoint;\n\n/**\n * 二次贝塞尔曲线描边包含判断\n * @param  {number}  x0\n * @param  {number}  y0\n * @param  {number}  x1\n * @param  {number}  y1\n * @param  {number}  x2\n * @param  {number}  y2\n * @param  {number}  lineWidth\n * @param  {number}  x\n * @param  {number}  y\n * @return {boolean}\n */\nfunction containStroke(x0, y0, x1, y1, x2, y2, lineWidth, x, y) {\n  if (lineWidth === 0) {\n    return false;\n  }\n\n  var _l = lineWidth; // Quick reject\n\n  if (y > y0 + _l && y > y1 + _l && y > y2 + _l || y < y0 - _l && y < y1 - _l && y < y2 - _l || x > x0 + _l && x > x1 + _l && x > x2 + _l || x < x0 - _l && x < x1 - _l && x < x2 - _l) {\n    return false;\n  }\n\n  var d = quadraticProjectPoint(x0, y0, x1, y1, x2, y2, x, y, null);\n  return d <= _l / 2;\n}\n\nexports.containStroke = containStroke;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/contain/quadratic.js\n// module id = 605\n// module chunks = 0 1","function windingLine(x0, y0, x1, y1, x, y) {\n  if (y > y0 && y > y1 || y < y0 && y < y1) {\n    return 0;\n  } // Ignore horizontal line\n\n\n  if (y1 === y0) {\n    return 0;\n  }\n\n  var dir = y1 < y0 ? 1 : -1;\n  var t = (y - y0) / (y1 - y0); // Avoid winding error when intersection point is the connect point of two line of polygon\n\n  if (t === 1 || t === 0) {\n    dir = y1 < y0 ? 0.5 : -0.5;\n  }\n\n  var x_ = t * (x1 - x0) + x0;\n  return x_ > x ? dir : 0;\n}\n\nmodule.exports = windingLine;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/contain/windingLine.js\n// module id = 606\n// module chunks = 0 1","var eventUtil = require(\"./event\");\n\n/**\n * Only implements needed gestures for mobile.\n */\nvar GestureMgr = function () {\n  /**\n   * @private\n   * @type {Array.<Object>}\n   */\n  this._track = [];\n};\n\nGestureMgr.prototype = {\n  constructor: GestureMgr,\n  recognize: function (event, target, root) {\n    this._doTrack(event, target, root);\n\n    return this._recognize(event);\n  },\n  clear: function () {\n    this._track.length = 0;\n    return this;\n  },\n  _doTrack: function (event, target, root) {\n    var touches = event.touches;\n\n    if (!touches) {\n      return;\n    }\n\n    var trackItem = {\n      points: [],\n      touches: [],\n      target: target,\n      event: event\n    };\n\n    for (var i = 0, len = touches.length; i < len; i++) {\n      var touch = touches[i];\n      var pos = eventUtil.clientToLocal(root, touch, {});\n      trackItem.points.push([pos.zrX, pos.zrY]);\n      trackItem.touches.push(touch);\n    }\n\n    this._track.push(trackItem);\n  },\n  _recognize: function (event) {\n    for (var eventName in recognizers) {\n      if (recognizers.hasOwnProperty(eventName)) {\n        var gestureInfo = recognizers[eventName](this._track, event);\n\n        if (gestureInfo) {\n          return gestureInfo;\n        }\n      }\n    }\n  }\n};\n\nfunction dist(pointPair) {\n  var dx = pointPair[1][0] - pointPair[0][0];\n  var dy = pointPair[1][1] - pointPair[0][1];\n  return Math.sqrt(dx * dx + dy * dy);\n}\n\nfunction center(pointPair) {\n  return [(pointPair[0][0] + pointPair[1][0]) / 2, (pointPair[0][1] + pointPair[1][1]) / 2];\n}\n\nvar recognizers = {\n  pinch: function (track, event) {\n    var trackLen = track.length;\n\n    if (!trackLen) {\n      return;\n    }\n\n    var pinchEnd = (track[trackLen - 1] || {}).points;\n    var pinchPre = (track[trackLen - 2] || {}).points || pinchEnd;\n\n    if (pinchPre && pinchPre.length > 1 && pinchEnd && pinchEnd.length > 1) {\n      var pinchScale = dist(pinchEnd) / dist(pinchPre);\n      !isFinite(pinchScale) && (pinchScale = 1);\n      event.pinchScale = pinchScale;\n      var pinchCenter = center(pinchEnd);\n      event.pinchX = pinchCenter[0];\n      event.pinchY = pinchCenter[1];\n      return {\n        type: 'pinch',\n        target: track[0].target,\n        event: event\n      };\n    }\n  } // Only pinch currently.\n\n};\nvar _default = GestureMgr;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/core/GestureMgr.js\n// module id = 607\n// module chunks = 0 1","// Myers' Diff Algorithm\n// Modified from https://github.com/kpdecker/jsdiff/blob/master/src/diff/base.js\nfunction Diff() {}\n\nDiff.prototype = {\n  diff: function (oldArr, newArr, equals) {\n    if (!equals) {\n      equals = function (a, b) {\n        return a === b;\n      };\n    }\n\n    this.equals = equals;\n    var self = this;\n    oldArr = oldArr.slice();\n    newArr = newArr.slice(); // Allow subclasses to massage the input prior to running\n\n    var newLen = newArr.length;\n    var oldLen = oldArr.length;\n    var editLength = 1;\n    var maxEditLength = newLen + oldLen;\n    var bestPath = [{\n      newPos: -1,\n      components: []\n    }]; // Seed editLength = 0, i.e. the content starts with the same values\n\n    var oldPos = this.extractCommon(bestPath[0], newArr, oldArr, 0);\n\n    if (bestPath[0].newPos + 1 >= newLen && oldPos + 1 >= oldLen) {\n      var indices = [];\n\n      for (var i = 0; i < newArr.length; i++) {\n        indices.push(i);\n      } // Identity per the equality and tokenizer\n\n\n      return [{\n        indices: indices,\n        count: newArr.length\n      }];\n    } // Main worker method. checks all permutations of a given edit length for acceptance.\n\n\n    function execEditLength() {\n      for (var diagonalPath = -1 * editLength; diagonalPath <= editLength; diagonalPath += 2) {\n        var basePath;\n        var addPath = bestPath[diagonalPath - 1];\n        var removePath = bestPath[diagonalPath + 1];\n        var oldPos = (removePath ? removePath.newPos : 0) - diagonalPath;\n\n        if (addPath) {\n          // No one else is going to attempt to use this value, clear it\n          bestPath[diagonalPath - 1] = undefined;\n        }\n\n        var canAdd = addPath && addPath.newPos + 1 < newLen;\n        var canRemove = removePath && 0 <= oldPos && oldPos < oldLen;\n\n        if (!canAdd && !canRemove) {\n          // If this path is a terminal then prune\n          bestPath[diagonalPath] = undefined;\n          continue;\n        } // Select the diagonal that we want to branch from. We select the prior\n        // path whose position in the new string is the farthest from the origin\n        // and does not pass the bounds of the diff graph\n\n\n        if (!canAdd || canRemove && addPath.newPos < removePath.newPos) {\n          basePath = clonePath(removePath);\n          self.pushComponent(basePath.components, undefined, true);\n        } else {\n          basePath = addPath; // No need to clone, we've pulled it from the list\n\n          basePath.newPos++;\n          self.pushComponent(basePath.components, true, undefined);\n        }\n\n        oldPos = self.extractCommon(basePath, newArr, oldArr, diagonalPath); // If we have hit the end of both strings, then we are done\n\n        if (basePath.newPos + 1 >= newLen && oldPos + 1 >= oldLen) {\n          return buildValues(self, basePath.components, newArr, oldArr);\n        } else {\n          // Otherwise track this path as a potential candidate and continue.\n          bestPath[diagonalPath] = basePath;\n        }\n      }\n\n      editLength++;\n    }\n\n    while (editLength <= maxEditLength) {\n      var ret = execEditLength();\n\n      if (ret) {\n        return ret;\n      }\n    }\n  },\n  pushComponent: function (components, added, removed) {\n    var last = components[components.length - 1];\n\n    if (last && last.added === added && last.removed === removed) {\n      // We need to clone here as the component clone operation is just\n      // as shallow array clone\n      components[components.length - 1] = {\n        count: last.count + 1,\n        added: added,\n        removed: removed\n      };\n    } else {\n      components.push({\n        count: 1,\n        added: added,\n        removed: removed\n      });\n    }\n  },\n  extractCommon: function (basePath, newArr, oldArr, diagonalPath) {\n    var newLen = newArr.length;\n    var oldLen = oldArr.length;\n    var newPos = basePath.newPos;\n    var oldPos = newPos - diagonalPath;\n    var commonCount = 0;\n\n    while (newPos + 1 < newLen && oldPos + 1 < oldLen && this.equals(newArr[newPos + 1], oldArr[oldPos + 1])) {\n      newPos++;\n      oldPos++;\n      commonCount++;\n    }\n\n    if (commonCount) {\n      basePath.components.push({\n        count: commonCount\n      });\n    }\n\n    basePath.newPos = newPos;\n    return oldPos;\n  },\n  tokenize: function (value) {\n    return value.slice();\n  },\n  join: function (value) {\n    return value.slice();\n  }\n};\n\nfunction buildValues(diff, components, newArr, oldArr) {\n  var componentPos = 0;\n  var componentLen = components.length;\n  var newPos = 0;\n  var oldPos = 0;\n\n  for (; componentPos < componentLen; componentPos++) {\n    var component = components[componentPos];\n\n    if (!component.removed) {\n      var indices = [];\n\n      for (var i = newPos; i < newPos + component.count; i++) {\n        indices.push(i);\n      }\n\n      component.indices = indices;\n      newPos += component.count; // Common case\n\n      if (!component.added) {\n        oldPos += component.count;\n      }\n    } else {\n      var indices = [];\n\n      for (var i = oldPos; i < oldPos + component.count; i++) {\n        indices.push(i);\n      }\n\n      component.indices = indices;\n      oldPos += component.count;\n    }\n  }\n\n  return components;\n}\n\nfunction clonePath(path) {\n  return {\n    newPos: path.newPos,\n    components: path.components.slice(0)\n  };\n}\n\nvar arrayDiff = new Diff();\n\nfunction _default(oldArr, newArr, callback) {\n  return arrayDiff.diff(oldArr, newArr, callback);\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/core/arrayDiff2.js\n// module id = 608\n// module chunks = 0 1","var vec2 = require(\"./vector\");\n\nvar curve = require(\"./curve\");\n\n/**\n * @author Yi Shen(https://github.com/pissang)\n */\nvar mathMin = Math.min;\nvar mathMax = Math.max;\nvar mathSin = Math.sin;\nvar mathCos = Math.cos;\nvar PI2 = Math.PI * 2;\nvar start = vec2.create();\nvar end = vec2.create();\nvar extremity = vec2.create();\n/**\n * 从顶点数组中计算出最小包围盒，写入`min`和`max`中\n * @module zrender/core/bbox\n * @param {Array<Object>} points 顶点数组\n * @param {number} min\n * @param {number} max\n */\n\nfunction fromPoints(points, min, max) {\n  if (points.length === 0) {\n    return;\n  }\n\n  var p = points[0];\n  var left = p[0];\n  var right = p[0];\n  var top = p[1];\n  var bottom = p[1];\n  var i;\n\n  for (i = 1; i < points.length; i++) {\n    p = points[i];\n    left = mathMin(left, p[0]);\n    right = mathMax(right, p[0]);\n    top = mathMin(top, p[1]);\n    bottom = mathMax(bottom, p[1]);\n  }\n\n  min[0] = left;\n  min[1] = top;\n  max[0] = right;\n  max[1] = bottom;\n}\n/**\n * @memberOf module:zrender/core/bbox\n * @param {number} x0\n * @param {number} y0\n * @param {number} x1\n * @param {number} y1\n * @param {Array.<number>} min\n * @param {Array.<number>} max\n */\n\n\nfunction fromLine(x0, y0, x1, y1, min, max) {\n  min[0] = mathMin(x0, x1);\n  min[1] = mathMin(y0, y1);\n  max[0] = mathMax(x0, x1);\n  max[1] = mathMax(y0, y1);\n}\n\nvar xDim = [];\nvar yDim = [];\n/**\n * 从三阶贝塞尔曲线(p0, p1, p2, p3)中计算出最小包围盒，写入`min`和`max`中\n * @memberOf module:zrender/core/bbox\n * @param {number} x0\n * @param {number} y0\n * @param {number} x1\n * @param {number} y1\n * @param {number} x2\n * @param {number} y2\n * @param {number} x3\n * @param {number} y3\n * @param {Array.<number>} min\n * @param {Array.<number>} max\n */\n\nfunction fromCubic(x0, y0, x1, y1, x2, y2, x3, y3, min, max) {\n  var cubicExtrema = curve.cubicExtrema;\n  var cubicAt = curve.cubicAt;\n  var i;\n  var n = cubicExtrema(x0, x1, x2, x3, xDim);\n  min[0] = Infinity;\n  min[1] = Infinity;\n  max[0] = -Infinity;\n  max[1] = -Infinity;\n\n  for (i = 0; i < n; i++) {\n    var x = cubicAt(x0, x1, x2, x3, xDim[i]);\n    min[0] = mathMin(x, min[0]);\n    max[0] = mathMax(x, max[0]);\n  }\n\n  n = cubicExtrema(y0, y1, y2, y3, yDim);\n\n  for (i = 0; i < n; i++) {\n    var y = cubicAt(y0, y1, y2, y3, yDim[i]);\n    min[1] = mathMin(y, min[1]);\n    max[1] = mathMax(y, max[1]);\n  }\n\n  min[0] = mathMin(x0, min[0]);\n  max[0] = mathMax(x0, max[0]);\n  min[0] = mathMin(x3, min[0]);\n  max[0] = mathMax(x3, max[0]);\n  min[1] = mathMin(y0, min[1]);\n  max[1] = mathMax(y0, max[1]);\n  min[1] = mathMin(y3, min[1]);\n  max[1] = mathMax(y3, max[1]);\n}\n/**\n * 从二阶贝塞尔曲线(p0, p1, p2)中计算出最小包围盒，写入`min`和`max`中\n * @memberOf module:zrender/core/bbox\n * @param {number} x0\n * @param {number} y0\n * @param {number} x1\n * @param {number} y1\n * @param {number} x2\n * @param {number} y2\n * @param {Array.<number>} min\n * @param {Array.<number>} max\n */\n\n\nfunction fromQuadratic(x0, y0, x1, y1, x2, y2, min, max) {\n  var quadraticExtremum = curve.quadraticExtremum;\n  var quadraticAt = curve.quadraticAt; // Find extremities, where derivative in x dim or y dim is zero\n\n  var tx = mathMax(mathMin(quadraticExtremum(x0, x1, x2), 1), 0);\n  var ty = mathMax(mathMin(quadraticExtremum(y0, y1, y2), 1), 0);\n  var x = quadraticAt(x0, x1, x2, tx);\n  var y = quadraticAt(y0, y1, y2, ty);\n  min[0] = mathMin(x0, x2, x);\n  min[1] = mathMin(y0, y2, y);\n  max[0] = mathMax(x0, x2, x);\n  max[1] = mathMax(y0, y2, y);\n}\n/**\n * 从圆弧中计算出最小包围盒，写入`min`和`max`中\n * @method\n * @memberOf module:zrender/core/bbox\n * @param {number} x\n * @param {number} y\n * @param {number} rx\n * @param {number} ry\n * @param {number} startAngle\n * @param {number} endAngle\n * @param {number} anticlockwise\n * @param {Array.<number>} min\n * @param {Array.<number>} max\n */\n\n\nfunction fromArc(x, y, rx, ry, startAngle, endAngle, anticlockwise, min, max) {\n  var vec2Min = vec2.min;\n  var vec2Max = vec2.max;\n  var diff = Math.abs(startAngle - endAngle);\n\n  if (diff % PI2 < 1e-4 && diff > 1e-4) {\n    // Is a circle\n    min[0] = x - rx;\n    min[1] = y - ry;\n    max[0] = x + rx;\n    max[1] = y + ry;\n    return;\n  }\n\n  start[0] = mathCos(startAngle) * rx + x;\n  start[1] = mathSin(startAngle) * ry + y;\n  end[0] = mathCos(endAngle) * rx + x;\n  end[1] = mathSin(endAngle) * ry + y;\n  vec2Min(min, start, end);\n  vec2Max(max, start, end); // Thresh to [0, Math.PI * 2]\n\n  startAngle = startAngle % PI2;\n\n  if (startAngle < 0) {\n    startAngle = startAngle + PI2;\n  }\n\n  endAngle = endAngle % PI2;\n\n  if (endAngle < 0) {\n    endAngle = endAngle + PI2;\n  }\n\n  if (startAngle > endAngle && !anticlockwise) {\n    endAngle += PI2;\n  } else if (startAngle < endAngle && anticlockwise) {\n    startAngle += PI2;\n  }\n\n  if (anticlockwise) {\n    var tmp = endAngle;\n    endAngle = startAngle;\n    startAngle = tmp;\n  } // var number = 0;\n  // var step = (anticlockwise ? -Math.PI : Math.PI) / 2;\n\n\n  for (var angle = 0; angle < endAngle; angle += Math.PI / 2) {\n    if (angle > startAngle) {\n      extremity[0] = mathCos(angle) * rx + x;\n      extremity[1] = mathSin(angle) * ry + y;\n      vec2Min(min, extremity, min);\n      vec2Max(max, extremity, max);\n    }\n  }\n}\n\nexports.fromPoints = fromPoints;\nexports.fromLine = fromLine;\nexports.fromCubic = fromCubic;\nexports.fromQuadratic = fromQuadratic;\nexports.fromArc = fromArc;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/core/bbox.js\n// module id = 609\n// module chunks = 0 1","var _event = require(\"../core/event\");\n\nvar addEventListener = _event.addEventListener;\nvar removeEventListener = _event.removeEventListener;\nvar normalizeEvent = _event.normalizeEvent;\n\nvar zrUtil = require(\"../core/util\");\n\nvar Eventful = require(\"../mixin/Eventful\");\n\nvar env = require(\"../core/env\");\n\nvar GestureMgr = require(\"../core/GestureMgr\");\n\nvar TOUCH_CLICK_DELAY = 300;\nvar mouseHandlerNames = ['click', 'dblclick', 'mousewheel', 'mouseout', 'mouseup', 'mousedown', 'mousemove', 'contextmenu'];\nvar touchHandlerNames = ['touchstart', 'touchend', 'touchmove'];\nvar pointerEventNames = {\n  pointerdown: 1,\n  pointerup: 1,\n  pointermove: 1,\n  pointerout: 1\n};\nvar pointerHandlerNames = zrUtil.map(mouseHandlerNames, function (name) {\n  var nm = name.replace('mouse', 'pointer');\n  return pointerEventNames[nm] ? nm : name;\n});\n\nfunction eventNameFix(name) {\n  return name === 'mousewheel' && env.browser.firefox ? 'DOMMouseScroll' : name;\n}\n\nfunction processGesture(proxy, event, stage) {\n  var gestureMgr = proxy._gestureMgr;\n  stage === 'start' && gestureMgr.clear();\n  var gestureInfo = gestureMgr.recognize(event, proxy.handler.findHover(event.zrX, event.zrY, null).target, proxy.dom);\n  stage === 'end' && gestureMgr.clear(); // Do not do any preventDefault here. Upper application do that if necessary.\n\n  if (gestureInfo) {\n    var type = gestureInfo.type;\n    event.gestureEvent = type;\n    proxy.handler.dispatchToElement({\n      target: gestureInfo.target\n    }, type, gestureInfo.event);\n  }\n} // function onMSGestureChange(proxy, event) {\n//     if (event.translationX || event.translationY) {\n//         // mousemove is carried by MSGesture to reduce the sensitivity.\n//         proxy.handler.dispatchToElement(event.target, 'mousemove', event);\n//     }\n//     if (event.scale !== 1) {\n//         event.pinchX = event.offsetX;\n//         event.pinchY = event.offsetY;\n//         event.pinchScale = event.scale;\n//         proxy.handler.dispatchToElement(event.target, 'pinch', event);\n//     }\n// }\n\n/**\n * Prevent mouse event from being dispatched after Touch Events action\n * @see <https://github.com/deltakosh/handjs/blob/master/src/hand.base.js>\n * 1. Mobile browsers dispatch mouse events 300ms after touchend.\n * 2. Chrome for Android dispatch mousedown for long-touch about 650ms\n * Result: Blocking Mouse Events for 700ms.\n */\n\n\nfunction setTouchTimer(instance) {\n  instance._touching = true;\n  clearTimeout(instance._touchTimer);\n  instance._touchTimer = setTimeout(function () {\n    instance._touching = false;\n  }, 700);\n}\n\nvar domHandlers = {\n  /**\n   * Mouse move handler\n   * @inner\n   * @param {Event} event\n   */\n  mousemove: function (event) {\n    event = normalizeEvent(this.dom, event);\n    this.trigger('mousemove', event);\n  },\n\n  /**\n   * Mouse out handler\n   * @inner\n   * @param {Event} event\n   */\n  mouseout: function (event) {\n    event = normalizeEvent(this.dom, event);\n    var element = event.toElement || event.relatedTarget;\n\n    if (element != this.dom) {\n      while (element && element.nodeType != 9) {\n        // 忽略包含在root中的dom引起的mouseOut\n        if (element === this.dom) {\n          return;\n        }\n\n        element = element.parentNode;\n      }\n    }\n\n    this.trigger('mouseout', event);\n  },\n\n  /**\n   * Touch开始响应函数\n   * @inner\n   * @param {Event} event\n   */\n  touchstart: function (event) {\n    // Default mouse behaviour should not be disabled here.\n    // For example, page may needs to be slided.\n    event = normalizeEvent(this.dom, event); // Mark touch, which is useful in distinguish touch and\n    // mouse event in upper applicatoin.\n\n    event.zrByTouch = true;\n    this._lastTouchMoment = new Date();\n    processGesture(this, event, 'start'); // In touch device, trigger `mousemove`(`mouseover`) should\n    // be triggered, and must before `mousedown` triggered.\n\n    domHandlers.mousemove.call(this, event);\n    domHandlers.mousedown.call(this, event);\n    setTouchTimer(this);\n  },\n\n  /**\n   * Touch移动响应函数\n   * @inner\n   * @param {Event} event\n   */\n  touchmove: function (event) {\n    event = normalizeEvent(this.dom, event); // Mark touch, which is useful in distinguish touch and\n    // mouse event in upper applicatoin.\n\n    event.zrByTouch = true;\n    processGesture(this, event, 'change'); // Mouse move should always be triggered no matter whether\n    // there is gestrue event, because mouse move and pinch may\n    // be used at the same time.\n\n    domHandlers.mousemove.call(this, event);\n    setTouchTimer(this);\n  },\n\n  /**\n   * Touch结束响应函数\n   * @inner\n   * @param {Event} event\n   */\n  touchend: function (event) {\n    event = normalizeEvent(this.dom, event); // Mark touch, which is useful in distinguish touch and\n    // mouse event in upper applicatoin.\n\n    event.zrByTouch = true;\n    processGesture(this, event, 'end');\n    domHandlers.mouseup.call(this, event); // Do not trigger `mouseout` here, in spite of `mousemove`(`mouseover`) is\n    // triggered in `touchstart`. This seems to be illogical, but by this mechanism,\n    // we can conveniently implement \"hover style\" in both PC and touch device just\n    // by listening to `mouseover` to add \"hover style\" and listening to `mouseout`\n    // to remove \"hover style\" on an element, without any additional code for\n    // compatibility. (`mouseout` will not be triggered in `touchend`, so \"hover\n    // style\" will remain for user view)\n    // click event should always be triggered no matter whether\n    // there is gestrue event. System click can not be prevented.\n\n    if (+new Date() - this._lastTouchMoment < TOUCH_CLICK_DELAY) {\n      domHandlers.click.call(this, event);\n    }\n\n    setTouchTimer(this);\n  },\n  pointerdown: function (event) {\n    domHandlers.mousedown.call(this, event); // if (useMSGuesture(this, event)) {\n    //     this._msGesture.addPointer(event.pointerId);\n    // }\n  },\n  pointermove: function (event) {\n    // FIXME\n    // pointermove is so sensitive that it always triggered when\n    // tap(click) on touch screen, which affect some judgement in\n    // upper application. So, we dont support mousemove on MS touch\n    // device yet.\n    if (!isPointerFromTouch(event)) {\n      domHandlers.mousemove.call(this, event);\n    }\n  },\n  pointerup: function (event) {\n    domHandlers.mouseup.call(this, event);\n  },\n  pointerout: function (event) {\n    // pointerout will be triggered when tap on touch screen\n    // (IE11+/Edge on MS Surface) after click event triggered,\n    // which is inconsistent with the mousout behavior we defined\n    // in touchend. So we unify them.\n    // (check domHandlers.touchend for detailed explanation)\n    if (!isPointerFromTouch(event)) {\n      domHandlers.mouseout.call(this, event);\n    }\n  }\n};\n\nfunction isPointerFromTouch(event) {\n  var pointerType = event.pointerType;\n  return pointerType === 'pen' || pointerType === 'touch';\n} // function useMSGuesture(handlerProxy, event) {\n//     return isPointerFromTouch(event) && !!handlerProxy._msGesture;\n// }\n// Common handlers\n\n\nzrUtil.each(['click', 'mousedown', 'mouseup', 'mousewheel', 'dblclick', 'contextmenu'], function (name) {\n  domHandlers[name] = function (event) {\n    event = normalizeEvent(this.dom, event);\n    this.trigger(name, event);\n  };\n});\n/**\n * 为控制类实例初始化dom 事件处理函数\n *\n * @inner\n * @param {module:zrender/Handler} instance 控制类实例\n */\n\nfunction initDomHandler(instance) {\n  zrUtil.each(touchHandlerNames, function (name) {\n    instance._handlers[name] = zrUtil.bind(domHandlers[name], instance);\n  });\n  zrUtil.each(pointerHandlerNames, function (name) {\n    instance._handlers[name] = zrUtil.bind(domHandlers[name], instance);\n  });\n  zrUtil.each(mouseHandlerNames, function (name) {\n    instance._handlers[name] = makeMouseHandler(domHandlers[name], instance);\n  });\n\n  function makeMouseHandler(fn, instance) {\n    return function () {\n      if (instance._touching) {\n        return;\n      }\n\n      return fn.apply(instance, arguments);\n    };\n  }\n}\n\nfunction HandlerDomProxy(dom) {\n  Eventful.call(this);\n  this.dom = dom;\n  /**\n   * @private\n   * @type {boolean}\n   */\n\n  this._touching = false;\n  /**\n   * @private\n   * @type {number}\n   */\n\n  this._touchTimer;\n  /**\n   * @private\n   * @type {module:zrender/core/GestureMgr}\n   */\n\n  this._gestureMgr = new GestureMgr();\n  this._handlers = {};\n  initDomHandler(this);\n\n  if (env.pointerEventsSupported) {\n    // Only IE11+/Edge\n    // 1. On devices that both enable touch and mouse (e.g., MS Surface and lenovo X240),\n    // IE11+/Edge do not trigger touch event, but trigger pointer event and mouse event\n    // at the same time.\n    // 2. On MS Surface, it probablely only trigger mousedown but no mouseup when tap on\n    // screen, which do not occurs in pointer event.\n    // So we use pointer event to both detect touch gesture and mouse behavior.\n    mountHandlers(pointerHandlerNames, this); // FIXME\n    // Note: MS Gesture require CSS touch-action set. But touch-action is not reliable,\n    // which does not prevent defuault behavior occasionally (which may cause view port\n    // zoomed in but use can not zoom it back). And event.preventDefault() does not work.\n    // So we have to not to use MSGesture and not to support touchmove and pinch on MS\n    // touch screen. And we only support click behavior on MS touch screen now.\n    // MS Gesture Event is only supported on IE11+/Edge and on Windows 8+.\n    // We dont support touch on IE on win7.\n    // See <https://msdn.microsoft.com/en-us/library/dn433243(v=vs.85).aspx>\n    // if (typeof MSGesture === 'function') {\n    //     (this._msGesture = new MSGesture()).target = dom; // jshint ignore:line\n    //     dom.addEventListener('MSGestureChange', onMSGestureChange);\n    // }\n  } else {\n    if (env.touchEventsSupported) {\n      mountHandlers(touchHandlerNames, this); // Handler of 'mouseout' event is needed in touch mode, which will be mounted below.\n      // addEventListener(root, 'mouseout', this._mouseoutHandler);\n    } // 1. Considering some devices that both enable touch and mouse event (like on MS Surface\n    // and lenovo X240, @see #2350), we make mouse event be always listened, otherwise\n    // mouse event can not be handle in those devices.\n    // 2. On MS Surface, Chrome will trigger both touch event and mouse event. How to prevent\n    // mouseevent after touch event triggered, see `setTouchTimer`.\n\n\n    mountHandlers(mouseHandlerNames, this);\n  }\n\n  function mountHandlers(handlerNames, instance) {\n    zrUtil.each(handlerNames, function (name) {\n      addEventListener(dom, eventNameFix(name), instance._handlers[name]);\n    }, instance);\n  }\n}\n\nvar handlerDomProxyProto = HandlerDomProxy.prototype;\n\nhandlerDomProxyProto.dispose = function () {\n  var handlerNames = mouseHandlerNames.concat(touchHandlerNames);\n\n  for (var i = 0; i < handlerNames.length; i++) {\n    var name = handlerNames[i];\n    removeEventListener(this.dom, eventNameFix(name), this._handlers[name]);\n  }\n};\n\nhandlerDomProxyProto.setCursor = function (cursorStyle) {\n  this.dom.style.cursor = cursorStyle || 'default';\n};\n\nzrUtil.mixin(HandlerDomProxy, Eventful);\nvar _default = HandlerDomProxy;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/dom/HandlerProxy.js\n// module id = 610\n// module chunks = 0 1","var zrUtil = require(\"./core/util\");\n\nexports.util = zrUtil;\n\nvar matrix = require(\"./core/matrix\");\n\nexports.matrix = matrix;\n\nvar vector = require(\"./core/vector\");\n\nexports.vector = vector;\n\nvar colorTool = require(\"./tool/color\");\n\nexports.color = colorTool;\n\nvar pathTool = require(\"./tool/path\");\n\nexports.path = pathTool;\n\nvar _Group = require(\"./container/Group\");\n\nexports.Group = _Group;\n\nvar _Path = require(\"./graphic/Path\");\n\nexports.Path = _Path;\n\nvar _Image = require(\"./graphic/Image\");\n\nexports.Image = _Image;\n\nvar _CompoundPath = require(\"./graphic/CompoundPath\");\n\nexports.CompoundPath = _CompoundPath;\n\nvar _Text = require(\"./graphic/Text\");\n\nexports.Text = _Text;\n\nvar _Arc = require(\"./graphic/shape/Arc\");\n\nexports.Arc = _Arc;\n\nvar _BezierCurve = require(\"./graphic/shape/BezierCurve\");\n\nexports.BezierCurve = _BezierCurve;\n\nvar _Circle = require(\"./graphic/shape/Circle\");\n\nexports.Circle = _Circle;\n\nvar _Droplet = require(\"./graphic/shape/Droplet\");\n\nexports.Droplet = _Droplet;\n\nvar _Ellipse = require(\"./graphic/shape/Ellipse\");\n\nexports.Ellipse = _Ellipse;\n\nvar _Heart = require(\"./graphic/shape/Heart\");\n\nexports.Heart = _Heart;\n\nvar _Isogon = require(\"./graphic/shape/Isogon\");\n\nexports.Isogon = _Isogon;\n\nvar _Line = require(\"./graphic/shape/Line\");\n\nexports.Line = _Line;\n\nvar _Polygon = require(\"./graphic/shape/Polygon\");\n\nexports.Polygon = _Polygon;\n\nvar _Polyline = require(\"./graphic/shape/Polyline\");\n\nexports.Polyline = _Polyline;\n\nvar _Rect = require(\"./graphic/shape/Rect\");\n\nexports.Rect = _Rect;\n\nvar _Ring = require(\"./graphic/shape/Ring\");\n\nexports.Ring = _Ring;\n\nvar _Rose = require(\"./graphic/shape/Rose\");\n\nexports.Rose = _Rose;\n\nvar _Sector = require(\"./graphic/shape/Sector\");\n\nexports.Sector = _Sector;\n\nvar _Star = require(\"./graphic/shape/Star\");\n\nexports.Star = _Star;\n\nvar _Trochoid = require(\"./graphic/shape/Trochoid\");\n\nexports.Trochoid = _Trochoid;\n\nvar _LinearGradient = require(\"./graphic/LinearGradient\");\n\nexports.LinearGradient = _LinearGradient;\n\nvar _RadialGradient = require(\"./graphic/RadialGradient\");\n\nexports.RadialGradient = _RadialGradient;\n\nvar _Pattern = require(\"./graphic/Pattern\");\n\nexports.Pattern = _Pattern;\n\nvar _BoundingRect = require(\"./core/BoundingRect\");\n\nexports.BoundingRect = _BoundingRect;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/export.js\n// module id = 611\n// module chunks = 0 1","var env = require(\"../../core/env\");\n\n// Fix weird bug in some version of IE11 (like 11.0.9600.178**),\n// where exception \"unexpected call to method or property access\"\n// might be thrown when calling ctx.fill or ctx.stroke after a path\n// whose area size is zero is drawn and ctx.clip() is called and\n// shadowBlur is set. See #4572, #3112, #5777.\n// (e.g.,\n//  ctx.moveTo(10, 10);\n//  ctx.lineTo(20, 10);\n//  ctx.closePath();\n//  ctx.clip();\n//  ctx.shadowBlur = 10;\n//  ...\n//  ctx.fill();\n// )\nvar shadowTemp = [['shadowBlur', 0], ['shadowColor', '#000'], ['shadowOffsetX', 0], ['shadowOffsetY', 0]];\n\nfunction _default(orignalBrush) {\n  // version string can be: '11.0'\n  return env.browser.ie && env.browser.version >= 11 ? function () {\n    var clipPaths = this.__clipPaths;\n    var style = this.style;\n    var modified;\n\n    if (clipPaths) {\n      for (var i = 0; i < clipPaths.length; i++) {\n        var clipPath = clipPaths[i];\n        var shape = clipPath && clipPath.shape;\n        var type = clipPath && clipPath.type;\n\n        if (shape && (type === 'sector' && shape.startAngle === shape.endAngle || type === 'rect' && (!shape.width || !shape.height))) {\n          for (var j = 0; j < shadowTemp.length; j++) {\n            // It is save to put shadowTemp static, because shadowTemp\n            // will be all modified each item brush called.\n            shadowTemp[j][2] = style[shadowTemp[j][0]];\n            style[shadowTemp[j][0]] = shadowTemp[j][1];\n          }\n\n          modified = true;\n          break;\n        }\n      }\n    }\n\n    orignalBrush.apply(this, arguments);\n\n    if (modified) {\n      for (var j = 0; j < shadowTemp.length; j++) {\n        style[shadowTemp[j][0]] = shadowTemp[j][2];\n      }\n    }\n  } : orignalBrush;\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/helper/fixClipWithShadow.js\n// module id = 612\n// module chunks = 0 1","var _vector = require(\"../../core/vector\");\n\nvar v2Min = _vector.min;\nvar v2Max = _vector.max;\nvar v2Scale = _vector.scale;\nvar v2Distance = _vector.distance;\nvar v2Add = _vector.add;\nvar v2Clone = _vector.clone;\nvar v2Sub = _vector.sub;\n\n/**\n * 贝塞尔平滑曲线\n * @module zrender/shape/util/smoothBezier\n * @author pissang (https://www.github.com/pissang)\n *         Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *         errorrik (errorrik@gmail.com)\n */\n\n/**\n * 贝塞尔平滑曲线\n * @alias module:zrender/shape/util/smoothBezier\n * @param {Array} points 线段顶点数组\n * @param {number} smooth 平滑等级, 0-1\n * @param {boolean} isLoop\n * @param {Array} constraint 将计算出来的控制点约束在一个包围盒内\n *                           比如 [[0, 0], [100, 100]], 这个包围盒会与\n *                           整个折线的包围盒做一个并集用来约束控制点。\n * @param {Array} 计算出来的控制点数组\n */\nfunction _default(points, smooth, isLoop, constraint) {\n  var cps = [];\n  var v = [];\n  var v1 = [];\n  var v2 = [];\n  var prevPoint;\n  var nextPoint;\n  var min, max;\n\n  if (constraint) {\n    min = [Infinity, Infinity];\n    max = [-Infinity, -Infinity];\n\n    for (var i = 0, len = points.length; i < len; i++) {\n      v2Min(min, min, points[i]);\n      v2Max(max, max, points[i]);\n    } // 与指定的包围盒做并集\n\n\n    v2Min(min, min, constraint[0]);\n    v2Max(max, max, constraint[1]);\n  }\n\n  for (var i = 0, len = points.length; i < len; i++) {\n    var point = points[i];\n\n    if (isLoop) {\n      prevPoint = points[i ? i - 1 : len - 1];\n      nextPoint = points[(i + 1) % len];\n    } else {\n      if (i === 0 || i === len - 1) {\n        cps.push(v2Clone(points[i]));\n        continue;\n      } else {\n        prevPoint = points[i - 1];\n        nextPoint = points[i + 1];\n      }\n    }\n\n    v2Sub(v, nextPoint, prevPoint); // use degree to scale the handle length\n\n    v2Scale(v, v, smooth);\n    var d0 = v2Distance(point, prevPoint);\n    var d1 = v2Distance(point, nextPoint);\n    var sum = d0 + d1;\n\n    if (sum !== 0) {\n      d0 /= sum;\n      d1 /= sum;\n    }\n\n    v2Scale(v1, v, -d0);\n    v2Scale(v2, v, d1);\n    var cp0 = v2Add([], point, v1);\n    var cp1 = v2Add([], point, v2);\n\n    if (constraint) {\n      v2Max(cp0, cp0, min);\n      v2Min(cp0, cp0, max);\n      v2Max(cp1, cp1, min);\n      v2Min(cp1, cp1, max);\n    }\n\n    cps.push(cp0);\n    cps.push(cp1);\n  }\n\n  if (isLoop) {\n    cps.push(cps.shift());\n  }\n\n  return cps;\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/helper/smoothBezier.js\n// module id = 613\n// module chunks = 0 1","var _vector = require(\"../../core/vector\");\n\nvar v2Distance = _vector.distance;\n\n/**\n * Catmull-Rom spline 插值折线\n * @module zrender/shape/util/smoothSpline\n * @author pissang (https://www.github.com/pissang)\n *         Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *         errorrik (errorrik@gmail.com)\n */\n\n/**\n * @inner\n */\nfunction interpolate(p0, p1, p2, p3, t, t2, t3) {\n  var v0 = (p2 - p0) * 0.5;\n  var v1 = (p3 - p1) * 0.5;\n  return (2 * (p1 - p2) + v0 + v1) * t3 + (-3 * (p1 - p2) - 2 * v0 - v1) * t2 + v0 * t + p1;\n}\n/**\n * @alias module:zrender/shape/util/smoothSpline\n * @param {Array} points 线段顶点数组\n * @param {boolean} isLoop\n * @return {Array}\n */\n\n\nfunction _default(points, isLoop) {\n  var len = points.length;\n  var ret = [];\n  var distance = 0;\n\n  for (var i = 1; i < len; i++) {\n    distance += v2Distance(points[i - 1], points[i]);\n  }\n\n  var segs = distance / 2;\n  segs = segs < len ? len : segs;\n\n  for (var i = 0; i < segs; i++) {\n    var pos = i / (segs - 1) * (isLoop ? len : len - 1);\n    var idx = Math.floor(pos);\n    var w = pos - idx;\n    var p0;\n    var p1 = points[idx % len];\n    var p2;\n    var p3;\n\n    if (!isLoop) {\n      p0 = points[idx === 0 ? idx : idx - 1];\n      p2 = points[idx > len - 2 ? len - 1 : idx + 1];\n      p3 = points[idx > len - 3 ? len - 1 : idx + 2];\n    } else {\n      p0 = points[(idx - 1 + len) % len];\n      p2 = points[(idx + 1) % len];\n      p3 = points[(idx + 2) % len];\n    }\n\n    var w2 = w * w;\n    var w3 = w * w2;\n    ret.push([interpolate(p0[0], p1[0], p2[0], p3[0], w, w2, w3), interpolate(p0[1], p1[1], p2[1], p3[1], w, w2, w3)]);\n  }\n\n  return ret;\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/helper/smoothSpline.js\n// module id = 614\n// module chunks = 0 1","var Path = require(\"../Path\");\n\n/**\n * 水滴形状\n * @module zrender/graphic/shape/Droplet\n */\nvar _default = Path.extend({\n  type: 'droplet',\n  shape: {\n    cx: 0,\n    cy: 0,\n    width: 0,\n    height: 0\n  },\n  buildPath: function (ctx, shape) {\n    var x = shape.cx;\n    var y = shape.cy;\n    var a = shape.width;\n    var b = shape.height;\n    ctx.moveTo(x, y + a);\n    ctx.bezierCurveTo(x + a, y + a, x + a * 3 / 2, y - a / 3, x, y - b);\n    ctx.bezierCurveTo(x - a * 3 / 2, y - a / 3, x - a, y + a, x, y + a);\n    ctx.closePath();\n  }\n});\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/shape/Droplet.js\n// module id = 615\n// module chunks = 0 1","var Path = require(\"../Path\");\n\n/**\n * 椭圆形状\n * @module zrender/graphic/shape/Ellipse\n */\nvar _default = Path.extend({\n  type: 'ellipse',\n  shape: {\n    cx: 0,\n    cy: 0,\n    rx: 0,\n    ry: 0\n  },\n  buildPath: function (ctx, shape) {\n    var k = 0.5522848;\n    var x = shape.cx;\n    var y = shape.cy;\n    var a = shape.rx;\n    var b = shape.ry;\n    var ox = a * k; // 水平控制点偏移量\n\n    var oy = b * k; // 垂直控制点偏移量\n    // 从椭圆的左端点开始顺时针绘制四条三次贝塞尔曲线\n\n    ctx.moveTo(x - a, y);\n    ctx.bezierCurveTo(x - a, y - oy, x - ox, y - b, x, y - b);\n    ctx.bezierCurveTo(x + ox, y - b, x + a, y - oy, x + a, y);\n    ctx.bezierCurveTo(x + a, y + oy, x + ox, y + b, x, y + b);\n    ctx.bezierCurveTo(x - ox, y + b, x - a, y + oy, x - a, y);\n    ctx.closePath();\n  }\n});\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/shape/Ellipse.js\n// module id = 616\n// module chunks = 0 1","var Path = require(\"../Path\");\n\n/**\n * 心形\n * @module zrender/graphic/shape/Heart\n */\nvar _default = Path.extend({\n  type: 'heart',\n  shape: {\n    cx: 0,\n    cy: 0,\n    width: 0,\n    height: 0\n  },\n  buildPath: function (ctx, shape) {\n    var x = shape.cx;\n    var y = shape.cy;\n    var a = shape.width;\n    var b = shape.height;\n    ctx.moveTo(x, y);\n    ctx.bezierCurveTo(x + a / 2, y - b * 2 / 3, x + a * 2, y + b / 3, x, y + b);\n    ctx.bezierCurveTo(x - a * 2, y + b / 3, x - a / 2, y - b * 2 / 3, x, y);\n  }\n});\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/shape/Heart.js\n// module id = 617\n// module chunks = 0 1","var Path = require(\"../Path\");\n\n/**\n * 正多边形\n * @module zrender/shape/Isogon\n */\nvar PI = Math.PI;\nvar sin = Math.sin;\nvar cos = Math.cos;\n\nvar _default = Path.extend({\n  type: 'isogon',\n  shape: {\n    x: 0,\n    y: 0,\n    r: 0,\n    n: 0\n  },\n  buildPath: function (ctx, shape) {\n    var n = shape.n;\n\n    if (!n || n < 2) {\n      return;\n    }\n\n    var x = shape.x;\n    var y = shape.y;\n    var r = shape.r;\n    var dStep = 2 * PI / n;\n    var deg = -PI / 2;\n    ctx.moveTo(x + r * cos(deg), y + r * sin(deg));\n\n    for (var i = 0, end = n - 1; i < end; i++) {\n      deg += dStep;\n      ctx.lineTo(x + r * cos(deg), y + r * sin(deg));\n    }\n\n    ctx.closePath();\n    return;\n  }\n});\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/shape/Isogon.js\n// module id = 618\n// module chunks = 0 1","var Path = require(\"../Path\");\n\n/**\n * 玫瑰线\n * @module zrender/graphic/shape/Rose\n */\nvar sin = Math.sin;\nvar cos = Math.cos;\nvar radian = Math.PI / 180;\n\nvar _default = Path.extend({\n  type: 'rose',\n  shape: {\n    cx: 0,\n    cy: 0,\n    r: [],\n    k: 0,\n    n: 1\n  },\n  style: {\n    stroke: '#000',\n    fill: null\n  },\n  buildPath: function (ctx, shape) {\n    var x;\n    var y;\n    var R = shape.r;\n    var r;\n    var k = shape.k;\n    var n = shape.n;\n    var x0 = shape.cx;\n    var y0 = shape.cy;\n    ctx.moveTo(x0, y0);\n\n    for (var i = 0, len = R.length; i < len; i++) {\n      r = R[i];\n\n      for (var j = 0; j <= 360 * n; j++) {\n        x = r * sin(k / n * j % 360 * radian) * cos(j * radian) + x0;\n        y = r * sin(k / n * j % 360 * radian) * sin(j * radian) + y0;\n        ctx.lineTo(x, y);\n      }\n    }\n  }\n});\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/shape/Rose.js\n// module id = 619\n// module chunks = 0 1","var Path = require(\"../Path\");\n\n/**\n * n角星（n>3）\n * @module zrender/graphic/shape/Star\n */\nvar PI = Math.PI;\nvar cos = Math.cos;\nvar sin = Math.sin;\n\nvar _default = Path.extend({\n  type: 'star',\n  shape: {\n    cx: 0,\n    cy: 0,\n    n: 3,\n    r0: null,\n    r: 0\n  },\n  buildPath: function (ctx, shape) {\n    var n = shape.n;\n\n    if (!n || n < 2) {\n      return;\n    }\n\n    var x = shape.cx;\n    var y = shape.cy;\n    var r = shape.r;\n    var r0 = shape.r0; // 如果未指定内部顶点外接圆半径，则自动计算\n\n    if (r0 == null) {\n      r0 = n > 4 // 相隔的外部顶点的连线的交点，\n      // 被取为内部交点，以此计算r0\n      ? r * cos(2 * PI / n) / cos(PI / n) // 二三四角星的特殊处理\n      : r / 3;\n    }\n\n    var dStep = PI / n;\n    var deg = -PI / 2;\n    var xStart = x + r * cos(deg);\n    var yStart = y + r * sin(deg);\n    deg += dStep; // 记录边界点，用于判断inside\n\n    ctx.moveTo(xStart, yStart);\n\n    for (var i = 0, end = n * 2 - 1, ri; i < end; i++) {\n      ri = i % 2 === 0 ? r0 : r;\n      ctx.lineTo(x + ri * cos(deg), y + ri * sin(deg));\n      deg += dStep;\n    }\n\n    ctx.closePath();\n  }\n});\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/shape/Star.js\n// module id = 620\n// module chunks = 0 1","var Path = require(\"../Path\");\n\n/**\n * 内外旋轮曲线\n * @module zrender/graphic/shape/Trochold\n */\nvar cos = Math.cos;\nvar sin = Math.sin;\n\nvar _default = Path.extend({\n  type: 'trochoid',\n  shape: {\n    cx: 0,\n    cy: 0,\n    r: 0,\n    r0: 0,\n    d: 0,\n    location: 'out'\n  },\n  style: {\n    stroke: '#000',\n    fill: null\n  },\n  buildPath: function (ctx, shape) {\n    var x1;\n    var y1;\n    var x2;\n    var y2;\n    var R = shape.r;\n    var r = shape.r0;\n    var d = shape.d;\n    var offsetX = shape.cx;\n    var offsetY = shape.cy;\n    var delta = shape.location == 'out' ? 1 : -1;\n\n    if (shape.location && R <= r) {\n      return;\n    }\n\n    var num = 0;\n    var i = 1;\n    var theta;\n    x1 = (R + delta * r) * cos(0) - delta * d * cos(0) + offsetX;\n    y1 = (R + delta * r) * sin(0) - d * sin(0) + offsetY;\n    ctx.moveTo(x1, y1); // 计算结束时的i\n\n    do {\n      num++;\n    } while (r * num % (R + delta * r) !== 0);\n\n    do {\n      theta = Math.PI / 180 * i;\n      x2 = (R + delta * r) * cos(theta) - delta * d * cos((R / r + delta) * theta) + offsetX;\n      y2 = (R + delta * r) * sin(theta) - d * sin((R / r + delta) * theta) + offsetY;\n      ctx.lineTo(x2, y2);\n      i++;\n    } while (i <= r * num / (R + delta * r) * 360);\n  }\n});\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/shape/Trochoid.js\n// module id = 621\n// module chunks = 0 1","var Animator = require(\"../animation/Animator\");\n\nvar log = require(\"../core/log\");\n\nvar _util = require(\"../core/util\");\n\nvar isString = _util.isString;\nvar isFunction = _util.isFunction;\nvar isObject = _util.isObject;\nvar isArrayLike = _util.isArrayLike;\nvar indexOf = _util.indexOf;\n\n/**\n * @alias modue:zrender/mixin/Animatable\n * @constructor\n */\nvar Animatable = function () {\n  /**\n   * @type {Array.<module:zrender/animation/Animator>}\n   * @readOnly\n   */\n  this.animators = [];\n};\n\nAnimatable.prototype = {\n  constructor: Animatable,\n\n  /**\n   * 动画\n   *\n   * @param {string} path The path to fetch value from object, like 'a.b.c'.\n   * @param {boolean} [loop] Whether to loop animation.\n   * @return {module:zrender/animation/Animator}\n   * @example:\n   *     el.animate('style', false)\n   *         .when(1000, {x: 10} )\n   *         .done(function(){ // Animation done })\n   *         .start()\n   */\n  animate: function (path, loop) {\n    var target;\n    var animatingShape = false;\n    var el = this;\n    var zr = this.__zr;\n\n    if (path) {\n      var pathSplitted = path.split('.');\n      var prop = el; // If animating shape\n\n      animatingShape = pathSplitted[0] === 'shape';\n\n      for (var i = 0, l = pathSplitted.length; i < l; i++) {\n        if (!prop) {\n          continue;\n        }\n\n        prop = prop[pathSplitted[i]];\n      }\n\n      if (prop) {\n        target = prop;\n      }\n    } else {\n      target = el;\n    }\n\n    if (!target) {\n      log('Property \"' + path + '\" is not existed in element ' + el.id);\n      return;\n    }\n\n    var animators = el.animators;\n    var animator = new Animator(target, loop);\n    animator.during(function (target) {\n      el.dirty(animatingShape);\n    }).done(function () {\n      // FIXME Animator will not be removed if use `Animator#stop` to stop animation\n      animators.splice(indexOf(animators, animator), 1);\n    });\n    animators.push(animator); // If animate after added to the zrender\n\n    if (zr) {\n      zr.animation.addAnimator(animator);\n    }\n\n    return animator;\n  },\n\n  /**\n   * 停止动画\n   * @param {boolean} forwardToLast If move to last frame before stop\n   */\n  stopAnimation: function (forwardToLast) {\n    var animators = this.animators;\n    var len = animators.length;\n\n    for (var i = 0; i < len; i++) {\n      animators[i].stop(forwardToLast);\n    }\n\n    animators.length = 0;\n    return this;\n  },\n\n  /**\n   * Caution: this method will stop previous animation.\n   * So do not use this method to one element twice before\n   * animation starts, unless you know what you are doing.\n   * @param {Object} target\n   * @param {number} [time=500] Time in ms\n   * @param {string} [easing='linear']\n   * @param {number} [delay=0]\n   * @param {Function} [callback]\n   * @param {Function} [forceAnimate] Prevent stop animation and callback\n   *        immediently when target values are the same as current values.\n   *\n   * @example\n   *  // Animate position\n   *  el.animateTo({\n   *      position: [10, 10]\n   *  }, function () { // done })\n   *\n   *  // Animate shape, style and position in 100ms, delayed 100ms, with cubicOut easing\n   *  el.animateTo({\n   *      shape: {\n   *          width: 500\n   *      },\n   *      style: {\n   *          fill: 'red'\n   *      }\n   *      position: [10, 10]\n   *  }, 100, 100, 'cubicOut', function () { // done })\n   */\n  // TODO Return animation key\n  animateTo: function (target, time, delay, easing, callback, forceAnimate) {\n    // animateTo(target, time, easing, callback);\n    if (isString(delay)) {\n      callback = easing;\n      easing = delay;\n      delay = 0;\n    } // animateTo(target, time, delay, callback);\n    else if (isFunction(easing)) {\n        callback = easing;\n        easing = 'linear';\n        delay = 0;\n      } // animateTo(target, time, callback);\n      else if (isFunction(delay)) {\n          callback = delay;\n          delay = 0;\n        } // animateTo(target, callback)\n        else if (isFunction(time)) {\n            callback = time;\n            time = 500;\n          } // animateTo(target)\n          else if (!time) {\n              time = 500;\n            } // Stop all previous animations\n\n\n    this.stopAnimation();\n\n    this._animateToShallow('', this, target, time, delay); // Animators may be removed immediately after start\n    // if there is nothing to animate\n\n\n    var animators = this.animators.slice();\n    var count = animators.length;\n\n    function done() {\n      count--;\n\n      if (!count) {\n        callback && callback();\n      }\n    } // No animators. This should be checked before animators[i].start(),\n    // because 'done' may be executed immediately if no need to animate.\n\n\n    if (!count) {\n      callback && callback();\n    } // Start after all animators created\n    // Incase any animator is done immediately when all animation properties are not changed\n\n\n    for (var i = 0; i < animators.length; i++) {\n      animators[i].done(done).start(easing, forceAnimate);\n    }\n  },\n\n  /**\n   * @private\n   * @param {string} path=''\n   * @param {Object} source=this\n   * @param {Object} target\n   * @param {number} [time=500]\n   * @param {number} [delay=0]\n   *\n   * @example\n   *  // Animate position\n   *  el._animateToShallow({\n   *      position: [10, 10]\n   *  })\n   *\n   *  // Animate shape, style and position in 100ms, delayed 100ms\n   *  el._animateToShallow({\n   *      shape: {\n   *          width: 500\n   *      },\n   *      style: {\n   *          fill: 'red'\n   *      }\n   *      position: [10, 10]\n   *  }, 100, 100)\n   */\n  _animateToShallow: function (path, source, target, time, delay) {\n    var objShallow = {};\n    var propertyCount = 0;\n\n    for (var name in target) {\n      if (!target.hasOwnProperty(name)) {\n        continue;\n      }\n\n      if (source[name] != null) {\n        if (isObject(target[name]) && !isArrayLike(target[name])) {\n          this._animateToShallow(path ? path + '.' + name : name, source[name], target[name], time, delay);\n        } else {\n          objShallow[name] = target[name];\n          propertyCount++;\n        }\n      } else if (target[name] != null) {\n        // Attr directly if not has property\n        // FIXME, if some property not needed for element ?\n        if (!path) {\n          this.attr(name, target[name]);\n        } else {\n          // Shape or style\n          var props = {};\n          props[path] = {};\n          props[path][name] = target[name];\n          this.attr(props);\n        }\n      }\n    }\n\n    if (propertyCount > 0) {\n      this.animate(path, false).when(time == null ? 500 : time, objShallow).delay(delay || 0);\n    }\n\n    return this;\n  }\n};\nvar _default = Animatable;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/mixin/Animatable.js\n// module id = 622\n// module chunks = 0 1","// TODO Draggable for group\n// FIXME Draggable on element which has parent rotation or scale\nfunction Draggable() {\n  this.on('mousedown', this._dragStart, this);\n  this.on('mousemove', this._drag, this);\n  this.on('mouseup', this._dragEnd, this);\n  this.on('globalout', this._dragEnd, this); // this._dropTarget = null;\n  // this._draggingTarget = null;\n  // this._x = 0;\n  // this._y = 0;\n}\n\nDraggable.prototype = {\n  constructor: Draggable,\n  _dragStart: function (e) {\n    var draggingTarget = e.target;\n\n    if (draggingTarget && draggingTarget.draggable) {\n      this._draggingTarget = draggingTarget;\n      draggingTarget.dragging = true;\n      this._x = e.offsetX;\n      this._y = e.offsetY;\n      this.dispatchToElement(param(draggingTarget, e), 'dragstart', e.event);\n    }\n  },\n  _drag: function (e) {\n    var draggingTarget = this._draggingTarget;\n\n    if (draggingTarget) {\n      var x = e.offsetX;\n      var y = e.offsetY;\n      var dx = x - this._x;\n      var dy = y - this._y;\n      this._x = x;\n      this._y = y;\n      draggingTarget.drift(dx, dy, e);\n      this.dispatchToElement(param(draggingTarget, e), 'drag', e.event);\n      var dropTarget = this.findHover(x, y, draggingTarget).target;\n      var lastDropTarget = this._dropTarget;\n      this._dropTarget = dropTarget;\n\n      if (draggingTarget !== dropTarget) {\n        if (lastDropTarget && dropTarget !== lastDropTarget) {\n          this.dispatchToElement(param(lastDropTarget, e), 'dragleave', e.event);\n        }\n\n        if (dropTarget && dropTarget !== lastDropTarget) {\n          this.dispatchToElement(param(dropTarget, e), 'dragenter', e.event);\n        }\n      }\n    }\n  },\n  _dragEnd: function (e) {\n    var draggingTarget = this._draggingTarget;\n\n    if (draggingTarget) {\n      draggingTarget.dragging = false;\n    }\n\n    this.dispatchToElement(param(draggingTarget, e), 'dragend', e.event);\n\n    if (this._dropTarget) {\n      this.dispatchToElement(param(this._dropTarget, e), 'drop', e.event);\n    }\n\n    this._draggingTarget = null;\n    this._dropTarget = null;\n  }\n};\n\nfunction param(target, e) {\n  return {\n    target: target,\n    topTarget: e && e.topTarget\n  };\n}\n\nvar _default = Draggable;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/mixin/Draggable.js\n// module id = 623\n// module chunks = 0 1","var matrix = require(\"../core/matrix\");\n\nvar vector = require(\"../core/vector\");\n\n/**\n * 提供变换扩展\n * @module zrender/mixin/Transformable\n * @author pissang (https://www.github.com/pissang)\n */\nvar mIdentity = matrix.identity;\nvar EPSILON = 5e-5;\n\nfunction isNotAroundZero(val) {\n  return val > EPSILON || val < -EPSILON;\n}\n/**\n * @alias module:zrender/mixin/Transformable\n * @constructor\n */\n\n\nvar Transformable = function (opts) {\n  opts = opts || {}; // If there are no given position, rotation, scale\n\n  if (!opts.position) {\n    /**\n     * 平移\n     * @type {Array.<number>}\n     * @default [0, 0]\n     */\n    this.position = [0, 0];\n  }\n\n  if (opts.rotation == null) {\n    /**\n     * 旋转\n     * @type {Array.<number>}\n     * @default 0\n     */\n    this.rotation = 0;\n  }\n\n  if (!opts.scale) {\n    /**\n     * 缩放\n     * @type {Array.<number>}\n     * @default [1, 1]\n     */\n    this.scale = [1, 1];\n  }\n  /**\n   * 旋转和缩放的原点\n   * @type {Array.<number>}\n   * @default null\n   */\n\n\n  this.origin = this.origin || null;\n};\n\nvar transformableProto = Transformable.prototype;\ntransformableProto.transform = null;\n/**\n * 判断是否需要有坐标变换\n * 如果有坐标变换, 则从position, rotation, scale以及父节点的transform计算出自身的transform矩阵\n */\n\ntransformableProto.needLocalTransform = function () {\n  return isNotAroundZero(this.rotation) || isNotAroundZero(this.position[0]) || isNotAroundZero(this.position[1]) || isNotAroundZero(this.scale[0] - 1) || isNotAroundZero(this.scale[1] - 1);\n};\n\ntransformableProto.updateTransform = function () {\n  var parent = this.parent;\n  var parentHasTransform = parent && parent.transform;\n  var needLocalTransform = this.needLocalTransform();\n  var m = this.transform;\n\n  if (!(needLocalTransform || parentHasTransform)) {\n    m && mIdentity(m);\n    return;\n  }\n\n  m = m || matrix.create();\n\n  if (needLocalTransform) {\n    this.getLocalTransform(m);\n  } else {\n    mIdentity(m);\n  } // 应用父节点变换\n\n\n  if (parentHasTransform) {\n    if (needLocalTransform) {\n      matrix.mul(m, parent.transform, m);\n    } else {\n      matrix.copy(m, parent.transform);\n    }\n  } // 保存这个变换矩阵\n\n\n  this.transform = m;\n  this.invTransform = this.invTransform || matrix.create();\n  matrix.invert(this.invTransform, m);\n};\n\ntransformableProto.getLocalTransform = function (m) {\n  return Transformable.getLocalTransform(this, m);\n};\n/**\n * 将自己的transform应用到context上\n * @param {CanvasRenderingContext2D} ctx\n */\n\n\ntransformableProto.setTransform = function (ctx) {\n  var m = this.transform;\n  var dpr = ctx.dpr || 1;\n\n  if (m) {\n    ctx.setTransform(dpr * m[0], dpr * m[1], dpr * m[2], dpr * m[3], dpr * m[4], dpr * m[5]);\n  } else {\n    ctx.setTransform(dpr, 0, 0, dpr, 0, 0);\n  }\n};\n\ntransformableProto.restoreTransform = function (ctx) {\n  var dpr = ctx.dpr || 1;\n  ctx.setTransform(dpr, 0, 0, dpr, 0, 0);\n};\n\nvar tmpTransform = [];\n/**\n * 分解`transform`矩阵到`position`, `rotation`, `scale`\n */\n\ntransformableProto.decomposeTransform = function () {\n  if (!this.transform) {\n    return;\n  }\n\n  var parent = this.parent;\n  var m = this.transform;\n\n  if (parent && parent.transform) {\n    // Get local transform and decompose them to position, scale, rotation\n    matrix.mul(tmpTransform, parent.invTransform, m);\n    m = tmpTransform;\n  }\n\n  var sx = m[0] * m[0] + m[1] * m[1];\n  var sy = m[2] * m[2] + m[3] * m[3];\n  var position = this.position;\n  var scale = this.scale;\n\n  if (isNotAroundZero(sx - 1)) {\n    sx = Math.sqrt(sx);\n  }\n\n  if (isNotAroundZero(sy - 1)) {\n    sy = Math.sqrt(sy);\n  }\n\n  if (m[0] < 0) {\n    sx = -sx;\n  }\n\n  if (m[3] < 0) {\n    sy = -sy;\n  }\n\n  position[0] = m[4];\n  position[1] = m[5];\n  scale[0] = sx;\n  scale[1] = sy;\n  this.rotation = Math.atan2(-m[1] / sy, m[0] / sx);\n};\n/**\n * Get global scale\n * @return {Array.<number>}\n */\n\n\ntransformableProto.getGlobalScale = function () {\n  var m = this.transform;\n\n  if (!m) {\n    return [1, 1];\n  }\n\n  var sx = Math.sqrt(m[0] * m[0] + m[1] * m[1]);\n  var sy = Math.sqrt(m[2] * m[2] + m[3] * m[3]);\n\n  if (m[0] < 0) {\n    sx = -sx;\n  }\n\n  if (m[3] < 0) {\n    sy = -sy;\n  }\n\n  return [sx, sy];\n};\n/**\n * 变换坐标位置到 shape 的局部坐标空间\n * @method\n * @param {number} x\n * @param {number} y\n * @return {Array.<number>}\n */\n\n\ntransformableProto.transformCoordToLocal = function (x, y) {\n  var v2 = [x, y];\n  var invTransform = this.invTransform;\n\n  if (invTransform) {\n    vector.applyTransform(v2, v2, invTransform);\n  }\n\n  return v2;\n};\n/**\n * 变换局部坐标位置到全局坐标空间\n * @method\n * @param {number} x\n * @param {number} y\n * @return {Array.<number>}\n */\n\n\ntransformableProto.transformCoordToGlobal = function (x, y) {\n  var v2 = [x, y];\n  var transform = this.transform;\n\n  if (transform) {\n    vector.applyTransform(v2, v2, transform);\n  }\n\n  return v2;\n};\n/**\n * @static\n * @param {Object} target\n * @param {Array.<number>} target.origin\n * @param {number} target.rotation\n * @param {Array.<number>} target.position\n * @param {Array.<number>} [m]\n */\n\n\nTransformable.getLocalTransform = function (target, m) {\n  m = m || [];\n  mIdentity(m);\n  var origin = target.origin;\n  var scale = target.scale || [1, 1];\n  var rotation = target.rotation || 0;\n  var position = target.position || [0, 0];\n\n  if (origin) {\n    // Translate to origin\n    m[4] -= origin[0];\n    m[5] -= origin[1];\n  }\n\n  matrix.scale(m, m, scale);\n\n  if (rotation) {\n    matrix.rotate(m, m, rotation);\n  }\n\n  if (origin) {\n    // Translate back from origin\n    m[4] += origin[0];\n    m[5] += origin[1];\n  }\n\n  m[4] += position[0];\n  m[5] += position[1];\n  return m;\n};\n\nvar _default = Transformable;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/mixin/Transformable.js\n// module id = 624\n// module chunks = 0 1","var _core = require(\"./core\");\n\nvar createElement = _core.createElement;\n\nvar util = require(\"../core/util\");\n\nvar each = util.each;\n\nvar zrLog = require(\"../core/log\");\n\nvar Path = require(\"../graphic/Path\");\n\nvar ZImage = require(\"../graphic/Image\");\n\nvar ZText = require(\"../graphic/Text\");\n\nvar arrayDiff = require(\"../core/arrayDiff2\");\n\nvar GradientManager = require(\"./helper/GradientManager\");\n\nvar ClippathManager = require(\"./helper/ClippathManager\");\n\nvar _graphic = require(\"./graphic\");\n\nvar svgPath = _graphic.path;\nvar svgImage = _graphic.image;\nvar svgText = _graphic.text;\n\n/**\n * SVG Painter\n * @module zrender/svg/Painter\n */\nfunction parseInt10(val) {\n  return parseInt(val, 10);\n}\n\nfunction getSvgProxy(el) {\n  if (el instanceof Path) {\n    return svgPath;\n  } else if (el instanceof ZImage) {\n    return svgImage;\n  } else if (el instanceof ZText) {\n    return svgText;\n  } else {\n    return svgPath;\n  }\n}\n\nfunction checkParentAvailable(parent, child) {\n  return child && parent && child.parentNode !== parent;\n}\n\nfunction insertAfter(parent, child, prevSibling) {\n  if (checkParentAvailable(parent, child) && prevSibling) {\n    var nextSibling = prevSibling.nextSibling;\n    nextSibling ? parent.insertBefore(child, nextSibling) : parent.appendChild(child);\n  }\n}\n\nfunction prepend(parent, child) {\n  if (checkParentAvailable(parent, child)) {\n    var firstChild = parent.firstChild;\n    firstChild ? parent.insertBefore(child, firstChild) : parent.appendChild(child);\n  }\n}\n\nfunction append(parent, child) {\n  if (checkParentAvailable(parent, child)) {\n    parent.appendChild(child);\n  }\n}\n\nfunction remove(parent, child) {\n  if (child && parent && child.parentNode === parent) {\n    parent.removeChild(child);\n  }\n}\n\nfunction getTextSvgElement(displayable) {\n  return displayable.__textSvgEl;\n}\n\nfunction getSvgElement(displayable) {\n  return displayable.__svgEl;\n}\n/**\n * @alias module:zrender/svg/Painter\n * @constructor\n * @param {HTMLElement} root 绘图容器\n * @param {module:zrender/Storage} storage\n * @param {Object} opts\n */\n\n\nvar SVGPainter = function (root, storage, opts) {\n  this.root = root;\n  this.storage = storage;\n  this._opts = opts = util.extend({}, opts || {});\n  var svgRoot = createElement('svg');\n  svgRoot.setAttribute('xmlns', 'http://www.w3.org/2000/svg');\n  svgRoot.setAttribute('version', '1.1');\n  svgRoot.setAttribute('baseProfile', 'full');\n  svgRoot.style['user-select'] = 'none';\n  svgRoot.style.cssText = 'position:absolute;left:0;top:0;';\n  this.gradientManager = new GradientManager(svgRoot);\n  this.clipPathManager = new ClippathManager(svgRoot);\n  var viewport = document.createElement('div');\n  viewport.style.cssText = 'overflow:hidden;position:relative';\n  this._svgRoot = svgRoot;\n  this._viewport = viewport;\n  root.appendChild(viewport);\n  viewport.appendChild(svgRoot);\n  this.resize(opts.width, opts.height);\n  this._visibleList = [];\n};\n\nSVGPainter.prototype = {\n  constructor: SVGPainter,\n  getType: function () {\n    return 'svg';\n  },\n  getViewportRoot: function () {\n    return this._viewport;\n  },\n  getViewportRootOffset: function () {\n    var viewportRoot = this.getViewportRoot();\n\n    if (viewportRoot) {\n      return {\n        offsetLeft: viewportRoot.offsetLeft || 0,\n        offsetTop: viewportRoot.offsetTop || 0\n      };\n    }\n  },\n  refresh: function () {\n    var list = this.storage.getDisplayList(true);\n\n    this._paintList(list);\n  },\n  _paintList: function (list) {\n    this.gradientManager.markAllUnused();\n    this.clipPathManager.markAllUnused();\n    var svgRoot = this._svgRoot;\n    var visibleList = this._visibleList;\n    var listLen = list.length;\n    var newVisibleList = [];\n    var i;\n\n    for (i = 0; i < listLen; i++) {\n      var displayable = list[i];\n      var svgProxy = getSvgProxy(displayable);\n\n      if (!displayable.invisible) {\n        if (displayable.__dirty) {\n          svgProxy && svgProxy.brush(displayable); // Update clipPath\n\n          this.clipPathManager.update(displayable); // Update gradient\n\n          if (displayable.style) {\n            this.gradientManager.update(displayable.style.fill);\n            this.gradientManager.update(displayable.style.stroke);\n          }\n\n          displayable.__dirty = false;\n        }\n\n        newVisibleList.push(displayable);\n      }\n    }\n\n    var diff = arrayDiff(visibleList, newVisibleList);\n    var prevSvgElement; // First do remove, in case element moved to the head and do remove\n    // after add\n\n    for (i = 0; i < diff.length; i++) {\n      var item = diff[i];\n\n      if (item.removed) {\n        for (var k = 0; k < item.count; k++) {\n          var displayable = visibleList[item.indices[k]];\n          var svgElement = getSvgElement(displayable);\n          var textSvgElement = getTextSvgElement(displayable);\n          remove(svgRoot, svgElement);\n          remove(svgRoot, textSvgElement);\n        }\n      }\n    }\n\n    for (i = 0; i < diff.length; i++) {\n      var item = diff[i];\n\n      if (item.added) {\n        for (var k = 0; k < item.count; k++) {\n          var displayable = newVisibleList[item.indices[k]];\n          var svgElement = getSvgElement(displayable);\n          var textSvgElement = getTextSvgElement(displayable);\n          prevSvgElement ? insertAfter(svgRoot, svgElement, prevSvgElement) : prepend(svgRoot, svgElement);\n\n          if (svgElement) {\n            insertAfter(svgRoot, textSvgElement, svgElement);\n          } else if (prevSvgElement) {\n            insertAfter(svgRoot, textSvgElement, prevSvgElement);\n          } else {\n            prepend(svgRoot, textSvgElement);\n          } // Insert text\n\n\n          insertAfter(svgRoot, textSvgElement, svgElement);\n          prevSvgElement = textSvgElement || svgElement || prevSvgElement;\n          this.gradientManager.addWithoutUpdate(svgElement, displayable);\n          this.clipPathManager.markUsed(displayable);\n        }\n      } else if (!item.removed) {\n        for (var k = 0; k < item.count; k++) {\n          var displayable = newVisibleList[item.indices[k]];\n          prevSvgElement = svgElement = getTextSvgElement(displayable) || getSvgElement(displayable) || prevSvgElement;\n          this.gradientManager.markUsed(displayable);\n          this.gradientManager.addWithoutUpdate(svgElement, displayable);\n          this.clipPathManager.markUsed(displayable);\n        }\n      }\n    }\n\n    this.gradientManager.removeUnused();\n    this.clipPathManager.removeUnused();\n    this._visibleList = newVisibleList;\n  },\n  _getDefs: function (isForceCreating) {\n    var svgRoot = this._svgRoot;\n\n    var defs = this._svgRoot.getElementsByTagName('defs');\n\n    if (defs.length === 0) {\n      // Not exist\n      if (isForceCreating) {\n        var defs = svgRoot.insertBefore(createElement('defs'), // Create new tag\n        svgRoot.firstChild // Insert in the front of svg\n        );\n\n        if (!defs.contains) {\n          // IE doesn't support contains method\n          defs.contains = function (el) {\n            var children = defs.children;\n\n            if (!children) {\n              return false;\n            }\n\n            for (var i = children.length - 1; i >= 0; --i) {\n              if (children[i] === el) {\n                return true;\n              }\n            }\n\n            return false;\n          };\n        }\n\n        return defs;\n      } else {\n        return null;\n      }\n    } else {\n      return defs[0];\n    }\n  },\n  resize: function (width, height) {\n    var viewport = this._viewport; // FIXME Why ?\n\n    viewport.style.display = 'none'; // Save input w/h\n\n    var opts = this._opts;\n    width != null && (opts.width = width);\n    height != null && (opts.height = height);\n    width = this._getSize(0);\n    height = this._getSize(1);\n    viewport.style.display = '';\n\n    if (this._width !== width && this._height !== height) {\n      this._width = width;\n      this._height = height;\n      var viewportStyle = viewport.style;\n      viewportStyle.width = width + 'px';\n      viewportStyle.height = height + 'px';\n      var svgRoot = this._svgRoot; // Set width by 'svgRoot.width = width' is invalid\n\n      svgRoot.setAttribute('width', width);\n      svgRoot.setAttribute('height', height);\n    }\n  },\n\n  /**\n   * 获取绘图区域宽度\n   */\n  getWidth: function () {\n    return this._width;\n  },\n\n  /**\n   * 获取绘图区域高度\n   */\n  getHeight: function () {\n    return this._height;\n  },\n  _getSize: function (whIdx) {\n    var opts = this._opts;\n    var wh = ['width', 'height'][whIdx];\n    var cwh = ['clientWidth', 'clientHeight'][whIdx];\n    var plt = ['paddingLeft', 'paddingTop'][whIdx];\n    var prb = ['paddingRight', 'paddingBottom'][whIdx];\n\n    if (opts[wh] != null && opts[wh] !== 'auto') {\n      return parseFloat(opts[wh]);\n    }\n\n    var root = this.root; // IE8 does not support getComputedStyle, but it use VML.\n\n    var stl = document.defaultView.getComputedStyle(root);\n    return (root[cwh] || parseInt10(stl[wh]) || parseInt10(root.style[wh])) - (parseInt10(stl[plt]) || 0) - (parseInt10(stl[prb]) || 0) | 0;\n  },\n  dispose: function () {\n    this.root.innerHTML = '';\n    this._svgRoot = this._viewport = this.storage = null;\n  },\n  clear: function () {\n    if (this._viewport) {\n      this.root.removeChild(this._viewport);\n    }\n  },\n  pathToSvg: function () {\n    this.refresh();\n    var html = this._svgRoot.outerHTML;\n    return 'data:img/svg+xml;utf-8,' + unescape(html);\n  }\n}; // Not supported methods\n\nfunction createMethodNotSupport(method) {\n  return function () {\n    zrLog('In SVG mode painter not support method \"' + method + '\"');\n  };\n} // Unsuppoted methods\n\n\neach(['getLayer', 'insertLayer', 'eachLayer', 'eachBuiltinLayer', 'eachOtherLayer', 'getLayers', 'modLayer', 'delLayer', 'clearLayer', 'toDataURL', 'pathToImage'], function (name) {\n  SVGPainter.prototype[name] = createMethodNotSupport(name);\n});\nvar _default = SVGPainter;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/svg/Painter.js\n// module id = 625\n// module chunks = 0 1","var Definable = require(\"./Definable\");\n\nvar zrUtil = require(\"../../core/util\");\n\nvar matrix = require(\"../../core/matrix\");\n\n/**\n * @file Manages SVG clipPath elements.\n * @author Zhang Wenli\n */\n\n/**\n * Manages SVG clipPath elements.\n *\n * @class\n * @extends Definable\n * @param   {SVGElement} svgRoot root of SVG document\n */\nfunction ClippathManager(svgRoot) {\n  Definable.call(this, svgRoot, 'clipPath', '__clippath_in_use__');\n}\n\nzrUtil.inherits(ClippathManager, Definable);\n/**\n * Update clipPath.\n *\n * @param {Displayable} displayable displayable element\n */\n\nClippathManager.prototype.update = function (displayable) {\n  var svgEl = this.getSvgElement(displayable);\n\n  if (svgEl) {\n    this.updateDom(svgEl, displayable.__clipPaths, false);\n  }\n\n  var textEl = this.getTextSvgElement(displayable);\n\n  if (textEl) {\n    // Make another clipPath for text, since it's transform\n    // matrix is not the same with svgElement\n    this.updateDom(textEl, displayable.__clipPaths, true);\n  }\n\n  this.markUsed(displayable);\n};\n/**\n * Create an SVGElement of displayable and create a <clipPath> of its\n * clipPath\n *\n * @param {Displayable} parentEl  parent element\n * @param {ClipPath[]}  clipPaths clipPaths of parent element\n * @param {boolean}     isText    if parent element is Text\n */\n\n\nClippathManager.prototype.updateDom = function (parentEl, clipPaths, isText) {\n  if (clipPaths && clipPaths.length > 0) {\n    // Has clipPath, create <clipPath> with the first clipPath\n    var defs = this.getDefs(true);\n    var clipPath = clipPaths[0];\n    var clipPathEl;\n    var id;\n    var dom = isText ? '_textDom' : '_dom';\n\n    if (clipPath[dom]) {\n      // Use a dom that is already in <defs>\n      id = clipPath[dom].getAttribute('id');\n      clipPathEl = clipPath[dom]; // Use a dom that is already in <defs>\n\n      if (!defs.contains(clipPathEl)) {\n        // This happens when set old clipPath that has\n        // been previously removed\n        defs.appendChild(clipPathEl);\n      }\n    } else {\n      // New <clipPath>\n      id = 'zr-clip-' + this.nextId;\n      ++this.nextId;\n      clipPathEl = this.createElement('clipPath');\n      clipPathEl.setAttribute('id', id);\n      defs.appendChild(clipPathEl);\n      clipPath[dom] = clipPathEl;\n    } // Build path and add to <clipPath>\n\n\n    var svgProxy = this.getSvgProxy(clipPath);\n\n    if (clipPath.transform && clipPath.parent.invTransform && !isText) {\n      /**\n       * If a clipPath has a parent with transform, the transform\n       * of parent should not be considered when setting transform\n       * of clipPath. So we need to transform back from parent's\n       * transform, which is done by multiplying parent's inverse\n       * transform.\n       */\n      // Store old transform\n      var transform = Array.prototype.slice.call(clipPath.transform); // Transform back from parent, and brush path\n\n      matrix.mul(clipPath.transform, clipPath.parent.invTransform, clipPath.transform);\n      svgProxy.brush(clipPath); // Set back transform of clipPath\n\n      clipPath.transform = transform;\n    } else {\n      svgProxy.brush(clipPath);\n    }\n\n    var pathEl = this.getSvgElement(clipPath);\n    /**\n     * Use `cloneNode()` here to appendChild to multiple parents,\n     * which may happend when Text and other shapes are using the same\n     * clipPath. Since Text will create an extra clipPath DOM due to\n     * different transform rules.\n     */\n\n    clipPathEl.appendChild(pathEl.cloneNode());\n    parentEl.setAttribute('clip-path', 'url(#' + id + ')');\n\n    if (clipPaths.length > 1) {\n      // Make the other clipPaths recursively\n      this.updateDom(clipPathEl, clipPaths.slice(1), isText);\n    }\n  } else {\n    // No clipPath\n    if (parentEl) {\n      parentEl.setAttribute('clip-path', 'none');\n    }\n  }\n};\n/**\n * Mark a single clipPath to be used\n *\n * @param {Displayable} displayable displayable element\n */\n\n\nClippathManager.prototype.markUsed = function (displayable) {\n  var that = this;\n\n  if (displayable.__clipPaths && displayable.__clipPaths.length > 0) {\n    zrUtil.each(displayable.__clipPaths, function (clipPath) {\n      if (clipPath._dom) {\n        Definable.prototype.markUsed.call(that, clipPath._dom);\n      }\n\n      if (clipPath._textDom) {\n        Definable.prototype.markUsed.call(that, clipPath._textDom);\n      }\n    });\n  }\n};\n\nvar _default = ClippathManager;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/svg/helper/ClippathManager.js\n// module id = 626\n// module chunks = 0 1","var Definable = require(\"./Definable\");\n\nvar zrUtil = require(\"../../core/util\");\n\nvar zrLog = require(\"../../core/log\");\n\n/**\n * @file Manages SVG gradient elements.\n * @author Zhang Wenli\n */\n\n/**\n * Manages SVG gradient elements.\n *\n * @class\n * @extends Definable\n * @param   {SVGElement} svgRoot root of SVG document\n */\nfunction GradientManager(svgRoot) {\n  Definable.call(this, svgRoot, ['linearGradient', 'radialGradient'], '__gradient_in_use__');\n}\n\nzrUtil.inherits(GradientManager, Definable);\n/**\n * Create new gradient DOM for fill or stroke if not exist,\n * but will not update gradient if exists.\n *\n * @param {SvgElement}  svgElement   SVG element to paint\n * @param {Displayable} displayable  zrender displayable element\n */\n\nGradientManager.prototype.addWithoutUpdate = function (svgElement, displayable) {\n  if (displayable && displayable.style) {\n    var that = this;\n    zrUtil.each(['fill', 'stroke'], function (fillOrStroke) {\n      if (displayable.style[fillOrStroke] && (displayable.style[fillOrStroke].type === 'linear' || displayable.style[fillOrStroke].type === 'radial')) {\n        var gradient = displayable.style[fillOrStroke];\n        var defs = that.getDefs(true); // Create dom in <defs> if not exists\n\n        var dom;\n\n        if (gradient._dom) {\n          // Gradient exists\n          dom = gradient._dom;\n\n          if (!defs.contains(gradient._dom)) {\n            // _dom is no longer in defs, recreate\n            that.addDom(dom);\n          }\n        } else {\n          // New dom\n          dom = that.add(gradient);\n        }\n\n        that.markUsed(displayable);\n        var id = dom.getAttribute('id');\n        svgElement.setAttribute(fillOrStroke, 'url(#' + id + ')');\n      }\n    });\n  }\n};\n/**\n * Add a new gradient tag in <defs>\n *\n * @param   {Gradient} gradient zr gradient instance\n * @return {SVGLinearGradientElement | SVGRadialGradientElement}\n *                            created DOM\n */\n\n\nGradientManager.prototype.add = function (gradient) {\n  var dom;\n\n  if (gradient.type === 'linear') {\n    dom = this.createElement('linearGradient');\n  } else if (gradient.type === 'radial') {\n    dom = this.createElement('radialGradient');\n  } else {\n    zrLog('Illegal gradient type.');\n    return null;\n  } // Set dom id with gradient id, since each gradient instance\n  // will have no more than one dom element.\n  // id may exists before for those dirty elements, in which case\n  // id should remain the same, and other attributes should be\n  // updated.\n\n\n  gradient.id = gradient.id || this.nextId++;\n  dom.setAttribute('id', 'zr-gradient-' + gradient.id);\n  this.updateDom(gradient, dom);\n  this.addDom(dom);\n  return dom;\n};\n/**\n * Update gradient.\n *\n * @param {Gradient} gradient zr gradient instance\n */\n\n\nGradientManager.prototype.update = function (gradient) {\n  var that = this;\n  Definable.prototype.update.call(this, gradient, function () {\n    var type = gradient.type;\n    var tagName = gradient._dom.tagName;\n\n    if (type === 'linear' && tagName === 'linearGradient' || type === 'radial' && tagName === 'radialGradient') {\n      // Gradient type is not changed, update gradient\n      that.updateDom(gradient, gradient._dom);\n    } else {\n      // Remove and re-create if type is changed\n      that.removeDom(gradient);\n      that.add(gradient);\n    }\n  });\n};\n/**\n * Update gradient dom\n *\n * @param {Gradient} gradient zr gradient instance\n * @param {SVGLinearGradientElement | SVGRadialGradientElement} dom\n *                            DOM to update\n */\n\n\nGradientManager.prototype.updateDom = function (gradient, dom) {\n  if (gradient.type === 'linear') {\n    dom.setAttribute('x1', gradient.x);\n    dom.setAttribute('y1', gradient.y);\n    dom.setAttribute('x2', gradient.x2);\n    dom.setAttribute('y2', gradient.y2);\n  } else if (gradient.type === 'radial') {\n    dom.setAttribute('cx', gradient.x);\n    dom.setAttribute('cy', gradient.y);\n    dom.setAttribute('r', gradient.r);\n  } else {\n    zrLog('Illegal gradient type.');\n    return;\n  }\n\n  if (gradient.global) {\n    // x1, x2, y1, y2 in range of 0 to canvas width or height\n    dom.setAttribute('gradientUnits', 'userSpaceOnUse');\n  } else {\n    // x1, x2, y1, y2 in range of 0 to 1\n    dom.setAttribute('gradientUnits', 'objectBoundingBox');\n  } // Remove color stops if exists\n\n\n  dom.innerHTML = ''; // Add color stops\n\n  var colors = gradient.colorStops;\n\n  for (var i = 0, len = colors.length; i < len; ++i) {\n    var stop = this.createElement('stop');\n    stop.setAttribute('offset', colors[i].offset * 100 + '%');\n    stop.setAttribute('stop-color', colors[i].color);\n    dom.appendChild(stop);\n  } // Store dom element in gradient, to avoid creating multiple\n  // dom instances for the same gradient element\n\n\n  gradient._dom = dom;\n};\n/**\n * Mark a single gradient to be used\n *\n * @param {Displayable} displayable displayable element\n */\n\n\nGradientManager.prototype.markUsed = function (displayable) {\n  if (displayable.style) {\n    var gradient = displayable.style.fill;\n\n    if (gradient && gradient._dom) {\n      Definable.prototype.markUsed.call(this, gradient._dom);\n    }\n\n    gradient = displayable.style.stroke;\n\n    if (gradient && gradient._dom) {\n      Definable.prototype.markUsed.call(this, gradient._dom);\n    }\n  }\n};\n\nvar _default = GradientManager;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/svg/helper/GradientManager.js\n// module id = 627\n// module chunks = 0 1","require(\"./graphic\");\n\nvar _zrender = require(\"../zrender\");\n\nvar registerPainter = _zrender.registerPainter;\n\nvar Painter = require(\"./Painter\");\n\nregisterPainter('svg', Painter);\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/svg/svg.js\n// module id = 628\n// module chunks = 0 1","var PathProxy = require(\"../core/PathProxy\");\n\nvar _vector = require(\"../core/vector\");\n\nvar v2ApplyTransform = _vector.applyTransform;\nvar CMD = PathProxy.CMD;\nvar points = [[], [], []];\nvar mathSqrt = Math.sqrt;\nvar mathAtan2 = Math.atan2;\n\nfunction _default(path, m) {\n  var data = path.data;\n  var cmd;\n  var nPoint;\n  var i;\n  var j;\n  var k;\n  var p;\n  var M = CMD.M;\n  var C = CMD.C;\n  var L = CMD.L;\n  var R = CMD.R;\n  var A = CMD.A;\n  var Q = CMD.Q;\n\n  for (i = 0, j = 0; i < data.length;) {\n    cmd = data[i++];\n    j = i;\n    nPoint = 0;\n\n    switch (cmd) {\n      case M:\n        nPoint = 1;\n        break;\n\n      case L:\n        nPoint = 1;\n        break;\n\n      case C:\n        nPoint = 3;\n        break;\n\n      case Q:\n        nPoint = 2;\n        break;\n\n      case A:\n        var x = m[4];\n        var y = m[5];\n        var sx = mathSqrt(m[0] * m[0] + m[1] * m[1]);\n        var sy = mathSqrt(m[2] * m[2] + m[3] * m[3]);\n        var angle = mathAtan2(-m[1] / sy, m[0] / sx); // cx\n\n        data[i] *= sx;\n        data[i++] += x; // cy\n\n        data[i] *= sy;\n        data[i++] += y; // Scale rx and ry\n        // FIXME Assume psi is 0 here\n\n        data[i++] *= sx;\n        data[i++] *= sy; // Start angle\n\n        data[i++] += angle; // end angle\n\n        data[i++] += angle; // FIXME psi\n\n        i += 2;\n        j = i;\n        break;\n\n      case R:\n        // x0, y0\n        p[0] = data[i++];\n        p[1] = data[i++];\n        v2ApplyTransform(p, p, m);\n        data[j++] = p[0];\n        data[j++] = p[1]; // x1, y1\n\n        p[0] += data[i++];\n        p[1] += data[i++];\n        v2ApplyTransform(p, p, m);\n        data[j++] = p[0];\n        data[j++] = p[1];\n    }\n\n    for (k = 0; k < nPoint; k++) {\n      var p = points[k];\n      p[0] = data[i++];\n      p[1] = data[i++];\n      v2ApplyTransform(p, p, m); // Write back\n\n      data[j++] = p[0];\n      data[j++] = p[1];\n    }\n  }\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/tool/transformPath.js\n// module id = 629\n// module chunks = 0 1","var zrLog = require(\"../core/log\");\n\nvar vmlCore = require(\"./core\");\n\nvar _util = require(\"../core/util\");\n\nvar each = _util.each;\n\n/**\n * VML Painter.\n *\n * @module zrender/vml/Painter\n */\nfunction parseInt10(val) {\n  return parseInt(val, 10);\n}\n/**\n * @alias module:zrender/vml/Painter\n */\n\n\nfunction VMLPainter(root, storage) {\n  vmlCore.initVML();\n  this.root = root;\n  this.storage = storage;\n  var vmlViewport = document.createElement('div');\n  var vmlRoot = document.createElement('div');\n  vmlViewport.style.cssText = 'display:inline-block;overflow:hidden;position:relative;width:300px;height:150px;';\n  vmlRoot.style.cssText = 'position:absolute;left:0;top:0;';\n  root.appendChild(vmlViewport);\n  this._vmlRoot = vmlRoot;\n  this._vmlViewport = vmlViewport;\n  this.resize(); // Modify storage\n\n  var oldDelFromStorage = storage.delFromStorage;\n  var oldAddToStorage = storage.addToStorage;\n\n  storage.delFromStorage = function (el) {\n    oldDelFromStorage.call(storage, el);\n\n    if (el) {\n      el.onRemove && el.onRemove(vmlRoot);\n    }\n  };\n\n  storage.addToStorage = function (el) {\n    // Displayable already has a vml node\n    el.onAdd && el.onAdd(vmlRoot);\n    oldAddToStorage.call(storage, el);\n  };\n\n  this._firstPaint = true;\n}\n\nVMLPainter.prototype = {\n  constructor: VMLPainter,\n  getType: function () {\n    return 'vml';\n  },\n\n  /**\n   * @return {HTMLDivElement}\n   */\n  getViewportRoot: function () {\n    return this._vmlViewport;\n  },\n  getViewportRootOffset: function () {\n    var viewportRoot = this.getViewportRoot();\n\n    if (viewportRoot) {\n      return {\n        offsetLeft: viewportRoot.offsetLeft || 0,\n        offsetTop: viewportRoot.offsetTop || 0\n      };\n    }\n  },\n\n  /**\n   * 刷新\n   */\n  refresh: function () {\n    var list = this.storage.getDisplayList(true, true);\n\n    this._paintList(list);\n  },\n  _paintList: function (list) {\n    var vmlRoot = this._vmlRoot;\n\n    for (var i = 0; i < list.length; i++) {\n      var el = list[i];\n\n      if (el.invisible || el.ignore) {\n        if (!el.__alreadyNotVisible) {\n          el.onRemove(vmlRoot);\n        } // Set as already invisible\n\n\n        el.__alreadyNotVisible = true;\n      } else {\n        if (el.__alreadyNotVisible) {\n          el.onAdd(vmlRoot);\n        }\n\n        el.__alreadyNotVisible = false;\n\n        if (el.__dirty) {\n          el.beforeBrush && el.beforeBrush();\n          (el.brushVML || el.brush).call(el, vmlRoot);\n          el.afterBrush && el.afterBrush();\n        }\n      }\n\n      el.__dirty = false;\n    }\n\n    if (this._firstPaint) {\n      // Detached from document at first time\n      // to avoid page refreshing too many times\n      // FIXME 如果每次都先 removeChild 可能会导致一些填充和描边的效果改变\n      this._vmlViewport.appendChild(vmlRoot);\n\n      this._firstPaint = false;\n    }\n  },\n  resize: function (width, height) {\n    var width = width == null ? this._getWidth() : width;\n    var height = height == null ? this._getHeight() : height;\n\n    if (this._width != width || this._height != height) {\n      this._width = width;\n      this._height = height;\n      var vmlViewportStyle = this._vmlViewport.style;\n      vmlViewportStyle.width = width + 'px';\n      vmlViewportStyle.height = height + 'px';\n    }\n  },\n  dispose: function () {\n    this.root.innerHTML = '';\n    this._vmlRoot = this._vmlViewport = this.storage = null;\n  },\n  getWidth: function () {\n    return this._width;\n  },\n  getHeight: function () {\n    return this._height;\n  },\n  clear: function () {\n    if (this._vmlViewport) {\n      this.root.removeChild(this._vmlViewport);\n    }\n  },\n  _getWidth: function () {\n    var root = this.root;\n    var stl = root.currentStyle;\n    return (root.clientWidth || parseInt10(stl.width)) - parseInt10(stl.paddingLeft) - parseInt10(stl.paddingRight) | 0;\n  },\n  _getHeight: function () {\n    var root = this.root;\n    var stl = root.currentStyle;\n    return (root.clientHeight || parseInt10(stl.height)) - parseInt10(stl.paddingTop) - parseInt10(stl.paddingBottom) | 0;\n  }\n}; // Not supported methods\n\nfunction createMethodNotSupport(method) {\n  return function () {\n    zrLog('In IE8.0 VML mode painter not support method \"' + method + '\"');\n  };\n} // Unsupported methods\n\n\neach(['getLayer', 'insertLayer', 'eachLayer', 'eachBuiltinLayer', 'eachOtherLayer', 'getLayers', 'modLayer', 'delLayer', 'clearLayer', 'toDataURL', 'pathToImage'], function (name) {\n  VMLPainter.prototype[name] = createMethodNotSupport(name);\n});\nvar _default = VMLPainter;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/vml/Painter.js\n// module id = 630\n// module chunks = 0 1","var env = require(\"../core/env\");\n\nvar _vector = require(\"../core/vector\");\n\nvar applyTransform = _vector.applyTransform;\n\nvar BoundingRect = require(\"../core/BoundingRect\");\n\nvar colorTool = require(\"../tool/color\");\n\nvar textContain = require(\"../contain/text\");\n\nvar textHelper = require(\"../graphic/helper/text\");\n\nvar RectText = require(\"../graphic/mixin/RectText\");\n\nvar Displayable = require(\"../graphic/Displayable\");\n\nvar ZImage = require(\"../graphic/Image\");\n\nvar Text = require(\"../graphic/Text\");\n\nvar Path = require(\"../graphic/Path\");\n\nvar PathProxy = require(\"../core/PathProxy\");\n\nvar Gradient = require(\"../graphic/Gradient\");\n\nvar vmlCore = require(\"./core\");\n\n// http://www.w3.org/TR/NOTE-VML\n// TODO Use proxy like svg instead of overwrite brush methods\nvar CMD = PathProxy.CMD;\nvar round = Math.round;\nvar sqrt = Math.sqrt;\nvar abs = Math.abs;\nvar cos = Math.cos;\nvar sin = Math.sin;\nvar mathMax = Math.max;\n\nif (!env.canvasSupported) {\n  var comma = ',';\n  var imageTransformPrefix = 'progid:DXImageTransform.Microsoft';\n  var Z = 21600;\n  var Z2 = Z / 2;\n  var ZLEVEL_BASE = 100000;\n  var Z_BASE = 1000;\n\n  var initRootElStyle = function (el) {\n    el.style.cssText = 'position:absolute;left:0;top:0;width:1px;height:1px;';\n    el.coordsize = Z + ',' + Z;\n    el.coordorigin = '0,0';\n  };\n\n  var encodeHtmlAttribute = function (s) {\n    return String(s).replace(/&/g, '&amp;').replace(/\"/g, '&quot;');\n  };\n\n  var rgb2Str = function (r, g, b) {\n    return 'rgb(' + [r, g, b].join(',') + ')';\n  };\n\n  var append = function (parent, child) {\n    if (child && parent && child.parentNode !== parent) {\n      parent.appendChild(child);\n    }\n  };\n\n  var remove = function (parent, child) {\n    if (child && parent && child.parentNode === parent) {\n      parent.removeChild(child);\n    }\n  };\n\n  var getZIndex = function (zlevel, z, z2) {\n    // z 的取值范围为 [0, 1000]\n    return (parseFloat(zlevel) || 0) * ZLEVEL_BASE + (parseFloat(z) || 0) * Z_BASE + z2;\n  };\n\n  var parsePercent = function (value, maxValue) {\n    if (typeof value === 'string') {\n      if (value.lastIndexOf('%') >= 0) {\n        return parseFloat(value) / 100 * maxValue;\n      }\n\n      return parseFloat(value);\n    }\n\n    return value;\n  };\n  /***************************************************\n   * PATH\n   **************************************************/\n\n\n  var setColorAndOpacity = function (el, color, opacity) {\n    var colorArr = colorTool.parse(color);\n    opacity = +opacity;\n\n    if (isNaN(opacity)) {\n      opacity = 1;\n    }\n\n    if (colorArr) {\n      el.color = rgb2Str(colorArr[0], colorArr[1], colorArr[2]);\n      el.opacity = opacity * colorArr[3];\n    }\n  };\n\n  var getColorAndAlpha = function (color) {\n    var colorArr = colorTool.parse(color);\n    return [rgb2Str(colorArr[0], colorArr[1], colorArr[2]), colorArr[3]];\n  };\n\n  var updateFillNode = function (el, style, zrEl) {\n    // TODO pattern\n    var fill = style.fill;\n\n    if (fill != null) {\n      // Modified from excanvas\n      if (fill instanceof Gradient) {\n        var gradientType;\n        var angle = 0;\n        var focus = [0, 0]; // additional offset\n\n        var shift = 0; // scale factor for offset\n\n        var expansion = 1;\n        var rect = zrEl.getBoundingRect();\n        var rectWidth = rect.width;\n        var rectHeight = rect.height;\n\n        if (fill.type === 'linear') {\n          gradientType = 'gradient';\n          var transform = zrEl.transform;\n          var p0 = [fill.x * rectWidth, fill.y * rectHeight];\n          var p1 = [fill.x2 * rectWidth, fill.y2 * rectHeight];\n\n          if (transform) {\n            applyTransform(p0, p0, transform);\n            applyTransform(p1, p1, transform);\n          }\n\n          var dx = p1[0] - p0[0];\n          var dy = p1[1] - p0[1];\n          angle = Math.atan2(dx, dy) * 180 / Math.PI; // The angle should be a non-negative number.\n\n          if (angle < 0) {\n            angle += 360;\n          } // Very small angles produce an unexpected result because they are\n          // converted to a scientific notation string.\n\n\n          if (angle < 1e-6) {\n            angle = 0;\n          }\n        } else {\n          gradientType = 'gradientradial';\n          var p0 = [fill.x * rectWidth, fill.y * rectHeight];\n          var transform = zrEl.transform;\n          var scale = zrEl.scale;\n          var width = rectWidth;\n          var height = rectHeight;\n          focus = [// Percent in bounding rect\n          (p0[0] - rect.x) / width, (p0[1] - rect.y) / height];\n\n          if (transform) {\n            applyTransform(p0, p0, transform);\n          }\n\n          width /= scale[0] * Z;\n          height /= scale[1] * Z;\n          var dimension = mathMax(width, height);\n          shift = 2 * 0 / dimension;\n          expansion = 2 * fill.r / dimension - shift;\n        } // We need to sort the color stops in ascending order by offset,\n        // otherwise IE won't interpret it correctly.\n\n\n        var stops = fill.colorStops.slice();\n        stops.sort(function (cs1, cs2) {\n          return cs1.offset - cs2.offset;\n        });\n        var length = stops.length; // Color and alpha list of first and last stop\n\n        var colorAndAlphaList = [];\n        var colors = [];\n\n        for (var i = 0; i < length; i++) {\n          var stop = stops[i];\n          var colorAndAlpha = getColorAndAlpha(stop.color);\n          colors.push(stop.offset * expansion + shift + ' ' + colorAndAlpha[0]);\n\n          if (i === 0 || i === length - 1) {\n            colorAndAlphaList.push(colorAndAlpha);\n          }\n        }\n\n        if (length >= 2) {\n          var color1 = colorAndAlphaList[0][0];\n          var color2 = colorAndAlphaList[1][0];\n          var opacity1 = colorAndAlphaList[0][1] * style.opacity;\n          var opacity2 = colorAndAlphaList[1][1] * style.opacity;\n          el.type = gradientType;\n          el.method = 'none';\n          el.focus = '100%';\n          el.angle = angle;\n          el.color = color1;\n          el.color2 = color2;\n          el.colors = colors.join(','); // When colors attribute is used, the meanings of opacity and o:opacity2\n          // are reversed.\n\n          el.opacity = opacity2; // FIXME g_o_:opacity ?\n\n          el.opacity2 = opacity1;\n        }\n\n        if (gradientType === 'radial') {\n          el.focusposition = focus.join(',');\n        }\n      } else {\n        // FIXME Change from Gradient fill to color fill\n        setColorAndOpacity(el, fill, style.opacity);\n      }\n    }\n  };\n\n  var updateStrokeNode = function (el, style) {\n    // if (style.lineJoin != null) {\n    //     el.joinstyle = style.lineJoin;\n    // }\n    // if (style.miterLimit != null) {\n    //     el.miterlimit = style.miterLimit * Z;\n    // }\n    // if (style.lineCap != null) {\n    //     el.endcap = style.lineCap;\n    // }\n    if (style.lineDash != null) {\n      el.dashstyle = style.lineDash.join(' ');\n    }\n\n    if (style.stroke != null && !(style.stroke instanceof Gradient)) {\n      setColorAndOpacity(el, style.stroke, style.opacity);\n    }\n  };\n\n  var updateFillAndStroke = function (vmlEl, type, style, zrEl) {\n    var isFill = type == 'fill';\n    var el = vmlEl.getElementsByTagName(type)[0]; // Stroke must have lineWidth\n\n    if (style[type] != null && style[type] !== 'none' && (isFill || !isFill && style.lineWidth)) {\n      vmlEl[isFill ? 'filled' : 'stroked'] = 'true'; // FIXME Remove before updating, or set `colors` will throw error\n\n      if (style[type] instanceof Gradient) {\n        remove(vmlEl, el);\n      }\n\n      if (!el) {\n        el = vmlCore.createNode(type);\n      }\n\n      isFill ? updateFillNode(el, style, zrEl) : updateStrokeNode(el, style);\n      append(vmlEl, el);\n    } else {\n      vmlEl[isFill ? 'filled' : 'stroked'] = 'false';\n      remove(vmlEl, el);\n    }\n  };\n\n  var points = [[], [], []];\n\n  var pathDataToString = function (path, m) {\n    var M = CMD.M;\n    var C = CMD.C;\n    var L = CMD.L;\n    var A = CMD.A;\n    var Q = CMD.Q;\n    var str = [];\n    var nPoint;\n    var cmdStr;\n    var cmd;\n    var i;\n    var xi;\n    var yi;\n    var data = path.data;\n    var dataLength = path.len();\n\n    for (i = 0; i < dataLength;) {\n      cmd = data[i++];\n      cmdStr = '';\n      nPoint = 0;\n\n      switch (cmd) {\n        case M:\n          cmdStr = ' m ';\n          nPoint = 1;\n          xi = data[i++];\n          yi = data[i++];\n          points[0][0] = xi;\n          points[0][1] = yi;\n          break;\n\n        case L:\n          cmdStr = ' l ';\n          nPoint = 1;\n          xi = data[i++];\n          yi = data[i++];\n          points[0][0] = xi;\n          points[0][1] = yi;\n          break;\n\n        case Q:\n        case C:\n          cmdStr = ' c ';\n          nPoint = 3;\n          var x1 = data[i++];\n          var y1 = data[i++];\n          var x2 = data[i++];\n          var y2 = data[i++];\n          var x3;\n          var y3;\n\n          if (cmd === Q) {\n            // Convert quadratic to cubic using degree elevation\n            x3 = x2;\n            y3 = y2;\n            x2 = (x2 + 2 * x1) / 3;\n            y2 = (y2 + 2 * y1) / 3;\n            x1 = (xi + 2 * x1) / 3;\n            y1 = (yi + 2 * y1) / 3;\n          } else {\n            x3 = data[i++];\n            y3 = data[i++];\n          }\n\n          points[0][0] = x1;\n          points[0][1] = y1;\n          points[1][0] = x2;\n          points[1][1] = y2;\n          points[2][0] = x3;\n          points[2][1] = y3;\n          xi = x3;\n          yi = y3;\n          break;\n\n        case A:\n          var x = 0;\n          var y = 0;\n          var sx = 1;\n          var sy = 1;\n          var angle = 0;\n\n          if (m) {\n            // Extract SRT from matrix\n            x = m[4];\n            y = m[5];\n            sx = sqrt(m[0] * m[0] + m[1] * m[1]);\n            sy = sqrt(m[2] * m[2] + m[3] * m[3]);\n            angle = Math.atan2(-m[1] / sy, m[0] / sx);\n          }\n\n          var cx = data[i++];\n          var cy = data[i++];\n          var rx = data[i++];\n          var ry = data[i++];\n          var startAngle = data[i++] + angle;\n          var endAngle = data[i++] + startAngle + angle; // FIXME\n          // var psi = data[i++];\n\n          i++;\n          var clockwise = data[i++];\n          var x0 = cx + cos(startAngle) * rx;\n          var y0 = cy + sin(startAngle) * ry;\n          var x1 = cx + cos(endAngle) * rx;\n          var y1 = cy + sin(endAngle) * ry;\n          var type = clockwise ? ' wa ' : ' at ';\n\n          if (Math.abs(x0 - x1) < 1e-4) {\n            // IE won't render arches drawn counter clockwise if x0 == x1.\n            if (Math.abs(endAngle - startAngle) > 1e-2) {\n              // Offset x0 by 1/80 of a pixel. Use something\n              // that can be represented in binary\n              if (clockwise) {\n                x0 += 270 / Z;\n              }\n            } else {\n              // Avoid case draw full circle\n              if (Math.abs(y0 - cy) < 1e-4) {\n                if (clockwise && x0 < cx || !clockwise && x0 > cx) {\n                  y1 -= 270 / Z;\n                } else {\n                  y1 += 270 / Z;\n                }\n              } else if (clockwise && y0 < cy || !clockwise && y0 > cy) {\n                x1 += 270 / Z;\n              } else {\n                x1 -= 270 / Z;\n              }\n            }\n          }\n\n          str.push(type, round(((cx - rx) * sx + x) * Z - Z2), comma, round(((cy - ry) * sy + y) * Z - Z2), comma, round(((cx + rx) * sx + x) * Z - Z2), comma, round(((cy + ry) * sy + y) * Z - Z2), comma, round((x0 * sx + x) * Z - Z2), comma, round((y0 * sy + y) * Z - Z2), comma, round((x1 * sx + x) * Z - Z2), comma, round((y1 * sy + y) * Z - Z2));\n          xi = x1;\n          yi = y1;\n          break;\n\n        case CMD.R:\n          var p0 = points[0];\n          var p1 = points[1]; // x0, y0\n\n          p0[0] = data[i++];\n          p0[1] = data[i++]; // x1, y1\n\n          p1[0] = p0[0] + data[i++];\n          p1[1] = p0[1] + data[i++];\n\n          if (m) {\n            applyTransform(p0, p0, m);\n            applyTransform(p1, p1, m);\n          }\n\n          p0[0] = round(p0[0] * Z - Z2);\n          p1[0] = round(p1[0] * Z - Z2);\n          p0[1] = round(p0[1] * Z - Z2);\n          p1[1] = round(p1[1] * Z - Z2);\n          str.push( // x0, y0\n          ' m ', p0[0], comma, p0[1], // x1, y0\n          ' l ', p1[0], comma, p0[1], // x1, y1\n          ' l ', p1[0], comma, p1[1], // x0, y1\n          ' l ', p0[0], comma, p1[1]);\n          break;\n\n        case CMD.Z:\n          // FIXME Update xi, yi\n          str.push(' x ');\n      }\n\n      if (nPoint > 0) {\n        str.push(cmdStr);\n\n        for (var k = 0; k < nPoint; k++) {\n          var p = points[k];\n          m && applyTransform(p, p, m); // 不 round 会非常慢\n\n          str.push(round(p[0] * Z - Z2), comma, round(p[1] * Z - Z2), k < nPoint - 1 ? comma : '');\n        }\n      }\n    }\n\n    return str.join('');\n  }; // Rewrite the original path method\n\n\n  Path.prototype.brushVML = function (vmlRoot) {\n    var style = this.style;\n    var vmlEl = this._vmlEl;\n\n    if (!vmlEl) {\n      vmlEl = vmlCore.createNode('shape');\n      initRootElStyle(vmlEl);\n      this._vmlEl = vmlEl;\n    }\n\n    updateFillAndStroke(vmlEl, 'fill', style, this);\n    updateFillAndStroke(vmlEl, 'stroke', style, this);\n    var m = this.transform;\n    var needTransform = m != null;\n    var strokeEl = vmlEl.getElementsByTagName('stroke')[0];\n\n    if (strokeEl) {\n      var lineWidth = style.lineWidth; // Get the line scale.\n      // Determinant of this.m_ means how much the area is enlarged by the\n      // transformation. So its square root can be used as a scale factor\n      // for width.\n\n      if (needTransform && !style.strokeNoScale) {\n        var det = m[0] * m[3] - m[1] * m[2];\n        lineWidth *= sqrt(abs(det));\n      }\n\n      strokeEl.weight = lineWidth + 'px';\n    }\n\n    var path = this.path || (this.path = new PathProxy());\n\n    if (this.__dirtyPath) {\n      path.beginPath();\n      this.buildPath(path, this.shape);\n      path.toStatic();\n      this.__dirtyPath = false;\n    }\n\n    vmlEl.path = pathDataToString(path, this.transform);\n    vmlEl.style.zIndex = getZIndex(this.zlevel, this.z, this.z2); // Append to root\n\n    append(vmlRoot, vmlEl); // Text\n\n    if (style.text != null) {\n      this.drawRectText(vmlRoot, this.getBoundingRect());\n    } else {\n      this.removeRectText(vmlRoot);\n    }\n  };\n\n  Path.prototype.onRemove = function (vmlRoot) {\n    remove(vmlRoot, this._vmlEl);\n    this.removeRectText(vmlRoot);\n  };\n\n  Path.prototype.onAdd = function (vmlRoot) {\n    append(vmlRoot, this._vmlEl);\n    this.appendRectText(vmlRoot);\n  };\n  /***************************************************\n   * IMAGE\n   **************************************************/\n\n\n  var isImage = function (img) {\n    // FIXME img instanceof Image 如果 img 是一个字符串的时候，IE8 下会报错\n    return typeof img === 'object' && img.tagName && img.tagName.toUpperCase() === 'IMG'; // return img instanceof Image;\n  }; // Rewrite the original path method\n\n\n  ZImage.prototype.brushVML = function (vmlRoot) {\n    var style = this.style;\n    var image = style.image; // Image original width, height\n\n    var ow;\n    var oh;\n\n    if (isImage(image)) {\n      var src = image.src;\n\n      if (src === this._imageSrc) {\n        ow = this._imageWidth;\n        oh = this._imageHeight;\n      } else {\n        var imageRuntimeStyle = image.runtimeStyle;\n        var oldRuntimeWidth = imageRuntimeStyle.width;\n        var oldRuntimeHeight = imageRuntimeStyle.height;\n        imageRuntimeStyle.width = 'auto';\n        imageRuntimeStyle.height = 'auto'; // get the original size\n\n        ow = image.width;\n        oh = image.height; // and remove overides\n\n        imageRuntimeStyle.width = oldRuntimeWidth;\n        imageRuntimeStyle.height = oldRuntimeHeight; // Caching image original width, height and src\n\n        this._imageSrc = src;\n        this._imageWidth = ow;\n        this._imageHeight = oh;\n      }\n\n      image = src;\n    } else {\n      if (image === this._imageSrc) {\n        ow = this._imageWidth;\n        oh = this._imageHeight;\n      }\n    }\n\n    if (!image) {\n      return;\n    }\n\n    var x = style.x || 0;\n    var y = style.y || 0;\n    var dw = style.width;\n    var dh = style.height;\n    var sw = style.sWidth;\n    var sh = style.sHeight;\n    var sx = style.sx || 0;\n    var sy = style.sy || 0;\n    var hasCrop = sw && sh;\n    var vmlEl = this._vmlEl;\n\n    if (!vmlEl) {\n      // FIXME 使用 group 在 left, top 都不是 0 的时候就无法显示了。\n      // vmlEl = vmlCore.createNode('group');\n      vmlEl = vmlCore.doc.createElement('div');\n      initRootElStyle(vmlEl);\n      this._vmlEl = vmlEl;\n    }\n\n    var vmlElStyle = vmlEl.style;\n    var hasRotation = false;\n    var m;\n    var scaleX = 1;\n    var scaleY = 1;\n\n    if (this.transform) {\n      m = this.transform;\n      scaleX = sqrt(m[0] * m[0] + m[1] * m[1]);\n      scaleY = sqrt(m[2] * m[2] + m[3] * m[3]);\n      hasRotation = m[1] || m[2];\n    }\n\n    if (hasRotation) {\n      // If filters are necessary (rotation exists), create them\n      // filters are bog-slow, so only create them if abbsolutely necessary\n      // The following check doesn't account for skews (which don't exist\n      // in the canvas spec (yet) anyway.\n      // From excanvas\n      var p0 = [x, y];\n      var p1 = [x + dw, y];\n      var p2 = [x, y + dh];\n      var p3 = [x + dw, y + dh];\n      applyTransform(p0, p0, m);\n      applyTransform(p1, p1, m);\n      applyTransform(p2, p2, m);\n      applyTransform(p3, p3, m);\n      var maxX = mathMax(p0[0], p1[0], p2[0], p3[0]);\n      var maxY = mathMax(p0[1], p1[1], p2[1], p3[1]);\n      var transformFilter = [];\n      transformFilter.push('M11=', m[0] / scaleX, comma, 'M12=', m[2] / scaleY, comma, 'M21=', m[1] / scaleX, comma, 'M22=', m[3] / scaleY, comma, 'Dx=', round(x * scaleX + m[4]), comma, 'Dy=', round(y * scaleY + m[5]));\n      vmlElStyle.padding = '0 ' + round(maxX) + 'px ' + round(maxY) + 'px 0'; // FIXME DXImageTransform 在 IE11 的兼容模式下不起作用\n\n      vmlElStyle.filter = imageTransformPrefix + '.Matrix(' + transformFilter.join('') + ', SizingMethod=clip)';\n    } else {\n      if (m) {\n        x = x * scaleX + m[4];\n        y = y * scaleY + m[5];\n      }\n\n      vmlElStyle.filter = '';\n      vmlElStyle.left = round(x) + 'px';\n      vmlElStyle.top = round(y) + 'px';\n    }\n\n    var imageEl = this._imageEl;\n    var cropEl = this._cropEl;\n\n    if (!imageEl) {\n      imageEl = vmlCore.doc.createElement('div');\n      this._imageEl = imageEl;\n    }\n\n    var imageELStyle = imageEl.style;\n\n    if (hasCrop) {\n      // Needs know image original width and height\n      if (!(ow && oh)) {\n        var tmpImage = new Image();\n        var self = this;\n\n        tmpImage.onload = function () {\n          tmpImage.onload = null;\n          ow = tmpImage.width;\n          oh = tmpImage.height; // Adjust image width and height to fit the ratio destinationSize / sourceSize\n\n          imageELStyle.width = round(scaleX * ow * dw / sw) + 'px';\n          imageELStyle.height = round(scaleY * oh * dh / sh) + 'px'; // Caching image original width, height and src\n\n          self._imageWidth = ow;\n          self._imageHeight = oh;\n          self._imageSrc = image;\n        };\n\n        tmpImage.src = image;\n      } else {\n        imageELStyle.width = round(scaleX * ow * dw / sw) + 'px';\n        imageELStyle.height = round(scaleY * oh * dh / sh) + 'px';\n      }\n\n      if (!cropEl) {\n        cropEl = vmlCore.doc.createElement('div');\n        cropEl.style.overflow = 'hidden';\n        this._cropEl = cropEl;\n      }\n\n      var cropElStyle = cropEl.style;\n      cropElStyle.width = round((dw + sx * dw / sw) * scaleX);\n      cropElStyle.height = round((dh + sy * dh / sh) * scaleY);\n      cropElStyle.filter = imageTransformPrefix + '.Matrix(Dx=' + -sx * dw / sw * scaleX + ',Dy=' + -sy * dh / sh * scaleY + ')';\n\n      if (!cropEl.parentNode) {\n        vmlEl.appendChild(cropEl);\n      }\n\n      if (imageEl.parentNode != cropEl) {\n        cropEl.appendChild(imageEl);\n      }\n    } else {\n      imageELStyle.width = round(scaleX * dw) + 'px';\n      imageELStyle.height = round(scaleY * dh) + 'px';\n      vmlEl.appendChild(imageEl);\n\n      if (cropEl && cropEl.parentNode) {\n        vmlEl.removeChild(cropEl);\n        this._cropEl = null;\n      }\n    }\n\n    var filterStr = '';\n    var alpha = style.opacity;\n\n    if (alpha < 1) {\n      filterStr += '.Alpha(opacity=' + round(alpha * 100) + ') ';\n    }\n\n    filterStr += imageTransformPrefix + '.AlphaImageLoader(src=' + image + ', SizingMethod=scale)';\n    imageELStyle.filter = filterStr;\n    vmlEl.style.zIndex = getZIndex(this.zlevel, this.z, this.z2); // Append to root\n\n    append(vmlRoot, vmlEl); // Text\n\n    if (style.text != null) {\n      this.drawRectText(vmlRoot, this.getBoundingRect());\n    }\n  };\n\n  ZImage.prototype.onRemove = function (vmlRoot) {\n    remove(vmlRoot, this._vmlEl);\n    this._vmlEl = null;\n    this._cropEl = null;\n    this._imageEl = null;\n    this.removeRectText(vmlRoot);\n  };\n\n  ZImage.prototype.onAdd = function (vmlRoot) {\n    append(vmlRoot, this._vmlEl);\n    this.appendRectText(vmlRoot);\n  };\n  /***************************************************\n   * TEXT\n   **************************************************/\n\n\n  var DEFAULT_STYLE_NORMAL = 'normal';\n  var fontStyleCache = {};\n  var fontStyleCacheCount = 0;\n  var MAX_FONT_CACHE_SIZE = 100;\n  var fontEl = document.createElement('div');\n\n  var getFontStyle = function (fontString) {\n    var fontStyle = fontStyleCache[fontString];\n\n    if (!fontStyle) {\n      // Clear cache\n      if (fontStyleCacheCount > MAX_FONT_CACHE_SIZE) {\n        fontStyleCacheCount = 0;\n        fontStyleCache = {};\n      }\n\n      var style = fontEl.style;\n      var fontFamily;\n\n      try {\n        style.font = fontString;\n        fontFamily = style.fontFamily.split(',')[0];\n      } catch (e) {}\n\n      fontStyle = {\n        style: style.fontStyle || DEFAULT_STYLE_NORMAL,\n        variant: style.fontVariant || DEFAULT_STYLE_NORMAL,\n        weight: style.fontWeight || DEFAULT_STYLE_NORMAL,\n        size: parseFloat(style.fontSize || 12) | 0,\n        family: fontFamily || 'Microsoft YaHei'\n      };\n      fontStyleCache[fontString] = fontStyle;\n      fontStyleCacheCount++;\n    }\n\n    return fontStyle;\n  };\n\n  var textMeasureEl; // Overwrite measure text method\n\n  textContain.$override('measureText', function (text, textFont) {\n    var doc = vmlCore.doc;\n\n    if (!textMeasureEl) {\n      textMeasureEl = doc.createElement('div');\n      textMeasureEl.style.cssText = 'position:absolute;top:-20000px;left:0;' + 'padding:0;margin:0;border:none;white-space:pre;';\n      vmlCore.doc.body.appendChild(textMeasureEl);\n    }\n\n    try {\n      textMeasureEl.style.font = textFont;\n    } catch (ex) {// Ignore failures to set to invalid font.\n    }\n\n    textMeasureEl.innerHTML = ''; // Don't use innerHTML or innerText because they allow markup/whitespace.\n\n    textMeasureEl.appendChild(doc.createTextNode(text));\n    return {\n      width: textMeasureEl.offsetWidth\n    };\n  });\n  var tmpRect = new BoundingRect();\n\n  var drawRectText = function (vmlRoot, rect, textRect, fromTextEl) {\n    var style = this.style; // Optimize, avoid normalize every time.\n\n    this.__dirty && textHelper.normalizeTextStyle(style, true);\n    var text = style.text; // Convert to string\n\n    text != null && (text += '');\n\n    if (!text) {\n      return;\n    } // Convert rich text to plain text. Rich text is not supported in\n    // IE8-, but tags in rich text template will be removed.\n\n\n    if (style.rich) {\n      var contentBlock = textContain.parseRichText(text, style);\n      text = [];\n\n      for (var i = 0; i < contentBlock.lines.length; i++) {\n        var tokens = contentBlock.lines[i].tokens;\n        var textLine = [];\n\n        for (var j = 0; j < tokens.length; j++) {\n          textLine.push(tokens[j].text);\n        }\n\n        text.push(textLine.join(''));\n      }\n\n      text = text.join('\\n');\n    }\n\n    var x;\n    var y;\n    var align = style.textAlign;\n    var verticalAlign = style.textVerticalAlign;\n    var fontStyle = getFontStyle(style.font); // FIXME encodeHtmlAttribute ?\n\n    var font = fontStyle.style + ' ' + fontStyle.variant + ' ' + fontStyle.weight + ' ' + fontStyle.size + 'px \"' + fontStyle.family + '\"';\n    textRect = textRect || textContain.getBoundingRect(text, font, align, verticalAlign); // Transform rect to view space\n\n    var m = this.transform; // Ignore transform for text in other element\n\n    if (m && !fromTextEl) {\n      tmpRect.copy(rect);\n      tmpRect.applyTransform(m);\n      rect = tmpRect;\n    }\n\n    if (!fromTextEl) {\n      var textPosition = style.textPosition;\n      var distance = style.textDistance; // Text position represented by coord\n\n      if (textPosition instanceof Array) {\n        x = rect.x + parsePercent(textPosition[0], rect.width);\n        y = rect.y + parsePercent(textPosition[1], rect.height);\n        align = align || 'left';\n      } else {\n        var res = textContain.adjustTextPositionOnRect(textPosition, rect, distance);\n        x = res.x;\n        y = res.y; // Default align and baseline when has textPosition\n\n        align = align || res.textAlign;\n        verticalAlign = verticalAlign || res.textVerticalAlign;\n      }\n    } else {\n      x = rect.x;\n      y = rect.y;\n    }\n\n    x = textContain.adjustTextX(x, textRect.width, align);\n    y = textContain.adjustTextY(y, textRect.height, verticalAlign); // Force baseline 'middle'\n\n    y += textRect.height / 2; // var fontSize = fontStyle.size;\n    // 1.75 is an arbitrary number, as there is no info about the text baseline\n    // switch (baseline) {\n    // case 'hanging':\n    // case 'top':\n    //     y += fontSize / 1.75;\n    //     break;\n    //     case 'middle':\n    //         break;\n    //     default:\n    //     // case null:\n    //     // case 'alphabetic':\n    //     // case 'ideographic':\n    //     // case 'bottom':\n    //         y -= fontSize / 2.25;\n    //         break;\n    // }\n    // switch (align) {\n    //     case 'left':\n    //         break;\n    //     case 'center':\n    //         x -= textRect.width / 2;\n    //         break;\n    //     case 'right':\n    //         x -= textRect.width;\n    //         break;\n    // case 'end':\n    // align = elementStyle.direction == 'ltr' ? 'right' : 'left';\n    // break;\n    // case 'start':\n    // align = elementStyle.direction == 'rtl' ? 'right' : 'left';\n    // break;\n    // default:\n    //     align = 'left';\n    // }\n\n    var createNode = vmlCore.createNode;\n    var textVmlEl = this._textVmlEl;\n    var pathEl;\n    var textPathEl;\n    var skewEl;\n\n    if (!textVmlEl) {\n      textVmlEl = createNode('line');\n      pathEl = createNode('path');\n      textPathEl = createNode('textpath');\n      skewEl = createNode('skew'); // FIXME Why here is not cammel case\n      // Align 'center' seems wrong\n\n      textPathEl.style['v-text-align'] = 'left';\n      initRootElStyle(textVmlEl);\n      pathEl.textpathok = true;\n      textPathEl.on = true;\n      textVmlEl.from = '0 0';\n      textVmlEl.to = '1000 0.05';\n      append(textVmlEl, skewEl);\n      append(textVmlEl, pathEl);\n      append(textVmlEl, textPathEl);\n      this._textVmlEl = textVmlEl;\n    } else {\n      // 这里是在前面 appendChild 保证顺序的前提下\n      skewEl = textVmlEl.firstChild;\n      pathEl = skewEl.nextSibling;\n      textPathEl = pathEl.nextSibling;\n    }\n\n    var coords = [x, y];\n    var textVmlElStyle = textVmlEl.style; // Ignore transform for text in other element\n\n    if (m && fromTextEl) {\n      applyTransform(coords, coords, m);\n      skewEl.on = true;\n      skewEl.matrix = m[0].toFixed(3) + comma + m[2].toFixed(3) + comma + m[1].toFixed(3) + comma + m[3].toFixed(3) + ',0,0'; // Text position\n\n      skewEl.offset = (round(coords[0]) || 0) + ',' + (round(coords[1]) || 0); // Left top point as origin\n\n      skewEl.origin = '0 0';\n      textVmlElStyle.left = '0px';\n      textVmlElStyle.top = '0px';\n    } else {\n      skewEl.on = false;\n      textVmlElStyle.left = round(x) + 'px';\n      textVmlElStyle.top = round(y) + 'px';\n    }\n\n    textPathEl.string = encodeHtmlAttribute(text); // TODO\n\n    try {\n      textPathEl.style.font = font;\n    } // Error font format\n    catch (e) {}\n\n    updateFillAndStroke(textVmlEl, 'fill', {\n      fill: style.textFill,\n      opacity: style.opacity\n    }, this);\n    updateFillAndStroke(textVmlEl, 'stroke', {\n      stroke: style.textStroke,\n      opacity: style.opacity,\n      lineDash: style.lineDash\n    }, this);\n    textVmlEl.style.zIndex = getZIndex(this.zlevel, this.z, this.z2); // Attached to root\n\n    append(vmlRoot, textVmlEl);\n  };\n\n  var removeRectText = function (vmlRoot) {\n    remove(vmlRoot, this._textVmlEl);\n    this._textVmlEl = null;\n  };\n\n  var appendRectText = function (vmlRoot) {\n    append(vmlRoot, this._textVmlEl);\n  };\n\n  var list = [RectText, Displayable, ZImage, Path, Text]; // In case Displayable has been mixed in RectText\n\n  for (var i = 0; i < list.length; i++) {\n    var proto = list[i].prototype;\n    proto.drawRectText = drawRectText;\n    proto.removeRectText = removeRectText;\n    proto.appendRectText = appendRectText;\n  }\n\n  Text.prototype.brushVML = function (vmlRoot) {\n    var style = this.style;\n\n    if (style.text != null) {\n      this.drawRectText(vmlRoot, {\n        x: style.x || 0,\n        y: style.y || 0,\n        width: 0,\n        height: 0\n      }, this.getBoundingRect(), true);\n    } else {\n      this.removeRectText(vmlRoot);\n    }\n  };\n\n  Text.prototype.onRemove = function (vmlRoot) {\n    this.removeRectText(vmlRoot);\n  };\n\n  Text.prototype.onAdd = function (vmlRoot) {\n    this.appendRectText(vmlRoot);\n  };\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/vml/graphic.js\n// module id = 631\n// module chunks = 0 1","require(\"./graphic\");\n\nvar _zrender = require(\"../zrender\");\n\nvar registerPainter = _zrender.registerPainter;\n\nvar Painter = require(\"./Painter\");\n\nregisterPainter('vml', Painter);\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/vml/vml.js\n// module id = 632\n// module chunks = 0 1","<template>\r\n    <div :class=\"className\" :id=\"id\" :style=\"{height:height,width:width}\"></div>\r\n</template>\r\n<script>\r\n    // 引入 ECharts 主模块\r\n    const echarts = require('echarts/lib/echarts');\r\n\r\n    require('echarts/lib/chart/line');\r\n    // 引入提示框和标题组件\r\n    require('echarts/lib/component/tooltip');\r\n    require('echarts/lib/component/title');\r\n    require('echarts/lib/component/legend');\r\n    export default {\r\n      name: 'barPercent',\r\n      props: {\r\n        className: {\r\n          type: String,\r\n          default: 'chart'\r\n        },\r\n        id: {\r\n          type: String,\r\n          default: 'chart'\r\n        },\r\n        width: {\r\n          type: String,\r\n          default: '200px'\r\n        },\r\n        height: {\r\n          type: String,\r\n          default: '200px'\r\n        }\r\n      },\r\n      data() {\r\n        return {};\r\n      },\r\n      mounted() {\r\n        this.initChart();\r\n      },\r\n      methods: {\r\n        initChart() {\r\n          this.chart = echarts.init(document.getElementById(this.id));\r\n\r\n          this.chart.setOption({\r\n            backgroundColor: '#394056',\r\n            title: {\r\n              text: '请求数',\r\n              textStyle: {\r\n                fontWeight: 'normal',\r\n                fontSize: 16,\r\n                color: '#F1F1F3'\r\n              },\r\n              left: '6%'\r\n            },\r\n            tooltip: {\r\n              trigger: 'axis',\r\n              axisPointer: {\r\n                lineStyle: {\r\n                  color: '#57617B'\r\n                }\r\n              }\r\n            },\r\n            legend: {\r\n              icon: 'rect',\r\n              itemWidth: 14,\r\n              itemHeight: 5,\r\n              itemGap: 13,\r\n              data: ['移动', '电信', '联通'],\r\n              right: '4%',\r\n              textStyle: {\r\n                fontSize: 12,\r\n                color: '#F1F1F3'\r\n              }\r\n            },\r\n            grid: {\r\n              left: '3%',\r\n              right: '4%',\r\n              bottom: '3%',\r\n              containLabel: true\r\n            },\r\n            xAxis: [{\r\n              type: 'category',\r\n              boundaryGap: false,\r\n              axisLine: {\r\n                lineStyle: {\r\n                  color: '#57617B'\r\n                }\r\n              },\r\n              data: ['13:00', '13:05', '13:10', '13:15', '13:20', '13:25', '13:30', '13:35', '13:40', '13:45', '13:50', '13:55']\r\n            }],\r\n            yAxis: [{\r\n              type: 'value',\r\n              name: '单位（%）',\r\n              axisTick: {\r\n                show: false\r\n              },\r\n              axisLine: {\r\n                lineStyle: {\r\n                  color: '#57617B'\r\n                }\r\n              },\r\n              axisLabel: {\r\n                margin: 10,\r\n                textStyle: {\r\n                  fontSize: 14\r\n                }\r\n              },\r\n              splitLine: {\r\n                lineStyle: {\r\n                  color: '#57617B'\r\n                }\r\n              }\r\n            }],\r\n            series: [{\r\n              name: '移动',\r\n              type: 'line',\r\n              smooth: true,\r\n              symbol: 'circle',\r\n              symbolSize: 5,\r\n              showSymbol: false,\r\n              lineStyle: {\r\n                normal: {\r\n                  width: 1\r\n                }\r\n              },\r\n              areaStyle: {\r\n                normal: {\r\n                  color: new echarts.graphic.LinearGradient(0, 0, 0, 1, [{\r\n                    offset: 0,\r\n                    color: 'rgba(137, 189, 27, 0.3)'\r\n                  }, {\r\n                    offset: 0.8,\r\n                    color: 'rgba(137, 189, 27, 0)'\r\n                  }], false),\r\n                  shadowColor: 'rgba(0, 0, 0, 0.1)',\r\n                  shadowBlur: 10\r\n                }\r\n              },\r\n              itemStyle: {\r\n                normal: {\r\n                  color: 'rgb(137,189,27)',\r\n                  borderColor: 'rgba(137,189,2,0.27)',\r\n                  borderWidth: 12\r\n\r\n                }\r\n              },\r\n              data: [220, 182, 191, 134, 150, 120, 110, 125, 145, 122, 165, 122]\r\n            }, {\r\n              name: '电信',\r\n              type: 'line',\r\n              smooth: true,\r\n              symbol: 'circle',\r\n              symbolSize: 5,\r\n              showSymbol: false,\r\n              lineStyle: {\r\n                normal: {\r\n                  width: 1\r\n                }\r\n              },\r\n              areaStyle: {\r\n                normal: {\r\n                  color: new echarts.graphic.LinearGradient(0, 0, 0, 1, [{\r\n                    offset: 0,\r\n                    color: 'rgba(0, 136, 212, 0.3)'\r\n                  }, {\r\n                    offset: 0.8,\r\n                    color: 'rgba(0, 136, 212, 0)'\r\n                  }], false),\r\n                  shadowColor: 'rgba(0, 0, 0, 0.1)',\r\n                  shadowBlur: 10\r\n                }\r\n              },\r\n              itemStyle: {\r\n                normal: {\r\n                  color: 'rgb(0,136,212)',\r\n                  borderColor: 'rgba(0,136,212,0.2)',\r\n                  borderWidth: 12\r\n\r\n                }\r\n              },\r\n              data: [120, 110, 125, 145, 122, 165, 122, 220, 182, 191, 134, 150]\r\n            }, {\r\n              name: '联通',\r\n              type: 'line',\r\n              smooth: true,\r\n              symbol: 'circle',\r\n              symbolSize: 5,\r\n              showSymbol: false,\r\n              lineStyle: {\r\n                normal: {\r\n                  width: 1\r\n                }\r\n              },\r\n              areaStyle: {\r\n                normal: {\r\n                  color: new echarts.graphic.LinearGradient(0, 0, 0, 1, [{\r\n                    offset: 0,\r\n                    color: 'rgba(219, 50, 51, 0.3)'\r\n                  }, {\r\n                    offset: 0.8,\r\n                    color: 'rgba(219, 50, 51, 0)'\r\n                  }], false),\r\n                  shadowColor: 'rgba(0, 0, 0, 0.1)',\r\n                  shadowBlur: 10\r\n                }\r\n              },\r\n              itemStyle: {\r\n                normal: {\r\n                  color: 'rgb(219,50,51)',\r\n                  borderColor: 'rgba(219,50,51,0.2)',\r\n                  borderWidth: 12\r\n                }\r\n              },\r\n              data: [220, 182, 125, 145, 122, 191, 134, 150, 120, 110, 165, 122]\r\n            }]\r\n          })\r\n        }\r\n      }\r\n    }\r\n</script>\r\n\n\n\n// WEBPACK FOOTER //\n// lineMarker.vue?0eac2ec8","<template>\r\n  <div class=\"components-container\" style='height:100vh'>\r\n    <div class='chart-container'>\r\n       <lineMarker height='100%' width='100%' ></lineMarker>\r\n    </div>\r\n\r\n  </div>\r\n</template>\r\n<script>\r\n    import lineMarker from 'components/Charts/lineMarker';\r\n\r\n    export default {\r\n      components: { lineMarker }\r\n    };\r\n</script>\r\n\r\n<style scoped>\r\n.chart-container{\r\n    position: relative;\r\n    width: 100%;\r\n    height: 80%;\r\n}\r\n</style>\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// line.vue?4a70f58c","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(true);\n// imports\n\n\n// module\nexports.push([module.id, \".chart-container[data-v-a1ad0344]{position:relative;width:100%;height:80%}\", \"\", {\"version\":3,\"sources\":[\"E:/eagle/Credit-BA-Management/src/views/charts/line.vue\"],\"names\":[],\"mappings\":\"AACA,kCACI,kBAAmB,AACnB,WAAY,AACZ,UAAY,CACf\",\"file\":\"line.vue\",\"sourcesContent\":[\"\\n.chart-container[data-v-a1ad0344]{\\r\\n    position: relative;\\r\\n    width: 100%;\\r\\n    height: 80%;\\n}\\r\\n\"],\"sourceRoot\":\"\"}]);\n\n// exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/css-loader?{\"minimize\":true,\"sourceMap\":true}!./~/vue-loader/lib/style-compiler?{\"vue\":true,\"id\":\"data-v-a1ad0344\",\"scoped\":true,\"hasInlineConfig\":false}!./~/vue-loader/lib/selector.js?type=styles&index=0!./src/views/charts/line.vue\n// module id = 667\n// module chunks = 1","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../node_modules/css-loader/index.js?{\\\"minimize\\\":true,\\\"sourceMap\\\":true}!../../../node_modules/vue-loader/lib/style-compiler/index.js?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-a1ad0344\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./line.vue\");\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar update = require(\"!../../../node_modules/vue-style-loader/lib/addStylesClient.js\")(\"4a6c8b4f\", content, true);\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/extract-text-webpack-plugin/loader.js?{\"omit\":1,\"remove\":true}!./~/vue-style-loader!./~/css-loader?{\"minimize\":true,\"sourceMap\":true}!./~/vue-loader/lib/style-compiler?{\"vue\":true,\"id\":\"data-v-a1ad0344\",\"scoped\":true,\"hasInlineConfig\":false}!./~/vue-loader/lib/selector.js?type=styles&index=0!./src/views/charts/line.vue\n// module id = 702\n// module chunks = 1","var Component = require(\"!../../../node_modules/vue-loader/lib/component-normalizer\")(\n  /* script */\n  require(\"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./lineMarker.vue\"),\n  /* template */\n  require(\"!!../../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-80d48a24\\\"}!../../../node_modules/vue-loader/lib/selector?type=template&index=0!./lineMarker.vue\"),\n  /* styles */\n  null,\n  /* scopeId */\n  null,\n  /* moduleIdentifier (server only) */\n  null\n)\n\nmodule.exports = Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/Charts/lineMarker.vue\n// module id = 708\n// module chunks = 1","module.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('div', {\n    class: _vm.className,\n    style: ({\n      height: _vm.height,\n      width: _vm.width\n    }),\n    attrs: {\n      \"id\": _vm.id\n    }\n  })\n},staticRenderFns: []}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vue-loader/lib/template-compiler?{\"id\":\"data-v-80d48a24\"}!./~/vue-loader/lib/selector.js?type=template&index=0!./src/components/Charts/lineMarker.vue\n// module id = 723\n// module chunks = 1","module.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('div', {\n    staticClass: \"components-container\",\n    staticStyle: {\n      \"height\": \"100vh\"\n    }\n  }, [_c('div', {\n    staticClass: \"chart-container\"\n  }, [_c('lineMarker', {\n    attrs: {\n      \"height\": \"100%\",\n      \"width\": \"100%\"\n    }\n  })], 1)])\n},staticRenderFns: []}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vue-loader/lib/template-compiler?{\"id\":\"data-v-a1ad0344\"}!./~/vue-loader/lib/selector.js?type=template&index=0!./src/views/charts/line.vue\n// module id = 725\n// module chunks = 1"],"sourceRoot":""}
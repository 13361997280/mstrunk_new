{"version":3,"sources":["webpack:///js/6.8a958add9fe2b858b8f0.js","webpack:///./src/views/task/index.vue","webpack:///./src/api/task.js?4378***","webpack:///index.vue?7540","webpack:///./src/views/task/index.vue?85c2","webpack:///./src/views/task/index.vue?bd77","webpack:///./src/views/task/index.vue?1a76"],"names":["webpackJsonp","456","module","exports","__webpack_require__","injectStyle","ssrContext","Component","486","fetchList","query","_fetch","fetch","url","method","fetchUserList","setTaskStatus","id","status","data","addTask","form","getSetting","updateSetting","fetchHistory","Object","defineProperty","value","649","_task","_utils","default","name","list","total","listLoading","listQuery","pageNo","pageSize","taskId","addScoreStart","addScoreEnd","subScoreStart","subScoreEnd","isDuplicate","updateTime","operator","selectOptions","label","users","created","this","getUsers","getList","mounted","filters","statusTextFilter","methods","_this","then","response","success","i","length","push","$notify","title","message","type","duration","_this2","params","key","times","undefined","timeStart","formatDate","Date","timeEnd","encodeURIComponent","join","recordsTotal","handleFilter","clearFilter","handleSizeChange","val","handleCurrentChange","$router","setTask","row","_this3","loading","$message","659","version","sources","names","mappings","file","sourcesContent","sourceRoot","694","content","locals","714","render","_vm","_h","$createElement","_c","_self","staticClass","attrs","inline","model","callback","$$v","expression","_v","span","placeholder","_l","item","range-seprate","directives","rawName","icon","on","click","$event","modifiers","body","tableKey","staticStyle","width","default-sort","prop","order","border","fit","highlight-current-row","align","scopedSlots","_u","fn","scope","_s","addScore","subScore","min-width","show-overflow-tooltip","memo","sortable","_f","size","_e","current-page","page-sizes","page-size","layout","size-change","current-change","staticRenderFns"],"mappings":"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","file":"js/6.8a958add9fe2b858b8f0.js","sourcesContent":["webpackJsonp([6],{\n\n/***/ 456:\n/***/ (function(module, exports, __webpack_require__) {\n\nfunction injectStyle (ssrContext) {\n  __webpack_require__(694)\n}\nvar Component = __webpack_require__(0)(\n  /* script */\n  __webpack_require__(649),\n  /* template */\n  __webpack_require__(714),\n  /* styles */\n  injectStyle,\n  /* scopeId */\n  null,\n  /* moduleIdentifier (server only) */\n  null\n)\n\nmodule.exports = Component.exports\n\n\n/***/ }),\n\n/***/ 486:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.fetchList = fetchList;\nexports.fetchUserList = fetchUserList;\nexports.setTaskStatus = setTaskStatus;\nexports.addTask = addTask;\nexports.getSetting = getSetting;\nexports.updateSetting = updateSetting;\nexports.fetchHistory = fetchHistory;\n\nvar _fetch = __webpack_require__(10);\n\nfunction fetchList(query) {\n    return (0, _fetch.fetch)({\n        url: '/bus/task/list.do?' + query,\n        method: 'get'\n    });\n}\n\nfunction fetchUserList() {\n    return (0, _fetch.fetch)({\n        url: '/sysconfig/getAccounts.do',\n        method: 'get'\n    });\n}\n\nfunction setTaskStatus(id, status) {\n    return (0, _fetch.fetch)({\n        url: '/bus/task/enable.do',\n        method: 'post',\n        data: {\n            id: id,\n            status: status\n        }\n    });\n}\n\nfunction addTask(form) {\n    return (0, _fetch.fetch)({\n        url: '/bus/task/save.do',\n        method: 'post',\n        data: form\n    });\n}\n\nfunction getSetting() {\n    return (0, _fetch.fetch)({\n        url: '/bus/taskset/getConfTaskSet.do',\n        method: 'get'\n    });\n}\n\nfunction updateSetting(form) {\n    return (0, _fetch.fetch)({\n        url: '/bus/taskset/save.do',\n        method: 'post',\n        data: form\n    });\n}\n\nfunction fetchHistory(query) {\n    return (0, _fetch.fetch)({\n        url: '/bus/taskset/getHisTaskSet.do?' + query,\n        method: 'get'\n    });\n}\n\n/***/ }),\n\n/***/ 649:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _task = __webpack_require__(486);\n\nvar _utils = __webpack_require__(87);\n\nexports.default = {\n    name: 'task',\n    data: function data() {\n        return {\n            list: null,\n            total: null,\n            listLoading: true,\n            listQuery: {\n                pageNo: 1,\n                pageSize: 10,\n                taskId: '',\n                addScoreStart: '',\n                addScoreEnd: '',\n                subScoreStart: '',\n                subScoreEnd: '',\n                isDuplicate: '',\n                updateTime: '',\n                operator: '',\n                status: ''\n            },\n            selectOptions: {\n                isDuplicate: [{\n                    value: '',\n                    label: '全部'\n                }, {\n                    value: 'Y',\n                    label: '可重复'\n                }, {\n                    value: 'N',\n                    label: '不可重复'\n                }],\n                users: [''],\n                status: [{\n                    value: '',\n                    label: '全部'\n                }, {\n                    value: 0,\n                    label: '正常'\n                }, {\n                    value: 1,\n                    label: '下架'\n                }]\n            }\n        };\n    },\n    created: function created() {\n        this.getUsers();\n        this.getList();\n    },\n    mounted: function mounted() {},\n\n\n    filters: {\n        statusTextFilter: function statusTextFilter(status) {\n            var statusMap = ['正常', '已下架'];\n            return statusMap[status];\n        }\n    },\n\n    methods: {\n        getUsers: function getUsers() {\n            var _this = this;\n\n            (0, _task.fetchUserList)().then(function (response) {\n                if (response.success) {\n                    _this.selectOptions.users = [{\n                        value: '',\n                        label: '全部'\n                    }];\n                    for (var i = 0; i < response.data.length; i++) {\n                        _this.selectOptions.users.push({\n                            value: response.data[i],\n                            label: response.data[i]\n                        });\n                    }\n                } else {\n                    _this.$notify({\n                        title: '失败',\n                        message: response.message,\n                        type: 'error',\n                        duration: 2000\n                    });\n                }\n            });\n        },\n        getList: function getList() {\n            var _this2 = this;\n\n            this.listLoading = true;\n\n            var params = [];\n            for (var key in this.listQuery) {\n                if (key == 'updateTime') {\n                    var times = this.listQuery[key];\n                    if (times[0] != undefined || times[1] != undefined) {\n                        var timeStart = (0, _utils.formatDate)(new Date(times[0]), \"yyyy-MM-dd hh:mm:ss\");\n                        var timeEnd = (0, _utils.formatDate)(new Date(times[1]), \"yyyy-MM-dd hh:mm:ss\");\n                        params.push('updateTimeStart=' + encodeURIComponent(timeStart));\n                        params.push('updateTimeEnd=' + encodeURIComponent(timeEnd));\n                    } else {\n                        params.push('updateTimeStart=');\n                        params.push('updateTimeEnd=');\n                    }\n                } else {\n                    params.push(key + '=' + this.listQuery[key]);\n                }\n            }\n\n            (0, _task.fetchList)(params.join('&')).then(function (response) {\n                if (response.success) {\n                    _this2.list = response.data;\n                    _this2.total = response.recordsTotal;\n                    _this2.listLoading = false;\n                } else {\n                    _this2.$notify({\n                        title: '失败',\n                        message: response.message,\n                        type: 'error',\n                        duration: 2000\n                    });\n                }\n            });\n        },\n        handleFilter: function handleFilter() {\n            this.getList();\n        },\n        clearFilter: function clearFilter() {\n            this.listQuery = {\n                pageNo: 1,\n                pageSize: 10,\n                taskId: '',\n                addScoreStart: '',\n                addScoreEnd: '',\n                subScoreStart: '',\n                subScoreEnd: '',\n                isDuplicate: '',\n                updateTime: '',\n                operator: '',\n                status: ''\n            };\n            this.getList();\n        },\n        handleSizeChange: function handleSizeChange(val) {\n            this.listQuery.pageSize = val;\n            this.getList();\n        },\n        handleCurrentChange: function handleCurrentChange(val) {\n            this.listQuery.pageNo = val;\n            this.getList();\n        },\n        addTask: function addTask() {\n            this.$router.push('/task/taskAdd');\n        },\n        setTask: function setTask() {\n            this.$router.push('/task/taskSettings');\n        },\n        setTaskStatus: function setTaskStatus(row, status) {\n            var _this3 = this;\n\n            this.loading = true;\n            (0, _task.setTaskStatus)(row.id, status).then(function (response) {\n                _this3.loading = false;\n                if (response.success) {\n                    _this3.$message({\n                        message: '操作成功',\n                        type: 'success'\n                    });\n                    row.status = status;\n                } else {\n                    _this3.$message({\n                        message: response.message,\n                        type: 'error'\n                    });\n                }\n            });\n        }\n    }\n};\n\n/***/ }),\n\n/***/ 659:\n/***/ (function(module, exports, __webpack_require__) {\n\nexports = module.exports = __webpack_require__(440)(true);\n// imports\n\n\n// module\nexports.push([module.i, \".task-container{padding:15px;position:relative;width:100%}.task-container .btn-group{margin:10px}.form-inline .el-form-item{margin-right:20px}\", \"\", {\"version\":3,\"sources\":[\"E:/eagle/Credit-BA-Management/src/views/task/index.vue\"],\"names\":[],\"mappings\":\"AACA,gBACE,aAAc,AACd,kBAAmB,AACnB,UAAY,CACb,AACD,2BACI,WAAa,CAChB,AAMD,2BACI,iBAAmB,CACtB\",\"file\":\"index.vue\",\"sourcesContent\":[\"\\n.task-container {\\n  padding: 15px;\\n  position: relative;\\n  width: 100%;\\n}\\n.task-container .btn-group {\\n    margin: 10px;\\n}\\n.form-inline {\\n  /*        input{\\n            width:140px;;\\n        }*/\\n}\\n.form-inline .el-form-item {\\n    margin-right: 20px;\\n}\\n\"],\"sourceRoot\":\"\"}]);\n\n// exports\n\n\n/***/ }),\n\n/***/ 694:\n/***/ (function(module, exports, __webpack_require__) {\n\n// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = __webpack_require__(659);\nif(typeof content === 'string') content = [[module.i, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar update = __webpack_require__(441)(\"33c249f8\", content, true);\n\n/***/ }),\n\n/***/ 714:\n/***/ (function(module, exports) {\n\nmodule.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('div', {\n    staticClass: \"task-container calendar-list-container\"\n  }, [_c('el-form', {\n    staticClass: \"form-inline\",\n    attrs: {\n      \"inline\": true,\n      \"model\": _vm.listQuery\n    }\n  }, [_c('el-form-item', {\n    attrs: {\n      \"label\": \"任务id\"\n    }\n  }, [_c('el-input', {\n    model: {\n      value: (_vm.listQuery.taskId),\n      callback: function($$v) {\n        _vm.listQuery.taskId = $$v\n      },\n      expression: \"listQuery.taskId\"\n    }\n  })], 1), _vm._v(\" \"), _c('el-form-item', {\n    attrs: {\n      \"label\": \"加分区间\"\n    }\n  }, [_c('el-col', {\n    attrs: {\n      \"span\": 11\n    }\n  }, [_c('el-input', {\n    model: {\n      value: (_vm.listQuery.addScoreStart),\n      callback: function($$v) {\n        _vm.listQuery.addScoreStart = $$v\n      },\n      expression: \"listQuery.addScoreStart\"\n    }\n  })], 1), _vm._v(\" \"), _c('el-col', {\n    staticClass: \"line\",\n    attrs: {\n      \"span\": 2\n    }\n  }, [_vm._v(\"-\")]), _vm._v(\" \"), _c('el-col', {\n    attrs: {\n      \"span\": 11\n    }\n  }, [_c('el-input', {\n    model: {\n      value: (_vm.listQuery.addScoreEnd),\n      callback: function($$v) {\n        _vm.listQuery.addScoreEnd = $$v\n      },\n      expression: \"listQuery.addScoreEnd\"\n    }\n  })], 1)], 1), _vm._v(\" \"), _c('el-form-item', {\n    attrs: {\n      \"label\": \"惩罚分区间\"\n    }\n  }, [_c('el-col', {\n    attrs: {\n      \"span\": 11\n    }\n  }, [_c('el-input', {\n    model: {\n      value: (_vm.listQuery.subScoreStart),\n      callback: function($$v) {\n        _vm.listQuery.subScoreStart = $$v\n      },\n      expression: \"listQuery.subScoreStart\"\n    }\n  })], 1), _vm._v(\" \"), _c('el-col', {\n    staticClass: \"line\",\n    attrs: {\n      \"span\": 2\n    }\n  }, [_vm._v(\"-\")]), _vm._v(\" \"), _c('el-col', {\n    attrs: {\n      \"span\": 11\n    }\n  }, [_c('el-input', {\n    model: {\n      value: (_vm.listQuery.subScoreEnd),\n      callback: function($$v) {\n        _vm.listQuery.subScoreEnd = $$v\n      },\n      expression: \"listQuery.subScoreEnd\"\n    }\n  })], 1)], 1), _vm._v(\" \"), _c('el-form-item', {\n    attrs: {\n      \"label\": \"是否重复\"\n    }\n  }, [_c('el-select', {\n    attrs: {\n      \"placeholder\": \"请选择\"\n    },\n    model: {\n      value: (_vm.listQuery.isDuplicate),\n      callback: function($$v) {\n        _vm.listQuery.isDuplicate = $$v\n      },\n      expression: \"listQuery.isDuplicate\"\n    }\n  }, _vm._l((_vm.selectOptions.isDuplicate), function(item) {\n    return _c('el-option', {\n      key: item.value,\n      attrs: {\n        \"label\": item.label,\n        \"value\": item.value\n      }\n    })\n  }))], 1), _vm._v(\" \"), _c('el-form-item', {\n    attrs: {\n      \"label\": \"修改时间\"\n    }\n  }, [_c('el-date-picker', {\n    attrs: {\n      \"type\": \"datetimerange\",\n      \"range-seprate\": \"至\"\n    },\n    model: {\n      value: (_vm.listQuery.updateTime),\n      callback: function($$v) {\n        _vm.listQuery.updateTime = $$v\n      },\n      expression: \"listQuery.updateTime\"\n    }\n  })], 1), _vm._v(\" \"), _c('el-form-item', {\n    attrs: {\n      \"label\": \"操作账号\"\n    }\n  }, [_c('el-select', {\n    attrs: {\n      \"placeholder\": \"请选择\"\n    },\n    model: {\n      value: (_vm.listQuery.operator),\n      callback: function($$v) {\n        _vm.listQuery.operator = $$v\n      },\n      expression: \"listQuery.operator\"\n    }\n  }, _vm._l((_vm.selectOptions.users), function(item) {\n    return _c('el-option', {\n      key: item.value,\n      attrs: {\n        \"label\": item.label,\n        \"value\": item.value\n      }\n    })\n  }))], 1), _vm._v(\" \"), _c('el-form-item', {\n    attrs: {\n      \"label\": \"状态\"\n    }\n  }, [_c('el-select', {\n    attrs: {\n      \"placeholder\": \"请选择\"\n    },\n    model: {\n      value: (_vm.listQuery.status),\n      callback: function($$v) {\n        _vm.listQuery.status = $$v\n      },\n      expression: \"listQuery.status\"\n    }\n  }, _vm._l((_vm.selectOptions.status), function(item) {\n    return _c('el-option', {\n      key: item.value,\n      attrs: {\n        \"label\": item.label,\n        \"value\": item.value\n      }\n    })\n  }))], 1), _vm._v(\" \"), _c('el-form-item', [_c('el-button', {\n    directives: [{\n      name: \"waves\",\n      rawName: \"v-waves\"\n    }],\n    staticClass: \"filter-item\",\n    attrs: {\n      \"type\": \"primary\",\n      \"icon\": \"search\"\n    },\n    on: {\n      \"click\": _vm.handleFilter\n    }\n  }, [_vm._v(\"搜索\")]), _vm._v(\" \"), _c('el-button', {\n    directives: [{\n      name: \"waves\",\n      rawName: \"v-waves\"\n    }],\n    staticClass: \"filter-item\",\n    attrs: {\n      \"type\": \"primary\",\n      \"icon\": \"circle-close\"\n    },\n    on: {\n      \"click\": _vm.clearFilter\n    }\n  }, [_vm._v(\"清除\")])], 1)], 1), _vm._v(\" \"), _c('div', {\n    staticClass: \"btn-group\"\n  }, [_c('el-button', {\n    attrs: {\n      \"type\": \"primary\"\n    },\n    on: {\n      \"click\": function($event) {\n        _vm.addTask()\n      }\n    }\n  }, [_vm._v(\"新增任务\")]), _vm._v(\" \"), _c('el-button', {\n    attrs: {\n      \"type\": \"primary\"\n    },\n    on: {\n      \"click\": function($event) {\n        _vm.setTask()\n      }\n    }\n  }, [_vm._v(\"任务基础设置\")])], 1), _vm._v(\" \"), _c('el-table', {\n    directives: [{\n      name: \"loading\",\n      rawName: \"v-loading.body\",\n      value: (_vm.listLoading),\n      expression: \"listLoading\",\n      modifiers: {\n        \"body\": true\n      }\n    }],\n    key: _vm.tableKey,\n    staticStyle: {\n      \"width\": \"100%\"\n    },\n    attrs: {\n      \"data\": _vm.list,\n      \"default-sort\": {\n        prop: 'taskId',\n        order: 'aescending'\n      },\n      \"border\": \"\",\n      \"fit\": \"\",\n      \"highlight-current-row\": \"\"\n    }\n  }, [_c('el-table-column', {\n    attrs: {\n      \"align\": \"center\",\n      \"label\": \"任务id\",\n      \"width\": \"80\",\n      \"prop\": \"taskId\"\n    },\n    scopedSlots: _vm._u([{\n      key: \"default\",\n      fn: function(scope) {\n        return [_c('span', [_vm._v(_vm._s(scope.row.taskId))])]\n      }\n    }])\n  }), _vm._v(\" \"), _c('el-table-column', {\n    attrs: {\n      \"align\": \"center\",\n      \"width\": \"110px\",\n      \"label\": \"任务加分\",\n      \"prop\": \"addScore\"\n    },\n    scopedSlots: _vm._u([{\n      key: \"default\",\n      fn: function(scope) {\n        return [_c('span', [_vm._v(_vm._s(scope.row.addScore))])]\n      }\n    }])\n  }), _vm._v(\" \"), _c('el-table-column', {\n    attrs: {\n      \"align\": \"center\",\n      \"width\": \"100px\",\n      \"label\": \"提前结束任务惩罚\",\n      \"prop\": \"subScore\"\n    },\n    scopedSlots: _vm._u([{\n      key: \"default\",\n      fn: function(scope) {\n        return [_c('span', [_vm._v(\"-\" + _vm._s(scope.row.subScore))])]\n      }\n    }])\n  }), _vm._v(\" \"), _c('el-table-column', {\n    attrs: {\n      \"align\": \"center\",\n      \"width\": \"90px\",\n      \"label\": \"是否可重复\",\n      \"prop\": \"isDuplicate\"\n    },\n    scopedSlots: _vm._u([{\n      key: \"default\",\n      fn: function(scope) {\n        return [_c('span', [_vm._v(_vm._s(scope.row.isDuplicate))])]\n      }\n    }])\n  }), _vm._v(\" \"), _c('el-table-column', {\n    attrs: {\n      \"align\": \"center\",\n      \"min-width\": \"120px\",\n      \"label\": \"备注\",\n      \"show-overflow-tooltip\": \"\",\n      \"prop\": \"memo\"\n    },\n    scopedSlots: _vm._u([{\n      key: \"default\",\n      fn: function(scope) {\n        return [_c('span', [_vm._v(_vm._s(scope.row.memo))])]\n      }\n    }])\n  }), _vm._v(\" \"), _c('el-table-column', {\n    attrs: {\n      \"align\": \"center\",\n      \"width\": \"180px\",\n      \"label\": \"修改时间\",\n      \"sortable\": \"\",\n      \"prop\": \"updateTime\",\n      \"sortable\": \"\"\n    },\n    scopedSlots: _vm._u([{\n      key: \"default\",\n      fn: function(scope) {\n        return [_c('span', [_vm._v(_vm._s(scope.row.updateTime))])]\n      }\n    }])\n  }), _vm._v(\" \"), _c('el-table-column', {\n    attrs: {\n      \"align\": \"center\",\n      \"width\": \"100px\",\n      \"label\": \"操作账号\",\n      \"prop\": \"operator\"\n    },\n    scopedSlots: _vm._u([{\n      key: \"default\",\n      fn: function(scope) {\n        return [_c('span', [_vm._v(_vm._s(scope.row.operator))])]\n      }\n    }])\n  }), _vm._v(\" \"), _c('el-table-column', {\n    attrs: {\n      \"align\": \"center\",\n      \"width\": \"100px\",\n      \"label\": \"状态\",\n      \"sortable\": \"\",\n      \"prop\": \"status\"\n    },\n    scopedSlots: _vm._u([{\n      key: \"default\",\n      fn: function(scope) {\n        return [_c('el-tag', [_vm._v(_vm._s(_vm._f(\"statusTextFilter\")(scope.row.status)))])]\n      }\n    }])\n  }), _vm._v(\" \"), _c('el-table-column', {\n    attrs: {\n      \"align\": \"center\",\n      \"label\": \"操作\",\n      \"width\": \"80\"\n    },\n    scopedSlots: _vm._u([{\n      key: \"default\",\n      fn: function(scope) {\n        return [(scope.row.status == 0) ? _c('el-button', {\n          attrs: {\n            \"size\": \"small\",\n            \"type\": \"primary\"\n          },\n          on: {\n            \"click\": function($event) {\n              _vm.setTaskStatus(scope.row, 1)\n            }\n          }\n        }, [_vm._v(\"下架\")]) : _vm._e(), _vm._v(\" \"), (scope.row.status != 0) ? _c('el-button', {\n          attrs: {\n            \"size\": \"small\",\n            \"type\": \"primary\"\n          },\n          on: {\n            \"click\": function($event) {\n              _vm.setTaskStatus(scope.row, 0)\n            }\n          }\n        }, [_vm._v(\"上架\")]) : _vm._e()]\n      }\n    }])\n  })], 1), _vm._v(\" \"), _c('div', {\n    directives: [{\n      name: \"show\",\n      rawName: \"v-show\",\n      value: (!_vm.listLoading),\n      expression: \"!listLoading\"\n    }],\n    staticClass: \"pagination-container\"\n  }, [_c('el-pagination', {\n    attrs: {\n      \"current-page\": _vm.listQuery.pageNo,\n      \"page-sizes\": [10, 20, 30, 50],\n      \"page-size\": _vm.listQuery.pageSize,\n      \"layout\": \"total, sizes, prev, pager, next, jumper\",\n      \"total\": _vm.total\n    },\n    on: {\n      \"size-change\": _vm.handleSizeChange,\n      \"current-change\": _vm.handleCurrentChange\n    }\n  })], 1)], 1)\n},staticRenderFns: []}\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// js/6.8a958add9fe2b858b8f0.js","function injectStyle (ssrContext) {\n  require(\"!!../../../node_modules/extract-text-webpack-plugin/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"minimize\\\":true,\\\"sourceMap\\\":true}!../../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-27e64608\\\",\\\"scoped\\\":false,\\\"hasInlineConfig\\\":false}!sass-loader?{\\\"sourceMap\\\":true}!../../../node_modules/vue-loader/lib/selector?type=styles&index=0!./index.vue\")\n}\nvar Component = require(\"!../../../node_modules/vue-loader/lib/component-normalizer\")(\n  /* script */\n  require(\"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./index.vue\"),\n  /* template */\n  require(\"!!../../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-27e64608\\\"}!../../../node_modules/vue-loader/lib/selector?type=template&index=0!./index.vue\"),\n  /* styles */\n  injectStyle,\n  /* scopeId */\n  null,\n  /* moduleIdentifier (server only) */\n  null\n)\n\nmodule.exports = Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/views/task/index.vue\n// module id = 456\n// module chunks = 6","import { fetch } from 'utils/fetch';\r\n\r\n export function fetchList(query) {\r\n   return fetch({\r\n     url: '/bus/task/list.do?' + query,\r\n     method: 'get'\r\n   })\r\n }\r\n\r\nexport function fetchUserList() {\r\n    return fetch({\r\n        url: '/sysconfig/getAccounts.do',\r\n        method: 'get'\r\n    })\r\n}\r\n\r\n export function setTaskStatus(id, status) {\r\n   return fetch({\r\n     url: '/bus/task/enable.do',\r\n     method: 'post',\r\n     data: {\r\n         id,\r\n       status\r\n     }\r\n   })\r\n }\r\n\r\nexport function addTask(form) {\r\n    return fetch({\r\n        url: '/bus/task/save.do',\r\n        method: 'post',\r\n        data: form\r\n    })\r\n}\r\n\r\nexport function getSetting() {\r\n    return fetch({\r\n        url: '/bus/taskset/getConfTaskSet.do',\r\n        method: 'get'\r\n    })\r\n}\r\n\r\nexport function updateSetting(form) {\r\n    return fetch({\r\n        url: '/bus/taskset/save.do',\r\n        method: 'post',\r\n        data:form\r\n    })\r\n}\r\n\r\nexport function fetchHistory(query) {\r\n    return fetch({\r\n        url:'/bus/taskset/getHisTaskSet.do?' + query,\r\n        method: 'get'\r\n    })\r\n}\r\n\r\n// export function deleteJob(jobId) {\r\n//   return fetch({\r\n//     url: '/falcon/job/delete.html',\r\n//     method: 'post',\r\n//     data: {\r\n//       jobId\r\n//     }\r\n//   })\r\n// }\r\n\r\n// export function queryJobInfo(jobId) {\r\n//   return fetch({\r\n//     url: '/falcon/job/queryJobInfo.html',\r\n//     method: 'post',\r\n//     data: {\r\n//       jobId\r\n//     }\r\n//   })\r\n// }\r\n\r\n// export function queryJobRefer(jobId) {\r\n//   return fetch({\r\n//     url: '/falcon/job/queryJobRefer.html',\r\n//     method: 'post',\r\n//     data: {\r\n//       jobId\r\n//     }\r\n//   })\r\n// }\r\n\r\n// export function queryReferJob(jobId) {\r\n//   return fetch({\r\n//     url: '/falcon/job/queryReferJob.html',\r\n//     method: 'post',\r\n//     data: {\r\n//       jobId\r\n//     }\r\n//   })\r\n// }\r\n\r\n// export function queryWfJobsList(query) {\r\n//   return fetch({\r\n//     url: '/falcon/job/queryWfJobsList.html',\r\n//     method: 'post',\r\n//     data: query\r\n//   });\r\n// }\r\n\r\n// export function queryRunMapList(query) {\r\n//   return fetch({\r\n//     url: '/falcon/job/queryRunMapList.html',\r\n//     method: 'post',\r\n//     data: query\r\n//   });\r\n// }\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/api/task.js","<template>\r\n    <div class=\"task-container calendar-list-container\">\r\n        <el-form :inline=\"true\" :model=\"listQuery\" class=\"form-inline\">\r\n\r\n            <el-form-item label=\"任务id\">\r\n                <el-input v-model=\"listQuery.taskId\"></el-input>\r\n            </el-form-item>\r\n            <el-form-item label=\"加分区间\">\r\n                <el-col :span=\"11\">\r\n                    <el-input v-model=\"listQuery.addScoreStart\"></el-input>\r\n                </el-col>\r\n                <el-col class=\"line\" :span=\"2\">-</el-col>\r\n                <el-col :span=\"11\">\r\n                    <el-input v-model=\"listQuery.addScoreEnd\"></el-input>\r\n                </el-col>\r\n            </el-form-item>\r\n            <el-form-item label=\"惩罚分区间\">\r\n                <el-col :span=\"11\">\r\n                    <el-input v-model=\"listQuery.subScoreStart\"></el-input>\r\n                </el-col>\r\n                <el-col class=\"line\" :span=\"2\">-</el-col>\r\n                <el-col :span=\"11\">\r\n                    <el-input v-model=\"listQuery.subScoreEnd\"></el-input>\r\n                </el-col>\r\n            </el-form-item>\r\n            <el-form-item label=\"是否重复\">\r\n                <el-select v-model=\"listQuery.isDuplicate\" placeholder=\"请选择\">\r\n                    <el-option\r\n                            v-for=\"item in selectOptions.isDuplicate\"\r\n                            :key=\"item.value\"\r\n                            :label=\"item.label\"\r\n                            :value=\"item.value\">\r\n                    </el-option>\r\n                </el-select>\r\n            </el-form-item>\r\n            <el-form-item label=\"修改时间\">\r\n                <el-date-picker\r\n                        type=\"datetimerange\"\r\n                        range-seprate=\"至\"\r\n                        v-model=\"listQuery.updateTime\">\r\n                </el-date-picker>\r\n            </el-form-item>\r\n            <el-form-item label=\"操作账号\">\r\n                <el-select v-model=\"listQuery.operator\" placeholder=\"请选择\">\r\n                    <el-option\r\n                            v-for=\"item in selectOptions.users\"\r\n                            :key=\"item.value\"\r\n                            :label=\"item.label\"\r\n                            :value=\"item.value\">\r\n                    </el-option>\r\n                </el-select>\r\n            </el-form-item>\r\n            <el-form-item label=\"状态\">\r\n                <el-select v-model=\"listQuery.status\" placeholder=\"请选择\">\r\n                    <el-option\r\n                            v-for=\"item in selectOptions.status\"\r\n                            :key=\"item.value\"\r\n                            :label=\"item.label\"\r\n                            :value=\"item.value\">\r\n                    </el-option>\r\n                </el-select>\r\n            </el-form-item>\r\n            <el-form-item>\r\n                <el-button class=\"filter-item\" type=\"primary\"  v-waves icon=\"search\" @click=\"handleFilter\">搜索</el-button>\r\n                <el-button class=\"filter-item\" type=\"primary\"  v-waves icon=\"circle-close\" @click=\"clearFilter\">清除</el-button>\r\n            </el-form-item>\r\n        </el-form>\r\n\r\n        <div class=\"btn-group\">\r\n            <el-button type=\"primary\" @click=\"addTask()\">新增任务</el-button>\r\n            <el-button type=\"primary\" @click=\"setTask()\">任务基础设置</el-button>\r\n        </div>\r\n\r\n        <el-table  :key='tableKey' :data=\"list\" :default-sort=\"{prop: 'taskId', order: 'aescending'}\" v-loading.body=\"listLoading\" border fit highlight-current-row style=\"width: 100%\">\r\n\r\n            <el-table-column align=\"center\" label=\"任务id\" width=\"80\" prop=\"taskId\">\r\n                <template scope=\"scope\">\r\n                    <span>{{scope.row.taskId}}</span>\r\n                </template>\r\n            </el-table-column>\r\n\r\n            <el-table-column align=\"center\" width=\"110px\" label=\"任务加分\" prop=\"addScore\">\r\n                <template scope=\"scope\">\r\n                    <span>{{scope.row.addScore}}</span>\r\n                </template>\r\n            </el-table-column>\r\n\r\n            <el-table-column align=\"center\" width=\"100px\" label=\"提前结束任务惩罚\" prop=\"subScore\">\r\n                <template scope=\"scope\">\r\n                    <span>-{{scope.row.subScore}}</span>\r\n                </template>\r\n            </el-table-column>\r\n\r\n            <el-table-column align=\"center\" width=\"90px\" label=\"是否可重复\" prop=\"isDuplicate\">\r\n                <template scope=\"scope\">\r\n                    <span>{{scope.row.isDuplicate}}</span>\r\n                </template>\r\n            </el-table-column>\r\n\r\n            <el-table-column align=\"center\" min-width=\"120px\" label=\"备注\" show-overflow-tooltip prop=\"memo\">\r\n                <template scope=\"scope\">\r\n                    <span>{{scope.row.memo}}</span>\r\n                </template>\r\n            </el-table-column>\r\n\r\n            <el-table-column align=\"center\" width=\"180px\"  label=\"修改时间\" sortable prop=\"updateTime\" sortable>\r\n                <template scope=\"scope\">\r\n                    <span>{{scope.row.updateTime}}</span>\r\n                </template>\r\n            </el-table-column>\r\n\r\n            <el-table-column align=\"center\" width=\"100px\"  label=\"操作账号\" prop=\"operator\">\r\n                <template scope=\"scope\">\r\n                    <span>{{scope.row.operator}}</span>\r\n                </template>\r\n            </el-table-column>\r\n\r\n            <el-table-column align=\"center\" width=\"100px\" label=\"状态\" sortable prop=\"status\">\r\n                <template scope=\"scope\">\r\n                    <el-tag>{{scope.row.status | statusTextFilter}}</el-tag>\r\n                </template>\r\n            </el-table-column>\r\n\r\n            <el-table-column  align=\"center\" label=\"操作\" width=\"80\">\r\n                <template scope=\"scope\">\r\n                    <el-button v-if=\"scope.row.status==0\" size=\"small\" type=\"primary\" @click=\"setTaskStatus(scope.row, 1)\">下架</el-button>\r\n                    <el-button v-if=\"scope.row.status!=0\" size=\"small\" type=\"primary\" @click=\"setTaskStatus(scope.row, 0)\">上架</el-button>\r\n                </template>\r\n            </el-table-column>\r\n\r\n        </el-table>\r\n\r\n        <div v-show=\"!listLoading\" class=\"pagination-container\">\r\n            <el-pagination @size-change=\"handleSizeChange\" @current-change=\"handleCurrentChange\" :current-page=\"listQuery.pageNo\" :page-sizes=\"[10,20,30,50]\"\r\n                           :page-size=\"listQuery.pageSize\" layout=\"total, sizes, prev, pager, next, jumper\" :total=\"total\">\r\n            </el-pagination>\r\n        </div>\r\n\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n    import { fetchList, fetchUserList, setTaskStatus } from 'api/task';\r\n    import { formatDate } from 'utils';\r\n\r\n    export default {\r\n        name: 'task',\r\n        data() {\r\n            return {\r\n                list: null,\r\n                total: null,\r\n                listLoading: true,\r\n                listQuery: {\r\n                    pageNo: 1,\r\n                    pageSize: 10,\r\n                    taskId: '',\r\n                    addScoreStart: '',\r\n                    addScoreEnd: '',\r\n                    subScoreStart: '',\r\n                    subScoreEnd: '',\r\n                    isDuplicate: '',\r\n                    updateTime:'',\r\n                    operator: '',\r\n                    status: ''\r\n                },\r\n                selectOptions:{\r\n                    isDuplicate:[{\r\n                        value: '',\r\n                        label: '全部'\r\n                    },{\r\n                        value: 'Y',\r\n                        label: '可重复'\r\n                    },{\r\n                        value: 'N',\r\n                        label: '不可重复'\r\n                    }],\r\n                    users: [''],\r\n                    status: [{\r\n                        value: '',\r\n                        label: '全部'\r\n                    },{\r\n                        value: 0,\r\n                        label: '正常'\r\n                    },{\r\n                        value: 1,\r\n                        label: '下架'\r\n                    }]\r\n                }\r\n            }\r\n        },\r\n\r\n        created() {\r\n            this.getUsers();\r\n            this.getList();\r\n        },\r\n\r\n        mounted() {\r\n        },\r\n\r\n        filters: {\r\n            statusTextFilter(status) {\r\n                const statusMap = [\r\n                    '正常',\r\n                    '已下架'\r\n                ];\r\n                return statusMap[status]\r\n            }\r\n        },\r\n\r\n        methods: {\r\n            getUsers() {\r\n                fetchUserList().then(response => {\r\n                    if (response.success) {\r\n                      this.selectOptions.users = [{\r\n                          value: '',\r\n                          label: '全部'\r\n                      }];\r\n                      for(let i=0;i<response.data.length;i++){\r\n                          this.selectOptions.users.push({\r\n                              value: response.data[i],\r\n                              label: response.data[i]\r\n                          });\r\n                      }\r\n\r\n                    } else {\r\n                        this.$notify({\r\n                            title: '失败',\r\n                            message: response.message,\r\n                            type: 'error',\r\n                            duration: 2000\r\n                        })\r\n                    }\r\n                });\r\n            },\r\n            getList() {\r\n                this.listLoading = true;\r\n\r\n                var params = [];\r\n                for(var key in this.listQuery){\r\n                    if(key == 'updateTime'){\r\n                        var times = this.listQuery[key];\r\n                        if(times[0] != undefined || times[1] != undefined ){\r\n                            var timeStart = formatDate(new Date(times[0]), \"yyyy-MM-dd hh:mm:ss\");\r\n                            var timeEnd = formatDate(new Date(times[1]), \"yyyy-MM-dd hh:mm:ss\");\r\n                            params.push('updateTimeStart=' + encodeURIComponent(timeStart));\r\n                            params.push('updateTimeEnd=' + encodeURIComponent(timeEnd));\r\n                        }else{\r\n                            params.push('updateTimeStart=');\r\n                            params.push('updateTimeEnd=');\r\n                        }\r\n                    }else{\r\n                        params.push(key + '=' + this.listQuery[key]);\r\n                    }\r\n                }\r\n\r\n                fetchList(params.join('&')).then(response => {\r\n                    if (response.success) {\r\n                        this.list = response.data;\r\n                        this.total = response.recordsTotal;\r\n                        this.listLoading = false;\r\n                    } else {\r\n                        this.$notify({\r\n                            title: '失败',\r\n                            message: response.message,\r\n                            type: 'error',\r\n                            duration: 2000\r\n                        })\r\n                    }\r\n                });\r\n            },\r\n            handleFilter() {\r\n                this.getList();\r\n            },\r\n            clearFilter() {\r\n                this.listQuery = {\r\n                    pageNo: 1,\r\n                    pageSize: 10,\r\n                    taskId: '',\r\n                    addScoreStart: '',\r\n                    addScoreEnd: '',\r\n                    subScoreStart: '',\r\n                    subScoreEnd: '',\r\n                    isDuplicate: '',\r\n                    updateTime:'',\r\n                    operator: '',\r\n                    status: ''\r\n                };\r\n                this.getList();\r\n            },\r\n            handleSizeChange(val) {\r\n                this.listQuery.pageSize = val;\r\n                this.getList();\r\n            },\r\n            handleCurrentChange(val) {\r\n                this.listQuery.pageNo = val;\r\n                this.getList();\r\n            },\r\n            addTask() {\r\n                this.$router.push('/task/taskAdd');\r\n            },\r\n            setTask() {\r\n                this.$router.push('/task/taskSettings');\r\n            },\r\n            setTaskStatus(row, status) {\r\n                this.loading = true;\r\n                setTaskStatus(row.id, status).then(response => {\r\n                    this.loading = false;\r\n                    if (response.success) {\r\n                        this.$message({\r\n                            message: '操作成功',\r\n                            type: 'success'\r\n                        });\r\n                        row.status = status;\r\n                    } else {\r\n                        this.$message({\r\n                            message: response.message,\r\n                            type: 'error'\r\n                        });\r\n                    }\r\n                });\r\n            }\r\n        }\r\n    }\r\n</script>\r\n\r\n<style lang=\"scss\">\r\n    @import \"src/styles/mixin.scss\";\r\n\r\n    .task-container {\r\n        padding: 15px;\r\n        position: relative;\r\n        width: 100%;\r\n        .btn-group {\r\n            margin: 10px;\r\n        }\r\n    }\r\n\r\n    .form-inline{\r\n/*        input{\r\n            width:140px;;\r\n        }*/\r\n       .el-form-item{\r\n           margin-right:20px;\r\n       }\r\n    }\r\n\r\n</style>\r\n\n\n\n// WEBPACK FOOTER //\n// index.vue?50381652","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(true);\n// imports\n\n\n// module\nexports.push([module.id, \".task-container{padding:15px;position:relative;width:100%}.task-container .btn-group{margin:10px}.form-inline .el-form-item{margin-right:20px}\", \"\", {\"version\":3,\"sources\":[\"E:/eagle/Credit-BA-Management/src/views/task/index.vue\"],\"names\":[],\"mappings\":\"AACA,gBACE,aAAc,AACd,kBAAmB,AACnB,UAAY,CACb,AACD,2BACI,WAAa,CAChB,AAMD,2BACI,iBAAmB,CACtB\",\"file\":\"index.vue\",\"sourcesContent\":[\"\\n.task-container {\\n  padding: 15px;\\n  position: relative;\\n  width: 100%;\\n}\\n.task-container .btn-group {\\n    margin: 10px;\\n}\\n.form-inline {\\n  /*        input{\\n            width:140px;;\\n        }*/\\n}\\n.form-inline .el-form-item {\\n    margin-right: 20px;\\n}\\n\"],\"sourceRoot\":\"\"}]);\n\n// exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/css-loader?{\"minimize\":true,\"sourceMap\":true}!./~/vue-loader/lib/style-compiler?{\"vue\":true,\"id\":\"data-v-27e64608\",\"scoped\":false,\"hasInlineConfig\":false}!./~/sass-loader/lib/loader.js?{\"sourceMap\":true}!./~/vue-loader/lib/selector.js?type=styles&index=0!./src/views/task/index.vue\n// module id = 659\n// module chunks = 6","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../node_modules/css-loader/index.js?{\\\"minimize\\\":true,\\\"sourceMap\\\":true}!../../../node_modules/vue-loader/lib/style-compiler/index.js?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-27e64608\\\",\\\"scoped\\\":false,\\\"hasInlineConfig\\\":false}!../../../node_modules/sass-loader/lib/loader.js?{\\\"sourceMap\\\":true}!../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./index.vue\");\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar update = require(\"!../../../node_modules/vue-style-loader/lib/addStylesClient.js\")(\"33c249f8\", content, true);\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/extract-text-webpack-plugin/loader.js?{\"omit\":1,\"remove\":true}!./~/vue-style-loader!./~/css-loader?{\"minimize\":true,\"sourceMap\":true}!./~/vue-loader/lib/style-compiler?{\"vue\":true,\"id\":\"data-v-27e64608\",\"scoped\":false,\"hasInlineConfig\":false}!./~/sass-loader/lib/loader.js?{\"sourceMap\":true}!./~/vue-loader/lib/selector.js?type=styles&index=0!./src/views/task/index.vue\n// module id = 694\n// module chunks = 6","module.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('div', {\n    staticClass: \"task-container calendar-list-container\"\n  }, [_c('el-form', {\n    staticClass: \"form-inline\",\n    attrs: {\n      \"inline\": true,\n      \"model\": _vm.listQuery\n    }\n  }, [_c('el-form-item', {\n    attrs: {\n      \"label\": \"任务id\"\n    }\n  }, [_c('el-input', {\n    model: {\n      value: (_vm.listQuery.taskId),\n      callback: function($$v) {\n        _vm.listQuery.taskId = $$v\n      },\n      expression: \"listQuery.taskId\"\n    }\n  })], 1), _vm._v(\" \"), _c('el-form-item', {\n    attrs: {\n      \"label\": \"加分区间\"\n    }\n  }, [_c('el-col', {\n    attrs: {\n      \"span\": 11\n    }\n  }, [_c('el-input', {\n    model: {\n      value: (_vm.listQuery.addScoreStart),\n      callback: function($$v) {\n        _vm.listQuery.addScoreStart = $$v\n      },\n      expression: \"listQuery.addScoreStart\"\n    }\n  })], 1), _vm._v(\" \"), _c('el-col', {\n    staticClass: \"line\",\n    attrs: {\n      \"span\": 2\n    }\n  }, [_vm._v(\"-\")]), _vm._v(\" \"), _c('el-col', {\n    attrs: {\n      \"span\": 11\n    }\n  }, [_c('el-input', {\n    model: {\n      value: (_vm.listQuery.addScoreEnd),\n      callback: function($$v) {\n        _vm.listQuery.addScoreEnd = $$v\n      },\n      expression: \"listQuery.addScoreEnd\"\n    }\n  })], 1)], 1), _vm._v(\" \"), _c('el-form-item', {\n    attrs: {\n      \"label\": \"惩罚分区间\"\n    }\n  }, [_c('el-col', {\n    attrs: {\n      \"span\": 11\n    }\n  }, [_c('el-input', {\n    model: {\n      value: (_vm.listQuery.subScoreStart),\n      callback: function($$v) {\n        _vm.listQuery.subScoreStart = $$v\n      },\n      expression: \"listQuery.subScoreStart\"\n    }\n  })], 1), _vm._v(\" \"), _c('el-col', {\n    staticClass: \"line\",\n    attrs: {\n      \"span\": 2\n    }\n  }, [_vm._v(\"-\")]), _vm._v(\" \"), _c('el-col', {\n    attrs: {\n      \"span\": 11\n    }\n  }, [_c('el-input', {\n    model: {\n      value: (_vm.listQuery.subScoreEnd),\n      callback: function($$v) {\n        _vm.listQuery.subScoreEnd = $$v\n      },\n      expression: \"listQuery.subScoreEnd\"\n    }\n  })], 1)], 1), _vm._v(\" \"), _c('el-form-item', {\n    attrs: {\n      \"label\": \"是否重复\"\n    }\n  }, [_c('el-select', {\n    attrs: {\n      \"placeholder\": \"请选择\"\n    },\n    model: {\n      value: (_vm.listQuery.isDuplicate),\n      callback: function($$v) {\n        _vm.listQuery.isDuplicate = $$v\n      },\n      expression: \"listQuery.isDuplicate\"\n    }\n  }, _vm._l((_vm.selectOptions.isDuplicate), function(item) {\n    return _c('el-option', {\n      key: item.value,\n      attrs: {\n        \"label\": item.label,\n        \"value\": item.value\n      }\n    })\n  }))], 1), _vm._v(\" \"), _c('el-form-item', {\n    attrs: {\n      \"label\": \"修改时间\"\n    }\n  }, [_c('el-date-picker', {\n    attrs: {\n      \"type\": \"datetimerange\",\n      \"range-seprate\": \"至\"\n    },\n    model: {\n      value: (_vm.listQuery.updateTime),\n      callback: function($$v) {\n        _vm.listQuery.updateTime = $$v\n      },\n      expression: \"listQuery.updateTime\"\n    }\n  })], 1), _vm._v(\" \"), _c('el-form-item', {\n    attrs: {\n      \"label\": \"操作账号\"\n    }\n  }, [_c('el-select', {\n    attrs: {\n      \"placeholder\": \"请选择\"\n    },\n    model: {\n      value: (_vm.listQuery.operator),\n      callback: function($$v) {\n        _vm.listQuery.operator = $$v\n      },\n      expression: \"listQuery.operator\"\n    }\n  }, _vm._l((_vm.selectOptions.users), function(item) {\n    return _c('el-option', {\n      key: item.value,\n      attrs: {\n        \"label\": item.label,\n        \"value\": item.value\n      }\n    })\n  }))], 1), _vm._v(\" \"), _c('el-form-item', {\n    attrs: {\n      \"label\": \"状态\"\n    }\n  }, [_c('el-select', {\n    attrs: {\n      \"placeholder\": \"请选择\"\n    },\n    model: {\n      value: (_vm.listQuery.status),\n      callback: function($$v) {\n        _vm.listQuery.status = $$v\n      },\n      expression: \"listQuery.status\"\n    }\n  }, _vm._l((_vm.selectOptions.status), function(item) {\n    return _c('el-option', {\n      key: item.value,\n      attrs: {\n        \"label\": item.label,\n        \"value\": item.value\n      }\n    })\n  }))], 1), _vm._v(\" \"), _c('el-form-item', [_c('el-button', {\n    directives: [{\n      name: \"waves\",\n      rawName: \"v-waves\"\n    }],\n    staticClass: \"filter-item\",\n    attrs: {\n      \"type\": \"primary\",\n      \"icon\": \"search\"\n    },\n    on: {\n      \"click\": _vm.handleFilter\n    }\n  }, [_vm._v(\"搜索\")]), _vm._v(\" \"), _c('el-button', {\n    directives: [{\n      name: \"waves\",\n      rawName: \"v-waves\"\n    }],\n    staticClass: \"filter-item\",\n    attrs: {\n      \"type\": \"primary\",\n      \"icon\": \"circle-close\"\n    },\n    on: {\n      \"click\": _vm.clearFilter\n    }\n  }, [_vm._v(\"清除\")])], 1)], 1), _vm._v(\" \"), _c('div', {\n    staticClass: \"btn-group\"\n  }, [_c('el-button', {\n    attrs: {\n      \"type\": \"primary\"\n    },\n    on: {\n      \"click\": function($event) {\n        _vm.addTask()\n      }\n    }\n  }, [_vm._v(\"新增任务\")]), _vm._v(\" \"), _c('el-button', {\n    attrs: {\n      \"type\": \"primary\"\n    },\n    on: {\n      \"click\": function($event) {\n        _vm.setTask()\n      }\n    }\n  }, [_vm._v(\"任务基础设置\")])], 1), _vm._v(\" \"), _c('el-table', {\n    directives: [{\n      name: \"loading\",\n      rawName: \"v-loading.body\",\n      value: (_vm.listLoading),\n      expression: \"listLoading\",\n      modifiers: {\n        \"body\": true\n      }\n    }],\n    key: _vm.tableKey,\n    staticStyle: {\n      \"width\": \"100%\"\n    },\n    attrs: {\n      \"data\": _vm.list,\n      \"default-sort\": {\n        prop: 'taskId',\n        order: 'aescending'\n      },\n      \"border\": \"\",\n      \"fit\": \"\",\n      \"highlight-current-row\": \"\"\n    }\n  }, [_c('el-table-column', {\n    attrs: {\n      \"align\": \"center\",\n      \"label\": \"任务id\",\n      \"width\": \"80\",\n      \"prop\": \"taskId\"\n    },\n    scopedSlots: _vm._u([{\n      key: \"default\",\n      fn: function(scope) {\n        return [_c('span', [_vm._v(_vm._s(scope.row.taskId))])]\n      }\n    }])\n  }), _vm._v(\" \"), _c('el-table-column', {\n    attrs: {\n      \"align\": \"center\",\n      \"width\": \"110px\",\n      \"label\": \"任务加分\",\n      \"prop\": \"addScore\"\n    },\n    scopedSlots: _vm._u([{\n      key: \"default\",\n      fn: function(scope) {\n        return [_c('span', [_vm._v(_vm._s(scope.row.addScore))])]\n      }\n    }])\n  }), _vm._v(\" \"), _c('el-table-column', {\n    attrs: {\n      \"align\": \"center\",\n      \"width\": \"100px\",\n      \"label\": \"提前结束任务惩罚\",\n      \"prop\": \"subScore\"\n    },\n    scopedSlots: _vm._u([{\n      key: \"default\",\n      fn: function(scope) {\n        return [_c('span', [_vm._v(\"-\" + _vm._s(scope.row.subScore))])]\n      }\n    }])\n  }), _vm._v(\" \"), _c('el-table-column', {\n    attrs: {\n      \"align\": \"center\",\n      \"width\": \"90px\",\n      \"label\": \"是否可重复\",\n      \"prop\": \"isDuplicate\"\n    },\n    scopedSlots: _vm._u([{\n      key: \"default\",\n      fn: function(scope) {\n        return [_c('span', [_vm._v(_vm._s(scope.row.isDuplicate))])]\n      }\n    }])\n  }), _vm._v(\" \"), _c('el-table-column', {\n    attrs: {\n      \"align\": \"center\",\n      \"min-width\": \"120px\",\n      \"label\": \"备注\",\n      \"show-overflow-tooltip\": \"\",\n      \"prop\": \"memo\"\n    },\n    scopedSlots: _vm._u([{\n      key: \"default\",\n      fn: function(scope) {\n        return [_c('span', [_vm._v(_vm._s(scope.row.memo))])]\n      }\n    }])\n  }), _vm._v(\" \"), _c('el-table-column', {\n    attrs: {\n      \"align\": \"center\",\n      \"width\": \"180px\",\n      \"label\": \"修改时间\",\n      \"sortable\": \"\",\n      \"prop\": \"updateTime\",\n      \"sortable\": \"\"\n    },\n    scopedSlots: _vm._u([{\n      key: \"default\",\n      fn: function(scope) {\n        return [_c('span', [_vm._v(_vm._s(scope.row.updateTime))])]\n      }\n    }])\n  }), _vm._v(\" \"), _c('el-table-column', {\n    attrs: {\n      \"align\": \"center\",\n      \"width\": \"100px\",\n      \"label\": \"操作账号\",\n      \"prop\": \"operator\"\n    },\n    scopedSlots: _vm._u([{\n      key: \"default\",\n      fn: function(scope) {\n        return [_c('span', [_vm._v(_vm._s(scope.row.operator))])]\n      }\n    }])\n  }), _vm._v(\" \"), _c('el-table-column', {\n    attrs: {\n      \"align\": \"center\",\n      \"width\": \"100px\",\n      \"label\": \"状态\",\n      \"sortable\": \"\",\n      \"prop\": \"status\"\n    },\n    scopedSlots: _vm._u([{\n      key: \"default\",\n      fn: function(scope) {\n        return [_c('el-tag', [_vm._v(_vm._s(_vm._f(\"statusTextFilter\")(scope.row.status)))])]\n      }\n    }])\n  }), _vm._v(\" \"), _c('el-table-column', {\n    attrs: {\n      \"align\": \"center\",\n      \"label\": \"操作\",\n      \"width\": \"80\"\n    },\n    scopedSlots: _vm._u([{\n      key: \"default\",\n      fn: function(scope) {\n        return [(scope.row.status == 0) ? _c('el-button', {\n          attrs: {\n            \"size\": \"small\",\n            \"type\": \"primary\"\n          },\n          on: {\n            \"click\": function($event) {\n              _vm.setTaskStatus(scope.row, 1)\n            }\n          }\n        }, [_vm._v(\"下架\")]) : _vm._e(), _vm._v(\" \"), (scope.row.status != 0) ? _c('el-button', {\n          attrs: {\n            \"size\": \"small\",\n            \"type\": \"primary\"\n          },\n          on: {\n            \"click\": function($event) {\n              _vm.setTaskStatus(scope.row, 0)\n            }\n          }\n        }, [_vm._v(\"上架\")]) : _vm._e()]\n      }\n    }])\n  })], 1), _vm._v(\" \"), _c('div', {\n    directives: [{\n      name: \"show\",\n      rawName: \"v-show\",\n      value: (!_vm.listLoading),\n      expression: \"!listLoading\"\n    }],\n    staticClass: \"pagination-container\"\n  }, [_c('el-pagination', {\n    attrs: {\n      \"current-page\": _vm.listQuery.pageNo,\n      \"page-sizes\": [10, 20, 30, 50],\n      \"page-size\": _vm.listQuery.pageSize,\n      \"layout\": \"total, sizes, prev, pager, next, jumper\",\n      \"total\": _vm.total\n    },\n    on: {\n      \"size-change\": _vm.handleSizeChange,\n      \"current-change\": _vm.handleCurrentChange\n    }\n  })], 1)], 1)\n},staticRenderFns: []}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vue-loader/lib/template-compiler?{\"id\":\"data-v-27e64608\"}!./~/vue-loader/lib/selector.js?type=template&index=0!./src/views/task/index.vue\n// module id = 714\n// module chunks = 6"],"sourceRoot":""}
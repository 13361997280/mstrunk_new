<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.qianwang.mapper.user.LightFinancialStatRealMapper" >
  <resultMap id="BaseResultMap" type="com.qianwang.dao.domain.user.LightFinancialStatReal" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Jan 06 15:15:13 CST 2015.
    -->
    <id column="stat_time" property="statTime" jdbcType="TIMESTAMP" />
    <result column="recharge" property="recharge" jdbcType="DECIMAL" />
    <result column="transfer" property="transfer" jdbcType="DECIMAL" />
    <result column="refund" property="refund" jdbcType="DECIMAL" />
    <result column="retain" property="retain" jdbcType="DECIMAL" />
  </resultMap>
  <sql id="Base_Column_List" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Jan 06 15:15:13 CST 2015.
    -->
    stat_time, recharge, transfer, refund, retain
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.util.Date" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Jan 06 15:15:13 CST 2015.
    -->
    select
    <include refid="Base_Column_List" />
    from light_financial_stat_real
    where stat_time = #{statTime,jdbcType=TIMESTAMP}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.util.Date" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Jan 06 15:15:13 CST 2015.
    -->
    delete from light_financial_stat_real
    where stat_time = #{statTime,jdbcType=TIMESTAMP}
  </delete>
  <insert id="insert" parameterType="com.qianwang.dao.domain.user.LightFinancialStatReal" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Jan 06 15:15:13 CST 2015.
    -->
    insert into light_financial_stat_real (stat_time, recharge, transfer,
      refund, retain)
    values (#{statTime,jdbcType=TIMESTAMP}, #{recharge,jdbcType=DECIMAL}, #{transfer,jdbcType=DECIMAL},
      #{refund,jdbcType=DECIMAL}, #{retain,jdbcType=DECIMAL})
  </insert>
  <insert id="insertSelective" parameterType="com.qianwang.dao.domain.user.LightFinancialStatReal" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Jan 06 15:15:13 CST 2015.
    -->
    insert into light_financial_stat_real
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="statTime != null" >
        stat_time,
      </if>
      <if test="recharge != null" >
        recharge,
      </if>
      <if test="transfer != null" >
        transfer,
      </if>
      <if test="refund != null" >
        refund,
      </if>
      <if test="retain != null" >
        retain,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="statTime != null" >
        #{statTime,jdbcType=TIMESTAMP},
      </if>
      <if test="recharge != null" >
        #{recharge,jdbcType=DECIMAL},
      </if>
      <if test="transfer != null" >
        #{transfer,jdbcType=DECIMAL},
      </if>
      <if test="refund != null" >
        #{refund,jdbcType=DECIMAL},
      </if>
      <if test="retain != null" >
        #{retain,jdbcType=DECIMAL},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.qianwang.dao.domain.user.LightFinancialStatReal" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Jan 06 15:15:13 CST 2015.
    -->
    update light_financial_stat_real
    <set >
      <if test="recharge != null" >
        recharge = #{recharge,jdbcType=DECIMAL},
      </if>
      <if test="transfer != null" >
        transfer = #{transfer,jdbcType=DECIMAL},
      </if>
      <if test="refund != null" >
        refund = #{refund,jdbcType=DECIMAL},
      </if>
      <if test="retain != null" >
        retain = #{retain,jdbcType=DECIMAL},
      </if>
    </set>
    where stat_time = #{statTime,jdbcType=TIMESTAMP}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.qianwang.dao.domain.user.LightFinancialStatReal" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Jan 06 15:15:13 CST 2015.
    -->
    update light_financial_stat_real
    set recharge = #{recharge,jdbcType=DECIMAL},
      transfer = #{transfer,jdbcType=DECIMAL},
      refund = #{refund,jdbcType=DECIMAL},
      retain = #{retain,jdbcType=DECIMAL}
    where stat_time = #{statTime,jdbcType=TIMESTAMP}
  </update>

  <select id="getMarketIndexInfo"  resultType="java.util.Map" parameterType="java.lang.Long">
  	select stat_date statDate, shanghai, shenzhen
  	from heavy_market_index_day
  	where stat_date between #{startDate} and #{endDate}
  	order by stat_date
  </select>
  <select id="getMarketIndexRealInfo"  resultType="java.util.Map" parameterType="java.lang.Long">
  	select stat_time statDate, shanghai, shenzhen
  	from light_market_index_real
  	where date(stat_time) = #{startDate}
  	order by stat_time
  </select>
  <select id="getAssetsInfo"  resultType="java.util.Map" parameterType="java.lang.Long">
  	select stat_date statDate, recharge, transfer, refund, (credit_card_surplus+debit_card_suplus) retain
  	from heavy_assets_stat_day
  	where stat_date between #{startDate} and #{endDate}
  	order by stat_date
  </select>
  <select id="getAssetsRealInfo"  resultType="java.util.Map" parameterType="java.lang.Long">
  	select stat_time statDate, recharge, transfer, refund, retain, recharge_user_num, transfer_user_num, refund_user_num
  	from classified.cla_financial_stat_real
  	where date(stat_time) = #{startDate}
  	order by stat_time
  </select>

  <select id="getTodayDepositWithdrawInfo" resultType="java.util.Map" parameterType="java.util.Map">
    SELECT statTime , SUM(recharge) AS recharge , SUM(transfer) AS transfer FROM
	(SELECT recharge, transfer, (stat_time - INTERVAL MINUTE(stat_time)%10 MINUTE) statTime FROM `light_financial_stat_real`
	WHERE stat_time BETWEEN #{chooseTime} AND DATE_SUB(#{chooseTime},INTERVAL -1 DAY)) m GROUP BY statTime
  </select>

  <select id="getLastSixWeekDepositWithdrawInfo" resultType="java.util.Map" parameterType="java.util.Map">
    SELECT
    mm.d AS statTime,
    SQRT((mm1.recharge*mm1.recharge + mm2.recharge*mm2.recharge + mm3.recharge*mm3.recharge + mm4.recharge*mm4.recharge + mm5.recharge*mm5.recharge + mm6.recharge*mm6.recharge)/6) rechargeOfLastSixDay,
    SQRT((mm1.transfer*mm1.transfer + mm2.transfer*mm2.transfer + mm3.transfer*mm3.transfer + mm4.transfer*mm4.transfer + mm5.transfer*mm5.transfer + mm6.transfer*mm6.transfer)/6) transferOfLastSixDay
    FROM
    (SELECT SUM(recharge) recharge,SUM(transfer) transfer,d FROM
    (
    SELECT
    recharge,transfer, (stat_time - INTERVAL MINUTE(stat_time)%10 MINUTE) d FROM `light_financial_stat_real`
    WHERE stat_time >= #{chooseTime} AND stat_time  <![CDATA[ < ]]>  #{chooseTime} + INTERVAL 1 DAY
    ) m
    GROUP BY d) mm,
    (SELECT SUM(recharge) recharge,SUM(transfer) transfer,(d + INTERVAL 1 WEEK) d FROM
    (
    SELECT
    recharge,transfer, (stat_time - INTERVAL MINUTE(stat_time)%10 MINUTE) d FROM `light_financial_stat_real`
    WHERE stat_time >= #{chooseTime} - INTERVAL 1 WEEK AND stat_time  <![CDATA[ < ]]>  #{chooseTime} + INTERVAL 1 DAY - INTERVAL 1 WEEK
    ) m1
    GROUP BY d) mm1,
    (SELECT SUM(recharge) recharge,SUM(transfer) transfer,(d + INTERVAL 2 WEEK) d FROM
    (
    SELECT
    recharge,transfer, (stat_time - INTERVAL MINUTE(stat_time)%10 MINUTE) d FROM `light_financial_stat_real`
    WHERE stat_time >= #{chooseTime} - INTERVAL 2 WEEK AND stat_time  <![CDATA[ < ]]>  #{chooseTime} + INTERVAL 1 DAY - INTERVAL 2 WEEK
    ) m2
    GROUP BY d) mm2,
    (SELECT SUM(recharge) recharge,SUM(transfer) transfer,(d + INTERVAL 3 WEEK) d FROM
    (
    SELECT
    recharge,transfer, (stat_time - INTERVAL MINUTE(stat_time)%10 MINUTE) d FROM `light_financial_stat_real`
    WHERE stat_time >= #{chooseTime} - INTERVAL 3 WEEK AND stat_time  <![CDATA[ < ]]>  #{chooseTime} + INTERVAL 1 DAY - INTERVAL 3 WEEK
    ) m3
    GROUP BY d) mm3,
    (SELECT SUM(recharge) recharge,SUM(transfer) transfer,(d + INTERVAL 4 WEEK) d FROM
    (
    SELECT
    recharge,transfer, (stat_time - INTERVAL MINUTE(stat_time)%10 MINUTE) d FROM `light_financial_stat_real`
    WHERE stat_time >= #{chooseTime} - INTERVAL 4 WEEK AND stat_time  <![CDATA[ < ]]>  #{chooseTime} + INTERVAL 1 DAY - INTERVAL 4 WEEK
    ) m4
    GROUP BY d) mm4,
    (SELECT SUM(recharge) recharge,SUM(transfer) transfer,(d + INTERVAL 5 WEEK) d FROM
    (
    SELECT
    recharge,transfer, (stat_time - INTERVAL MINUTE(stat_time)%10 MINUTE) d FROM `light_financial_stat_real`
    WHERE stat_time >= #{chooseTime} - INTERVAL 5 WEEK AND stat_time  <![CDATA[ < ]]>  #{chooseTime} + INTERVAL 1 DAY - INTERVAL 5 WEEK
    ) m5
    GROUP BY d) mm5,
    (SELECT SUM(recharge) recharge,SUM(transfer) transfer,(d + INTERVAL 6 WEEK) d FROM
    (
    SELECT
    recharge,transfer, (stat_time - INTERVAL MINUTE(stat_time)%10 MINUTE) d FROM `light_financial_stat_real`
    WHERE stat_time >= #{chooseTime} - INTERVAL 6 WEEK AND stat_time  <![CDATA[ < ]]>  #{chooseTime} + INTERVAL 1 DAY - INTERVAL 6 WEEK
    ) m6
    GROUP BY d) mm6
    WHERE mm.d = mm1.d
    AND mm.d = mm2.d
    AND mm.d = mm3.d
    AND mm.d = mm4.d
    AND mm.d = mm5.d
    AND mm.d = mm6.d
  </select>

  <select id="getChongTiDayInfo" parameterType="java.util.Map" resultType="java.util.Map">
	<!-- select A.statDate, A.recharge, A.transfer, A.retain, ifnull(B.amount,0) manul_recharge, A.recharge-ifnull(B.amount,0) auto_recharge
	from
	(SELECT DATE(stat_time) statDate,
	SUM(recharge) recharge,SUM(transfer) transfer,SUM(retain) retain
	FROM light_financial_stat_real
	WHERE stat_time >= #{startDate}
	AND stat_time  <![CDATA[ < ]]>  #{endDate} + INTERVAL 1 DAY
	GROUP BY statDate) A
	left join
	(SELECT stat_date statDate,SUM(amount) amount
	FROM light_financial_detail_stat_day
	WHERE is_income = 8
	AND stat_date between #{startDate} and #{endDate}
	group by statDate) B
	on A.statDate = B.statDate-->

	SELECT A.statDate, A.recharge, A.transfer, A.retain, IFNULL(B.amount,0) manul_recharge, A.recharge-IFNULL(B.amount,0) auto_recharge
	FROM
	(SELECT stat_date statDate,recharge,transfer,surplus retain
	FROM light_financial_stat_day
	WHERE stat_date BETWEEN #{startDate} and #{endDate}) A
	LEFT JOIN
	(SELECT stat_date statDate,SUM(amount) amount
	FROM light_financial_detail_stat_day
	WHERE is_income = 8
	AND stat_date BETWEEN #{startDate} and #{endDate}
	GROUP BY statDate) B
	ON A.statDate = B.statDate
  </select>

  <select id="getMerChongTiDayInfo" parameterType="java.util.Map" resultType="java.util.Map">
	  SELECT DATE(stat_time) statDate,SUM(transfer) transfer
	  FROM dw.`light_merchant_transfer_stat_real`
	  WHERE stat_time >= #{startDate} AND stat_time <![CDATA[ < ]]> #{endDate} + INTERVAL  1 DAY
	  GROUP BY statDate
	  ORDER BY statDate ASC
	</select>

  <select id="getChongTiHourInfo" parameterType="java.util.Map" resultType="java.util.Map">
  	<!-- SELECT stat_time statDate, recharge,transfer
	FROM light_financial_stat_real
	WHERE DATE(stat_time) = #{startDate} -->
	<!--
	SELECT DATE_FORMAT(stat_time,'%H') statHour, stat_time statDate,
	sum(recharge) recharge,sum(transfer) transfer,sum(retain) retain
	FROM light_financial_stat_real
	WHERE DATE(stat_time) = #{startDate}
	group by DATE_FORMAT(stat_time,'%Y%m%d%H')
	 -->
	SELECT DATE_FORMAT(a.dd,'%H') statHour,a.dd statDate,a.re recharge,a.tr transfer,a.retain,ROUND((
				SELECT SQRT(SUM(POW(ri.re,2))/COUNT(*)) FROM (
				SELECT DATE(stat_time)+INTERVAL HOUR(stat_time) HOUR + INTERVAL FLOOR(MINUTE(stat_time)/#{duration})*#{duration} MINUTE dd,SUM(recharge) re#,sum(transfer) tr
					FROM classified.cla_financial_stat_real
				 WHERE stat_time >= #{startDate} - INTERVAL 6 WEEK
					 AND WEEKDAY(stat_time) = WEEKDAY(#{startDate})
				 GROUP BY dd) ri
				 WHERE HOUR(ri.dd)=HOUR(a.dd) AND MINUTE(ri.dd)=MINUTE(a.dd)),2) recharge_sqrt,ROUND((
				SELECT SQRT(SUM(POW(ti.tr,2))/COUNT(*)) FROM (
				SELECT DATE(stat_time)+INTERVAL HOUR(stat_time) HOUR + INTERVAL FLOOR(MINUTE(stat_time)/#{duration})*#{duration} MINUTE dd,/*sum(recharge) re,*/SUM(transfer) tr
					FROM classified.cla_financial_stat_real
				 WHERE stat_time >= #{startDate} - INTERVAL 6 WEEK
					 AND WEEKDAY(stat_time) = WEEKDAY(#{startDate})
				 GROUP BY dd) ti
				 WHERE HOUR(ti.dd)=HOUR(a.dd) AND MINUTE(ti.dd)=MINUTE(a.dd)),2) transfer_sqrt,
				 (SELECT ROUND(SUM(recharge)/IF(#{startDate}<![CDATA[ < ]]>CURDATE(),24*60/#{duration},HOUR(NOW())*60/#{duration}+FLOOR(MINUTE(NOW())/60)+1),2)
				 FROM classified.cla_financial_stat_real
				 WHERE stat_time >= #{startDate}
				 AND stat_time <![CDATA[ < ]]> #{startDate} + INTERVAL 1 DAY) recharge_avg,
				 (SELECT ROUND(SUM(transfer)/IF(#{startDate}<![CDATA[ < ]]>CURDATE(),24*60/#{duration},HOUR(NOW())*60/#{duration}+FLOOR(MINUTE(NOW())/60)+1),2)
				 FROM classified.cla_financial_stat_real
				 WHERE stat_time >= #{startDate}
				 AND stat_time <![CDATA[ < ]]> #{startDate} + INTERVAL 1 DAY) transfer_avg
	  FROM (
	SELECT DATE(stat_time)+INTERVAL HOUR(stat_time) HOUR + INTERVAL FLOOR(MINUTE(stat_time)/#{duration})*#{duration} MINUTE dd,SUM(recharge) re,SUM(transfer) tr,SUM(retain) retain
	  FROM classified.cla_financial_stat_real o
	 WHERE stat_time >= #{startDate}
	   AND stat_time <![CDATA[ < ]]> #{startDate} + INTERVAL 1 DAY
	 GROUP BY dd) a;
  </select>

	<select id="getMerChongTiHourInfo" parameterType="java.util.Map" resultType="java.util.Map">
		SELECT DATE_FORMAT(a.dd,'%H') statHour,a.dd statDate,a.tr transfer,ROUND((
		SELECT SQRT(SUM(POW(ti.tr,2))/COUNT(*)) FROM (
		SELECT DATE(stat_time)+INTERVAL HOUR(stat_time) HOUR + INTERVAL FLOOR(MINUTE(stat_time)/#{duration})*#{duration} MINUTE dd,/*sum(recharge) re,*/SUM(transfer) tr
		FROM light_merchant_transfer_stat_real
		WHERE stat_time >= #{startDate} - INTERVAL 6 WEEK
		AND WEEKDAY(stat_time) = WEEKDAY(#{startDate})
		GROUP BY dd) ti
		WHERE HOUR(ti.dd)=HOUR(a.dd) AND MINUTE(ti.dd)=MINUTE(a.dd)),2) transfer_sqrt,
		(SELECT ROUND(SUM(transfer)/IF(#{startDate}<![CDATA[ < ]]>CURDATE(),24*60/#{duration},HOUR(NOW())*60/#{duration}+FLOOR(MINUTE(NOW())/60)+1),2)
		FROM light_merchant_transfer_stat_real
		WHERE stat_time >= #{startDate}
		AND stat_time <![CDATA[ < ]]> #{startDate} + INTERVAL 1 DAY) transfer_avg
		FROM (
		SELECT DATE(stat_time)+INTERVAL HOUR(stat_time) HOUR + INTERVAL FLOOR(MINUTE(stat_time)/#{duration})*#{duration} MINUTE dd,SUM(transfer) tr
		FROM light_merchant_transfer_stat_real o
		WHERE stat_time >= #{startDate}
		AND stat_time <![CDATA[ < ]]> #{startDate} + INTERVAL 1 DAY
		GROUP BY dd) a;
	</select>

  <select id="getChongTiHourInfoForFlowChart" parameterType="java.util.Map" resultType="java.util.Map">
  	SELECT DATE_FORMAT(stat_time,'%H') statHour,DATE(stat_time)+INTERVAL HOUR(stat_time) HOUR dd,SUM(recharge) recharge,SUM(transfer) transfer,SUM(retain) retain
	  FROM light_financial_stat_real o
	 WHERE stat_time >= #{startDate}
	   AND stat_time <![CDATA[ < ]]> #{startDate} + INTERVAL 1 DAY
	 GROUP BY dd
  </select>

	<select id="getOverviewInfo" parameterType="java.util.Map" resultType="java.util.Map">
		SELECT
		ifnull(chongti.retain,0) retain,
		ifnull(finance_surplus_recent.all_retain,0) all_retain,
		ifnull(chongti.recharge,0) recharge,
		ifnull(chongti.transfer,0) transfer,
		ifnull(chongti.refund,0) refund,
		ifnull(shoudong.amount,0) manul_recharge,
		ifnull((chongti.recharge-ifnull(shoudong.amount,0)),0) auto_recharge,
		ifnull(chongti_today.retain_today,0) retain_today,
		ifnull(chongti_today.recharge_today,0) recharge_today,
		ifnull(chongti_today.transfer_today,0) transfer_today,
		ifnull(chongti_today.refund_today,0) refund_today,
		ifnull((chongti_today.recharge_today-ifnull(shoudong.amount,0)),0) auto_recharge_today,
		ifnull(zichan.total_assets,0) total_assets,
		ifnull(zichan.balance,0) balance,
		ifnull(zichan.qwcb_balance,0) qwcb_balance,
		ifnull(zhichu.amount,0) xiaofei_amount,
		ifnull(shouru.amount,0) jiangli_amount,
		ifnull(baochou.amount,0) baochou_amount,
		ifnull(weishang.amount,0) weishang_amount,
		ifnull(weishang.shangjia_zhuanru,0) shangjia_zhuanru,
		ifnull(weishang.shangpin_tuikuan,0) shangpin_tuikuan,
		ifnull(weishang.shangjia_zhuanchu,0) shangjia_zhuanchu,
		ifnull(weishang.shangping_goumai,0) shangping_goumai,
		ifnull(shouru_items1.amount,0) shouru_items1_amount,
		ifnull(shouru_items2.amount,0) shouru_items2_amount,
		ifnull(shouru_items3.amount,0) shouru_items3_amount,
		ifnull(shouru_items4.amount,0) shouru_items4_amount,
		ifnull(shouru_items5.amount,0) shouru_items5_amount,
		ifnull(shouru_items6.amount,0) shouru_items6_amount,
		ifnull(shouru_items1.flow_desc,'') shouru_items1_flow_desc,
		ifnull(shouru_items2.flow_desc,'') shouru_items2_flow_desc,
		ifnull(shouru_items3.flow_desc,'') shouru_items3_flow_desc,
		ifnull(shouru_items4.flow_desc,'') shouru_items4_flow_desc,
		ifnull(shouru_items5.flow_desc,'') shouru_items5_flow_desc,
		ifnull(shouru_items6.flow_desc,'') shouru_items6_flow_desc,
		ifnull(zhichu_items1.amount,0) zhichu_items1_amount,
		ifnull(zhichu_items2.amount,0) zhichu_items2_amount,
		ifnull(zhichu_items3.amount,0) zhichu_items3_amount,
		ifnull(zhichu_items4.amount,0) zhichu_items4_amount,
		ifnull(zhichu_items5.amount,0) zhichu_items5_amount,
		ifnull(zhichu_items6.amount,0) zhichu_items6_amount,
		ifnull(zhichu_items1.flow_desc,'') zhichu_items1_flow_desc,
		ifnull(zhichu_items2.flow_desc,'') zhichu_items2_flow_desc,
		ifnull(zhichu_items3.flow_desc,'') zhichu_items3_flow_desc,
		ifnull(zhichu_items4.flow_desc,'') zhichu_items4_flow_desc,
		ifnull(zhichu_items5.flow_desc,'') zhichu_items5_flow_desc,
		ifnull(zhichu_items6.flow_desc,'') zhichu_items6_flow_desc
		FROM
		(SELECT recharge, transfer,surplus retain, refund
		FROM light_financial_stat_day
		WHERE stat_date = IF(#{statDate}=CURDATE(),CURDATE()-INTERVAL 1 DAY,#{statDate})) chongti,
		(SELECT surplus all_retain
		FROM dc.finance_surplus_recent
		WHERE DATE(stat_date) = #{statDate}
		AND surplus > 0
		ORDER BY stat_date DESC
		LIMIT 1) finance_surplus_recent,
		(SELECT SUM(recharge) recharge_today,SUM(transfer) transfer_today,SUM(retain) retain_today,SUM(refund) refund_today
		FROM light_financial_stat_real
		WHERE DATE(stat_time) = #{statDate}) chongti_today,
		(SELECT SUM(amount) amount
		FROM light_financial_detail_stat_day
		WHERE is_income = 8
		AND stat_date = #{statDate}) shoudong,
		(SELECT total_assets, balance,qwcb_balance
		FROM heavy_assets_stat_real
		WHERE stat_date = #{statDate}
		AND total_assets != 0
		ORDER BY stat_hour DESC, ten_minute DESC
		LIMIT 1) zichan,
		(SELECT SUM(amount) amount,
		SUM(if(type=74,amount,0)) shangjia_zhuanru,
		SUM(IF(TYPE=131,amount,0)) shangpin_tuikuan,
		SUM(IF(TYPE=73,amount,0)) shangjia_zhuanchu,
		SUM(IF(TYPE=130,amount,0)) shangping_goumai
		FROM dw.light_financial_detail_stat_day
		WHERE stat_date = #{statDate}
		AND TYPE IN(74,131,73,130)) weishang,
		(SELECT SUM(amount) amount
		FROM dw.light_financial_detail_stat_day
		WHERE stat_date = #{statDate}
		AND TYPE IN(161,165,226,160,222,224)) baochou,
		(SELECT SUM(amount) amount
		FROM dw.light_financial_detail_stat_day
		WHERE stat_date = #{statDate}
		AND is_income = 1
		AND TYPE NOT IN (74,84,131,207,221,223,161,255,239,353,291)) shouru,
		(SELECT SUM(amount) amount
		FROM dw.light_financial_detail_stat_day
		WHERE stat_date = #{statDate}
		AND is_income = 2
		AND TYPE NOT IN (73,83,130,205,220,160,290,166)) zhichu,
		(SELECT TYPE,SUM(amount) amount, flow_desc
		FROM dw.light_financial_detail_stat_day
		WHERE stat_date = #{statDate}
		AND is_income = 1
		AND TYPE NOT IN (74,84,131,207,221,223,161,255,239,353,291)
		GROUP BY TYPE
		ORDER BY amount DESC
		LIMIT 0,1) shouru_items1,
		(SELECT TYPE,SUM(amount) amount, flow_desc
		FROM dw.light_financial_detail_stat_day
		WHERE stat_date = #{statDate}
		AND is_income = 1
		AND TYPE NOT IN (74,84,131,207,221,223,161,255,239,353,291)
		GROUP BY TYPE
		ORDER BY amount DESC
		LIMIT 1,1) shouru_items2,
		(SELECT TYPE,SUM(amount) amount, flow_desc
		FROM dw.light_financial_detail_stat_day
		WHERE stat_date = #{statDate}
		AND is_income = 1
		AND TYPE NOT IN (74,84,131,207,221,223,161,255,239,353,291)
		GROUP BY TYPE
		ORDER BY amount DESC
		LIMIT 2,1) shouru_items3,
		(SELECT TYPE,SUM(amount) amount, flow_desc
		FROM dw.light_financial_detail_stat_day
		WHERE stat_date = #{statDate}
		AND is_income = 1
		AND TYPE NOT IN (74,84,131,207,221,223,161,255,239,353,291)
		GROUP BY TYPE
		ORDER BY amount DESC
		LIMIT 3,1) shouru_items4,
		(SELECT TYPE,SUM(amount) amount, flow_desc
		FROM dw.light_financial_detail_stat_day
		WHERE stat_date = #{statDate}
		AND is_income = 1
		AND TYPE NOT IN (74,84,131,207,221,223,161,255,239,353,291)
		GROUP BY TYPE
		ORDER BY amount DESC
		LIMIT 4,1) shouru_items5,
		(SELECT -1 TYPE, SUM(amount) amount, '其它' flow_desc
		FROM
		(SELECT SUM(amount) amount
		FROM dw.light_financial_detail_stat_day
		WHERE stat_date = #{statDate}
		AND is_income = 1
		AND TYPE NOT IN (74,84,131,207,221,223,161,255,239,353,291)
		GROUP BY TYPE
		ORDER BY amount DESC
		LIMIT 5,1000000) A) shouru_items6,
		(SELECT TYPE,SUM(amount) amount,flow_desc
		FROM dw.light_financial_detail_stat_day
		WHERE stat_date = #{statDate}
		AND is_income = 2
		AND TYPE NOT IN (73,83,130,205,220,160,290,166)
		GROUP BY TYPE
		ORDER BY amount ASC
		LIMIT 0,1) zhichu_items1,
		(SELECT TYPE,SUM(amount) amount,flow_desc
		FROM dw.light_financial_detail_stat_day
		WHERE stat_date = #{statDate}
		AND is_income = 2
		AND TYPE NOT IN (73,83,130,205,220,160,290,166)
		GROUP BY TYPE
		ORDER BY amount ASC
		LIMIT 1,1) zhichu_items2,
		(SELECT TYPE,SUM(amount) amount,flow_desc
		FROM dw.light_financial_detail_stat_day
		WHERE stat_date = #{statDate}
		AND is_income = 2
		AND TYPE NOT IN (73,83,130,205,220,160,290,166)
		GROUP BY TYPE
		ORDER BY amount ASC
		LIMIT 2,1) zhichu_items3,
		(SELECT TYPE,SUM(amount) amount,flow_desc
		FROM dw.light_financial_detail_stat_day
		WHERE stat_date = #{statDate}
		AND is_income = 2
		AND TYPE NOT IN (73,83,130,205,220,160,290,166)
		GROUP BY TYPE
		ORDER BY amount ASC
		LIMIT 3,1) zhichu_items4,
		(SELECT TYPE,SUM(amount) amount,flow_desc
		FROM dw.light_financial_detail_stat_day
		WHERE stat_date = #{statDate}
		AND is_income = 2
		AND TYPE NOT IN (73,83,130,205,220,160,290,166)
		GROUP BY TYPE
		ORDER BY amount ASC
		LIMIT 4,1) zhichu_items5,
		(SELECT '-1' TYPE, SUM(amount) amount, '其它' flow_desc
		FROM
		(SELECT TYPE,SUM(amount) amount,flow_desc
		FROM dw.light_financial_detail_stat_day
		WHERE stat_date = #{statDate}
		AND is_income = 2
		AND TYPE NOT IN (73,83,130,205,220,160,290,166)
		GROUP BY TYPE
		ORDER BY amount ASC
		LIMIT 5,1000000) A) zhichu_items6
	</select>

  <select id="getOverviewInfoNew" parameterType="java.util.Map" resultType="java.util.Map">
 SELECT
	ifnull(chongti.retain,0) retain,
	ifnull(finance_surplus_recent.all_retain,0) all_retain,
	ifnull(chongti.recharge,0) recharge,
	ifnull(chongti.transfer,0) transfer,
	ifnull(chongti.refund,0) refund,
	ifnull(shoudong.amount,0) manul_recharge,
	ifnull((chongti.recharge-ifnull(shoudong.amount,0)),0) auto_recharge,
	ifnull(chongti_today.retain_today,0) retain_today,
	ifnull(chongti_today.recharge_today,0) recharge_today,
	ifnull(chongti_today.transfer_today,0) transfer_today,
	ifnull(chongti_today.refund_today,0) refund_today,
	ifnull((chongti_today.recharge_today-ifnull(shoudong.amount,0)),0) auto_recharge_today,
	ifnull(zichan.total_assets,0) total_assets,
	ifnull(zichan.balance,0) balance,
	ifnull(zichan.qwcb_balance,0) qwcb_balance,
	ifnull(zhichu.amount,0) xiaofei_amount,
	ifnull(shouru.amount,0) jiangli_amount,
	ifnull(baochou.amount,0) baochou_amount,
	ifnull(weishang.amount,0) weishang_amount,
	ifnull(weishang.shangjia_zhuanru,0) shangjia_zhuanru,
	ifnull(weishang.shangpin_tuikuan,0) shangpin_tuikuan,
	ifnull(weishang.shangjia_zhuanchu,0) shangjia_zhuanchu,
	ifnull(weishang.shangping_goumai,0) shangping_goumai,
	ifnull(shouru_items1.amount,0) shouru_items1_amount,
	ifnull(shouru_items2.amount,0) shouru_items2_amount,
	ifnull(shouru_items3.amount,0) shouru_items3_amount,
	ifnull(shouru_items4.amount,0) shouru_items4_amount,
	ifnull(shouru_items5.amount,0) shouru_items5_amount,
	ifnull(shouru_items6.amount,0) shouru_items6_amount,
	ifnull(shouru_items1.flow_desc,'') shouru_items1_flow_desc,
	ifnull(shouru_items2.flow_desc,'') shouru_items2_flow_desc,
	ifnull(shouru_items3.flow_desc,'') shouru_items3_flow_desc,
	ifnull(shouru_items4.flow_desc,'') shouru_items4_flow_desc,
	ifnull(shouru_items5.flow_desc,'') shouru_items5_flow_desc,
	ifnull(shouru_items6.flow_desc,'') shouru_items6_flow_desc,
	ifnull(zhichu_items1.amount,0) zhichu_items1_amount,
	ifnull(zhichu_items2.amount,0) zhichu_items2_amount,
	ifnull(zhichu_items3.amount,0) zhichu_items3_amount,
	ifnull(zhichu_items4.amount,0) zhichu_items4_amount,
	ifnull(zhichu_items5.amount,0) zhichu_items5_amount,
	ifnull(zhichu_items6.amount,0) zhichu_items6_amount,
	ifnull(zhichu_items1.flow_desc,'') zhichu_items1_flow_desc,
	ifnull(zhichu_items2.flow_desc,'') zhichu_items2_flow_desc,
	ifnull(zhichu_items3.flow_desc,'') zhichu_items3_flow_desc,
	ifnull(zhichu_items4.flow_desc,'') zhichu_items4_flow_desc,
	ifnull(zhichu_items5.flow_desc,'') zhichu_items5_flow_desc,
	ifnull(zhichu_items6.flow_desc,'') zhichu_items6_flow_desc
	FROM

	(SELECT recharge, transfer,surplus retain, refund
	FROM light_financial_stat_day
	WHERE stat_date = IF(#{statDate}=CURDATE(),CURDATE()-INTERVAL 1 DAY,#{statDate})) chongti,

	(SELECT surplus all_retain
	FROM dc.finance_surplus_recent
	WHERE DATE(stat_date) = #{statDate}
	AND surplus > 0
	ORDER BY stat_date DESC
	LIMIT 1) finance_surplus_recent,

	(SELECT SUM(recharge) recharge_today,SUM(transfer) transfer_today,SUM(retain) retain_today,SUM(refund) refund_today
	FROM light_financial_stat_real
	WHERE DATE(stat_time) = #{statDate}) chongti_today,
	(SELECT SUM(amount) amount
	FROM light_financial_detail_stat_day
	WHERE is_income = 8
	AND stat_date = #{statDate}) shoudong,

	(SELECT total_assets, balance,qwcb_balance
	FROM heavy_assets_stat_real
	WHERE stat_date = #{statDate}
	AND total_assets != 0
	ORDER BY stat_hour DESC, ten_minute DESC
	LIMIT 1) zichan,

	(SELECT SUM(amount) amount,
	SUM(if(busi_id=56,amount,0)) shangjia_zhuanru,
	SUM(IF(busi_id =2,amount,0)) shangpin_tuikuan,
	SUM(IF(busi_id=51,amount,0)) shangjia_zhuanchu,
	SUM(IF(busi_id =1,amount,0)) shangping_goumai
	FROM dw.light_financial_detail_stat_day
	WHERE stat_date = #{statDate}
	AND busi_id IN(1,2,51,56)) weishang,

	(SELECT SUM(amount) amount,
			SUM(if(busi_id =17,amount,0)) baochou_mairu,
	        SUM(IF(busi_id =18,amount,0)) baochou_maichu,
	        SUM(IF(busi_id =19,amount,0)) baochou_poundage
	FROM dw.light_financial_detail_stat_day
	WHERE stat_date = #{statDate}
	AND busi_id IN(17,18,19)) baochou,

	(SELECT SUM(amount) amount
	FROM dw.light_financial_detail_stat_day
	WHERE stat_date = #{statDate}
	AND is_income in (1,3)
	AND busi_id NOT IN (2,4,8,9,12,18,19,22,32,36,43,49,54,56,63,77,84,90,93,94)) shouru,

	(SELECT SUM(amount) amount
	FROM dw.light_financial_detail_stat_day
	WHERE stat_date = #{statDate}
	AND is_income = 2
	AND busi_id NOT IN (7,17,47,51,54,64,67,76,83,89,91)) zhichu,

	(SELECT TYPE,SUM(amount) amount, flow_desc
	FROM dw.light_financial_detail_stat_day
	WHERE stat_date = #{statDate}
	AND is_income in (1,3)
	AND busi_id NOT IN (2,4,8,9,12,18,19,22,32,36,43,49,54,56,63,77,84,90,93,94)
	GROUP BY TYPE
	ORDER BY amount DESC
	LIMIT 0,1) shouru_items1,

	(SELECT TYPE,SUM(amount) amount, flow_desc
	FROM dw.light_financial_detail_stat_day
	WHERE stat_date = #{statDate}
	AND is_income in (1,3)
	AND busi_id NOT IN (2,4,8,9,12,18,19,22,32,36,43,49,54,56,63,77,84,90,93,94)
	GROUP BY TYPE
	ORDER BY amount DESC
	LIMIT 1,1) shouru_items2,

	(SELECT TYPE,SUM(amount) amount, flow_desc
	FROM dw.light_financial_detail_stat_day
	WHERE stat_date = #{statDate}
	AND is_income in (1,3)
	AND busi_id NOT IN (2,4,8,9,12,18,19,22,32,36,43,49,54,56,63,77,84,90,93,94)
	GROUP BY TYPE
	ORDER BY amount DESC
	LIMIT 2,1) shouru_items3,

	(SELECT TYPE,SUM(amount) amount, flow_desc
	FROM dw.light_financial_detail_stat_day
	WHERE stat_date = #{statDate}
	AND is_income in (1,3)
	AND busi_id NOT IN (2,4,8,9,12,18,19,22,32,36,43,49,54,56,63,77,84,90,93,94)
	GROUP BY TYPE
	ORDER BY amount DESC
	LIMIT 3,1) shouru_items4,

	(SELECT TYPE,SUM(amount) amount, flow_desc
	FROM dw.light_financial_detail_stat_day
	WHERE stat_date = #{statDate}
	AND is_income in (1,3)
	AND busi_id NOT IN (2,4,8,9,12,18,19,22,32,36,43,49,54,56,63,77,84,90,93,94)
	GROUP BY TYPE
	ORDER BY amount DESC
	LIMIT 4,1) shouru_items5,

	(SELECT -1 TYPE, SUM(amount) amount, '其它' flow_desc
	FROM
	(SELECT SUM(amount) amount
	FROM dw.light_financial_detail_stat_day
	WHERE stat_date = #{statDate}
	AND is_income in (1,3)
	AND busi_id NOT IN (2,4,8,9,12,18,19,22,32,36,43,49,54,56,63,77,84,90,93,94)
	GROUP BY TYPE
	ORDER BY amount DESC
	LIMIT 5,1000000) A) shouru_items6,

	(SELECT TYPE,SUM(amount) amount,flow_desc
	FROM dw.light_financial_detail_stat_day
	WHERE stat_date = #{statDate}
	AND is_income = 2
	AND busi_id NOT IN (7,17,47,51,54,64,67,76,83,89,91)
	GROUP BY TYPE
	ORDER BY amount ASC
	LIMIT 0,1) zhichu_items1,

	(SELECT TYPE,SUM(amount) amount,flow_desc
	FROM dw.light_financial_detail_stat_day
	WHERE stat_date = #{statDate}
	AND is_income = 2
	AND busi_id NOT IN (7,17,47,51,54,64,67,76,83,89,91)
	GROUP BY TYPE
	ORDER BY amount ASC
	LIMIT 1,1) zhichu_items2,

	(SELECT TYPE,SUM(amount) amount,flow_desc
	FROM dw.light_financial_detail_stat_day
	WHERE stat_date = #{statDate}
	AND is_income = 2
	AND busi_id NOT IN (7,17,47,51,54,64,67,76,83,89,91)
	GROUP BY TYPE
	ORDER BY amount ASC
	LIMIT 2,1) zhichu_items3,

	(SELECT TYPE,SUM(amount) amount,flow_desc
	FROM dw.light_financial_detail_stat_day
	WHERE stat_date = #{statDate}
	AND is_income = 2
	AND busi_id NOT IN (7,17,47,51,54,64,67,76,83,89,91)
	GROUP BY TYPE
	ORDER BY amount ASC
	LIMIT 3,1) zhichu_items4,

	(SELECT TYPE,SUM(amount) amount,flow_desc
	FROM dw.light_financial_detail_stat_day
	WHERE stat_date = #{statDate}
	AND is_income = 2
	AND busi_id NOT IN (7,17,47,51,54,64,67,76,83,89,91)
	GROUP BY TYPE
	ORDER BY amount ASC
	LIMIT 4,1) zhichu_items5,

	(SELECT '-1' TYPE, SUM(amount) amount, '其它' flow_desc
	FROM
	(SELECT TYPE,SUM(amount) amount,flow_desc
		FROM dw.light_financial_detail_stat_day
		WHERE stat_date = #{statDate}
		AND is_income = 2
		AND busi_id NOT IN (7,17,47,51,54,64,67,76,83,89,91)
		GROUP BY TYPE
		ORDER BY amount ASC
		LIMIT 5,1000000) A) zhichu_items6
  </select>

  <select id="getAssetsHourInfo" parameterType="java.util.Map" resultType="java.util.Map">
  	SELECT stat_hour statHour, total_assets, balance, qwcb_balance,
    		TIMESTAMP(stat_date) + INTERVAL stat_hour HOUR statTime
	FROM heavy_assets_stat_real
	WHERE stat_date = #{statDate}
	AND ten_minute = 0
  </select>

  <select id="getAssetsDayInfo" parameterType="java.util.Map" resultType="java.util.Map">
  	SELECT stat_date statDate, total_assets, balance, qwcb_balance
	FROM heavy_assets_stat_real
	WHERE stat_date between #{startDate} and #{endDate}
	AND stat_hour = 23 AND ten_minute = 5;
  </select>

  <select id="getCbzcChongtiDayInfo" parameterType="java.util.Map" resultType="java.util.Map">
  	SELECT stat_date statDate, recharge, transfer
	FROM light_chengbang_ct_stat_day
	WHERE stat_date between #{startDate} and #{endDate}
  </select>

  <select id="getCbzcZichanDayInfo" parameterType="java.util.Map" resultType="java.util.Map">
    select A.statDate,
    A.qwcb_balance,B.qwcb_balance qwcb_balance_1d,C.qwcb_balance qwcb_balance_1w,
    ifnull(A.qwcb_balance-B.qwcb_balance, 0) qwcb_balance_1d_add,
    ifnull(A.qwcb_balance-C.qwcb_balance, 0) qwcb_balance_1w_add,
    ifnull((A.qwcb_balance-B.qwcb_balance)/B.qwcb_balance, 0) qwcb_balance_1d_ratio,
    ifnull((A.qwcb_balance-C.qwcb_balance)/C.qwcb_balance, 0) qwcb_balance_1w_ratio
    from
  	(SELECT stat_date statDate, qwcb_balance
	FROM heavy_assets_stat_real
	WHERE stat_date between #{startDate} and #{endDate}
	AND stat_hour = 23 AND ten_minute = 5) A
	left join
	(SELECT stat_date + interval 1 day statDate, qwcb_balance
	FROM heavy_assets_stat_real
	WHERE stat_date between #{startDate} - interval 1 day and #{endDate} - interval 1 day
	AND stat_hour = 23 AND ten_minute = 5) B
	on A.statDate = B.statDate
	left join
	(SELECT stat_date + interval 1 week statDate, qwcb_balance
	FROM heavy_assets_stat_real
	WHERE stat_date between #{startDate} - interval 1 week and #{endDate} - interval 1 week
	AND stat_hour = 23 AND ten_minute = 5) C
	on A.statDate = C.statDate
  </select>

  <select id="getXiaofeiDayInfo" parameterType="java.util.Map" resultType="java.util.Map">
	SELECT stat_date statDate, SUM(amount) amount
	FROM dw.light_financial_detail_stat_day
	WHERE stat_date between #{startDate} and #{endDate}
	AND is_income = 2
	AND TYPE NOT IN (73,83,130,205,220,160,290,166)
	GROUP BY stat_date;
  </select>
  <select id="getJiangliDayInfo" parameterType="java.util.Map" resultType="java.util.Map">
  	SELECT stat_date statDate, SUM(amount) amount,
       (SELECT SUM(amount)
        FROM light_financial_detail_stat_day i
        WHERE i.is_income = 1
	          AND i.TYPE NOT IN (74,84,131,207,221,223,161,255,239,353,291)
	          AND i.stat_date BETWEEN #{startDate} AND t.stat_date
        )  amount_sum
	FROM dw.light_financial_detail_stat_day t
	WHERE stat_date between #{startDate} and #{endDate}
	AND is_income = 1
	AND TYPE NOT IN (74,84,131,207,221,223,161,255,239,353,291)
	GROUP BY stat_date;
  </select>
  <select id="getBaochouDayInfo" parameterType="java.util.Map" resultType="java.util.Map">
  	SELECT stat_date statDate, SUM(amount) amount
	FROM dw.light_financial_detail_stat_day
	WHERE stat_date between #{startDate} and #{endDate}
	AND TYPE IN(161,165,226,160,222,224)
	GROUP BY stat_date;
  </select>
  <select id="getWeishangDayInfo" parameterType="java.util.Map" resultType="java.util.Map">
  	SELECT stat_date statDate, SUM(amount) amount
	FROM dw.light_financial_detail_stat_day
	WHERE stat_date between #{startDate} and #{endDate}
	AND TYPE IN(74,131,73,130)
	GROUP BY stat_date;
  </select>

  <select id="getBaoquanOverviewInfo" resultType="java.util.Map" parameterType="java.util.Map">
	SELECT C.todayFafang, C.todayXiaofei, A.sumFafang, A.sumXiaofei, B.sumShengyu
		FROM
		(SELECT
		SUM(IF(pay_type=1, coupon_amount, 0)) sumFafang,
		-1*SUM(IF(pay_type=2, coupon_amount, 0)) sumXiaofei
		FROM dw.baoquan_flow_day2 a,dw.baoquan_flow_busi_type b
		WHERE a.biz_type=b.biz_type
		AND b.type_id not in (15,18)) A,
		(SELECT coupon_amounts sumShengyu
		FROM dw.baoquan_account_day
		WHERE stat_date = curdate() - interval 1 day) B,
		(SELECT
		SUM(IF(pay_type=1, coupon_amount, 0)) todayFafang,
		-1*SUM(IF(pay_type=2, coupon_amount, 0)) todayXiaofei
		FROM dw.baoquan_flow_day2 a,dw.baoquan_flow_busi_type b
		WHERE a.biz_type=b.biz_type
		AND b.type_id not in (15,18)
		AND stat_date = curdate() - interval 1 day) C
	</select>


	<select id="getBaoquan30dInfoTest" resultType="java.util.Map" parameterType="java.util.Map">
		select A.statDate,A.qiandao,A.beituijianren,A.leipaibaoming,A.p2c,A.tuiguangdaren,
		A.baogou,A.gongzhonghao,A.market,A.youpiao,A.zhuce,
		A.task,A.others,
		B.hongbao,B.zhifu,B.youpiaoxuanzuo,B.sdk,B.shuifei,B.dianfei,B.meiqifei,B.huafei,
		ifnull(C.zhifu_tuidan_amount,0) zhifu_tuidan_amount,
		ifnull(C.zhifu_tuidan_num,0) zhifu_tuidan_num
		from
		(SELECT
		stat_date statDate,
		SUM(IF(biz_type=1,coupon_amount,0)) qiandao,
		SUM(IF(biz_type=4,coupon_amount,0)) task,
		SUM(IF(biz_type=31,coupon_amount,0)) beituijianren,
		SUM(IF(biz_type=34 OR biz_type=27 OR biz_type=64 OR biz_type=65,coupon_amount,0)) leipaibaoming,
		SUM(IF(biz_type=20,coupon_amount,0)) p2c,
		SUM(IF(biz_type=22 OR biz_type=36 OR biz_type=37 OR biz_type=38,coupon_amount,0)) tuiguangdaren,
		SUM(IF(biz_type=35 OR biz_type=57 OR biz_type=58,coupon_amount,0)) baogou,
		SUM(IF(biz_type=21,coupon_amount,0)) gongzhonghao,
		SUM(IF(biz_type=40 OR biz_type=52 OR biz_type=63 OR biz_type=51,coupon_amount,0)) market,
		SUM(IF(biz_type=41 OR biz_type=42,coupon_amount,0)) youpiao,
		SUM(IF(biz_type=53,coupon_amount,0)) zhuce,
		SUM(IF((biz_type!=1 AND biz_type!=4 AND biz_type!=31 AND biz_type!=34 AND biz_type!=20 AND biz_type!=22 AND biz_type!=35 AND biz_type!=57 AND biz_type!=58
		 AND biz_type!=27 AND biz_type!=64 AND biz_type!=65 AND biz_type!=36 AND biz_type!=37 AND biz_type!=38 AND biz_type!=21
		 AND biz_type!=40 AND biz_type!=52 AND biz_type!=63 AND biz_type!=51
		 AND biz_type!=41 AND biz_type!=42 AND biz_type!=53),coupon_amount,0)) others
		FROM dw.baoquan_flow_day2
		GROUP BY stat_date) A
		LEFT JOIN
		(SELECT
		stat_date statDate,
		-1*SUM(IF(biz_type=2,coupon_amount,0)) hongbao,
		-1*SUM(IF(biz_type=3,coupon_amount,0)) zhifu,
		-1*SUM(IF(biz_type=42,coupon_amount,0)) youpiaoxuanzuo,
		-1*SUM(IF(biz_type=48,coupon_amount,0)) sdk,
		-1*SUM(IF(biz_type=44,coupon_amount,0)) shuifei,
		-1*SUM(IF(biz_type=45,coupon_amount,0)) dianfei,
		-1*SUM(IF(biz_type=46,coupon_amount,0)) meiqifei,
		-1*SUM(IF(biz_type=47,coupon_amount,0)) huafei
		FROM dw.baoquan_flow_day2
		GROUP BY stat_date) B
		ON A.statDate = B.statDate
		LEFT JOIN
		(SELECT stat_date statDate,SUM(coupon_amount) zhifu_tuidan_amount,SUM(num) zhifu_tuidan_num
		FROM baoquan_flow_day2
		GROUP BY stat_date) C
		ON A.statDate = C.statDate
	</select>

	<select id="getBaoquan30dInfo" resultType="java.util.Map" parameterType="java.util.Map">
		select a.statDate,a.sign,a.task,a.task_share,a.baogou,a.leipai,a.weishang,a.O2O,a.p2c_first_rechange,a.p2c_behavior,a.p2c_assets,
        a.shejiao,a.market,a.hongbao,a.youpiao,a.baoyue,a.life_channel,a.register,a.other,
        b.duihongbao,b.merchant_plat_pay,b.youpiaoxuanzuo,b.sdk,b.life_pay,b.o2o_saoma,b.baoyuefabu,b.other others,
		ifnull(c.reject_amount,0) zhifu_tuidan_amount,
		ifnull(c.reject_num,0) zhifu_tuidan_num
		from
		(SELECT statDate,
		SUM(IF(coupon_type=1,coupon_amount,0)) sign, #签到送宝券
		SUM(IF(coupon_type=2,coupon_amount,0)) task, #任务送宝券
		SUM(IF(coupon_type=3,coupon_amount,0)) task_share, #任务分享
		SUM(IF(coupon_type=4,coupon_amount,0)) baogou, #宝购
		SUM(IF(coupon_type=5,coupon_amount,0)) leipai, #雷拍
		SUM(IF(coupon_type=6,coupon_amount,0)) weishang, #微商
		SUM(IF(coupon_type=7,coupon_amount,0)) O2O, #O2O
		SUM(IF(coupon_type=8,coupon_amount,0)) p2c_first_rechange, #P2C首次充值福利
    SUM(IF(coupon_type=9,coupon_amount,0)) p2c_behavior, #P2C行为福利
    SUM(IF(coupon_type=10,coupon_amount,0)) p2c_assets, #P2C资产福利
	  SUM(IF(coupon_type=11,coupon_amount,0)) shejiao, #社交
		SUM(IF(coupon_type=12,coupon_amount,0)) market, #应用市场
		SUM(IF(coupon_type=13,coupon_amount,0)) hongbao, #红包
		SUM(IF(coupon_type=14,coupon_amount,0)) youpiao, #有票
		SUM(IF(coupon_type=15,coupon_amount,0)) baoyue, #宝约
		SUM(IF(coupon_type=16,coupon_amount,0)) life_channel, #生活频道
		SUM(IF(coupon_type=17,coupon_amount,0)) register, #注册
		SUM(IF(coupon_type=19,coupon_amount,0)) other #其他
		  from
		 (select stat_date statDate,b.type_id coupon_type,coupon_amount
		FROM dw.baoquan_flow_day2 a,dw.baoquan_flow_busi_type b
		WHERE a.biz_type=b.biz_type
		AND b.type_id not in (15,18)
		AND pay_type=1
		AND stat_date BETWEEN  #{startDate} and #{endDate}
		) t
		GROUP BY statDate) a
		LEFT JOIN
		(SELECT
		statDate,
		-1*SUM(IF(coupon_type=21,coupon_amount,0)) duihongbao, #宝券兑红包
		-1*SUM(IF(coupon_type=20,coupon_amount,0)) merchant_plat_pay, #商家平台支付
		-1*SUM(IF(coupon_type=28,coupon_amount,0)) youpiaoxuanzuo, #O2O未用宝券收回
		-1*SUM(IF(coupon_type=23,coupon_amount,0)) sdk, #SDK宝券支付
		-1*SUM(IF(coupon_type=25,coupon_amount,0)) life_pay, #虚拟频道充值
		-1*SUM(IF(coupon_type=27,coupon_amount,0)) o2o_saoma, #O2O扫码付
		-1*SUM(IF(coupon_type=24,coupon_amount,0)) baoyuefabu, #宝约发布
		-1*SUM(IF(coupon_type in(22,26),coupon_amount,0)) other #其他
		  from
		 (select stat_date statDate,b.type_id coupon_type,coupon_amount
		FROM dw.baoquan_flow_day2 a,dw.baoquan_flow_busi_type b
		WHERE a.biz_type=b.biz_type
		AND b.type_id not in (15,18)
		AND pay_type=2
		AND stat_date BETWEEN  #{startDate} and #{endDate}
		)t
		GROUP BY statDate) b
		ON a.statDate =b.statDate
		LEFT JOIN
		(SELECT stat_date statDate,SUM(coupon_amount) reject_amount,SUM(num) reject_num
		FROM baoquan_flow_day2
		WHERE pay_type=1
		AND biz_type=3
		AND state in (4,5)
		AND stat_date BETWEEN  #{startDate} and #{endDate}
		GROUP BY stat_date) c
		ON a.statDate = c.statDate;
	</select>

	<select id="getBaoquan30dInfoFafang" resultType="java.util.Map" parameterType="java.util.Map">
		select a.statDate,a.sign,a.task,a.task_share,a.baogou,a.leipai,a.weishang,a.O2O,a.p2c_first_rechange,a.p2c_behavior,a.p2c_assets,
       a.shejiao,a.market,a.hongbao,a.youpiao,a.baoyue,a.life_channel,a.register,a.other
	   from
		(SELECT
		statDate,
		SUM(IF(coupon_type=1,coupon_amount,0)) sign, #签到送宝券
		SUM(IF(coupon_type=2,coupon_amount,0)) task, #任务送宝券
		SUM(IF(coupon_type=3,coupon_amount,0)) task_share, #任务分享
		SUM(IF(coupon_type=4,coupon_amount,0)) baogou, #宝购
		SUM(IF(coupon_type=5,coupon_amount,0)) leipai, #雷拍
		SUM(IF(coupon_type=6,coupon_amount,0)) weishang, #微商
		SUM(IF(coupon_type=7,coupon_amount,0)) O2O, #O2O
		SUM(IF(coupon_type=8,coupon_amount,0)) p2c_first_rechange, #P2C首次充值福利
        SUM(IF(coupon_type=9,coupon_amount,0)) p2c_behavior, #P2C行为福利
        SUM(IF(coupon_type=10,coupon_amount,0)) p2c_assets, #P2C资产福利
	    SUM(IF(coupon_type=11,coupon_amount,0)) shejiao, #社交
		SUM(IF(coupon_type=12,coupon_amount,0)) market, #应用市场
		SUM(IF(coupon_type=13,coupon_amount,0)) hongbao, #红包
		SUM(IF(coupon_type=14,coupon_amount,0)) youpiao, #有票
		SUM(IF(coupon_type=15,coupon_amount,0)) baoyue, #宝约
		SUM(IF(coupon_type=16,coupon_amount,0)) life_channel, #生活频道
		SUM(IF(coupon_type=17,coupon_amount,0)) register, #注册
		SUM(IF(coupon_type=18,coupon_amount,0)) other #其他
		  from
		 (select stat_date statDate,
		  case
		    when biz_type=1 then 1
		    when biz_type=4 then 2
		    when biz_type=59 then 3
		    when biz_type in (35,57,58) then 4
		    when biz_type in (27,34,64,65,90,93) then 5
		    when biz_type_text like '微商%' then 6
		    when biz_type_text like 'o2o%' then 7
		    when biz_type=20 then 8
            when biz_type in (31,56) or biz_type_text like '拓客:推广行为福利%' then 9
            when biz_type in (95) or biz_type_text like '推广达人工资福利%' then 10
	        when biz_type in(21,26,30,32,61) or biz_type_text like '社交活动%' then 11
		    when biz_type in(52,108) or biz_type_text like '应用市场%' then 12
		    when biz_type_text like '抢红包%' or biz_type_text like '发红包%' then 13
		    when biz_type in(19,41,71) then 14
		    when biz_type_text like '宝约%' then 15
		    when biz_type_text like '虚拟频道%' then 16
		    when biz_type=53 then 17
		  else 18 end coupon_type,coupon_amount
		FROM dw.baoquan_flow_day2
		WHERE state=1
		AND pay_type=1
		AND stat_date BETWEEN #{startDate} and #{endDate}
		) t
		GROUP BY statDate) a
	</select>

	<select id="getBaoquan30dInfoXiaofei" resultType="java.util.Map" parameterType="java.util.Map">
		select b.statDate,b.duihongbao,b.merchant_plat_pay,b.youpiaoxuanzuo,b.sdk,b.life_pay,b.o2o_saoma,b.baoyuefabu,b.other from
		(SELECT
		statDate,
		-1*SUM(IF(coupon_type=1,coupon_amount,0)) duihongbao, #宝券兑红包
		-1*SUM(IF(coupon_type=2,coupon_amount,0)) merchant_plat_pay, #商家平台支付
		-1*SUM(IF(coupon_type=3,coupon_amount,0)) youpiaoxuanzuo, #有票选座票购买
		-1*SUM(IF(coupon_type=4,coupon_amount,0)) sdk, #SDK宝券支付
		-1*SUM(IF(coupon_type=5,coupon_amount,0)) life_pay, #虚拟频道充值
		-1*SUM(IF(coupon_type=6,coupon_amount,0)) o2o_saoma, #O2O扫码付
		-1*SUM(IF(coupon_type=7,coupon_amount,0)) baoyuefabu, #宝约发布
		-1*SUM(IF(coupon_type=8,coupon_amount,0)) other #其他
		  from
		 (select stat_date statDate,
		  	case
			when biz_type=2 then 1
			when biz_type=3 then 2
			when biz_type=42 then 3
			when biz_type=48 then 4
			when biz_type in (44,45,46,47) then 5
			when biz_type in (112) then 6
			when biz_type_text like '宝约%' then 7
		   else 8 end coupon_type,coupon_amount
		FROM dw.baoquan_flow_day2
		WHERE state=1
		AND pay_type=2
		AND stat_date BETWEEN #{startDate} and #{endDate}
		)t
		GROUP BY statDate) b
	</select>

	<select id="getBaoquan30dInfoTuidan" resultType="java.util.Map" parameterType="java.util.Map">
	SELECT c.statDate,
	ifnull(c.reject_amount, 0) zhifu_tuidan_amount,
	ifnull(c.reject_num, 0) zhifu_tuidan_num
	FROM
	(
		SELECT
			stat_date statDate,
			SUM(coupon_amount) reject_amount,
			SUM(num) reject_num
		FROM
			baoquan_flow_day2
		WHERE
			pay_type = 1
		AND biz_type = 3
		AND state IN (4, 5)
		AND stat_date BETWEEN '2016-03-01'
		AND '2016-03-31'
		GROUP BY
			stat_date
	) c
	</select>

	<select id="getTop100RechargeInfo" parameterType="java.util.Map" resultType="java.util.Map">
		SELECT r.user_id,u.username,ifnull(u.true_name_transfer,'') true_name_transfer,SUM(amount) amount,
		IFNULL((select i.address from dw.log_detail_im_lbs i force index(pri)
		where i.user_id=r.user_id order by create_time desc limit 1),'--') lbs
		  FROM hyip.hyip_recharge r FORCE INDEX (index_hyip_recharge_2), hyip.hyip_user u
		 WHERE r.user_id = u.id
		   AND r.type NOT IN(1000,1004,1005,1006,1007,1008,1019)
		   AND r.recharge = 1
		   AND r.create_time >= date(#{startDate})+INTERVAL HOUR(#{startDate}) HOUR + INTERVAL FLOOR(MINUTE(#{startDate})/#{duration})*#{duration} MINUTE
		   AND r.create_time <![CDATA[ < ]]> date(#{startDate})+INTERVAL HOUR(#{startDate}) HOUR + INTERVAL FLOOR(MINUTE(#{startDate})/#{duration})*#{duration}+#{duration} MINUTE
		 GROUP BY user_id
		 ORDER BY amount DESC LIMIT 100;
	</select>

	<select id="getTop100TransferInfo" parameterType="java.util.Map" resultType="java.util.Map">
		 SELECT t.user_id,u.username,ifnull(u.true_name_transfer,'') true_name_transfer,SUM(t.amount) amount,
		GROUP_CONCAT(DISTINCT CONCAT(CASE h.type WHEN 58 THEN '储蓄卡' WHEN 60 THEN '储蓄卡' WHEN 59 THEN '信用卡' WHEN 61 THEN '信用卡' ELSE '-' END, '/',
                              CASE t.`is_vip_fast` WHEN 0 THEN '普提' WHEN 1 THEN '快提' ELSE '-' END)) transfer_type,
                              IF(c.`user_id` IS NULL, IF(r.`qb_account` IS NULL,'个人用户','普通商家'), '认证商家') shenfeng,
		IFNULL((select i.address from dw.log_detail_im_lbs i force index(pri)
		where i.user_id=t.user_id order by create_time desc limit 1),'--') lbs
		 FROM hyip.hyip_transfer t JOIN hyip.hyip_user u
		 ON t.user_id = u.id
		 LEFT JOIN hyip.`hyip_wallet_workflow` h
		 ON t.`id` = h.`transfer_id`  AND h.type IN (58,59,60,61)
		 LEFT JOIN busi_plat.hyip_merchant_company_certified c
		 ON t.`user_id`=c.`user_id` AND c.`state` = 1
		 LEFT JOIN hyip.hyip_task_cooperator r
		 ON u.`username` = r.`qb_account`
		   WHERE t.create_time >= date(#{startDate})+INTERVAL HOUR(#{startDate}) HOUR + INTERVAL FLOOR(MINUTE(#{startDate})/#{duration})*#{duration} MINUTE
		   AND t.create_time <![CDATA[ < ]]> date(#{startDate})+INTERVAL HOUR(#{startDate}) HOUR + INTERVAL FLOOR(MINUTE(#{startDate})/#{duration})*#{duration}+#{duration} MINUTE
		 GROUP BY user_id
		 ORDER BY amount DESC LIMIT 100;
	</select>

	<select id="getTransferHourInfo" parameterType="java.util.Map" resultType="java.util.Map">
		SELECT
		stat_time stat_date,
		SUM(transfer_amount) transfer_amount,
		0 transfer_amount_huan,
		0 transfer_amount_tong,
		SUM(transfer_user_num) transfer_user_num,
		0 transfer_user_num_huan,
		0 transfer_user_num_tong,
		SUM(transfer_num) transfer_num,
		0 transfer_num_huan,
		0 transfer_num_tong
		FROM light_financial_transfer_stat_hour
		WHERE DATE(stat_time) = #{startDate}
		GROUP BY stat_time
	</select>
	<select id="getTransferDayInfo" parameterType="java.util.Map" resultType="java.util.Map">
		<!--SELECT
		stat_date,
		SUM(transfer_amount) transfer_amount,
		SUM(transfer_user_num) transfer_user_num,
		SUM(transfer_num) transfer_num
		FROM light_financial_transfer_stat_day
		WHERE stat_date BETWEEN #{startDate} and #{endDate}
		GROUP BY stat_date-->
		SELECT
		A.stat_date,
		A.transfer_amount,
		IFNULL(A.transfer_amount-B.transfer_amount, 0) transfer_amount_huan,
		IFNULL(A.transfer_amount-C.transfer_amount, 0) transfer_amount_tong,
		A.transfer_user_num,
		IFNULL(A.transfer_user_num-B.transfer_user_num, 0) transfer_user_num_huan,
		IFNULL(A.transfer_user_num-C.transfer_user_num, 0) transfer_user_num_tong,
		A.transfer_num,
		IFNULL(A.transfer_num-B.transfer_num, 0) transfer_num_huan,
		IFNULL(A.transfer_num-C.transfer_num, 0) transfer_num_tong
		FROM
		(SELECT
		stat_date,
		SUM(transfer_amount) transfer_amount,
		SUM(transfer_user_num) transfer_user_num,
		SUM(transfer_num) transfer_num
		FROM light_financial_transfer_stat_day
		WHERE stat_date BETWEEN #{startDate} and #{endDate}
		GROUP BY stat_date) A
		LEFT JOIN
		(SELECT
		stat_date + INTERVAL 1 DAY stat_date,
		SUM(transfer_amount) transfer_amount,
		SUM(transfer_user_num) transfer_user_num,
		SUM(transfer_num) transfer_num
		FROM light_financial_transfer_stat_day
		WHERE stat_date BETWEEN #{startDate} - INTERVAL 1 DAY AND #{endDate} - INTERVAL 1 DAY
		GROUP BY stat_date) B
		ON A.stat_date = B.stat_date
		LEFT JOIN
		(SELECT
		stat_date + INTERVAL 1 WEEK stat_date,
		SUM(transfer_amount) transfer_amount,
		SUM(transfer_user_num) transfer_user_num,
		SUM(transfer_num) transfer_num
		FROM light_financial_transfer_stat_day
		WHERE stat_date BETWEEN #{startDate} - INTERVAL 1 WEEK AND #{endDate} - INTERVAL 1 WEEK
		GROUP BY stat_date) C
		ON A.stat_date = C.stat_date
	</select>
	<select id="getTransferWeekInfo" parameterType="java.util.Map" resultType="java.util.Map">
		<!-- SELECT
		MIN(stat_date) stat_date,
		SUM(transfer_amount) transfer_amount,
		SUM(transfer_user_num) transfer_user_num,
		SUM(transfer_num) transfer_num
		FROM light_financial_transfer_stat_day
		WHERE stat_date BETWEEN #{startDate} and #{endDate}
		GROUP BY WEEKOFYEAR(stat_date)
		HAVING COUNT(DISTINCT(stat_date)) = 7-->
		SELECT
		A.stat_date,
		A.transfer_amount,
		IFNULL(A.transfer_amount-B.transfer_amount, 0) transfer_amount_huan,
		0 transfer_amount_tong,
		A.transfer_user_num,
		IFNULL(A.transfer_user_num-B.transfer_user_num, 0) transfer_user_num_huan,
		0 transfer_user_num_tong,
		A.transfer_num,
		IFNULL(A.transfer_num-B.transfer_num, 0) transfer_num_huan,
		0 transfer_num_tong
		FROM
		(SELECT
				MIN(stat_date) stat_date,
				SUM(transfer_amount) transfer_amount,
				SUM(transfer_user_num) transfer_user_num,
				SUM(transfer_num) transfer_num
				FROM light_financial_transfer_stat_day
				WHERE stat_date BETWEEN #{startDate} and #{endDate}
				GROUP BY WEEKOFYEAR(stat_date)
				HAVING COUNT(DISTINCT(stat_date)) = 7) A
		LEFT JOIN
		(SELECT
				MIN(stat_date+INTERVAL 1 WEEK) stat_date,
				SUM(transfer_amount) transfer_amount,
				SUM(transfer_user_num) transfer_user_num,
				SUM(transfer_num) transfer_num
				FROM light_financial_transfer_stat_day
				WHERE stat_date BETWEEN #{startDate}-INTERVAL 1 WEEK AND #{endDate}-INTERVAL 1 WEEK
				GROUP BY WEEKOFYEAR(stat_date)
				HAVING COUNT(DISTINCT(stat_date)) = 7) B
		ON A.stat_date = B.stat_date
	</select>
	<select id="getTransferMonthInfo" parameterType="java.util.Map" resultType="java.util.Map">
		<!-- SELECT
		MIN(stat_date) stat_date,
		SUM(transfer_amount) transfer_amount,
		SUM(transfer_user_num) transfer_user_num,
		SUM(transfer_num) transfer_num
		FROM light_financial_transfer_stat_day
		WHERE stat_date BETWEEN #{startDate} and #{endDate}
		GROUP BY MONTH(stat_date)-->
		SELECT
		A.stat_date,
		A.transfer_amount,
		IFNULL(A.transfer_amount-B.transfer_amount, 0) transfer_amount_huan,
		0 transfer_amount_tong,
		A.transfer_user_num,
		IFNULL(A.transfer_user_num-B.transfer_user_num, 0) transfer_user_num_huan,
		0 transfer_user_num_tong,
		A.transfer_num,
		IFNULL(A.transfer_num-B.transfer_num, 0) transfer_num_huan,
		0 transfer_num_tong
		FROM
		(SELECT
				MIN(stat_date) stat_date,
				SUM(transfer_amount) transfer_amount,
				SUM(transfer_user_num) transfer_user_num,
				SUM(transfer_num) transfer_num
				FROM light_financial_transfer_stat_day
				WHERE stat_date BETWEEN #{startDate} and #{endDate}
				GROUP BY MONTH(stat_date)) A
		LEFT JOIN
		(SELECT
				MIN(stat_date-INTERVAL 1 MONTH) stat_date,
				SUM(transfer_amount) transfer_amount,
				SUM(transfer_user_num) transfer_user_num,
				SUM(transfer_num) transfer_num
				FROM light_financial_transfer_stat_day
				WHERE stat_date BETWEEN #{startDate}-INTERVAL 1 MONTH AND #{endDate}-INTERVAL 1 MONTH
				GROUP BY MONTH(stat_date)) B
		ON A.stat_date = B.stat_date
	</select>

	<select id="getWeishangCurrDayInfo" parameterType="java.util.Map" resultType="java.util.Map">
		SELECT
		A.stat_date statDate,
		A.merchant_num,
		A.publish_product_user_num,
		A.publish_product_num,
		A.pass_product_num,
		A.reject_product_num,
		A.deal_seller_num,
		A.deal_buyer_num,
		A.deal_product_num,
		A.deal_num,
		A.deal_amount,
		A.deal_price,
		A.cou_deal_num,
		A.cou_deal_seller_num,
		A.cou_deal_buyer_num,
		A.cou_deal_amount,
		A.ref_seller_num,
		A.ref_buyer_num,
		A.ref_product_num,
		A.ref_num,
		A.ref_amount,
		A.cou_ref_seller_num,
		A.cou_ref_buyer_num,
		A.cou_ref_amount,
		A.cou_ref_num,
		IFNULL(B.amount,0) amount_certificate,
		IFNULL(B.buyer_num,0) buyer_num_certificate,
		IFNULL(B.deal_num,0) deal_num_certificate,
		IFNULL(B.seller_num,0) seller_num_certificate,
		IFNULL(B.voucher_num,0) voucher_amount_certificate
		FROM dw.light_merchant_deal_stat_day A
		LEFT JOIN
		dw.heavy_merchant_certificate_stat_day B
		ON A.stat_date = B.stat_date
		WHERE A.stat_date BETWEEN #{startDate} and #{endDate}
	</select>

	<select id="getWeishangTotalInfo" parameterType="java.util.Map" resultType="java.util.Map">
		SELECT
		stat_date statDate,
		merchant_num,
		publish_product_user_num,
		publish_product_num,
		pass_product_num,
		reject_product_num,
		deal_seller_num,
		deal_buyer_num,
		deal_product_num,
		deal_num,
		deal_amount,
		deal_price,
		cou_deal_num,
		cou_deal_seller_num,
		cou_deal_buyer_num,
		cou_deal_amount,
		ref_seller_num,
		ref_buyer_num,
		ref_product_num,
		ref_num,
		ref_amount,
		cou_ref_seller_num,
		cou_ref_buyer_num,
		cou_ref_amount,
		cou_ref_num
		FROM dw.heavy_merchant_deal_stat_day
		WHERE stat_date BETWEEN #{startDate} and #{endDate}
	</select>

	<select id="getWeishangTradeScopeInfo" parameterType="java.util.Map" resultType="java.util.Map">
		<!--SELECT  DATE(pay_time) stat_date,
		CASE WHEN amount <![CDATA[ <= ]]> 600 THEN  1
		     WHEN amount <![CDATA[ <= ]]> 2000 THEN 2
		     WHEN amount <![CDATA[ <= ]]> 2100 THEN 3
		     WHEN amount <![CDATA[ <= ]]> 10000 THEN 4
		     WHEN amount <![CDATA[ <= ]]> 100000 THEN 5
		     WHEN amount <![CDATA[ <= ]]> 500000 THEN 6
		     WHEN amount <![CDATA[ <= ]]> 1000000 THEN 7
		     ELSE  8 END type,
		CASE WHEN amount <![CDATA[ <= ]]> 600 THEN   '0-6元(含)'
		     WHEN amount <![CDATA[ <= ]]> 2000 THEN '6-20元(含)'
		     WHEN amount <![CDATA[ <= ]]> 2100 THEN '20-21元(含)'
		     WHEN amount <![CDATA[ <= ]]> 10000 THEN '21-100元(含)'
		     WHEN amount <![CDATA[ <= ]]> 100000 THEN '100-1000元(含)'
		     WHEN amount <![CDATA[ <= ]]> 500000 THEN '1000-5000元(含)'
		     WHEN amount <![CDATA[ <= ]]> 1000000 THEN '5000-10000元(含)'
		     ELSE  '10000元以上' END type_desc,
		ROUND(SUM(amount)/100,2) trade_amount,
		COUNT(DISTINCT buyer_id) trade_buyer,
		COUNT(*) trade_num,
		COUNT(DISTINCT seller_id) trade_seller,
		ROUND(SUM(voucher_num)/100,2) voucher_num
		FROM  dw.merchants_order_base
		WHERE pay_time >= #{startDate} AND pay_time <![CDATA[ < ]]>  (#{endDate} + interval 1 day)
		GROUP BY stat_date,TYPE
		ORDER BY stat_date DESC,TYPE ASC-->
		SELECT stat_date,
		amount_class type,
		(SELECT NAME FROM dw.`dict_stat_dimension` WHERE id = amount_class) type_desc,
		amount trade_amount,
		buyer_num trade_buyer,
		order_num trade_num,
		shop_num trade_seller,
		voucher voucher_num
		FROM dw.`heavy_order_amount_distributing_stat_day`
		WHERE stat_date BETWEEN #{startDate} AND #{endDate}
		ORDER BY stat_date ASC, TYPE ASC
	</select>
	<select id="getWeishangTradeScopeSumInfo" parameterType="java.util.Map" resultType="java.util.Map">
		<!--SELECT
		CASE WHEN amount <![CDATA[ <= ]]> 600 THEN  1
		     WHEN amount <![CDATA[ <= ]]> 2000 THEN 2
		     WHEN amount <![CDATA[ <= ]]> 2100 THEN 3
		     WHEN amount <![CDATA[ <= ]]> 10000 THEN 4
		     WHEN amount <![CDATA[ <= ]]> 100000 THEN 5
		     WHEN amount <![CDATA[ <= ]]> 500000 THEN 6
		     WHEN amount <![CDATA[ <= ]]> 1000000 THEN 7
		     ELSE  8 END type,
		ROUND(SUM(amount)/100,2) trade_amount,
		COUNT(DISTINCT buyer_id) trade_buyer,
		COUNT(*) trade_num,
		COUNT(DISTINCT seller_id) trade_seller
		FROM  dw.merchants_order_base
		WHERE pay_time >= #{startDate} AND pay_time <![CDATA[ < ]]>  (#{endDate} + interval 1 day)
		GROUP BY TYPE
		ORDER BY TYPE ASC-->
		SELECT
		amount_class type,
		SUM(amount) trade_amount,
		SUM(buyer_num) trade_buyer,
		SUM(order_num) trade_num,
		SUM(shop_num) trade_seller
		FROM dw.`heavy_order_amount_distributing_stat_day`
		WHERE stat_date BETWEEN #{startDate} AND #{endDate}
		GROUP BY amount_class
		ORDER BY TYPE ASC
	</select>

	<select id="getWeishangTradeScopeProductTopInfo" parameterType="java.util.Map" resultType="java.util.Map">
		SELECT
		product_id,
		product_name product_title,
		seller_id,
		seller_username seller_user_name,
		seller_nickname,
		ROUND(SUM(amount)/100,2) trade_amount,
		COUNT(DISTINCT buyer_id) trade_buyer,
		COUNT(*) trade_num
		FROM  dw.merchants_order_base
		WHERE pay_time >= #{startDate} AND pay_time <![CDATA[ < ]]>  (#{endDate} + interval 1 day)
		<if test="type == 1" >
	       AND amount <![CDATA[ <= ]]> 600
	    </if>
	    <if test="type == 2" >
	       AND amount > 600 AND amount <![CDATA[ <= ]]> 2000
	    </if>
	    <if test="type == 3" >
	       AND amount > 2000 AND amount <![CDATA[ <= ]]> 2100
	    </if>
	    <if test="type == 4" >
	       AND amount > 2100 AND amount <![CDATA[ <= ]]> 10000
	    </if>
	    <if test="type == 5" >
	       AND amount > 10000 AND amount <![CDATA[ <= ]]> 100000
	    </if>
	    <if test="type == 6" >
	       AND amount > 100000 AND amount <![CDATA[ <= ]]> 500000
	    </if>
	    <if test="type == 7" >
	       AND amount > 500000 AND amount <![CDATA[ <= ]]> 1000000
	    </if>
	    <if test="type == 8" >
	       AND amount > 1000000
	    </if>
		GROUP BY product_id
		ORDER BY trade_amount DESC
		LIMIT 10
	</select>

	<select id="getWeishangTradeScopeSellerTopInfo" parameterType="java.util.Map" resultType="java.util.Map">
		SELECT
		seller_id,
		seller_username seller_user_name,
		seller_nickname,
		ROUND(SUM(amount)/100,2) trade_amount,
		COUNT(DISTINCT buyer_id) trade_buyer,
		COUNT(*) trade_num
		FROM  dw.merchants_order_base
		WHERE pay_time >= #{startDate} AND pay_time <![CDATA[ < ]]>  (#{endDate} + interval 1 day)
		<if test="type == 1" >
	       AND amount <![CDATA[ <= ]]> 600
	    </if>
	    <if test="type == 2" >
	       AND amount > 600 AND amount <![CDATA[ <= ]]> 2000
	    </if>
	    <if test="type == 3" >
	       AND amount > 2000 AND amount <![CDATA[ <= ]]> 2100
	    </if>
	    <if test="type == 4" >
	       AND amount > 2100 AND amount <![CDATA[ <= ]]> 10000
	    </if>
	    <if test="type == 5" >
	       AND amount > 10000 AND amount <![CDATA[ <= ]]> 100000
	    </if>
	    <if test="type == 6" >
	       AND amount > 100000 AND amount <![CDATA[ <= ]]> 500000
	    </if>
	    <if test="type == 7" >
	       AND amount > 500000 AND amount <![CDATA[ <= ]]> 1000000
	    </if>
	    <if test="type == 8" >
	       AND amount > 1000000
	    </if>
		GROUP BY seller_id
		ORDER BY trade_amount DESC
		LIMIT 10
	</select>

	<select id="getSocialityDayInfo" parameterType="java.util.Map" resultType="java.util.Map">
		SELECT stat_date statDate,client_sign,frend_num,
		post_comment_user_num,post_comment_num,comment_user_num,comment_num
		FROM dw.heavy_social_relation_stat_day
		WHERE   stat_date BETWEEN #{startDate} and #{endDate}
	</select>

	<select id="getWeishangOverviewAllSummaryInfo" parameterType="java.util.Map" resultType="java.util.Map">
		SELECT
		'' shop_type,
		CONCAT(#{startDate}, ' - ', #{endDate}) dateRange,
		SUM(total_amount) total_amount,
		SUM(refund_amount) refund_amount,
		SUM(total_amount-refund_amount) net_amount,
		SUM(voucher) voucher,
		SUM(baobi) not_voucher_amount,
		SUM(deal_num) deal_num,
		SUM(commission) commission,
		SUM(voucher_deal_num) voucher_deal_num,
		SUM(baobi_deal_num) not_voucher_deal_num,
		SUM(total_amount)/SUM(deal_num) avg_order_price,
		SUM(total_amount)/SUM(buyer_num) avg_buyer_price,
		SUM(buyer_num) buyer_num,
		SUM(seller_num) seller_num,
		SUM(goods_num) goods_num,
		SUM(freight) freight,
		SUM(order_service_fee) orderServiceFee,
		SUM(product_audit_fee) productAuditFee,
		IFNULL((SELECT n.product_num FROM dw.light_trader_class_stat_day n WHERE n.stat_date = #{endDate} AND shop_type = 6),0) product_num,
		IFNULL((SELECT n.merchant_num FROM dw.light_trader_class_stat_day n WHERE n.stat_date = #{endDate} AND shop_type = 6),0) merchant_num
		FROM dw.light_trader_class_stat_day t
		WHERE stat_date BETWEEN #{startDate} AND #{endDate}
		AND shop_type = 6
	</select>

	<select id="getWeishangOverviewInfo" parameterType="java.util.Map" resultType="java.util.Map">
		<!--SELECT
		stat_date,
		shop_type,
		total_amount,
		refund_amount,
		total_amount-refund_amount net_amount,
		voucher,
		total_amount-voucher not_voucher_amount,
		(SELECT SUM(total_amount) FROM dw.light_trader_class_stat_day a WHERE  a.shop_type=t.`shop_type` AND  a.stat_date BETWEEN #{statDate} - INTERVAL 30 DAY AND #{statDate} - INTERVAL 1 DAY) _30_total_amount,
		deal_num,
		voucher_deal_num,
		deal_num-voucher_deal_num not_voucher_deal_num,
		(SELECT SUM(deal_num) FROM dw.light_trader_class_stat_day b WHERE  b.shop_type=t.`shop_type` AND  b.stat_date BETWEEN #{statDate} - INTERVAL 30 DAY AND #{statDate} - INTERVAL 1 DAY) _30_deal_num,
		avg_order_price,
		avg_buyer_price,
		IFNULL((t.total_amount-r.y_total_amount)/r.y_total_amount,0) total_amount_ratio,
		IFNULL((t.deal_num-r.y_deal_num)/r.y_deal_num,0) deal_num_ratio,
		buyer_num,
		seller_num,
		goods_num,
		product_num,
		merchant_num
		FROM dw.light_trader_class_stat_day t,
		(SELECT shop_type y_shop_type, total_amount y_total_amount,deal_num y_deal_num FROM dw.light_trader_class_stat_day WHERE stat_date = #{statDate} - INTERVAL 1 DAY) r
		WHERE stat_date = #{statDate}
		AND t.`shop_type` = r.y_shop_type-->

		SELECT
		shop_type,
		CASE shop_type WHEN 2 THEN  1
						WHEN 1 THEN  2
						WHEN 5 THEN  3
						WHEN 3 THEN  4
						WHEN 4 THEN  5
						WHEN 6 THEN  6 ELSE 0 END shop_type_order,
		CONCAT(#{startDate}, ' - ', #{endDate}) dateRange,
		SUM(total_amount) total_amount,
		SUM(refund_amount) refund_amount,
		SUM(total_amount-refund_amount) net_amount,
		SUM(voucher) voucher,
		SUM(baobi) not_voucher_amount,
		SUM(commission) commission,
		SUM(deal_num) deal_num,
		SUM(voucher_deal_num) voucher_deal_num,
		SUM(baobi_deal_num) not_voucher_deal_num,
		AVG(avg_order_price) avg_order_price,
		AVG(avg_buyer_price) avg_buyer_price,
		SUM(buyer_num) buyer_num,
		SUM(seller_num) seller_num,
		SUM(goods_num) goods_num,
		SUM(refund_deal_num) refund_deal_num,
		SUM(freight) freight,
		SUM(order_service_fee) orderServiceFee,
		SUM(product_audit_fee) productAuditFee,
		SUM(refund_buyer_num) refund_buyer_num,
		IFNULL((SELECT n.product_num FROM dw.light_trader_class_stat_day n WHERE n.stat_date = #{endDate} AND  n.shop_type = t.shop_type),0) product_num,
		IFNULL((SELECT n.merchant_num FROM dw.light_trader_class_stat_day n WHERE n.stat_date = #{endDate} AND  n.shop_type = t.shop_type),0) merchant_num
		FROM dw.light_trader_class_stat_day t
		WHERE stat_date BETWEEN #{startDate} AND #{endDate}
		GROUP BY shop_type
	</select>

	<select id="getWeishangTradeClassOneDayInfo" parameterType="java.util.Map" resultType="java.util.Map">
		SELECT shop_type,SUM(total_amount) total_amount, SUM(deal_num) deal_num FROM dw.light_trader_class_stat_day
		WHERE stat_date BETWEEN #{startDate} AND #{endDate}
		AND  shop_type != 6
		GROUP BY shop_type
	</select>

	<select id="getWeishangOverviewChildInfo" parameterType="java.util.Map" resultType="java.util.Map">
		SELECT
		stat_date shop_type,
		CONCAT(#{startDate}, ' - ', #{endDate}) dateRange,
		total_amount,
		refund_amount,
		total_amount-refund_amount net_amount,
		voucher,
		baobi not_voucher_amount,
		commission,
		deal_num,
		voucher_deal_num,
		baobi_deal_num not_voucher_deal_num,
		avg_order_price,
		avg_buyer_price,
		buyer_num,
		seller_num,
		goods_num,
		product_num,
		merchant_num
		FROM dw.light_trader_class_stat_day t
		WHERE stat_date BETWEEN #{startDate} AND #{endDate}
		AND  shop_type = #{parentKey}
		ORDER  BY  stat_date DESC
	</select>

	<select id="getWeishangTradeClassDayInfo" parameterType="java.util.Map" resultType="java.util.Map">
		SELECT stat_date,
		SUM(IF(shop_type=1,total_amount,0)) total_amount_1,SUM(IF(shop_type=1,deal_num,0)) deal_num_1,
		SUM(IF(shop_type=2,total_amount,0)) total_amount_2,SUM(IF(shop_type=2,deal_num,0)) deal_num_2,
		SUM(IF(shop_type=3,total_amount,0)) total_amount_3,SUM(IF(shop_type=3,deal_num,0)) deal_num_3,
		SUM(IF(shop_type=4,total_amount,0)) total_amount_4,SUM(IF(shop_type=4,deal_num,0)) deal_num_4,
		SUM(IF(shop_type=5,total_amount,0)) total_amount_5,SUM(IF(shop_type=5,deal_num,0)) deal_num_5
		FROM dw.light_trader_class_stat_day
		WHERE stat_date BETWEEN #{startDate} AND #{endDate}
		GROUP BY stat_date
	</select>

	<select id="getShangjiaOverviewInfo" parameterType="java.util.Map" resultType="java.util.Map">
		<!--SELECT
		stat_date,
		shop_id,
		shop_name,
		total_amount,
		refund_amount,
		total_amount-refund_amount net_amount,
		voucher,
		total_amount-voucher not_voucher_amount,
		(SELECT SUM(total_amount) FROM dw.light_trader_list_stat_day a WHERE a.shop_id = t.shop_id AND stat_date BETWEEN #{statDate} - INTERVAL 30 DAY AND #{statDate} - INTERVAL 1 DAY) _30_total_amount,
		deal_num,
		voucher_deal_num,
		deal_num-voucher_deal_num not_voucher_deal_num,
		(SELECT SUM(deal_num) FROM dw.light_trader_list_stat_day b WHERE b.shop_id = t.shop_id AND stat_date BETWEEN #{statDate} - INTERVAL 30 DAY AND #{statDate} - INTERVAL 1 DAY) _30_deal_num,
		buyer_num,
		goods_num,
		avg_order_price,
		avg_buyer_price,
		product_num,
		IFNULL((t.total_amount-r.y_total_amount)/r.y_total_amount,0) total_amount_ratio,
		IFNULL((t.deal_num-r.y_deal_num)/r.y_deal_num,0) deal_num_ratio
		FROM dw.`light_trader_list_stat_day` t,
		(SELECT shop_id y_shop_id, total_amount y_total_amount,deal_num y_deal_num FROM dw.light_trader_list_stat_day WHERE stat_date = #{statDate} - INTERVAL 1 DAY) r
		WHERE stat_date = #{statDate}
		AND t.`shop_id` = r.y_shop_id
		ORDER BY total_amount DESC;-->
		SELECT
		shop_id,
		shop_name,
		shop_type,
		shop_nick_name,
		SUM(total_amount) total_amount,
		SUM(refund_amount) refund_amount,
		SUM(total_amount-refund_amount) net_amount,
		SUM(voucher) voucher,
		SUM(baobi) not_voucher_amount,
		SUM(commission) commission,
		SUM(deal_num) deal_num,
		SUM(voucher_deal_num) voucher_deal_num,
		SUM(baobi_deal_num) not_voucher_deal_num,
		AVG(avg_order_price) avg_order_price,
		AVG(avg_buyer_price) avg_buyer_price,
		SUM(buyer_num) buyer_num,
		SUM(goods_num) goods_num,
		SUM(baogou_amount) baogou_amount,
		SUM(leipai_amount) leipai_amount,
		SUM(refund_deal_num) refund_deal_num,
		SUM(freight) freight,
		SUM(order_service_fee) orderServiceFee,
		SUM(product_audit_fee) productAuditFee,
		SUM(refund_buyer_num) refund_buyer_num,
		IFNULL((SELECT n.product_num FROM dw.light_trader_list_stat_day n WHERE n.stat_date = #{endDate} AND  n.shop_id = t.shop_id limit 1),0) product_num
		FROM dw.light_trader_list_stat_day t
		WHERE stat_date BETWEEN #{startDate} AND #{endDate}
		AND shop_type IN (${type})
		<if test="orderType != null and orderType != '' and orderType != -1" >
			AND  order_type = #{orderType}
		</if>
		GROUP BY shop_id
		ORDER BY total_amount DESC;
	</select>

	<select id="getOneShangjiaDayInfo" parameterType="java.util.Map" resultType="java.util.Map">
		SELECT stat_date,total_amount,deal_num
		FROM dw.`light_trader_list_stat_day`
		WHERE shop_id=#{shopId}
		AND stat_date BETWEEN #{startDate} AND #{endDate}
		ORDER BY stat_date ASC;
	</select>

	<select id="getJingxuanOrderInfoAll" parameterType="java.util.Map" resultType="java.util.Map">
		select o.order_id, IFNULL(t.goods_name,'') goods_name, t.goods_id,t.goods_num, o.total_amount,
		o.create_time, o.pay_time, o.order_State,
		case when o.order_state=100 then '待付款'
		 when o.order_state=200 then '待发货'
		 when o.order_state=210 then '买家申请退款'
		 when o.order_state=201 then '买家取消退款申请'
		 when o.order_state=202 then '买家退款仲裁'
		 when o.order_state=300 then '商家已发货'
		 when o.order_state=301 then '买家申请退货'
		 when o.order_state=302 then '商家已收买家退货申请仲裁'
		 when o.order_state=303 then '买家取消退货申请'
		 when o.order_state=304 then '买家申请退货仲裁'
		 when o.order_state=305 then '商家同意退货'
		 when o.order_state=306 then '买家已退货申请仲裁'
		 when o.order_state=1000 then '买家确认收货'
		 when o.order_state=2101 then '买家取消订单'
		 when o.order_state=2102 then '商家关闭订单'
		 when o.order_state=2201 then '商家同意全额退款'
		 when o.order_state=3001 then '商家同意仅退款'
		 when o.order_state=3002 then '商家确认买家退货'
		 when o.order_state=3401 then '仲裁商家胜'
		 when o.order_state=3402 then '仲裁买家胜退货'
		 when o.order_state=3403 then '仲裁钱宝赔付' end as order_State_summary,
		o.user_id,o.user_name,shop_id,shop_name,
		o.consignee_name,o.consignee_mob,o.consignee_addr,o.shop_comment,
		o.buyer_comment,IFNULL(o.express_id,'') express_id,o.express_name,o.express_code,order_type
		From oc1.nbiz_shop_order_base o, oc1.nbiz_order_item t ,hyip.hyip_merchant_company d
		where o.order_id=t.order_id and o.relation_id=0
		and o.pay_time >= #{startDate} AND o.pay_time <![CDATA[ < ]]>  (#{endDate} + interval 1 day)
		and o.shop_id=d.user_id
		<if test="userName != null and userName != ''" >
			and o.shop_name = #{userName}
		</if>
	</select>
	<select id="getJingxuanGoodsInfoAll" parameterType="java.util.Map" resultType="java.util.Map">
		select a.spu_id,sku_id,a.user_id,user_name,spu_name,sku_price,advertorial   ,publish_status,audit_status,a.create_time,
		c.sku_price,c.specification, c.reserve_count,c.sell_count
		from merchant.mer_spu a,hyip.hyip_merchant_company b,merchant.mer_sku c
		where  a.user_id=b.user_id
		and a.spu_id=c.spu_id
		and a.create_time >= #{startDate} AND a.create_time <![CDATA[ < ]]>  (#{endDate} + interval 1 day)
		<if test="userName != null and userName != ''" >
			and a.user_name = #{userName}
		</if>
	</select>

	<select id="getJingxuanOrderInfoCnt" parameterType="java.util.Map" resultType="java.lang.Integer">
		select count(*)
		From oc1.nbiz_shop_order_base o, oc1.nbiz_order_item t ,hyip.hyip_merchant_company d
		where o.order_id=t.order_id and o.relation_id=0
		and o.pay_time >= #{startDate} AND o.pay_time <![CDATA[ < ]]>  (#{endDate} + interval 1 day)
		and o.shop_id=d.user_id
		<if test="userName != null and userName != ''" >
			and o.shop_name = #{userName}
		</if>
	</select>
	<select id="getJingxuanGoodsInfoCnt" parameterType="java.util.Map" resultType="java.lang.Integer">
		select count(*)
		from merchant.mer_spu a,hyip.hyip_merchant_company b,merchant.mer_sku c
		where  a.user_id=b.user_id
		and a.spu_id=c.spu_id
		and a.create_time >= #{startDate} AND a.create_time <![CDATA[ < ]]>  (#{endDate} + interval 1 day)
		<if test="userName != null and userName != ''" >
			and a.user_name = #{userName}
		</if>
	</select>

	<select id="getJingxuanOrderInfo" parameterType="java.util.Map" resultType="java.util.Map">
		select o.order_id, IFNULL(t.goods_name,'') goods_name, t.goods_id,t.goods_num, o.total_amount/100 total_amount,
		p.pay_price/100 pay_price,ifnull(s.step_time,'') step_time,
		o.create_time, o.pay_time, o.order_State,
		case when o.order_state=100 then '待付款'
		when o.order_state=200 then '待发货'
		when o.order_state=210 then '买家申请退款'
		when o.order_state=201 then '买家取消退款申请'
		when o.order_state=202 then '买家退款仲裁'
		when o.order_state=300 then '商家已发货'
		when o.order_state=301 then '买家申请退货'
		when o.order_state=302 then '商家已收买家退货申请仲裁'
		when o.order_state=303 then '买家取消退货申请'
		when o.order_state=304 then '买家申请退货仲裁'
		when o.order_state=305 then '商家同意退货'
		when o.order_state=306 then '买家已退货申请仲裁'
		when o.order_state=1000 then '买家确认收货'
		when o.order_state=2101 then '买家取消订单'
		when o.order_state=2102 then '商家关闭订单'
		when o.order_state=2201 then '商家同意全额退款'
		when o.order_state=3001 then '商家同意仅退款'
		when o.order_state=3002 then '商家确认买家退货'
		when o.order_state=3401 then '仲裁商家胜'
		when o.order_state=3402 then '仲裁买家胜退货'
		when o.order_state=3403 then '仲裁钱宝赔付' end as order_State_summary,
		o.user_id,o.user_name,shop_id,shop_name,
		o.consignee_name,o.consignee_mob,o.consignee_addr,o.shop_comment,
		o.buyer_comment,IFNULL(o.express_id,'') express_id,o.express_name,o.express_code,order_type
		From oc1.nbiz_shop_order_base o
		inner join oc1.nbiz_order_item t
		on o.order_id=t.order_id
		inner join hyip.hyip_merchant_company d
		on o.shop_id=d.user_id
		left join oc1.nbiz_order_pay_item p
		on p.order_id=o.order_id and p.pay_mode=2 and p.pay_type=100001
		left join oc1.nbiz_order_step s
		on o.order_id=s.order_id and s.suf_state=300
		where o.relation_id=0
		and o.pay_time >= #{startDate} AND o.pay_time <![CDATA[ < ]]>  (#{endDate} + interval 1 day)
		<if test="userName != null and userName != ''" >
			and o.shop_name = #{userName}
		</if>
		<if test="sort != null and sort != ''" >
			order by ${sort}
		</if>
		<if test="sort == null or sort == ''" >
			order by o.pay_time desc
		</if>
		limit ${start},${length}
	</select>
	<select id="getJingxuanEntryFluxInfo" parameterType="java.util.Map" resultType="java.util.Map">
		SELECT stat_date,pv,uv FROM dw.nginx_mobile_url
		WHERE url = #{url}
		AND  stat_date BETWEEN #{startDate} AND  #{endDate}
	</select>
	<select id="getJingxuanGoodsInfo" parameterType="java.util.Map" resultType="java.util.Map">
		select a.spu_id,sku_id,a.user_id,user_name,spu_name,sku_price,advertorial   ,publish_status,audit_status,a.create_time,
		c.sku_price,c.specification, c.reserve_count,c.sell_count
		from merchant.mer_spu a,hyip.hyip_merchant_company b,merchant.mer_sku c
		where  a.user_id=b.user_id
		and a.spu_id=c.spu_id
		and a.create_time >= #{startDate} AND a.create_time <![CDATA[ < ]]>  (#{endDate} + interval 1 day)
		<if test="userName != null and userName != ''" >
			and a.user_name = #{userName}
		</if>
		<if test="sort != null and sort != ''" >
			order by ${sort}
		</if>
		<if test="sort == null or sort == ''" >
			order by a.create_time desc
		</if>
		limit ${start},${length}
	</select>

	<select id="getJingxuanOverviewInfo" parameterType="java.util.Map" resultType="java.util.Map">
		SELECT
		order_type,
		CONCAT(#{startDate}, ' - ', #{endDate}) dateRange,
		SUM(total_amount) total_amount,
		SUM(refund_amount) refund_amount,
		SUM(total_amount-refund_amount) net_amount,
		SUM(voucher) voucher,
		SUM(baobi) not_voucher_amount,
		SUM(deal_num) deal_num,
		SUM(voucher_deal_num) voucher_deal_num,
		SUM(baobi_deal_num) not_voucher_deal_num,
		AVG(avg_order_price) avg_order_price,
		AVG(avg_buyer_price) avg_buyer_price,
		SUM(buyer_num) buyer_num,
		SUM(seller_num) seller_num,
		SUM(goods_num) goods_num
		FROM dw.light_merchant_order_type_stat_day t
		WHERE stat_date BETWEEN #{startDate} AND #{endDate}
		GROUP BY order_type
	</select>
	<select id="getJingxuanOverviewChildInfo" parameterType="java.util.Map" resultType="java.util.Map">
		SELECT
		stat_date order_type,
		CONCAT(#{startDate}, ' - ', #{endDate}) dateRange,
		total_amount,
		refund_amount,
		total_amount-refund_amount net_amount,
		voucher,
		baobi not_voucher_amount,
		deal_num,
		voucher_deal_num,
		baobi_deal_num not_voucher_deal_num,
		avg_order_price,
		avg_buyer_price,
		buyer_num,
		seller_num,
		goods_num
		FROM dw.light_merchant_order_type_stat_day t
		WHERE stat_date BETWEEN #{startDate} AND #{endDate}
		AND  order_type = #{parentKey}
		ORDER  BY  stat_date DESC
	</select>
	<select id="getJingxuanOneDayInfo" parameterType="java.util.Map" resultType="java.util.Map">
		SELECT order_type,SUM(total_amount) total_amount, SUM(deal_num) deal_num FROM dw.light_merchant_order_type_stat_day
		WHERE stat_date BETWEEN #{startDate} AND #{endDate}
		GROUP BY order_type
	</select>
	<select id="getJingxuanDayInfo" parameterType="java.util.Map" resultType="java.util.Map">
		SELECT stat_date,
		SUM(IF(order_type=11,total_amount,0)) total_amount_11,SUM(IF(order_type=11,deal_num,0)) deal_num_11,
		SUM(IF(order_type=12,total_amount,0)) total_amount_12,SUM(IF(order_type=12,deal_num,0)) deal_num_12,
		SUM(IF(order_type=13,total_amount,0)) total_amount_13,SUM(IF(order_type=13,deal_num,0)) deal_num_13,
		SUM(IF(order_type=15,total_amount,0)) total_amount_15,SUM(IF(order_type=15,deal_num,0)) deal_num_15,
		SUM(IF(order_type=16,total_amount,0)) total_amount_16,SUM(IF(order_type=16,deal_num,0)) deal_num_16,
		SUM(IF(order_type=17,total_amount,0)) total_amount_17,SUM(IF(order_type=17,deal_num,0)) deal_num_17,
		SUM(IF(order_type=18,total_amount,0)) total_amount_18,SUM(IF(order_type=18,deal_num,0)) deal_num_18,
		SUM(IF(order_type=19,total_amount,0)) total_amount_19,SUM(IF(order_type=19,deal_num,0)) deal_num_19,
		SUM(IF(order_type=20,total_amount,0)) total_amount_20,SUM(IF(order_type=20,deal_num,0)) deal_num_20,
		SUM(IF(order_type=22,total_amount,0)) total_amount_22,SUM(IF(order_type=22,deal_num,0)) deal_num_22,
		SUM(IF(order_type=24,total_amount,0)) total_amount_24,SUM(IF(order_type=24,deal_num,0)) deal_num_24,
		SUM(IF(order_type=30,total_amount,0)) total_amount_30,SUM(IF(order_type=30,deal_num,0)) deal_num_30,
		SUM(IF(order_type=31,total_amount,0)) total_amount_31,SUM(IF(order_type=31,deal_num,0)) deal_num_31,
		SUM(IF(order_type=32,total_amount,0)) total_amount_32,SUM(IF(order_type=32,deal_num,0)) deal_num_32
		FROM dw.light_merchant_order_type_stat_day
		WHERE stat_date BETWEEN #{startDate} AND #{endDate}
		GROUP BY stat_date
	</select>


	<select id="getDanpinOverviewInfoForExport" parameterType="java.util.Map" resultType="java.util.Map">
		SELECT goods_id,goods_name,shop_id,shop_name,shop_nickname,
		SUM(total_amount) total_amount,
		SUM(voucher_deal_amount) voucher_deal_amount,
		SUM(refund_amount) refund_amount,
		SUM(order_num) order_num,
		SUM(goods_num) goods_num
		FROM dw.light_merchant_goods_stat_day
		WHERE stat_date BETWEEN #{startDate} AND #{endDate}
		<if test="goods_id != null and goods_id != ''" >
			AND goods_id=#{goods_id}
		</if>
		<if test="goods_name != null and goods_name != ''" >
			AND goods_name=#{goods_name}
		</if>
		<if test="shop_id != null and shop_id != ''" >
			AND shop_id=#{shop_id}
		</if>
		<if test="shop_name != null and shop_name != ''" >
			AND shop_name=#{shop_name}
		</if>
		GROUP BY goods_id,goods_name,shop_id,shop_name,shop_nickname
		ORDER BY total_amount DESC
		<if test="type == 1" >
			limit 50
		</if>
		<if test="type == 2" >
			limit 100
		</if>
		<if test="type == 3" >
			limit 300
		</if>
		<if test="type == -1" >
			limit ${typeTxt}
		</if>
	</select>
	<select id="getDanpinOverviewInfo" parameterType="java.util.Map" resultType="java.util.Map">
		SELECT goods_id,goods_name,shop_id,shop_name,shop_nickname,
		SUM(total_amount) total_amount,
		SUM(voucher_deal_amount) voucher_deal_amount,
		SUM(refund_amount) refund_amount,
		SUM(order_num) order_num,
		SUM(goods_num) goods_num
		FROM dw.light_merchant_goods_stat_day
		WHERE stat_date BETWEEN #{startDate} AND #{endDate}
		<if test="goods_id != null and goods_id != ''" >
			AND goods_id in (${goods_id})
		</if>
		<if test="goods_name != null and goods_name != ''" >
			AND goods_name=#{goods_name}
		</if>
		<if test="shop_id != null and shop_id != ''" >
			AND shop_id=#{shop_id}
		</if>
		<if test="shop_name != null and shop_name != ''" >
			AND shop_name=#{shop_name}
		</if>
		GROUP BY goods_id,goods_name,shop_id,shop_name,shop_nickname
		<if test="sort != null and sort != ''" >
			ORDER BY ${sort}
		</if>
		<if test="sort == null or sort == ''" >
			ORDER BY total_amount DESC
		</if>
		limit ${start},${length}
	</select>
	<select id="getDanpinOverviewInfoCnt" parameterType="java.util.Map" resultType="java.lang.Integer">
		SELECT COUNT(DISTINCT goods_id,goods_name,shop_id,shop_name,shop_nickname)
		FROM dw.light_merchant_goods_stat_day
		WHERE stat_date BETWEEN #{startDate} AND #{endDate}
		<if test="goods_id != null and goods_id != ''" >
			AND goods_id=#{goods_id}
		</if>
		<if test="goods_name != null and goods_name != ''" >
			AND goods_name=#{goods_name}
		</if>
		<if test="shop_id != null and shop_id != ''" >
			AND shop_id=#{shop_id}
		</if>
		<if test="shop_name != null and shop_name != ''" >
			AND shop_name=#{shop_name}
		</if>
	</select>
	<select id="getDanpinDayInfo" parameterType="java.util.Map" resultType="java.util.Map">
		SELECT stat_date,total_amount,voucher_deal_amount,refund_amount,order_num,goods_num
		FROM dw.light_merchant_goods_stat_day
		WHERE stat_date BETWEEN #{startDate} AND #{endDate}
		AND goods_id = #{danpinId}
		ORDER BY stat_date ASC
	</select>


	<select id="getWeishangpindaoOverviewInfo" parameterType="java.util.Map" resultType="java.util.Map">
		SELECT
		order_type,
		CONCAT(#{startDate}, ' - ', #{endDate}) dateRange,
		SUM(total_amount) total_amount,
		SUM(refund_amount) refund_amount,
		SUM(total_amount-refund_amount) net_amount,
		SUM(voucher) voucher,
		SUM(baobi) not_voucher_amount,
		SUM(deal_num) deal_num,
		SUM(voucher_deal_num) voucher_deal_num,
		SUM(baobi_deal_num) not_voucher_deal_num,
		AVG(avg_order_price) avg_order_price,
		AVG(avg_buyer_price) avg_buyer_price,
		SUM(buyer_num) buyer_num,
		SUM(seller_num) seller_num,
		SUM(goods_num) goods_num
		FROM dw.light_merchant_order_type_stat_day_general t
		WHERE stat_date BETWEEN #{startDate} AND #{endDate}
		GROUP BY order_type
	</select>
	<select id="getWeishangpindaoOverviewChildInfo" parameterType="java.util.Map" resultType="java.util.Map">
		SELECT
		stat_date order_type,
		CONCAT(#{startDate}, ' - ', #{endDate}) dateRange,
		total_amount,
		refund_amount,
		total_amount-refund_amount net_amount,
		voucher,
		baobi not_voucher_amount,
		deal_num,
		voucher_deal_num,
		baobi_deal_num not_voucher_deal_num,
		avg_order_price,
		avg_buyer_price,
		buyer_num,
		seller_num,
		goods_num
		FROM dw.light_merchant_order_type_stat_day_general t
		WHERE stat_date BETWEEN #{startDate} AND #{endDate}
		AND  order_type = #{parentKey}
		ORDER  BY  stat_date DESC
	</select>
	<select id="getWeishangpindaoOneDayInfo" parameterType="java.util.Map" resultType="java.util.Map">
		SELECT order_type,SUM(total_amount) total_amount, SUM(deal_num) deal_num FROM dw.light_merchant_order_type_stat_day_general
		WHERE stat_date BETWEEN #{startDate} AND #{endDate}
		GROUP BY order_type
	</select>
	<select id="getWeishangpindaoDayInfo" parameterType="java.util.Map" resultType="java.util.Map">
		SELECT stat_date,
		SUM(IF(order_type=11,total_amount,0)) total_amount_11,SUM(IF(order_type=11,deal_num,0)) deal_num_11,
		SUM(IF(order_type=12,total_amount,0)) total_amount_12,SUM(IF(order_type=12,deal_num,0)) deal_num_12,
		SUM(IF(order_type=13,total_amount,0)) total_amount_13,SUM(IF(order_type=13,deal_num,0)) deal_num_13,
		SUM(IF(order_type=15,total_amount,0)) total_amount_15,SUM(IF(order_type=15,deal_num,0)) deal_num_15,
		SUM(IF(order_type=16,total_amount,0)) total_amount_16,SUM(IF(order_type=16,deal_num,0)) deal_num_16,
		SUM(IF(order_type=17,total_amount,0)) total_amount_17,SUM(IF(order_type=17,deal_num,0)) deal_num_17,
		SUM(IF(order_type=18,total_amount,0)) total_amount_18,SUM(IF(order_type=18,deal_num,0)) deal_num_18,
		SUM(IF(order_type=19,total_amount,0)) total_amount_19,SUM(IF(order_type=19,deal_num,0)) deal_num_19,
		SUM(IF(order_type=20,total_amount,0)) total_amount_20,SUM(IF(order_type=20,deal_num,0)) deal_num_20,
		SUM(IF(order_type=22,total_amount,0)) total_amount_22,SUM(IF(order_type=22,deal_num,0)) deal_num_22,
		SUM(IF(order_type=24,total_amount,0)) total_amount_24,SUM(IF(order_type=24,deal_num,0)) deal_num_24,
		SUM(IF(order_type=30,total_amount,0)) total_amount_30,SUM(IF(order_type=30,deal_num,0)) deal_num_30,
		SUM(IF(order_type=31,total_amount,0)) total_amount_31,SUM(IF(order_type=31,deal_num,0)) deal_num_31,
		SUM(IF(order_type=32,total_amount,0)) total_amount_32,SUM(IF(order_type=32,deal_num,0)) deal_num_32
		FROM dw.light_merchant_order_type_stat_day_general
		WHERE stat_date BETWEEN #{startDate} AND #{endDate}
		GROUP BY stat_date
	</select>




	<select id="getWeishangOrderInfoCnt" parameterType="java.util.Map" resultType="java.lang.Integer">
		select count(*)
		From oc1.nbiz_shop_order_base o
		inner join oc1.nbiz_order_item t
		on o.order_id=t.order_id
		where  o.relation_id=0
		and o.pay_time >= #{startDate} AND o.pay_time <![CDATA[ < ]]>  (#{endDate} + interval 1 day)
		<if test="goods_id != null and goods_id != ''" >
			AND  t.goods_id = #{goods_id}
		</if>
		<if test="goods_name != null and goods_name != ''" >
			AND  t.goods_name = #{goods_name}
		</if>
		<if test="shop_id != null and shop_id != ''" >
			AND  o.shop_id = #{shop_id}
		</if>
		<if test="shop_name != null and shop_name != ''" >
			AND  o.shop_name = #{shop_name}
		</if>
		<if test="order_type != null and order_type != ''" >
			AND  o.order_type = #{order_type}
		</if>
	</select>
	<select id="getWeishangOrderInfo" parameterType="java.util.Map" resultType="java.util.Map">
		select o.order_id, IFNULL(t.goods_name,'') goods_name, t.goods_id,t.goods_num, round(if(t.pre_price<![CDATA[ <> ]]>0,t.pre_price,o.total_amount)/100,2) total_amount,
		round(if(t.pre_price <![CDATA[ <> ]]> 0,o.field2/o.total_amount*t.pre_price/100,o.field2/100),2) pay_price,
		o.create_time, o.pay_time, ifnull(s.step_time,'') step_time, o.order_State,
		case when o.order_state=100 then '待付款'
		when o.order_state=200 then '待发货'
		when o.order_state=210 then '买家申请退款'
		when o.order_state=201 then '买家取消退款申请'
		when o.order_state=202 then '买家退款仲裁'
		when o.order_state=300 then '商家已发货'
		when o.order_state=301 then '买家申请退货'
		when o.order_state=302 then '商家已收买家退货申请仲裁'
		when o.order_state=303 then '买家取消退货申请'
		when o.order_state=304 then '买家申请退货仲裁'
		when o.order_state=305 then '商家同意退货'
		when o.order_state=306 then '买家已退货申请仲裁'
		when o.order_state=1000 then '买家确认收货'
		when o.order_state=2101 then '买家取消订单'
		when o.order_state=2102 then '商家关闭订单'
		when o.order_state=2201 then '商家同意全额退款'
		when o.order_state=3001 then '商家同意仅退款'
		when o.order_state=3002 then '商家确认买家退货'
		when o.order_state=3401 then '仲裁商家胜'
		when o.order_state=3402 then '仲裁买家胜退货'
		when o.order_state=3403 then '仲裁钱宝赔付' end order_State_summary,
		o.user_id,o.user_name,o.shop_id,o.shop_name,
		o.consignee_name,o.consignee_mob,
		ifnull(if(o.consignee_addr is null or o.consignee_addr = '',b.address,consignee_addr)
		,'--') consignee_addr,
		o.shop_comment,
		o.buyer_comment,ifnull(o.express_id, '') express_id,o.express_name,o.express_code,o.order_type
		From oc1.nbiz_order_base o
		inner join oc1.nbiz_order_item t
		on o.order_id=t.order_id
		left join oc1.nbiz_order_step s
		on o.order_id=s.order_id and s.suf_state=300
		left join `logs`.log_detail_im_lbs b
		on o.user_id=b.userid
		and date_format(o.pay_time,'%Y-%m-%d %h:%i')=date_format(b.create_time,'%Y-%m-%d %h:%i')
		and b.create_time <![CDATA[ >= ]]> #{startDate}
		AND b.create_time <![CDATA[ < ]]> #{endDate} + interval 1 day
		where o.relation_id=0
		and o.pay_time <![CDATA[ >= ]]> #{startDate}
		AND o.pay_time <![CDATA[ < ]]> #{endDate} + interval 1 day
		<if test="goods_id != null and goods_id != ''" >
			AND  t.goods_id = #{goods_id}
		</if>
		<if test="goods_name != null and goods_name != ''" >
			AND  t.goods_name = #{goods_name}
		</if>
		<if test="shop_id != null and shop_id != ''" >
			AND  o.shop_id = #{shop_id}
		</if>
		<if test="shop_name != null and shop_name != ''" >
			AND  o.shop_name = #{shop_name}
		</if>
		<if test="order_type != null and order_type != ''" >
			AND  o.order_type = #{order_type}
		</if>
		<if test="sort != null and sort != ''" >
			order by ${sort}
		</if>
		<if test="sort == null or sort == ''" >
			order by o.pay_time desc
		</if>
		limit ${start},${length}
	</select>

	<select id="getWeishangTradeHourInfo" parameterType="java.util.Map" resultType="java.util.Map">
		SELECT DATE_FORMAT(a.dd,'%H') statHour,a.dd statDate,a.re deal_amount,a.tr deal_num, round(ifnull(a.re/a.tr,0),2) kedanjia,a.ra refund_amount,a.rn refund_num
		FROM (
		SELECT DATE(stat_time)+INTERVAL HOUR(stat_time) HOUR + INTERVAL FLOOR(MINUTE(stat_time)/#{duration})*#{duration} MINUTE dd,
		SUM(deal_amount) re,SUM(deal_num) tr,SUM(refund_amount) ra,SUM(refund_num) rn
		FROM dw.light_trader_deal_stat_real o
		 WHERE stat_time >= #{startDate}
		   AND stat_time <![CDATA[ < ]]> #{startDate} + INTERVAL 1 DAY
		    <if test="orderType != null and orderType != '' and orderType != -1" >
			    AND  o.order_type = #{orderType}
		    </if>
			<if test="type != null and type != '' and type != -1" >
				AND  o.type = #{type}
			</if>
		GROUP BY dd) a
	</select>
	<select id="getWeishangTradeDayInfo" parameterType="java.util.Map" resultType="java.util.Map">
		SELECT stat_date statDate,SUM(deal_amount) deal_amount,SUM(deal_num) deal_num, round(ifnull(SUM(deal_amount)/SUM(deal_num),0),2) kedanjia,
		SUM(refund_num) refund_num,SUM(refund_amount) refund_amount
		FROM dw.light_trader_deal_stat_day
		WHERE stat_date BETWEEN #{startDate} AND #{endDate}
		<if test="orderType != null and orderType != '' and orderType != -1" >
			AND  order_type = #{orderType}
		</if>
		<if test="type != null and type != '' and type != -1" >
			AND  type = #{type}
		</if>
		GROUP BY stat_date;
	</select>

	<select id="getOrderTopAmountInfo" parameterType="java.util.Map" resultType="java.util.Map">
		SELECT  s.shop_id,s.shop_name,
		CASE WHEN u.shop_type IS NOT NULL THEN u.shop_type
		ELSE 5  END AS shop_type, #'普通商家'
		SUM(s.total_amount)/100 amount,
		COUNT(*)  order_num,
		SUM(i.goods_num) AS goods_num,
		round(ifnull(SUM(s.total_amount)/100/COUNT(*),0),2) kedanjia
		FROM oc1.nbiz_shop_order_base s
		INNER JOIN oc1.nbiz_order_item i ON s.order_id=i.order_id
		LEFT JOIN
		(
		SELECT
		30636068 user_id,
		2 shop_type 	# '精选商城'
		UNION
		(
		SELECT DISTINCT
		ce.user_id,
		CASE
		WHEN ce.user_id = 29377716 THEN 1
		#'虚拟充值'
		WHEN c.user_id IS NOT NULL THEN 2
		#'精选商城'
		WHEN b.user_id IS NOT NULL THEN 3
		#'保证金认证'
		ELSE 4
		#'020商家'
		END shop_type -- 1 缴费 2. 未交钱
		FROM
		hyip.hyip_merchant_company_certified ce FORCE INDEX(userid_hyip_merchant_company_certified)
		LEFT JOIN hyip.hyip_bus_plat_wallet_workflow b FORCE INDEX(idx_hyip_bus_plat_ww_all) ON ce.user_id = b.user_id
		AND relate_type IN (29, 30)
		AND ce.create_time >= 20150716
		LEFT JOIN hyip.hyip_merchant_company c FORCE INDEX(unq_user_id) ON ce.user_id = c.user_id
		WHERE
		CE.state = 1
		)
		) u
		ON s.shop_id=u.user_id
		WHERE s.pay_time>=#{startDate} AND s.pay_time<![CDATA[ < ]]> #{endDate}
		GROUP BY shop_id,shop_name,shop_type
		ORDER BY amount DESC
		limit 10
	</select>

	<select id="getOrderTopNumInfo" parameterType="java.util.Map" resultType="java.util.Map">
		SELECT  s.shop_id,s.shop_name,
		CASE WHEN u.shop_type IS NOT NULL THEN u.shop_type
		ELSE 5  END AS shop_type, #'普通商家'
		SUM(s.total_amount)/100 amount,
		COUNT(*)  order_num,
		SUM(i.goods_num) AS goods_num,
		round(ifnull(SUM(s.total_amount)/100/COUNT(*),0),2) kedanjia
		FROM oc1.nbiz_shop_order_base s
		INNER JOIN oc1.nbiz_order_item i ON s.order_id=i.order_id
		LEFT JOIN
		(
		SELECT
		30636068 user_id,
		2 shop_type 	# '精选商城'
		UNION
		(
		SELECT DISTINCT
		ce.user_id,
		CASE
		WHEN ce.user_id = 29377716 THEN 1
		#'虚拟充值'
		WHEN c.user_id IS NOT NULL THEN 2
		#'精选商城'
		WHEN b.user_id IS NOT NULL THEN 3
		#'保证金认证'
		ELSE 4
		#'02O商家'
		END shop_type -- 1 缴费 2. 未交钱
		FROM
		hyip.hyip_merchant_company_certified ce FORCE INDEX(userid_hyip_merchant_company_certified)
		LEFT JOIN hyip.hyip_bus_plat_wallet_workflow b FORCE INDEX(idx_hyip_bus_plat_ww_all) ON ce.user_id = b.user_id
		AND relate_type IN (29, 30)
		AND ce.create_time >= 20150716
		LEFT JOIN hyip.hyip_merchant_company c FORCE INDEX(unq_user_id) ON ce.user_id = c.user_id
		WHERE
		CE.state = 1
		)
		) u
		ON s.shop_id=u.user_id
		WHERE s.pay_time>=#{startDate} AND s.pay_time<![CDATA[ < ]]> #{endDate}
		GROUP BY shop_id,shop_name,shop_type
		ORDER BY order_num DESC
		limit 10
	</select>
</mapper>
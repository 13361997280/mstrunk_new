<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.qianwang.mapper.assistant.AssUserPRecommendationFrozenMapper" >
  <resultMap id="BaseResultMap" type="com.qianwang.dao.domain.assistant.AssUserPRecommendationFrozen" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="user_id" property="userId" jdbcType="BIGINT" />
    <result column="user_name" property="userName" jdbcType="VARCHAR" />
    <result column="frozen_num" property="frozenNum" jdbcType="INTEGER" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
    <result column="delete_time" property="deleteTime" jdbcType="TIMESTAMP" />
    <result column="pay_time" property="payTime" jdbcType="TIMESTAMP" />
    <result column="pay_trade_no" property="payTradeNo" jdbcType="VARCHAR" />
    <result column="status" property="status" jdbcType="TINYINT" />
    <result column="is_pay" property="isPay" jdbcType="TINYINT" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, user_id, user_name, frozen_num, create_time, update_time, delete_time, pay_time, 
    pay_trade_no, `status`, is_pay
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from ass_user_p_recommendation_frozen
    where id = #{id,jdbcType=INTEGER}
  </select>

  <select id="selectReviewData" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from
    ass_user_p_recommendation_frozen
    where `status` = 0 and is_pay = 1
  </select>

  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from ass_user_p_recommendation_frozen
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.qianwang.dao.domain.assistant.AssUserPRecommendationFrozen" >
    insert into ass_user_p_recommendation_frozen (id, user_id, user_name, 
      frozen_num, create_time, update_time, 
      delete_time, pay_time, pay_trade_no, 
      `status`, is_pay)
    values (#{id,jdbcType=INTEGER}, #{userId,jdbcType=BIGINT}, #{userName,jdbcType=VARCHAR}, 
      #{frozenNum,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, 
      #{deleteTime,jdbcType=TIMESTAMP}, #{payTime,jdbcType=TIMESTAMP}, #{payTradeNo,jdbcType=VARCHAR}, 
      #{status,jdbcType=TINYINT}, #{isPay,jdbcType=TINYINT})
  </insert>
  <insert id="insertSelective" parameterType="com.qianwang.dao.domain.assistant.AssUserPRecommendationFrozen" >
    insert into ass_user_p_recommendation_frozen
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="userName != null" >
        user_name,
      </if>
      <if test="frozenNum != null" >
        frozen_num,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
      <if test="deleteTime != null" >
        delete_time,
      </if>
      <if test="payTime != null" >
        pay_time,
      </if>
      <if test="payTradeNo != null" >
        pay_trade_no,
      </if>
      <if test="status != null" >
        `status`,
      </if>
      <if test="isPay != null" >
        is_pay,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=BIGINT},
      </if>
      <if test="userName != null" >
        #{userName,jdbcType=VARCHAR},
      </if>
      <if test="frozenNum != null" >
        #{frozenNum,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="deleteTime != null" >
        #{deleteTime,jdbcType=TIMESTAMP},
      </if>
      <if test="payTime != null" >
        #{payTime,jdbcType=TIMESTAMP},
      </if>
      <if test="payTradeNo != null" >
        #{payTradeNo,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        #{status,jdbcType=TINYINT},
      </if>
      <if test="isPay != null" >
        #{isPay,jdbcType=TINYINT},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.qianwang.dao.domain.assistant.AssUserPRecommendationFrozen" >
    update ass_user_p_recommendation_frozen
    <set >
      <if test="userId != null" >
        user_id = #{userId,jdbcType=BIGINT},
      </if>
      <if test="userName != null" >
        user_name = #{userName,jdbcType=VARCHAR},
      </if>
      <if test="frozenNum != null" >
        frozen_num = #{frozenNum,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="deleteTime != null" >
        delete_time = #{deleteTime,jdbcType=TIMESTAMP},
      </if>
      <if test="payTime != null" >
        pay_time = #{payTime,jdbcType=TIMESTAMP},
      </if>
      <if test="payTradeNo != null" >
        pay_trade_no = #{payTradeNo,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        `status` = #{status,jdbcType=TINYINT},
      </if>
      <if test="isPay != null" >
        is_pay = #{isPay,jdbcType=TINYINT},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.qianwang.dao.domain.assistant.AssUserPRecommendationFrozen" >
    update ass_user_p_recommendation_frozen
    set user_id = #{userId,jdbcType=BIGINT},
      user_name = #{userName,jdbcType=VARCHAR},
      frozen_num = #{frozenNum,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      delete_time = #{deleteTime,jdbcType=TIMESTAMP},
      pay_time = #{payTime,jdbcType=TIMESTAMP},
      pay_trade_no = #{payTradeNo,jdbcType=VARCHAR},
      `status` = #{status,jdbcType=TINYINT},
      is_pay = #{isPay,jdbcType=TINYINT}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>
<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.qianwang.mapper.assistant.UsersMapper" >
  <resultMap id="BaseResultMap" type="com.qianwang.dao.domain.assistant.Users" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="username" property="username" jdbcType="VARCHAR" />
    <result column="password" property="password" jdbcType="VARCHAR" />
    <result column="enabled" property="enabled" jdbcType="BIT" />
    <result column="mobile" property="mobile" jdbcType="VARCHAR" />
    <result column="group_ids" property="groupIds" jdbcType="VARCHAR" />
    <result column="email" property="email" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="DATE" />
    <result column="update_time" property="updateTime" jdbcType="DATE" />
    <result column="appid" property="appid" jdbcType="VARCHAR" />
    <result column="secret" property="secret" jdbcType="VARCHAR" />
    <result column="openapi_status" property="openapiStatus" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, username, `password`, enabled, mobile, group_ids, email, create_time, update_time, 
    appid, secret, openapi_status
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from users
    where id = #{id,jdbcType=INTEGER}
  </select>
  <select id="selectList" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from users
    limit #{start},#{size}
  </select>
  <select id="selectCount" resultType="int">
    select count(1) from users
  </select>
  <select id="existUserName" resultType="int" parameterType="java.lang.String" >
    select count(1) from users
    where username = #{username,jdbcType=VARCHAR}
  </select>
  <select id="selectListForAuth" resultMap="BaseResultMap">
    select
    id,username
    from users u where id not in (select userid from authorities a where a.userid=u.id)
    <if test="id != null" >
      or id = #{id}
    </if>
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from users
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.qianwang.dao.domain.assistant.Users" >
    insert into users (id, username, `password`, 
      enabled, mobile, group_ids, 
      email, create_time, update_time, 
      appid, secret, openapi_status
      )
    values (#{id,jdbcType=INTEGER}, #{username,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, 
      #{enabled,jdbcType=BIT}, #{mobile,jdbcType=VARCHAR}, #{groupIds,jdbcType=VARCHAR}, 
      #{email,jdbcType=VARCHAR}, #{createTime,jdbcType=DATE}, #{updateTime,jdbcType=DATE}, 
      #{appid,jdbcType=VARCHAR}, #{secret,jdbcType=VARCHAR}, #{openapiStatus,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.qianwang.dao.domain.assistant.Users" >
    insert into users
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="username != null" >
        username,
      </if>
      <if test="password != null" >
        `password`,
      </if>
      <if test="enabled != null" >
        enabled,
      </if>
      <if test="mobile != null" >
        mobile,
      </if>
      <if test="groupIds != null" >
        group_ids,
      </if>
      <if test="email != null" >
        email,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
      <if test="appid != null" >
        appid,
      </if>
      <if test="secret != null" >
        secret,
      </if>
      <if test="openapiStatus != null" >
        openapi_status,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="username != null" >
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="enabled != null" >
        #{enabled,jdbcType=BIT},
      </if>
      <if test="mobile != null" >
        #{mobile,jdbcType=VARCHAR},
      </if>
      <if test="groupIds != null" >
        #{groupIds,jdbcType=VARCHAR},
      </if>
      <if test="email != null" >
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=DATE},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=DATE},
      </if>
      <if test="appid != null" >
        #{appid,jdbcType=VARCHAR},
      </if>
      <if test="secret != null" >
        #{secret,jdbcType=VARCHAR},
      </if>
      <if test="openapiStatus != null" >
        #{openapiStatus,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.qianwang.dao.domain.assistant.Users" >
    update users
    <set >
      <if test="username != null" >
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        `password` = #{password,jdbcType=VARCHAR},
      </if>
      <if test="enabled != null" >
        enabled = #{enabled,jdbcType=BIT},
      </if>
      <if test="mobile != null" >
        mobile = #{mobile,jdbcType=VARCHAR},
      </if>
      <if test="groupIds != null" >
        group_ids = #{groupIds,jdbcType=VARCHAR},
      </if>
      <if test="email != null" >
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=DATE},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=DATE},
      </if>
      <if test="appid != null" >
        appid = #{appid,jdbcType=VARCHAR},
      </if>
      <if test="secret != null" >
        secret = #{secret,jdbcType=VARCHAR},
      </if>
      <if test="openapiStatus != null" >
        openapi_status = #{openapiStatus,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.qianwang.dao.domain.assistant.Users" >
    update users
    set username = #{username,jdbcType=VARCHAR},
      `password` = #{password,jdbcType=VARCHAR},
      enabled = #{enabled,jdbcType=BIT},
      mobile = #{mobile,jdbcType=VARCHAR},
      group_ids = #{groupIds,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=DATE},
      update_time = #{updateTime,jdbcType=DATE},
      appid = #{appid,jdbcType=VARCHAR},
      secret = #{secret,jdbcType=VARCHAR},
      openapi_status = #{openapiStatus,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>